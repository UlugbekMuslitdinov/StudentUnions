{"version":3,"sources":["img/Joel_Burstein.png","img/Lupita_Hollis.JPG","img/Mari_John.JPG","img/Ricardo_Carlos.JPG","img/Chelsea_Ewer.JPG","img/Christine_Carlson.jpg","img/Todd_Millay.JPG","img/Michael_Omo.JPG","img/Rachelle_Stone.JPG","members.js","components/List/index.js","components/Detail/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","members","mari-john","name","title","phone","email","bio","edu","img","Mari_John_img","chelsea-ewer","Chelsea_Ewer_img","joel-burstein","Joel_Burstein_img","michael-omo","Michael_Omo_img","ricardo-carlos","Ricardo_Carlos_img","christine-carlson","Christine_Carlson_img","lupita-hollis","Lupita_Hollis_img","todd-millay","Todd_Millay_img","rachelle-stone","Rachelle_Stone","List","printCard","key","react_default","a","createElement","mdbreact_esm","md","href","className","class","style","backgroundColor","backgroundImage","concat","_this2","this","Fragment","map","React","Component","Detail","props","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","console","log","src","App","BrowserRouter","basename","Route","exact","path","component","render","_ref","match","components_Detail","params","Boolean","window","location","hostname","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.00aac3f0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Joel_Burstein.1b1f2383.png\";","module.exports = __webpack_public_path__ + \"static/media/Lupita_Hollis.0b22d6c9.JPG\";","module.exports = __webpack_public_path__ + \"static/media/Mari_John.af7c6836.JPG\";","module.exports = __webpack_public_path__ + \"static/media/Ricardo_Carlos.b28790db.JPG\";","module.exports = __webpack_public_path__ + \"static/media/Chelsea_Ewer.424ea4e9.JPG\";","module.exports = __webpack_public_path__ + \"static/media/Christine_Carlson.e17d9590.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Todd_Millay.318c943f.JPG\";","module.exports = __webpack_public_path__ + \"static/media/Michael_Omo.dffdfb79.JPG\";","module.exports = __webpack_public_path__ + \"static/media/Rachelle_Stone.480c6c1f.JPG\";","import Joel_Burstein_img from './img/Joel_Burstein.png';\r\nimport Lupita_Hollis_img from './img/Lupita_Hollis.JPG';\r\nimport Mari_John_img from './img/Mari_John.JPG';\r\nimport Ricardo_Carlos_img from './img/Ricardo_Carlos.JPG';\r\nimport Chelsea_Ewer_img from './img/Chelsea_Ewer.JPG';\r\nimport Christine_Carlson_img from './img/Christine_Carlson.jpg';\r\nimport Todd_Millay_img from './img/Todd_Millay.JPG';\r\nimport Michael_Omo_img from './img/Michael_Omo.JPG';\r\nimport Rachelle_Stone from './img/Rachelle_Stone.JPG';\r\n\r\nexport default {\r\n    'mari-john' : {\r\n        name: 'Mari John',\r\n        title: 'Assistant Director of Retail Development, Contract Management and Corporate Sponsorship',\r\n        phone: '520-621-0222',\r\n        email: 'calalang@email.arizona.edu',\r\n        bio: 'Mari John, originally from Orlando, Florida, moved to Tucson in 2004 to attend the University of Arizona. She earned her Bachelor of Science in Public Administration in 2008, and was hired as a Human Resource Specialist for San Miguel High School’s Corporate Internship Program in May 2009. In less than three years, she was promoted to Associate Director of Corporate Internship, and became the Director of Corporate Internship one year later. During this time, Mari went back to school and earned her MBA from the University of Arizona, Eller College of Management. When offered an opportunity to join the Arizona Student Unions team shortly thereafter, she accepted and transitioned into business development and contracts for higher education. Mari now serves as the Assistant Director for Retail Development, Contract Management and Corporate Sponsorships for the University of Arizona Student Unions where she manages nearly 40 retail dining/business contracts that generate approximately $3M in revenue annually.',\r\n        edu: '',\r\n        img: Mari_John_img\r\n        // listImg: Mari_John_list_img,\r\n        // detailImg: Mari_John_detail_img\r\n    },\r\n    'chelsea-ewer': {\r\n        name: 'Chelsea Ewer',\r\n        title: 'Business Manager',\r\n        phone: '520-621-5612',\r\n        email: 'chelseao@email.arizona.edu',\r\n        bio: 'Chelsea Ewer is the Business Manager for the Arizona Student Unions. A long time Union employee, she has worked for the Student Unions for more than 30 years, and was a student employee in the Catering department while attending high school.  She has worked for Dining Services, Facilities Operations, and now calls the Business Office her home.  As a native Tucsonan, Chelsea enjoys the Arizona weather, traveling the state with her family, and is very proud to be a Wildcat.',\r\n        edu: '',\r\n        img: Chelsea_Ewer_img\r\n        // listImg: Chelsea_Ewer_list_img,\r\n        // detailImg: Chelsea_Ewer_detail_img\r\n    },\r\n    'joel-burstein': {\r\n        name: 'Joel Burstein',\r\n        title: 'Associate Director of Finance',\r\n        phone: '520-621-8871',\r\n        email: 'jburstein@email.arizona.edu',\r\n        bio: 'After ten years in Public Accounting, Finance and Operations Management, Joel returned to his alma mater as Associate Director of Finance for the Arizona Student Unions and the University of Arizona BookStores. Joel coordinates and manages matters relating to both finance and accounting. A second generation Wildcat, Joel graduated from the Eller College with a Bachelor’s degree in Finance and a Master’s degree in Accounting. As a CPA and an active member of the community, he strives to help bring both tangible and intangible success to the Arizona Student Unions and UA BookStores as well as the University of Arizona community at large.',\r\n        edu: '',\r\n        img: Joel_Burstein_img\r\n        // listImg: Joel_Burstein_list_img,\r\n        // detailImg: Joel_Burstein_detail_img\r\n    },\r\n    'michael-omo': {\r\n        name: 'Michael Omo',\r\n        title: 'Senior Executive Chef and Director of Culinary Excellence and Quality Assurance',\r\n        phone: '520-621-7038',\r\n        email: 'michaelomo@email.arizona.edu',\r\n        bio: 'Chef Michael Omo’s talents and culinary interpretations of “sophisticated dining that is accessible to everyone” have garnered attention to his philosophy that “simplicity is the art of perfection.” He has a flair for creating innovative conceptual menus that reflect his goal of accessibility. Michael puts his visions into practice by buying the very best product available and employing innovative cooking techniques to create his food with a detail-driven style. He is currently the Executive Chef at the University of Arizona in Tucson, Arizona. Before coming to the University, Michael moved from Chef to Executive Chef Positions with leading hotels such as Peninsula Hotels, Shutters on the Beach, MGM Grand Resort and Casino and Westin Hotels and Resorts. Michael oversees all aspects of the culinary experience at the University of Arizona, as a member of the senior leadership team. Michael plays a key role in the future development of the many dining offerings available at the University of Arizona.',\r\n        edu: '',\r\n        img: Michael_Omo_img\r\n        // listImg: Michael_Omo_list_img,\r\n        // detailImg: Michael_Omo_detail_img\r\n    },\r\n    'ricardo-carlos': {\r\n        name: 'Ricardo Carlos',\r\n        title: 'Associate Director of Information Systems',\r\n        phone: '520-621-0545',\r\n        email: 'ricarlos@email.arizona.edu',\r\n        bio: 'Since March 2014, Ricardo Carlos has served as the Associate Director for Information Systems, overseeing the IT, Meal Plans Office, and Web Development teams who are tirelessly dedicated to delivering innovation, and great service to help enable the Student Unions organization to better serve our campus community. He was born and raised in the Los Angeles area, the second of four children in his family, and moved to Tucson after he completed undergraduate studies. He volunteered for the Society of Hispanic Professional Engineers (SHPE) as part of his dedication to expand opportunities to empower underrepresented and economically disadvantaged children to obtain college degrees in the STEM career fields. Most importantly, he cherishes spending time and trying to keep up with his wonderful and loving son, Sebastian, cheering on his favorite sports teams (Go Dodgers!), and growing stronger in his Catholic faith.',\r\n        edu: '',\r\n        img: Ricardo_Carlos_img\r\n        // listImg: Ricardo_Carlos_list_img,\r\n        // detailImg: Ricardo_Carlos_detail_img\r\n    },\r\n    'christine-carlson': {\r\n        name: 'Christine Carlson',\r\n        title: 'Associate Director of Retail Dining and Nutrition',\r\n        phone: '520-621-5736',\r\n        email: 'christinecarlson@email.arizona.edu',\r\n        bio: 'Christine Carlson, MS, RD, CSSD, CDE, FAND is the University of Arizona Student Unions Associate Director for Dining & Nutrition. She oversees dining services at the Student Union Memorial Center as well as several on-campus convenience stores & cafes and coordinates nutrition programming for the Student Unions.  Christine has spearheaded several programs for the University including a nutrition performance program for student athletes and active students, the FARE University Pilot to address food allergy accommodations, creation of an award winning food concept offering nutrient dense options, creation of an award winning culinary workshop series and the Partnership for a Healthier America Healthier Campus Initiative to highlight campus-wide wellness programs.',\r\n        edu: '',\r\n        img: Christine_Carlson_img\r\n        // listImg: Christine_Carlson_list_img,\r\n        // detailImg: Christine_Carlson_detail_img\r\n    },\r\n    'lupita-hollis': {\r\n        name: 'Lupita Hollis',\r\n        title: 'Manager of Retail Dining Services at Global Center ',\r\n        phone: '520-621-2338',\r\n        email: 'lupital@email.arizona.edu',\r\n        bio: 'Lupita Hollis assumed her position as Manager for Retail Dining Services at the Park Student Union in 2015, where she oversees the food preparation, quality assurance, sanitation procedures, financial viability, and procurement of commodities, equipment and supplies for eight retail dining operations. Lupita achieved her Bachelors of Science in Food Service Management at the University of Arizona in 1990. After graduating from the Culinary Institute of America in 1995, she worked in various foodservice industries across the nation; until her passion ultimately brought her back to the Arizona Student Unions in 1999. Lupita’s drive for knowledge and experience led her to hold several supervisory and managerial positions within the Unions. She has gained experience working at Student Union Convenience Stores, self-operated dining locations, and franchise operations within the Arizona Student Unions. Lupita is piloted by her passion for people, and their development. Her goal in life is to grow and inspire future Wildcats!',\r\n        edu: '',\r\n        img: Lupita_Hollis_img\r\n        // listImg: Lupita_Hollis_list_img,\r\n        // detailImg: Lupita_Hollis_detail_img\r\n    },\r\n    'todd-millay': {\r\n        name: 'Todd Millay',\r\n        title: 'Executive Director of the Arizona Student Unions',\r\n        phone: '520-626-3740',\r\n        email: 'jtoddmillay@email.arizona.edu',\r\n        bio: 'Todd Millay, originally from Owensboro, Kentucky, transitioned to Tucson in 2012 after leaving the natural gas and energy industry where he spent time in analytics, business development, contracts, trading and marketing. Todd earned his BA from Western Kentucky University where he focused on business and also grew his own golf company while a college junior. Having spent time as an entrepreneur and after selling his second successful venture Todd spent a year abroad travelling Asia in 2011. After returning and then calling Tucson home, he joined the Student Union’s marketing team and went back to school and earned his MBA from Eller College of Management at the University of Arizona. Todd now serves as the Senior Director at the Arizona Student Unions and dining services operations, where he leads a dynamic team of over 1,400 who help deliver key services to more than 30,000 visitors a day. Todd Millay lives in Tucson, Arizona where he continues to enjoy travel, gardening and the outdoors.',\r\n        edu: '',\r\n        img: Todd_Millay_img\r\n        // listImg: Todd_Millay_list_img,\r\n        // detailImg: Todd_Millay_detail_img\r\n    },\r\n    'rachelle-stone': {\r\n        name: 'Rachelle Stone',\r\n        title: 'Assistant Director of Facilities and Operations',\r\n        phone: '520-626-1701',\r\n        email: 'rlstone@email.arizona.edu',\r\n        bio: 'Rachelle Stone hails from central California, but has called Tucson her home for the last 20 years. 13 years of her career were spent in the K-12 sector, honing her skills at managing multiple units. Rachelle has been with the Arizona Student Unions for a little over 5 years, and has implemented exemplary sanitation standards for all of our dining outlets. She longs for new challenges in her career, and is excited by forward thinking. Her newest challenge has ushered her into the role of Facilities & Operations, where she strives to increase collaboration of the Union buildings and the campus community. Rachelle always welcomes future projects, and in her down time enjoys spending vacations in California with her family, and her three adult age sons.',\r\n        edu: '',\r\n        img: Rachelle_Stone\r\n        // listImg: Todd_Millay_list_img,\r\n        // detailImg: Todd_Millay_detail_img\r\n    }\r\n};","import React from 'react';\r\nimport { MDBCard, MDBCardBody, MDBCardImage, MDBCardTitle, MDBCardText, MDBCol } from 'mdbreact';\r\nimport members from '../../members.js';\r\nimport './style.css';\r\n\r\nclass List extends React.Component {\r\n\r\n    printCard = key => \r\n        <MDBCol  md=\"4\">\r\n            <a href={'/about/executive-team/' + key} className=\"col-md-12\">\r\n                <MDBCard className=\"list-card\">\r\n                    {\r\n                        members[key].img === null ?\r\n                        <div class=\"view card-img\" style={{backgroundColor: '#e1e1e1'}}></div>\r\n                        :\r\n                        <div class=\"view card-img\" style={{backgroundImage: `url(${members[key].img})`}}></div>\r\n                    }\r\n                    {/* <MDBCardImage className=\"img\" src={members[key].img}/> */}\r\n                    <MDBCardBody>\r\n                        <MDBCardTitle>{members[key].name}</MDBCardTitle>\r\n                        <MDBCardText>\r\n                            {members[key].title}\r\n                        </MDBCardText>\r\n                    </MDBCardBody>\r\n                </MDBCard>\r\n            </a>  \r\n        </MDBCol>\r\n    \r\n    render() {\r\n        const names = [\r\n\t\t\t'todd-millay',\r\n            'joel-burstein', \r\n            'ricardo-carlos', \r\n            'christine-carlson', \r\n            'chelsea-ewer', \r\n            'lupita-hollis', \r\n            'mari-john', \r\n            'michael-omo', \r\n            'rachelle-stone'\r\n        ];\r\n\r\n        return (\r\n            <React.Fragment>\r\n            {\r\n                names.map(key => {\r\n                    return this.printCard(key);\r\n                })\r\n            }\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n        \r\nexport default List;","import React from 'react';\r\nimport { MDBContainer, MDBRow, MDBCol, MDBJumbotron, MDBCardImage, MDBCardBody, MDBCardTitle, MDBCardText } from 'mdbreact';\r\nimport members from '../../members.js';\r\nimport './style.css';\r\n\r\nclass Detail extends React.Component {\r\n\r\n    constructor (props) {\r\n        super(props)\r\n        \r\n        this.state = {\r\n            name: this.props.name\r\n        }\r\n        console.log(props);\r\n        console.log(members[this.state.name]);\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <MDBRow className=\"member-detail\">\r\n                {/* <MDBCol md=\"12\">\r\n                    <MDBCardTitle className=\"h1 m-4 name text-center\">\r\n                            {members[this.state.name].name}\r\n                        </MDBCardTitle>\r\n                        <p class=\"title text-center\">{members[this.state.name].title}</p>\r\n                </MDBCol> */}\r\n                <MDBCol>\r\n                    <MDBCol md=\"12\" className=\"member-img\">\r\n                        <img \r\n                        src={members[this.state.name].img} \r\n                        className=\"img-fluid\"\r\n                        />\r\n                        {/* <MDBCardTitle className=\"h1 m-4 name\">\r\n                            {members[this.state.name].name}\r\n                        </MDBCardTitle>\r\n                        <p class=\"title\">{members[this.state.name].title}</p> */}\r\n                    </MDBCol>\r\n                </MDBCol>\r\n                <MDBCol>\r\n                    <MDBCardBody>\r\n                        <MDBCardTitle className=\"h1 m-4 name\">\r\n                            {members[this.state.name].name}\r\n                        </MDBCardTitle>\r\n                        <p class=\"title\">{members[this.state.name].title}</p>\r\n                        <MDBCardText className=\"bio\">\r\n                            {members[this.state.name].bio}\r\n                            <br />\r\n                        </MDBCardText>\r\n                        <MDBCardText className=\"bio\">\r\n                            {members[this.state.name].edu}\r\n                        </MDBCardText>\r\n                    </MDBCardBody>\r\n                </MDBCol>\r\n            </MDBRow>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Detail;","import React from 'react';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Route,\r\n    Link\r\n  } from 'react-router-dom'\r\nimport { MDBCol } from 'mdbreact';\r\nimport List from './components/List';\r\nimport Detail from './components/Detail';\r\nimport './App.css';\r\n\r\nclass App extends React.Component {\r\n\r\n    render() {\r\n        return(\r\n            <Router basename={'/about/executive-team/'}>\r\n                <div className=\"row\">\r\n                    <Route exact path=\"/\" component={List} />\r\n                    <Route path=\"/:name\" render={({match}) => (\r\n                        <Detail \r\n                            name={match.params.name}\r\n                        />\r\n                    )} />\r\n                </div>\r\n            </Router>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import 'react-app-polyfill/ie9';\r\nimport 'react-app-polyfill/ie11';   \r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n// import Team from './components/Team';\r\n// import '@fortawesome/fontawesome-free/css/all.min.css';\r\n// import 'bootstrap-css-only/css/bootstrap.min.css';\r\n// import \"./assets/scss/mdb.scss\"\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('executive-team'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();"],"sourceRoot":""}