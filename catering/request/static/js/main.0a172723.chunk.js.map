{"version":3,"sources":["components/contact-info.js","components/date-picker.js","components/time-picker.js","components/checkbox.js","components/catering-info.js","components/event-info.js","components/room-info.js","components/payment-info.js","components/terms-and-conditions.js","components/App.js","serviceWorker.js","index.js"],"names":["ContactInfo","react_default","a","createElement","mdbreact_esm","style","marginTop","color","className","type","React","Component","DatePicker","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleDateChange","date","setState","state","Date","_this2","material_ui_pickers_esm","utils","DateFnsUtils","value","onChange","minDate","format","TimePicker2","TextField","defaultValue","inputProps","step","Checkbox","handleChange","name","event","defineProperty","target","checked","breakfast","lunch","dinner","reception","beverage","breaksAndSnacks","pickupAndDeliveryOnly","bind","assertThisInitialized","FormControl","component","FormGroup","FormControlLabel","control","Checkbox_Checkbox","label","CateringInfo","serviceWare","components_checkbox","time_picker","RadioGroup","Radio","EventInfo","catering","console","log","center","size","id","date_picker","catering_info","RoomInfo","audioVisual","rows","PaymentInfo","paymentMethod","TermsAndConditions","App","contact_info","event_info","room_info","payment_info","terms_and_conditions","Boolean","window","location","hostname","match","ReactDOM","render","src_components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0a172723.chunk.js","sourcesContent":["import React from 'react';\r\nimport { MDBCard, MDBCardBody, MDBCardHeader} from \"mdbreact\";\r\nimport './App.css';\r\n\r\nclass ContactInfo extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <MDBCard style={{ marginTop: \"1rem\" }}>\r\n                <MDBCardHeader color=\"color\">Contact Information</MDBCardHeader>\r\n                <MDBCardBody>\r\n                    <div className=\"form-group\">\r\n                        <label>Department/Organization</label>\r\n                        <input type=\"text\" className=\"form-control\" />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Contact Name</label>\r\n                        <input type=\"text\" className=\"form-control\" />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Phone Number</label>\r\n                        <input type=\"text\" className=\"form-control\" />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Mobile Number</label>\r\n                        <input type=\"text\" className=\"form-control\" />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Email</label>\r\n                        <input type=\"text\" className=\"form-control\" />\r\n                    </div>\r\n                </MDBCardBody>\r\n            </MDBCard>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ContactInfo;\r\n","import React from \"react\";\r\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\n\r\nclass DatePicker extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            date: new Date()\r\n        }\r\n    }\r\n\r\n    handleDateChange = date => {\r\n        this.setState({\r\n            date: date\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                <KeyboardDatePicker\r\n                    value={this.state.date}\r\n                    onChange={date => this.handleDateChange(date)}\r\n                    minDate={new Date()}\r\n                    format=\"MM/dd/yyyy\"\r\n                />\r\n            </MuiPickersUtilsProvider>\r\n          );\r\n        }\r\n    }\r\n\r\nexport default DatePicker;","import React from \"react\";\r\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\n\r\nclass TimePicker2 extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            date: new Date()\r\n        }\r\n    }\r\n\r\n    handleDateChange = date => {\r\n        this.setState({\r\n            date: date\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                <form>\r\n                    <TextField\r\n                        type=\"time\"\r\n                        defaultValue=\"07:30\"\r\n                        inputProps={{\r\n                            step: 600, // 10 min\r\n                        }}\r\n                    />\r\n                </form>\r\n            </MuiPickersUtilsProvider>\r\n          );\r\n        }\r\n    }\r\n\r\nexport default TimePicker2;","import React from \"react\";\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport MUICheckbox from '@material-ui/core/Checkbox';\r\n\r\nclass Checkbox extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            breakfast: false,\r\n            lunch: false,\r\n            dinner: false,\r\n            reception: false,\r\n            beverage: false,\r\n            breaksAndSnacks: false,\r\n            pickupAndDeliveryOnly: false\r\n        }\r\n\r\n        this.handleChange = this.handleChange.bind(this)\r\n    }\r\n\r\n    handleChange = name => event => {\r\n        this.setState({\r\n            [name]: event.target.checked\r\n        }\r\n        // ,() => {\r\n        //     console.log(this.state)\r\n        // }\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <FormControl component=\"fieldset\">\r\n                <FormGroup>\r\n                    <FormControlLabel\r\n                        control={<MUICheckbox checked={this.state.breakfast} onChange={this.handleChange('breakfast')} />}\r\n                        label=\"Breakfast\"\r\n                    />\r\n                    <FormControlLabel\r\n                        control={<MUICheckbox checked={this.state.lunch} onChange={this.handleChange('lunch')} />}\r\n                        label=\"Lunch\"\r\n                    />\r\n                    <FormControlLabel\r\n                        control={\r\n                        <MUICheckbox checked={this.state.dinner} onChange={this.handleChange('dinner')} />\r\n                        }\r\n                        label=\"Dinner\"\r\n                    />\r\n                    <FormControlLabel\r\n                        control={\r\n                        <MUICheckbox checked={this.state.reception} onChange={this.handleChange('reception')} />\r\n                        }\r\n                        label=\"Reception\"\r\n                    />\r\n                    <FormControlLabel\r\n                        control={\r\n                        <MUICheckbox checked={this.state.beverage} onChange={this.handleChange('beverage')} />\r\n                        }\r\n                        label=\"Beverage\"\r\n                    />\r\n                    <FormControlLabel\r\n                        control={\r\n                        <MUICheckbox checked={this.state.breaksAndSnacks} onChange={this.handleChange('breaksAndSnacks')} />\r\n                        }\r\n                        label=\"Breaks & Snacks\"\r\n                    />\r\n                    <FormControlLabel\r\n                        control={\r\n                        <MUICheckbox checked={this.state.pickupAndDeliveryOnly} onChange={this.handleChange('pickupAndDeliveryOnly')} />\r\n                        }\r\n                        label=\"Pick Up or Delivery Only\"\r\n                    />\r\n                                                            \r\n                </FormGroup>\r\n          </FormControl>\r\n          );\r\n        }\r\n    }\r\n\r\nexport default Checkbox;","import React from 'react';\r\nimport { MDBCard, MDBCardBody, MDBCardHeader } from \"mdbreact\";\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport TimePicker from './time-picker';\r\nimport Checkbox from './checkbox';\r\nimport './App.css';\r\n\r\nclass CateringInfo extends React.Component {\r\n\r\n    state = {\r\n        serviceWare: \"\" \r\n      }\r\n    \r\n    handleChange = event => {\r\n        this.setState({\r\n            serviceWare: event.target.value\r\n        }\r\n        // ,() => {\r\n        //     console.log(this.state)\r\n        // }\r\n        )\r\n      }\r\n\r\n    render() {\r\n        return (\r\n            <MDBCard style={{  marginTop: \"1rem\" }}>\r\n                <MDBCardHeader color=\"color\">Catering Information</MDBCardHeader>\r\n                <MDBCardBody>\r\n                    <label>Event Type</label>\r\n                    <div className =\"dropdown\">\r\n                    <Checkbox/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Catering Start Time</label>\r\n                        <div>\r\n                            <TimePicker/>\r\n                        </div>                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Catering End Time</label>\r\n                        <div>\r\n                            <TimePicker/>\r\n                        </div>                    \r\n                    </div>\r\n                    <label> Serviceware Selection </label>\r\n                    <div>\r\n                        <FormControl component=\"fieldset\">\r\n                            <RadioGroup onChange={this.handleChange} >\r\n                                <FormControlLabel value=\"plastic\" control={<Radio />} label=\"Plastic\" />\r\n                                <FormControlLabel value=\"upgraded\" control={<Radio />} label=\"Upgraded Plastic ($2 per person)\" />\r\n                                <FormControlLabel value=\"china\" control={<Radio />} label=\"China ($3 per person)\" />\r\n                                <FormControlLabel value=\"compostable\" control={<Radio />} label=\"Compostable ($2 per person)\" />\r\n                            </RadioGroup>\r\n                        </FormControl>\r\n                    </div>\r\n                </MDBCardBody>\r\n            </MDBCard>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CateringInfo;","import React from 'react';\r\nimport { MDBCard, MDBCardBody, MDBCardHeader, MDBContainer, MDBCol, MDBRow} from \"mdbreact\";\r\nimport DatePicker from './date-picker'\r\nimport TimePicker from './time-picker';\r\nimport CateringInfo from './catering-info';\r\nimport './App.css';\r\n\r\nclass EventInfo extends React.Component {\r\n\r\n    state = {\r\n        catering: \"true\" \r\n      }\r\n    \r\n    handleChange = event => {\r\n        this.setState({\r\n            catering: event.target.value\r\n        }\r\n        ,() => {\r\n            console.log(this.state)\r\n        }\r\n        )\r\n      }\r\n\r\n    render() {\r\n        return (\r\n            <MDBContainer className=\"pl-0 pr-0\">\r\n                <MDBRow center>\r\n                <MDBCol size=\"10\">\r\n                    <MDBCard style={{ marginTop: \"1rem\" }}>\r\n                        <MDBCardHeader color=\"color\">Event Information</MDBCardHeader>\r\n                        <MDBCardBody>\r\n                            <div className=\"form-group\">\r\n                                <label>Event Name</label>\r\n                                <input type=\"text\" id=\"example1\" className=\"form-control\" />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>Event Date</label>\r\n                                <div>\r\n                                    <DatePicker/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>Event Start Time</label>\r\n                                <div>\r\n                                    <TimePicker/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>Event End Time</label>\r\n                                <div>\r\n                                    <TimePicker/>\r\n                                </div>                    </div>\r\n                            <div className=\"form-group\">\r\n                                <label>Number of Attendees</label>\r\n                                <input type=\"text\" id=\"example1\" className=\"form-control\" />\r\n                            </div>\r\n                                <label>Type of Service</label>\r\n                            <div className=\"dropdown\">\r\n                                <select className=\"browser-default custom-select\" onChange={this.handleChange} >\r\n                                    <option value=\"true\">Catering and Meeting Space</option>\r\n                                    <option value=\"true\">Catering Only</option>\r\n                                    <option value=\"false\">Meeting Space Only</option>\r\n                                </select>\r\n                            </div>\r\n                        </MDBCardBody>\r\n                    </MDBCard>\r\n                </MDBCol>\r\n                </MDBRow>\r\n\r\n                <MDBRow center>\r\n                <MDBCol size=\"10\">\r\n                    {this.state.catering === \"true\" ? (\r\n                            <CateringInfo/>    \r\n                    ) : (\r\n                    <div></div>\r\n                    )\r\n                    }\r\n                </MDBCol>\r\n                </MDBRow>\r\n            </MDBContainer>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default EventInfo;","import React from 'react';\r\nimport { MDBCard, MDBCardBody, MDBCardHeader } from \"mdbreact\";\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport './App.css';\r\n\r\nclass RoomInfo extends React.Component {\r\n\r\n    state = {\r\n        audioVisual: \"false\" \r\n      }\r\n    \r\n    handleChange = event => {\r\n        this.setState({\r\n            audioVisual: event.target.value\r\n        }\r\n        // ,() => {\r\n        //     console.log(this.state)\r\n        // }\r\n        )\r\n      }\r\n    \r\n    render() {\r\n        return (\r\n            <MDBCard style={{ marginTop: \"1rem\" }}>\r\n                <MDBCardHeader color=\"color\">Room Information</MDBCardHeader>\r\n                <MDBCardBody>\r\n                    <label>Setup Style</label>\r\n                    <div className =\"dropdown\">\r\n                        <select className=\"browser-default custom-select\">\r\n                        <option value=\"1\">Conference/Boardroom</option>\r\n                        <option value=\"2\">Theater/Auditorium Style</option>\r\n                        <option value=\"3\">Classroom</option>\r\n                        <option value=\"4\">Rounds</option>\r\n                        <option value=\"5\">U-Shape</option>\r\n                        <option value=\"6\">Hollow Square</option>\r\n                        <option value=\"7\">Reception</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Setup Style Comments</label>\r\n                        <textarea className=\"form-control\" rows=\"4\"/>\r\n                    </div>\r\n                    <label>Audiovisual</label>\r\n                    <div>\r\n                        <FormControl component=\"fieldset\">\r\n                            <RadioGroup onChange={this.handleChange} >\r\n                                <FormControlLabel value=\"true\" control={<Radio />} label=\"Yes\" />\r\n                                <FormControlLabel value=\"false\" control={<Radio />} label=\"No\" />\r\n                            </RadioGroup>\r\n                        </FormControl>\r\n                    </div>\r\n                    {this.state.audioVisual === \"true\" ? (\r\n                            <div className=\"form-group\">\r\n                                <label>Please provide details about the audiovisual you would like at the event</label>\r\n                                <textarea className=\"form-control\" rows=\"4\"/>\r\n                            </div>\r\n                        ) : (\r\n                        <div></div> \r\n                        )\r\n                     }\r\n                    <div className=\"form-group\">\r\n                        <label>Please provide any additional comments or questions regarding your event</label>\r\n                        <textarea className=\"form-control\" rows=\"4\"/>\r\n                    </div>\r\n                </MDBCardBody>\r\n          </MDBCard>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RoomInfo;","import React from 'react';\r\nimport { MDBCard, MDBCardBody, MDBCardHeader } from \"mdbreact\";\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport './App.css';\r\n\r\nclass PaymentInfo extends React.Component {\r\n\r\n    state = {\r\n        paymentMethod: \"\" \r\n      }\r\n    \r\n    handleChange = event => {\r\n        this.setState({\r\n            paymentMethod: event.target.value\r\n        }\r\n        // ,() => {\r\n        //     console.log(this.state)\r\n        // }\r\n        )\r\n      }\r\n    \r\n    render() {\r\n        return (\r\n            <MDBCard style={{ marginTop: \"1rem\" }}>\r\n                <MDBCardHeader color=\"color\">Method of Payment</MDBCardHeader>\r\n                <MDBCardBody>\r\n                <div>\r\n                    <FormControl component=\"fieldset\">\r\n                        <RadioGroup onChange={this.handleChange} >\r\n                            <FormControlLabel value=\"account\" control={<Radio />} label=\"UA IDB Account Number\" />\r\n                            {\r\n                                this.state.paymentMethod === \"account\" ? (\r\n                                <div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Account Number</label>\r\n                                        <input type=\"text\" className=\"form-control\" />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Sub Account Number</label>\r\n                                        <input type=\"text\" className=\"form-control\" />\r\n                                    </div>\r\n                                </div>\r\n                                ) : (\r\n                                <div></div>\r\n                                )\r\n                            }\r\n                            <FormControlLabel value=\"credit\" control={<Radio />} label=\"Credit Card\" />\r\n                            <FormControlLabel value=\"check\" control={<Radio />} label=\"Check\" />\r\n                            <FormControlLabel value=\"purchaseOrder\" control={<Radio />} label=\"Purchase Order\" />\r\n                        </RadioGroup>\r\n                    </FormControl>\r\n                </div>\r\n                </MDBCardBody>\r\n          </MDBCard>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PaymentInfo;","import React from 'react';\r\nimport { MDBCard, MDBCardBody, MDBCardHeader } from \"mdbreact\";\r\nimport './App.css';\r\n\r\nclass TermsAndConditions extends React.Component {\r\n    \r\n    render() {\r\n        return (\r\n            <MDBCard style={{ marginTop: \"1rem\" }}>\r\n                <MDBCardHeader color=\"color\">Conditions, Terms, & Policies</MDBCardHeader>\r\n                <MDBCardBody>\r\n                    \"Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt. Neque porro quisquam est, qui dolorem ipsum quia dolor sit amet, consectetur, adipisci velit, sed quia non numquam eius modi tempora incidunt ut labore et dolore magnam aliquam quaerat voluptatem. Ut enim ad minima veniam, quis nostrum exercitationem ullam corporis suscipit laboriosam, nisi ut aliquid ex ea commodi consequatur? Quis autem vel eum iure reprehenderit qui in ea voluptate velit esse quam nihil molestiae consequatur, vel illum qui dolorem eum fugiat quo voluptas nulla pariatur?\"\r\n                </MDBCardBody>\r\n          </MDBCard>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TermsAndConditions;","import React from 'react';\r\nimport { MDBContainer, MDBRow, MDBBtn, MDBCol } from \"mdbreact\";\r\nimport ContactInfo from './contact-info'\r\nimport EventInfo from '././event-info';\r\nimport RoomInfo from './room-info';\r\nimport PaymentInfo from './payment-info'\r\nimport TermsAndConditions from './terms-and-conditions';\r\nimport './App.css';\r\n\r\n/***********************************************************************************\r\nCateringInfo is rendered in the EventInfo class, displays if EventInfo state is true\r\nEventInfo has MDBCols \r\n************************************************************************************/\r\n\r\nclass App extends React.Component {\r\n\r\n  render(){\r\n    return (\r\n      <MDBContainer>\r\n\r\n        <h1> Event Request Form </h1>\r\n\r\n        <MDBRow center>\r\n          <MDBCol size=\"10\">\r\n            <ContactInfo/>\r\n          </MDBCol>\r\n        </MDBRow>\r\n\r\n        <EventInfo/>\r\n\r\n        <MDBRow center>\r\n          <MDBCol size=\"10\">\r\n            <RoomInfo/>\r\n          </MDBCol>\r\n        </MDBRow>\r\n\r\n        <MDBRow center>\r\n          <MDBCol size=\"10\">\r\n            <PaymentInfo/>\r\n          </MDBCol>\r\n        </MDBRow>\r\n\r\n        <MDBRow center>\r\n          <MDBCol size=\"10\">\r\n            <TermsAndConditions/>\r\n          </MDBCol>\r\n        </MDBRow>\r\n\r\n        <MDBRow center>\r\n          <MDBCol size=\"10\">\r\n            <div className=\"text-center\">\r\n              <MDBBtn className=\"color\">Submit</MDBBtn>\r\n            </div>\r\n          </MDBCol>\r\n        </MDBRow>\r\n      </MDBContainer>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport '@fortawesome/fontawesome-free/css/all.min.css';\r\nimport 'bootstrap-css-only/css/bootstrap.min.css';\r\nimport 'mdbreact/dist/css/mdb.css';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}