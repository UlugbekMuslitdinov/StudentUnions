{"version":3,"sources":["img/Catalyst_Cafe_Catering_Banner.jpg","redux/reducers/main.js","redux/reducers/bagelandsheamr_reducer.js","redux/reducers/egg_sandwiches_reducer.js","redux/reducers/bk_fav_reducer.js","redux/reducers/sweet_snack_reducer.js","redux/reducers/beverage.js","redux/reducers/fresh_salads_reducer.js","redux/reducers/cookie_reducer.js","redux/reducers/lunchsandwich_reducer.js","redux/reducers/index.js","redux/actions/actionTypes.js","redux/store.js","components/common/numberInput.js","components/common/TopNav.js","redux/actions/main.js","components/bottom.js","components/BagelShmear/Choice.js","redux/actions/bagelandsheamr_action.js","components/BagelShmear/index.js","components/EggSandwich/BoxController.js","redux/actions/egg_sandwiches_action.js","components/EggSandwich/index.js","components/BreakfastFavorites/Bagel.js","redux/actions/bk_fav_action.js","components/BreakfastFavorites/Pastry.js","components/common/style.js","components/BreakfastFavorites/index.js","components/SweetSnack/Box.js","redux/actions/sweet_snack_action.js","components/SweetSnack/index.js","components/Beverage/index.js","redux/actions/beverage.js","components/FreshSalads/Choice.js","redux/actions/fresh_salads_action.js","components/FreshSalads/index.js","redux/actions/cookie_action.js","components/Cookie/Box.js","components/Cookie/Chips.js","components/Cookie/index.js","redux/actions/lunchsandwich_action.js","components/LunchSandwich/Box.js","components/LunchSandwich/LunchGroup.js","components/LunchSandwich/Cookie.js","components/LunchSandwich/index.js","components/Summary/BagelShmear.js","components/Summary/EggSandwich.js","components/Summary/BreakfastFavorites.js","components/Summary/SweetSnack.js","components/Summary/Beverage.js","components/Summary/FreshSalads.js","components/Summary/Cookie.js","components/Summary/LunchSandwiches.js","components/Summary/index.js","components/Confirmation.js","serviceWorker.js","index.js","App.js"],"names":["module","exports","initialState","delivery_method","loading","bagelandsheamr","byo_breakfast","byo_lunch","office_party","beverage","subtotal","tax","total","additional_comment","nav","routes","confirmation","success","email","orderID","error","code","msg","box","mode","id","baker_dozen","name","description","price","qty","list","half_dozen","nosh_box","bagel","plain","honey","everything","asiago","blueberry","choco","cinnamonRaisin","cinnamonSugar","sesame","whip","onion","salmon","plainRF","garden","jalapeno","strawberry","roundTo","require","type","classic","items","applewood","turkey","ham","half","selected","dozen","signature","farmhouse","thintastic","santafe","bacon","for_group","bagel_max","whip_max","salmon_platter","bagel_shmear_break_box","power_protein_breakfast_box","Pastry_breakfast_box","cinnamon","cherry","salad_large","salad_small","parfait","parfait_individual","noshbox_half","noshbox_dozen","noshbox","neighborhood_blend","neighborhood_decaf","vanilla_hazelnut","seasonal_roast","orange_juice","tea_forTheGroup","lemonade_forTheGroup","blackberryLemonade_forTheGroup","hot_tea","hon_tea_green","hon_tea_half","vitamin_acai","vitamin_tropical","vitamin_strawberry","coke","diet_coke","dr_pepper","sprite","fanta_orange","dasani","gallon_water","chips","bakedlays","kettleseasalt","chicken","chicken_group","almond","almond_group","variety","sweet","small","large","kettle","single","sea","layBake","variety_half","variety_dozen","sweet_small","sweet_large","turkey_bacon","avocado","ham_swiss","full","turkey_cheddar","forGroup","sandwich","cookie","chip","kettleplain","drink","diet_dr_pepper","coke_zero","lunchBox","harvest","tasty","green","nova","combineReducers","main","state","action","index","payload","err","text","item","box_total","diff","push","filter","egg_sandwich","split","bk_fav_reducer","new_list","key","sweet_snack","fresh_salads","ex_total","lunchsandwich","console","log","list_id","createStore","rootReducer","applyMiddleware","thunkMiddleware","NumberInput","props","increase","setState","value","this","onChange","decrease","onChangeHandler","event","target","parseInt","className","style","noleft","onClick","readonly","min","bind","readOnly","noright","React","Component","TopNav","Fragment","Row","to","global","fontSize","marginTop","connect","updateCurrentNav","getDeliveryMethodSuccess","getDeliveryMethodFailure","Bottom","getTotal","navIndex","Col","fontWeight","textAlign","padding","ButtonToolbar","marginRight","width","marginLeft","dispatch","Choice","checkQty","tmp_qty","closeBox","addBox","validateBox","updateBox","bagel_qty","bagel_err","whip_qty","whip_err","printBagels","print","bagel_shmear","md","onChangeBagel","float","setTimeout","printWhip","onChangeWhip","sandwich_qty","cookie_qty","chip_qty","drink_qty","sandwich_err","cookie_err","chip_err","drink_err","error_msg","Card","Body","Text","ListGroup","Item","marginBottom","paddingLeft","color","Button","variant","size","Header","BagelShmear","updateQty","openBox","openEditBox","removeBox","printItem","borderBottom","printSelectedBox","printItemWhip","box_count","box_id","print_li","tmp_count","item_id","border","height","listStyle","Title","margin","BoxController","onChangeInput","max_qty","textTransform","EggSandwich","num","names","count","total_qty","printRow","map","row","Bagel","favorites","Pastry","closePastry","addPastry","displayErr","updatePastry","onSelectItem","printItems","Modal","show","paddingTop","borderWidth","Footer","justifyContent","subHeader","itemHeader","itemHeader_sp","style_listGroup","listGroupItem","BreakfastFavorites","printItemWithBox","serves","printPastry","removePastry","styles","Box","SweetSnack","Beverage","onChangeBeverage","updateBeverage","printDrink","bevName","backgroundColor","selected_item","printItemsByType","FreshSalads","removeChoice","printSelectedItems","Chips","Cookie","printSelectedCookies","tmp_print","cookie_box","printKettleChips","removeKettleChip","prop","removeChip","LunchGroup","printSandwiches","onChangeSandwich","printCookies","onChangeCookie","printChips","onChangeChip","printDrinks","onChangeDrink","borderBottomWidth","borderTop","addLunchBox","num_selected","updateLunchBox","pass","fruit","LunchSandwich","removeCookie","print_selected","printSelectedForGroup","printLunchBox","chip_name","cookie_name","removeLunchBox","borderTopWidth","printBox","display","printListWithSub","print_subitem","printList","bkfav","subitem_index","totalQty","tmp_list","LunchSandwiches","printListWithChoices","Summary","handleTextarea","submitOrder","data","globalState","bk_fav","history","calculateSubtotal","Spinner","animation","paddingBottom","rows","href","fetch_option","method","headers","body","JSON","stringify","fetch","then","res","ok","json","Error","return","order_id","catch","getDeliveryMethod","Confirmation","lineHeight","Boolean","window","location","hostname","match","ReactDOM","render","store","Container","src","Banner","alt","basename","exact","path","component","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.59700f8f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Catalyst_Cafe_Catering_Banner.5c79c466.jpg\";","import { \r\n    UPDATE_CURRENT_NAV, \r\n    CALCULATE_SUBTOTAL,\r\n    SUBMIT_SUCCESS,\r\n    SUBMIT_FAILURE,\r\n    GET_DELIVERY_METHOD,\r\n    GET_DELIVERY_METHOD_FAILURE,\r\n    ADDITIONAL_NOTE\r\n} from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n    delivery_method: null,\r\n    loading: true,\r\n    bagelandsheamr: 0,\r\n    byo_breakfast: 0,\r\n    byo_lunch: 0,\r\n    office_party: 0,\r\n    beverage: 0,\r\n    subtotal: 0,\r\n    tax: 0,\r\n    total: 0,\r\n    additional_comment: '',\r\n    nav: 0,\r\n    routes: [\r\n        '/bagelandshmear',\r\n        '/eggsandwich',\r\n        '/breakfastfavorites',\r\n        '/sweetsnack',\r\n        '/beverage',\r\n        '/freshsalads',\r\n        '/cookies',\r\n        '/lunchsandwich',\r\n        '/summary'\r\n    ],\r\n    confirmation: {\r\n        loading: true,\r\n        success: false,\r\n        email: null,\r\n        orderID: null,\r\n        error: {\r\n            code: null\r\n        }\r\n    },\r\n    error: {\r\n        msg: ''\r\n    }\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n    switch (action.type) {\r\n        case UPDATE_CURRENT_NAV: {\r\n            const {index} = action.payload;\r\n            state.nav = index;\r\n            return {...state};\r\n        }\r\n        case CALCULATE_SUBTOTAL: {\r\n            const {subtotal, tax, total} = action.payload;\r\n            state.subtotal = subtotal;\r\n            state.tax = tax;\r\n            state.total = total;\r\n            return {...state};\r\n        }\r\n        case SUBMIT_SUCCESS: {\r\n            const {id, email} = action.payload;\r\n            initialState.confirmation = {\r\n                loading: false,\r\n                orderID: id,\r\n                email: email,\r\n                success: true\r\n            }\r\n            return {...initialState};\r\n        }\r\n        case SUBMIT_FAILURE: {\r\n            const {code} = action.payload;\r\n            state.confirmation = {\r\n                loading: false,\r\n                orderID: null\r\n            }\r\n            state.error.code = code;\r\n            return {...state}\r\n        }\r\n        case GET_DELIVERY_METHOD: {\r\n            const {delivery_method} = action.payload;\r\n            state.delivery_method = delivery_method;\r\n            return {...state};\r\n        }\r\n        case GET_DELIVERY_METHOD_FAILURE: {\r\n            const {err} = action.payload;\r\n            state.delivery_method = 'Failed';\r\n            state.error.msg = err;\r\n            return {...state}\r\n        }\r\n        case ADDITIONAL_NOTE: {\r\n            const text = action.payload;\r\n            state.additional_comment = text;\r\n            return {...state}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};","import { \r\n    UPDATE_BAGEL_SHEAMR_QTY,\r\n    OPEN_BAGEL_SHEAMR_CHOICE,\r\n    OPEN_EDIT_BAGEL_SHEAMR_CHOICE,\r\n    CLOSE_BAGEL_SHEAMR_CHOICE,\r\n    ADD_BAGEL_SHEAMR_CHOICE,\r\n    UPDATE_BAGEL_SHEAMR_CHOICE,\r\n    REMOVE_BAGEL_SHEAMR_CHOICE \r\n} from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    box: null,\r\n    mode: null,\r\n    id: null,\r\n    baker_dozen: {\r\n        name: \"Bagels & Shmear Baker's Dozen\",\r\n        description: \"13 Fresh-Baked Bagels & 2 Tubs of Double-Whipped Shmear\",\r\n        price: 17.99,\r\n        qty: 0,\r\n        total: 0,\r\n        list: []\r\n    },\r\n    half_dozen: {\r\n        name: \"Bagels & Shmear Half Dozen\",\r\n        description: \"6 Fresh-Baked Bagels & 1 Tub of Double-Whipped Shmear\",\r\n        price: 10.45,\r\n        qty: 0,\r\n        total: 0,\r\n        list: []\r\n    },\r\n    nosh_box: {\r\n        name: \"Bagels & Shmear Nosh Box\",\r\n        description: \"24 Fresh-Baked Bagels & 4 Tubs of our Double-Whipped Shmear\",\r\n        price: 32.49,\r\n        qty: 0,\r\n        total: 0,\r\n        list: []\r\n    },\r\n    bagel: {\r\n        plain: {name: 'Plain'},\r\n        honey: {name: 'Honey Whole Wheat'},\r\n        everything: {name: 'Everything'},\r\n        asiago: {name: 'Asiago'},\r\n        blueberry: {name: 'Blueberry'},\r\n        choco: {name: 'Chocolate Chip'},\r\n        cinnamonRaisin: {name: 'Cinnamon Raisin'},\r\n        cinnamonSugar: {name: 'Cinnamon Sugar'},\r\n        sesame: {name: 'Sesame Seed'}\r\n    },\r\n    whip: {\r\n        name: \"Shmear By The Tub\",\r\n        description: \"Single 6oz Tub of Our Double-Whipped Shmear\",\r\n        qty: 0,\r\n        total: 0,\r\n        list: [],\r\n        price : 3.69,\r\n        plain: {name: 'Plain'},\r\n        onion: {name: 'Onion & Chive'},\r\n        salmon: {name: 'Smoked Salmon'},\r\n        plainRF: {name: 'Plain'},\r\n        garden: {name: 'Garden Veggie'},\r\n        honey: {name: 'Honey Almond'},\r\n        jalapeno: {name: 'Jalapeno Salsa'},\r\n        strawberry: {name: 'Strawberry'}\r\n    },\r\n    total: 0\r\n}\r\n\r\nconst roundTo = require('roundto');\r\n\r\nexport default function(state = initialState, action) {\r\n    switch (action.type) {\r\n        case UPDATE_BAGEL_SHEAMR_QTY : {\r\n            const {name, qty} = action.payload;\r\n            state[name].total = roundTo(state[name].price * qty, 2);\r\n            state[name].qty = qty;\r\n            state.total = roundTo(state.baker_dozen.total + state.nosh_box.total, 2);\r\n\r\n            return {...state};\r\n        }\r\n        case OPEN_BAGEL_SHEAMR_CHOICE : {\r\n            const {name, mode} = action.payload;\r\n\r\n\r\n            state.box = name;\r\n            state.mode = mode;\r\n\r\n            return {...state};\r\n        }\r\n        case OPEN_EDIT_BAGEL_SHEAMR_CHOICE : {\r\n            const {box, id} = action.payload;\r\n\r\n            state.box = box;\r\n            state.id = id;\r\n            state.mode = 'edit';\r\n\r\n            return {...state}\r\n        }\r\n        case ADD_BAGEL_SHEAMR_CHOICE : {\r\n            const {item} = action.payload;\r\n            let box_total = 0;\r\n            let diff = 0;\r\n\r\n            state[state.box].list.push(item);\r\n            state[state.box].qty = state[state.box].qty + 1;\r\n\r\n            box_total = state[state.box].total;\r\n            state[state.box].total = roundTo(state[state.box].qty * state[state.box].price, 2);\r\n            diff = state[state.box].total - box_total;\r\n\r\n            // Get Total\r\n            state.total = roundTo(state.total + diff, 2);\r\n\r\n            // Reset box, mode\r\n            state.box = null;\r\n            state.mode = null;\r\n\r\n            return {...state}\r\n        }\r\n        case UPDATE_BAGEL_SHEAMR_CHOICE : {\r\n            const {item} = action.payload;\r\n\r\n            // Decrement previous item\r\n\r\n\r\n            state[state.box].list[state.id] = item;\r\n\r\n            // Reset box, type, mode\r\n            state.box = null;\r\n            state.mode = null;\r\n\r\n            return {...state}\r\n        }\r\n        case REMOVE_BAGEL_SHEAMR_CHOICE: {\r\n            const {box, id} = action.payload;\r\n\r\n            let box_total = 0;\r\n            let diff = 0;\r\n\r\n            state[box].list[id] = null;\r\n            state[box].list = state[box].list.filter(function (box) {\r\n                return box != null\r\n            })\r\n            state[box].qty = state[box].qty - 1;\r\n\r\n            // Subtotal\r\n            box_total = state[box].total;\r\n            state[box].total = roundTo(state[box].qty * state[box].price, 2);\r\n            diff = state[box].total - box_total;\r\n            \r\n\r\n            // Get Total\r\n            state.total = roundTo(state.total + diff, 2);\r\n\r\n            return {...state}\r\n        }\r\n        case CLOSE_BAGEL_SHEAMR_CHOICE: {\r\n            state.box = null;\r\n            state.mode = null;\r\n\r\n            return {...state};\r\n        }\r\n        default :\r\n            return state;\r\n    }\r\n}","import { \r\n    OPEN_EGG_SANDWICH_BOX,\r\n    OPEN_EDIT_EGG_SANDWICH_BOX,\r\n    CLOSE_EGG_SANDWICH_BOX,\r\n    ADD_EGG_SANDWICH_BOX,\r\n    UPDATE_EGG_SANDWICH_BOX,\r\n    REMOVE_EGG_SANDWICH_BOX\r\n} from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    box: null,\r\n    type: null,\r\n    mode: null,\r\n    id: null,\r\n    classic: {\r\n        name: \"Classic Egg Sandwich Nosh Box\",\r\n        description: \"An assortment of Classic Egg Sandwiches including: Applewood Bacon & Cheddar, Turkey-Sausage & Cheddar, Ham & Swiss, and Garden Avocado.\",\r\n        items: {\r\n            applewood: {name: 'Applewood Bacon & Cheddar'},\r\n            turkey: {name: 'Turkey-Sausage & Cheddar'},\r\n            ham: {name: 'Ham & Swiss'},\r\n            garden: {name: 'Garden Avocado on Everything Bagel'}\r\n        },\r\n        half: {\r\n            price: 34.99,\r\n            qty: 0,\r\n            total: 0,\r\n            list: [],\r\n            selected: true\r\n        },\r\n        dozen: {\r\n            price: 68.99,\r\n            qty: 0,\r\n            total: 0,\r\n            list: [],\r\n            selected: true\r\n        },\r\n        total: 0\r\n    },\r\n    signature: {\r\n        name: \"Signature Egg Sandwich Nosh Box\",\r\n        description: \"An assortment of Signature Egg Sandwiches including: The Farmhouse, Applewood Bacon & Cheddar, Turkey-Sausage & Cheddar, Ham & Swiss, and Garden Avocado\",\r\n        items: {\r\n            farmhouse: {name: 'Farmhouse on Hashbrown Bagel'},\r\n            applewood: {name: 'Applewood Bacon & Cheddar on Asiago'},\r\n            turkey: {name: 'Turkey-Sausage & Cheddar on Plain Bagel'},\r\n            ham: {name: 'Ham & Swiss'},\r\n            garden: {name: 'Garden Avocado on Everything Bagel'}\r\n        },\r\n        half: {\r\n            price: 34.99,\r\n            qty: 0,\r\n            total: 0,\r\n            list: [],\r\n            selected: true\r\n        },\r\n        dozen: {\r\n            price: 68.99,\r\n            qty: 0,\r\n            total: 0,\r\n            list: [],\r\n            selected: true\r\n        },\r\n        total: 0\r\n    },\r\n    thintastic: {\r\n        name: \"Thintastic™ Egg Whites Sandwich Nosh Box\",\r\n        description: \"Thintastic™ Egg Sandwiches: Thintastic™ Santa Fe (Egg white, Turkey-Sausage, Cheddar Cheese with Roasted Tomato Salsa and Jalapeno Salsa Shmear on an Asiago Thintastic™ Bagel) and Bacon, Avocado & Tomato (Egg white, Bacon, Avocado, Tomato and Roasted Tomato spread on a Plain Thintastic™ Bagel).\",\r\n        items: {\r\n            santafe: {name: 'Santa Fe Turkey-Sausage, Cheddar, Egg White, Roasted Tomato Salsa & Jalapeno Salsa Schmear on Asiago Thintastic™ Bagel'},\r\n            bacon: {name: 'Bacon, Tomato, Avocado, Egg White & Roasted Tomato spread on a Plain Thintastic™ Bagel'}\r\n        },\r\n        half: {\r\n            price: 34.99,\r\n            qty: 0,\r\n            total: 0,\r\n            list: [],\r\n            selected: true\r\n        },\r\n        dozen: {\r\n            price: 69.99,\r\n            qty: 0,\r\n            total: 0,\r\n            list: [],\r\n            selected: true\r\n        },\r\n        total: 0\r\n    },\r\n    total: 0\r\n}\r\n\r\nconst roundTo = require('roundto');\r\n\r\nexport default function(state = initialState, action) {\r\n    switch (action.type) {\r\n        case OPEN_EGG_SANDWICH_BOX : {\r\n            const {name, mode} = action.payload;\r\n            const [box, type] = name.split('_');\r\n\r\n            state.box = box;\r\n            state.type = type;\r\n            state.mode = mode;\r\n\r\n            return {...state};\r\n        }\r\n        case OPEN_EDIT_EGG_SANDWICH_BOX : {\r\n            const {box, type, id} = action.payload;\r\n\r\n            state.box = box;\r\n            state.type = type;\r\n            state.id = id;\r\n            state.mode = 'edit';\r\n\r\n            return {...state}\r\n        }\r\n        case ADD_EGG_SANDWICH_BOX : {\r\n            const {list} = action.payload;\r\n\r\n            state[state.box][state.type].list.push(list);                                   \r\n            state[state.box][state.type].qty = state[state.box][state.type].qty + 1;\r\n\r\n            // Get Subtotal\r\n            const box_total = state[state.box][state.type].total;\r\n            state[state.box][state.type].total = roundTo(state[state.box][state.type].qty * state[state.box][state.type].price, 2);\r\n            const diff = state[state.box][state.type].total - box_total;\r\n\r\n            // Get Total\r\n            state.total = roundTo(state.total + diff, 2);\r\n\r\n            // Reset box, type, mode\r\n            state.box = null;\r\n            state.type = null;\r\n            state.mode = null;\r\n\r\n            return {...state}\r\n        }\r\n        case UPDATE_EGG_SANDWICH_BOX : {\r\n            const {list} = action.payload;\r\n\r\n            state[state.box][state.type].list[state.id] = list;\r\n\r\n            // Reset box, type, mode\r\n            state.box = null;\r\n            state.type = null;\r\n            state.mode = null;\r\n\r\n            return {...state}\r\n        }\r\n        case REMOVE_EGG_SANDWICH_BOX: {\r\n            const {box, type, id} = action.payload;\r\n\r\n            state[box][type].list[id] = null;\r\n            state[box][type].qty = state[box][type].qty - 1;\r\n\r\n            // Subtotal\r\n            const box_total = state[box][type].total;\r\n            state[box][type].total = roundTo(state[box][type].qty * state[box][type].price, 2);\r\n            const diff = state[box][type].total - box_total;\r\n\r\n            // Get Total\r\n            state.total = roundTo(state.total + diff, 2);\r\n\r\n            return {...state}\r\n        }\r\n        case CLOSE_EGG_SANDWICH_BOX: {\r\n            state.box = null;\r\n            state.type = null;\r\n            state.mode = null;\r\n\r\n            return {...state};\r\n        }\r\n        default :\r\n            return state;\r\n    }\r\n}","import { \r\n    UPDATE_BK_QTY,\r\n    OPEN_BK_BOX,\r\n    OPEN_EDIT_BK_BOX,\r\n    CLOSE_BK_BOX,\r\n    ADD_BK_BOX,\r\n    UPDATE_BK_BOX,\r\n    REMOVE_BK_BOX,\r\n    ADD_BK_PASTRY,\r\n    UPDATE_BK_PASTRY,\r\n    CLOSE_BK_PASTRY,\r\n    REMOVE_BK_PASTRY\r\n} from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    box: null,\r\n    mode: null,\r\n    id: null,\r\n    for_group: {\r\n        name: 'Breakfast For The Group', \r\n        price: 129.99, \r\n        qty: 0, \r\n        bagel_max: 12,\r\n        whip_max: 2,\r\n        total: 0, \r\n        description: 'A Mixed Bagels & Sweets Nosh Box, Large Fresh Fruit Salad, Coffee & Orange Juice for the Group & 2 Tubs of Double-Whipped Shmear',\r\n        list: []\r\n    },\r\n    salmon_platter: {\r\n        name: 'Traditional Nova Lox Salmon Platter', \r\n        price: 94.99, \r\n        qty: 0, \r\n        bagel_max: 13,\r\n        whip_max: 2,\r\n        total: 0, \r\n        description: 'Complete with 13 Fresh-Baked Bagels, Capers, Tomatoes, Red Onions, Cucumbers, Lemons & 2 Tubs of Double-Whipped Shmear',\r\n        list: []\r\n    },\r\n    nosh_box: {\r\n        name: 'Mixed Bagels & Sweets Nosh Box', \r\n        price: 45.99, \r\n        qty: 0, \r\n        bagel_max: 12,\r\n        whip_max: 2,\r\n        total: 0, \r\n        description: 'An assortment of 9 Breakfast Muffins & Assorted Pastries plus 12 Bagels with 2 Tubs of Double-Whipped Shmear & Preserves',\r\n        list: []\r\n    },\r\n    bagel_shmear_break_box: {\r\n        name: 'Bagel & Shmear Breakfast Box', \r\n        price: 7.99, \r\n        qty: 0, \r\n        bagel_max: 1,\r\n        whip_max: 1,\r\n        total: 0, \r\n        description: 'Bagel with Shmear, Fruit Cup, Yogurt with Granola & a Banana',\r\n        list: []\r\n    },\r\n    power_protein_breakfast_box: {name: 'Power Protein Breakfast Box', price: 7.99, qty: 0, total: 0, description: 'Wheat Bagel with Peanut Butter, Fruit Cup, Yogurt with Granola & a Banana'},\r\n    Pastry_breakfast_box: {\r\n        name: 'Pastry Breakfast Box', \r\n        price: 7.99, \r\n        qty: 0, \r\n        total: 0, \r\n        description: 'Choice of Muffin or Strudel, Fruit Cup, Yogurt with Granola & a Banana',\r\n        list: {},\r\n        items: {\r\n            blueberry: {name: 'Blueberry Muffin'},\r\n            cinnamon: {name: 'Cinnamon Chip Muffin'},\r\n            cherry: {name: 'Greek Yogurt Cherry'}\r\n\r\n        }\r\n    },\r\n    total: 0,\r\n    bagel: {\r\n        plain: {name: 'Plain'},\r\n        honey: {name: 'Honey Whole Wheat'},\r\n        everything: {name: 'Everything'},\r\n        asiago: {name: 'Asiago'},\r\n        blueberry: {name: 'Blueberry'},\r\n        choco: {name: 'Chocolate Chip'},\r\n        cinnamonRaisin: {name: 'Cinnamon Raisin'},\r\n        cinnamonSugar: {name: 'Cinnamon Sugar'},\r\n        sesame: {name: 'Sesame Seed'}\r\n    },\r\n    whip: {\r\n        plain: {name: 'Plain'},\r\n        onion: {name: 'Onion & Chive'},\r\n        salmon: {name: 'Smoked Salmon'},\r\n        plainRF: {name: 'Plain'},\r\n        garden: {name: 'Garden Veggie'},\r\n        honey: {name: 'Honey Almond'},\r\n        jalapeno: {name: 'Jalapeno Salsa'},\r\n        strawberry: {name: 'Strawberry'}\r\n    },\r\n}\r\n\r\nconst roundTo = require('roundto');\r\n\r\nexport default function(state = initialState, action) {\r\n    switch (action.type) {\r\n        case UPDATE_BK_QTY : {\r\n            const {name, qty} = action.payload;\r\n            state[name].total = roundTo(state[name].price * qty, 2);\r\n            state[name].qty = qty;\r\n            state.total = roundTo(\r\n                                state.for_group.total + \r\n                                state.salmon_platter.total +\r\n                                state.nosh_box.total +\r\n                                state.bagel_shmear_break_box.total +\r\n                                state.power_protein_breakfast_box.total +\r\n                                state.Pastry_breakfast_box.total\r\n                                ,2);\r\n\r\n            return {...state};\r\n        }\r\n        case OPEN_BK_BOX : {\r\n            const {name, mode} = action.payload;\r\n\r\n            state.box = name;\r\n            state.mode = mode;\r\n\r\n            return {...state};\r\n        }\r\n        case OPEN_EDIT_BK_BOX : {\r\n            const {box, id} = action.payload;\r\n\r\n            state.box = box;\r\n            state.id = id;\r\n            state.mode = 'edit';\r\n\r\n            return {...state}\r\n        }\r\n        case ADD_BK_BOX : {\r\n            const {list} = action.payload;\r\n\r\n            state[state.box].list.push(list);                                   \r\n            state[state.box].qty = state[state.box].qty + 1;\r\n\r\n            // Get Subtotal\r\n            const box_total = state[state.box].total;\r\n            state[state.box].total = roundTo(state[state.box].qty * state[state.box].price, 2);\r\n            const diff = state[state.box].total - box_total;\r\n\r\n            // Get Total\r\n            state.total = roundTo(state.total + diff, 2);\r\n\r\n            // Reset box, type, mode\r\n            state.box = null;\r\n            state.mode = null;\r\n\r\n            return {...state}\r\n        }\r\n        case UPDATE_BK_BOX : {\r\n            const {list} = action.payload;\r\n\r\n            state[state.box].list[state.id] = list;\r\n\r\n            // Reset box, type, mode\r\n            state.box = null;\r\n            state.mode = null;\r\n\r\n            return {...state}\r\n        }\r\n        case REMOVE_BK_BOX: {\r\n            const {box, id} = action.payload;\r\n\r\n            state[box].list[id] = null;\r\n            state[box].qty = state[box].qty - 1;\r\n\r\n            let new_list = [];\r\n            for (const id in state[box].list){\r\n                if (state[box].list[id] !== null){\r\n                    new_list.push(state[box].list[id])\r\n                }\r\n            }\r\n            state[box].list = new_list;\r\n\r\n            // Subtotal\r\n            const box_total = state[box].total;\r\n            state[box].total = roundTo(state[box].qty * state[box].price, 2);\r\n            const diff = state[box].total - box_total;\r\n\r\n            // Get Total\r\n            state.total = state.total + diff;\r\n\r\n            return {...state}\r\n        }\r\n        case CLOSE_BK_BOX: {\r\n            state.box = null;\r\n            state.mode = null;\r\n\r\n            return {...state};\r\n        }\r\n        case ADD_BK_PASTRY: {\r\n            const {item} = action.payload;\r\n            // let box_total = 0;\r\n            let diff = 0;\r\n\r\n            if (item in state.Pastry_breakfast_box.list) {\r\n                state.Pastry_breakfast_box.list[item] = state.Pastry_breakfast_box.list[item] + 1;\r\n            }\r\n            else {\r\n                state.Pastry_breakfast_box.list[item] = 1;\r\n            }\r\n\r\n            state.Pastry_breakfast_box.qty = state.Pastry_breakfast_box.qty + 1;\r\n            state.Pastry_breakfast_box.total = roundTo(state.Pastry_breakfast_box.price*state.Pastry_breakfast_box.qty, 2);\r\n            \r\n            diff = state.Pastry_breakfast_box.price;\r\n\r\n            // Get Total\r\n            state.total = roundTo(state.total + diff, 2);\r\n\r\n            // Reset box, type, mode\r\n            state.box = null;\r\n            state.type = null;\r\n            state.mode = null;\r\n\r\n            return {...state}\r\n        }\r\n        case UPDATE_BK_PASTRY: {\r\n            const {item} = action.payload;\r\n\r\n            // Decrement previous item\r\n\r\n\r\n            state.Pastry_breakfast_box.list[state.id] = item;\r\n\r\n            // Reset box, type, mode\r\n            state.box = null;\r\n            state.type = null;\r\n            state.mode = null;\r\n\r\n            return {...state}\r\n        }\r\n        case REMOVE_BK_PASTRY: {\r\n            const {item} = action.payload;\r\n\r\n            state.Pastry_breakfast_box.list[item] = state.Pastry_breakfast_box.list[item] - 1;\r\n            if (state.Pastry_breakfast_box.list[item] === 0) {\r\n                // delete state.lunchBox[sandwich].list[cookie]\r\n                let new_list = {}\r\n                for (let key in state.Pastry_breakfast_box.list){\r\n                    if (state.Pastry_breakfast_box.list[key] !== 0){\r\n                        new_list[key] = state.Pastry_breakfast_box.list[key]\r\n                    }\r\n                }\r\n                state.Pastry_breakfast_box.list = new_list;\r\n            }\r\n            // console.log(state.Pastry_breakfast_box.list)\r\n\r\n            // Subtotal\r\n            state.Pastry_breakfast_box.qty = state.Pastry_breakfast_box.qty - 1;\r\n            state.Pastry_breakfast_box.total = roundTo(state.Pastry_breakfast_box.total - state.Pastry_breakfast_box.price, 2)\r\n            state.total = roundTo(state.total - state.Pastry_breakfast_box.price, 2)\r\n\r\n            return {...state}\r\n        }\r\n        case CLOSE_BK_PASTRY: {\r\n            state.box = null;\r\n            state.type = null;\r\n            state.mode = null;\r\n\r\n            return {...state}\r\n        }\r\n        default :\r\n            return state;\r\n    }\r\n}","import { \r\n    UPDATE_SWEETSNACK_QTY,\r\n    OPEN_SWEETSNACK_BOX,\r\n    OPEN_EDIT_SWEETSNACK_BOX,\r\n    CLOSE_SWEETSNACK_BOX,\r\n    ADD_SWEETSNACK_BOX,\r\n    UPDATE_SWEETSNACK_BOX,\r\n    REMOVE_SWEETSNACK_BOX\r\n} from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    salad_large: {name: 'Seasonal Fresh Fruit Salad', price: 49.99, qty: 0, total: 0, description: 'An Assortment of Fresh-Cut Seasonal Fruit'},\r\n    salad_small: {name: '', price: 29.99, qty: 0, total: 0, description: ''},\r\n    parfait: {name: 'Vanilla Strawberry Granola Parfait - Group', price: 29.99, qty: 0, total: 0, description: 'Fresh-Cut Strawberries, Low-Fat Vanilla Yogurt & Premium Granola with Sliced Almonds & Craisins® Dried Cranberries'},\r\n    parfait_individual: {name: 'Vanilla Strawberry Granola Parfait - Individual', price: 3.79, qty: 0, total: 0, description: 'Fresh-Cut Strawberries, Low-Fat Vanilla Yogurt & Premium Granola with Sliced Almonds & Craisins® Dried Cranberries'},\r\n    box: null,\r\n    type: null,\r\n    mode: null,\r\n    id: null,\r\n    noshbox_half: {price: 18.99, qty: 0, total: 0},\r\n    noshbox_dozen: {price: 32.49, qty: 0, total: 0},\r\n    noshbox: {\r\n        name: \"Sweets Nosh Box\",\r\n        description: \"Muffins & Assorted Pastries\",\r\n        items: {\r\n            applewood: {name: 'Applewood Bacon & Cheddar'},\r\n            turkey: {name: 'Turkey-Sausage & Cheddar'},\r\n            ham: {name: 'Ham & Swiss'}\r\n        },\r\n        half: {\r\n            price: 18.99,\r\n            qty: 0,\r\n            total: 0,\r\n            list: [],\r\n            selected: true\r\n        },\r\n        dozen: {\r\n            price: 32.49,\r\n            qty: 0,\r\n            total: 0,\r\n            list: [],\r\n            selected: true\r\n        },\r\n        total: 0\r\n    },\r\n    total: 0\r\n}\r\n\r\nconst roundTo = require('roundto');\r\n\r\nexport default function(state = initialState, action) {\r\n    switch (action.type) {\r\n        case UPDATE_SWEETSNACK_QTY : {\r\n            const {name, qty} = action.payload;\r\n            state[name].total = roundTo(state[name].price * qty, 2);\r\n            state[name].qty = qty;\r\n            state.total = roundTo(\r\n                                state.salad_large.total + \r\n                                state.salad_small.total +\r\n                                state.parfait.total +\r\n                                state.parfait_individual.total +\r\n                                state.noshbox_half.total +\r\n                                state.noshbox_dozen.total\r\n                                ,2);\r\n\r\n            return {...state};\r\n        }\r\n        case OPEN_SWEETSNACK_BOX : {\r\n            const {name, mode} = action.payload;\r\n            const [box, type] = name.split('_');\r\n\r\n            state.box = box;\r\n            state.type = type;\r\n            state.mode = mode;\r\n\r\n            return {...state};\r\n        }\r\n        case OPEN_EDIT_SWEETSNACK_BOX : {\r\n            const {box, type, id} = action.payload;\r\n\r\n            state.box = box;\r\n            state.type = type;\r\n            state.id = id;\r\n            state.mode = 'edit';\r\n\r\n            return {...state}\r\n        }\r\n        case ADD_SWEETSNACK_BOX : {\r\n            const {list} = action.payload;\r\n\r\n            state[state.box][state.type].list.push(list);                                   \r\n            state[state.box][state.type].qty = state[state.box][state.type].qty + 1;\r\n\r\n            // Get Subtotal\r\n            const box_total = state[state.box][state.type].total;\r\n            state[state.box][state.type].total = roundTo(state[state.box][state.type].qty * state[state.box][state.type].price, 2);\r\n            const diff = state[state.box][state.type].total - box_total;\r\n\r\n            // Get Total\r\n            state.total = state.total + diff;\r\n\r\n            // Reset box, type, mode\r\n            state.box = null;\r\n            state.type = null;\r\n            state.mode = null;\r\n\r\n            return {...state}\r\n        }\r\n        case UPDATE_SWEETSNACK_BOX : {\r\n            const {list} = action.payload;\r\n\r\n            state[state.box][state.type].list[state.id] = list;\r\n\r\n            // Reset box, type, mode\r\n            state.box = null;\r\n            state.type = null;\r\n            state.mode = null;\r\n\r\n            return {...state}\r\n        }\r\n        case REMOVE_SWEETSNACK_BOX: {\r\n            const {box, type, id} = action.payload;\r\n\r\n            state[box][type].list[id] = null;\r\n            state[box][type].qty = state[box][type].qty - 1;\r\n\r\n            // Subtotal\r\n            const box_total = state[box][type].total;\r\n            state[box][type].total = roundTo(state[box][type].qty * state[box][type].price, 2);\r\n            const diff = state[box][type].total - box_total;\r\n\r\n            // Get Total\r\n            state.total = state.total + diff;\r\n\r\n            return {...state}\r\n        }\r\n        case CLOSE_SWEETSNACK_BOX: {\r\n            state.box = null;\r\n            state.type = null;\r\n            state.mode = null;\r\n\r\n            return {...state};\r\n        }\r\n        default :\r\n            return state;\r\n    }\r\n}","import { \r\n    UPDATE_BEVERAGE_QTY\r\n} from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n    list: {\r\n        neighborhood_blend: {name: 'Neighborhood Blend', price: 16.99, qty: 0, total: 0, description: 'Our Signature Blend. Balanced, Medium-Bodied & Mellow. Roasted to a Light Nutty Brown.'},\r\n        neighborhood_decaf: {name: 'Neighborhood Decaf', price: 16.99, qty: 0, total: 0, description: 'All the flavor without the caffeine. A Medium-Bodied Dark Roast with a Smoky Flavor'},\r\n        vanilla_hazelnut: {name: 'Vanilla Hazelnut', price: 16.99, qty: 0, total: 0, description: 'Sweet & Nutty. Lightly Roasted Coffee Beans flavored with Vanilla & Hazelnut essence.'},\r\n        seasonal_roast: {name: 'Seasonal Roast', price: 16.99, qty: 0, total: 0, description: 'A coffee lover\\'s blend. Roasted in the Italian Roast Tradition to a Smoky, Bold Flavor & Deep Color.'},\r\n        \r\n        orange_juice: {name: 'Orange Juice For The Group', price: 10.99, qty: 0, total: 0, description: ''},\r\n        tea_forTheGroup: {name: 'Tea & Lemonade For The Group - Tea', price: 8.99, qty: 0, total: 0, description: ''},\r\n        lemonade_forTheGroup: {name: 'Tea & Lemonade For The Group - Lemonade', price: 8.99, qty: 0, total: 0, description: ''},\r\n        blackberryLemonade_forTheGroup: {name: 'Tea & Lemonade For The Group - Blackberry Lemonade', price: 8.99, qty: 0, total: 0, description: ''},\r\n        hot_tea: {name: 'Hot Tea For The Group', price: 15.99, qty: 0, total: 0, description: ''},\r\n\r\n        hon_tea_green: {name: 'Honest Tea - Honey Green', price: 2.89, qty: 0, total: 0, description: 'Honey Green'},\r\n        hon_tea_half: {name: ' Honest Tea - Half Tea/Lemonade', price: 2.89, qty: 0, total: 0, description: 'Half Tea/Lemonade'},\r\n\r\n        vitamin_acai: {name: 'Vitamin Water - Acai-Blueberry-Pomegranate', price: 2.79, qty: 0, total: 0, description: 'Acai-Blueberry-Pomegranate'},\r\n        vitamin_tropical: {name: 'Vitamin Water - Tropical Citrus', price: 2.79, qty: 0, total: 0, description: 'Tropical Citrus'},\r\n        vitamin_strawberry: {name: 'Vitamin Water - Kiwi Strawberry', price: 2.79, qty: 0, total: 0, description: 'Kiwi Strawberry'},\r\n\r\n        coke: {name: 'Coke', price: 2.09, qty: 0, total: 0,},\r\n        diet_coke: {name: 'Diet Coke', price: 2.09, qty: 0, total: 0,},\r\n        dr_pepper: {name: 'Dr.Pepper', price: 2.09, qty: 0, total: 0,},\r\n        // diet_dr_pepper: {name: 'Diet Dr.Pepper', price: 2.09, qty: 0, total: 0,},\r\n        sprite: {name: 'Sprite', price: 2.09, qty:0, total: 0,},\r\n        fanta_orange: {name: 'Fanta Orange', price: 2.09, qty:0, total: 0,},\r\n\r\n        dasani: {name: 'Dasani Water', price: 1.69, qty: 0, total: 0,},\r\n        \r\n        // coke_zero: {name: 'Coke Zero', price: 1.99, qty: 0, total: 0,},\r\n\r\n        \r\n        \r\n        gallon_water: {name: 'Gallon of Water', price: 5.00, qty: 0, total: 0, description: ''} \r\n    },\r\n    total : 0\r\n};\r\n\r\nconst roundTo = require('roundto');\r\n\r\nexport default function(state = initialState, action) {\r\n    switch (action.type) {\r\n        case UPDATE_BEVERAGE_QTY: {\r\n            const {name, qty} = action.payload;\r\n\r\n            const total = state.list[name].total;\r\n            state.list[name].qty = qty;\r\n            state.list[name].total = roundTo(state.list[name].price * qty, 2);\r\n            const diff = roundTo(state.list[name].total - total, 2);\r\n\r\n            state.total = roundTo(state.total + diff, 2);\r\n\r\n            return {...state};\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// function updateTotal(state, name) {\r\n//     const total = roundTo(\r\n//                             state.list.neighborhood_blend.qty*state.list.neighborhood_blend.price +\r\n//                             state.list.neighborhood_decaf.qty*state.list.neighborhood_decaf.price +\r\n//                             state.list.vanilla_hazelnut.qty*state.list.vanilla_hazelnut.price +\r\n//                             state.list.seasonal_roast.qty*state.list.seasonal_roast.price +\r\n//                             state.list.orange_juice.qty*state.list.orange_juice.price +\r\n//                             state.list.tea_lemonade.qty*state.list.tea_lemonade.price +\r\n//                             state.list.hot_tea.qty*state.list.hot_tea.price +\r\n//                             state.list.coke.qty*state.list.coke.price + \r\n//                             state.list.diet_coke.qty*state.list.diet_coke.price +\r\n//                             state.list.dr_pepper.qty*state.list.dr_pepper.price +\r\n//                             state.list.diet_dr_pepper.qty*state.list.diet_dr_pepper.price +\r\n//                             state.list.sprite.qty*state.list.sprite.price +\r\n//                             state.list.dasani.qty*state.list.dasani.price +\r\n//                             state.list.cherry_coke.qty*state.list.cherry_coke.price +\r\n//                             state.list.coke_zero.qty*state.list.coke_zero.price, \r\n//                         2);\r\n//     return total;\r\n// }","import { \r\n    UPDATE_FRESHSALADS_QTY,\r\n    OPEN_FRESHSALADS_BOX,\r\n    OPEN_EDIT_FRESHSALADS_BOX,\r\n    CLOSE_FRESHSALADS_BOX,\r\n    ADD_FRESHSALADS_BOX,\r\n    UPDATE_FRESHSALADS_BOX,\r\n    REMOVE_FRESHSALADS_BOX,\r\n    REMOVE_FRESHSALADS_CHOICE\r\n} from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    box: null,\r\n    mode: null,\r\n    id: null,\r\n    items: {\r\n        bagel: {\r\n            plain: {name: 'Plain'},\r\n            sesame: {name: 'Sesame'},\r\n            asiago: {name: 'Asiago'}\r\n        },\r\n        chips: {\r\n            bakedlays: {name: 'Baked Lays'},\r\n            kettleseasalt: {name: 'Kettle Plain Sea Salt'},\r\n            //kettlebbq: {name: 'Kettle BBQ'}\r\n        }\r\n    },\r\n    chicken: {\r\n        price: 8.99,\r\n        qty: 0,\r\n        selected: {},\r\n        list: [],\r\n        total: 0\r\n    },\r\n    chicken_group: {name: '', price: 42.99, qty: 0, total: 0}, \r\n    almond: {\r\n        price: 8.99,\r\n        qty: 0,\r\n        selected: {},\r\n        list: [],\r\n        total: 0\r\n    },\r\n    almond_group: {name: '', price: 36.99, qty: 0, total: 0}, \r\n    total: 0\r\n}\r\n\r\nconst roundTo = require('roundto');\r\n\r\nexport default function(state = initialState, action) {\r\n    switch (action.type) {\r\n        case UPDATE_FRESHSALADS_QTY : {\r\n            const {name, qty} = action.payload;\r\n\r\n            // Get total\r\n            const subtotal = state[name].total;\r\n            \r\n            state[name].total = roundTo(state[name].price * qty, 2);\r\n            state[name].qty = qty;\r\n\r\n            const diff = state[name].total - subtotal;\r\n\r\n            state.total = roundTo(state.total + diff, 2);            \r\n\r\n            return {...state};\r\n        }\r\n        case OPEN_FRESHSALADS_BOX : {\r\n            const {box, mode} = action.payload;\r\n\r\n            state.box = box;\r\n            state.mode = mode;\r\n\r\n            return {...state};\r\n        }\r\n        case OPEN_EDIT_FRESHSALADS_BOX : {\r\n            const {box, id} = action.payload;\r\n\r\n            state.box = box;\r\n            state.id = id;\r\n            state.mode = 'edit';\r\n\r\n            return {...state}\r\n        }\r\n        case ADD_FRESHSALADS_BOX : {\r\n            const {item} = action.payload;\r\n\r\n            state[state.box].list.push(item);                                   \r\n            state[state.box].qty = state[state.box].qty + 1;\r\n            \r\n            // Add Choice\r\n            if (item in state[state.box].selected) {\r\n                state[state.box].selected[item] = state[state.box].selected[item] + 1;\r\n            }\r\n            else {\r\n                state[state.box].selected[item] = 1;\r\n            }\r\n\r\n            // Get Subtotal\r\n            const box_total = state[state.box].total;\r\n            state[state.box].total = roundTo(state[state.box].qty * state[state.box].price, 2);\r\n            const diff = state[state.box].total - box_total;\r\n\r\n            // Get Total\r\n            state.total = roundTo(state.total + diff, 2);\r\n\r\n            // Reset box, type, mode\r\n            state.box = null;\r\n            state.mode = null;\r\n\r\n            return {...state}\r\n        }\r\n        case UPDATE_FRESHSALADS_BOX : {\r\n            const {item} = action.payload;\r\n\r\n            // Decrement previous item\r\n\r\n\r\n            state[state.box].list[state.id] = item;\r\n\r\n            // Reset box, type, mode\r\n            state.box = null;\r\n            state.mode = null;\r\n\r\n            return {...state}\r\n        }\r\n        case REMOVE_FRESHSALADS_BOX: {\r\n            const {box, id} = action.payload;\r\n\r\n            state[box].list[id] = null;\r\n            state[box].qty = state[box].qty - 1;\r\n\r\n            // Subtotal\r\n            const box_total = state[box].total;\r\n            state[box].total = roundTo(state[box].qty * state[box].price, 2);\r\n            const diff = state[box].total - box_total;\r\n\r\n            // Get Total\r\n            state.total = roundTo(state.total + diff, 2);\r\n\r\n            return {...state}\r\n        }\r\n        case REMOVE_FRESHSALADS_CHOICE: {\r\n            const {type, key} = action.payload;\r\n\r\n            state[type].selected[key] = state[type].selected[key] - 1;\r\n            // if (state[type].selected[key] === 0) {\r\n            //     delete state[type].selected[key]\r\n            // }\r\n\r\n            // Subtotal\r\n            const box_total = state[type].total;\r\n            state[type].qty = state[type].qty - 1;\r\n            state[type].total = roundTo(state[type].qty * state[type].price, 2);\r\n            const diff = state[type].total - box_total;\r\n\r\n            // Get Total\r\n            state.total = roundTo(state.total + diff, 2);\r\n\r\n            return {...state}\r\n        }\r\n        case CLOSE_FRESHSALADS_BOX: {\r\n            state.box = null;\r\n            state.mode = null;\r\n\r\n            return {...state};\r\n        }\r\n        default :\r\n            return state;\r\n    }\r\n}","import { \r\n    UPDATE_COOKIE_QTY,\r\n    OPEN_COOKIE_BOX,\r\n    OPEN_EDIT_COOKIE_BOX,\r\n    CLOSE_COOKIE_BOX,\r\n    ADD_COOKIE_BOX,\r\n    UPDATE_COOKIE_BOX,\r\n    REMOVE_COOKIE_BOX\r\n} from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    items: {\r\n        choco: {name: \"Chocolate Chip\"}\r\n        //sugar: {name: \"Sugar Cookie\"}\r\n    },\r\n    box: null,\r\n    type: null,\r\n    mode: null,\r\n    id: null,\r\n    variety: {\r\n        name: \"Cookie Box\",\r\n        //description: \"Assorted full-size gourmet cookies, fresh-baked daily\",\r\n        description: \"Full-size gourmet chocolate chip cookies, fresh-baked daily\",\r\n        half: {\r\n            price: 10.49,\r\n            qty: 0,\r\n            total: 0,\r\n            list: []\r\n        },\r\n        dozen: {\r\n            price: 18.99,\r\n            qty: 0,\r\n            total: 0,\r\n            list: []\r\n        },\r\n        total: 0\r\n    },\r\n    sweet: {\r\n        name: \"Sweets & Coffee Break\",\r\n        description: \"\",\r\n        small: {\r\n            price: 36.99,\r\n            qty: 0,\r\n            total: 0,\r\n            list: []\r\n        },\r\n        large: {\r\n            price: 61.99,\r\n            qty: 0,\r\n            total: 0,\r\n            list: []\r\n        },\r\n        total: 0\r\n    },\r\n    kettle: {\r\n        name: \"Kettle Potato Chips\",\r\n        description: \"\",\r\n        single: {\r\n            name: '1 bag',\r\n            price: 1.00,\r\n            qty: 0,\r\n            total: 0,\r\n            list: []\r\n        },\r\n        small: {\r\n            name: '5 bags',\r\n            price: 4.99,\r\n            qty: 0,\r\n            total: 0,\r\n            list: []\r\n        },\r\n        large: {\r\n            name: '10 bags',\r\n            price: 9.99,\r\n            qty: 0,\r\n            total: 0,\r\n            list: []\r\n        },\r\n        items: {\r\n            sea: {name: 'Sea Salt'},\r\n            //bbq: {name: 'BBQ'},\r\n            layBake: {name: 'Lays Baked'}\r\n        },\r\n        total: 0\r\n    },\r\n    // kettle_small: {name: \"5 bags\", price: 4.99, qty: 0, total: 0},\r\n    // kettle_large: {name: \"10 bags\", price: 9.99, qty: 0, total: 0},\r\n    variety_half: {name: \"Half Dozen\", price: 10.49, qty:0, total:0, list: []},\r\n    variety_dozen: {name: \"Dozen\", price: 18.99, qty:0, total:0, list: []},\r\n    sweet_small: {name: \"Sweets & Coffee Break Small\", price: 36.99, qty: 0, total: 0, list: []},\r\n    sweet_large: {name: \"Sweets & Coffee Break Large\", price: 61.99, qty: 0, total: 0, list: []},\r\n    total: 0\r\n}\r\n\r\nconst roundTo = require('roundto');\r\n\r\nexport default function(state = initialState, action) {\r\n    switch (action.type) {\r\n        case UPDATE_COOKIE_QTY : {\r\n            const {name, qty} = action.payload;\r\n            const ex_total = state[name].total;\r\n            state[name].total = roundTo(state[name].price * qty, 2);\r\n            state[name].qty = qty;\r\n            \r\n            const diff = roundTo(state[name].total - ex_total, 2);\r\n            state.total = roundTo(state.total + diff, 2);\r\n\r\n            return {...state};\r\n        }\r\n        case OPEN_COOKIE_BOX : {\r\n            const {name, mode} = action.payload;\r\n            const [box, type] = name.split('_');\r\n\r\n            state.box = box;\r\n            state.type = type;\r\n            state.mode = mode;\r\n\r\n            return {...state};\r\n        }\r\n        case OPEN_EDIT_COOKIE_BOX : {\r\n            const {box, type, id} = action.payload;\r\n\r\n            state.box = box;\r\n            state.type = type;\r\n            state.id = id;\r\n            state.mode = 'edit';\r\n\r\n            return {...state}\r\n        }\r\n        case ADD_COOKIE_BOX : {\r\n            const {list} = action.payload;\r\n\r\n            state[state.box][state.type].list.push(list);                                   \r\n            state[state.box][state.type].qty = state[state.box][state.type].qty + 1;\r\n\r\n            // Get Subtotal\r\n            const box_total = state[state.box][state.type].total;\r\n            state[state.box][state.type].total = roundTo(state[state.box][state.type].qty * state[state.box][state.type].price, 2);\r\n            const diff = state[state.box][state.type].total - box_total;\r\n\r\n            // Get Total\r\n            state.total = roundTo(state.total + diff, 2);\r\n\r\n            // Reset box, type, mode\r\n            state.box = null;\r\n            state.type = null;\r\n            state.mode = null;\r\n\r\n            return {...state}\r\n        }\r\n        case UPDATE_COOKIE_BOX : {\r\n            const {list} = action.payload;\r\n\r\n            state[state.box][state.type].list[state.id] = list;\r\n\r\n            // Reset box, type, mode\r\n            state.box = null;\r\n            state.type = null;\r\n            state.mode = null;\r\n\r\n            return {...state}\r\n        }\r\n        case REMOVE_COOKIE_BOX: {\r\n            const {box, type, id} = action.payload;\r\n\r\n            state[box][type].list[id] = null;\r\n            state[box][type].qty = state[box][type].qty - 1;\r\n            \r\n            let new_list = [];\r\n            for (const id in state[box][type].list){\r\n                if (state[box][type].list[id] !== null){\r\n                    new_list.push(state[box][type].list[id])\r\n                }\r\n            }\r\n\r\n            state[box][type].list = new_list;\r\n\r\n            // Subtotal\r\n            const box_total = state[box][type].total;\r\n            state[box][type].total = roundTo(state[box][type].qty * state[box][type].price, 2);\r\n            const diff = state[box][type].total - box_total;\r\n\r\n            // Get Total\r\n            state.total = state.total + diff;\r\n\r\n            return {...state}\r\n        }\r\n        case CLOSE_COOKIE_BOX: {\r\n            state.box = null;\r\n            state.type = null;\r\n            state.mode = null;\r\n\r\n            return {...state};\r\n        }\r\n        default :\r\n            return state;\r\n    }\r\n}","import { \r\n    UPDATE_LUNCHSANDWICH_QTY,\r\n    OPEN_LUNCHSANDWICH_BOX,\r\n    OPEN_EDIT_LUNCHSANDWICH_BOX,\r\n    CLOSE_LUNCHSANDWICH_BOX,\r\n    ADD_LUNCHSANDWICH_BOX,\r\n    UPDATE_LUNCHSANDWICH_BOX,\r\n    REMOVE_LUNCHSANDWICH_BOX,\r\n    REMOVE_LUNCHSANDWICH_CHOICE,\r\n    ADD_LUNCHSANDWICH_LUNCHBOX,\r\n    UPDATE_LUNCHSANDWICH_LUNCHBOX,\r\n    REMOVE_LUNCHSANDWICH_LUNCHBOX\r\n} from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n\r\n    box: null,\r\n    type: null,\r\n    mode: null,\r\n    id: null,\r\n    signature: {\r\n        name: 'Signature Lunch Nosh Box',\r\n        items: {\r\n            turkey: {name: 'Tasty Turkey on Asiago Bagel'},\r\n            turkey_bacon: {name: 'Turkey, Bacon & Avocado on Plain Bagel', description: 'Roasted Turkey, Bacon, Avocado, Lettuce, Tomato with Roasted Tomato Spread on a Plain Bagel'},\r\n            avocado: {name: 'Avocado Veg Out on Sesame Bagel'},\r\n            ham_swiss: {name: 'Ham & Swiss on Plain Bagel'},\r\n            // harvest: {name: 'Harvest Chicken Salad'},\r\n            // albacore: {name: 'Albacore Tuna Salad on Wheat'},\r\n            // thintastic: {name: 'Thintastic Chicken Pesto on Plain Thintastic Bagel'}\r\n        },\r\n        full: {\r\n            price: 82.99,\r\n            qty: 0,\r\n            total: 0,\r\n            list: []\r\n        },\r\n        half: {\r\n            price: 45.99,\r\n            qty: 0,\r\n            total: 0,\r\n            list: []\r\n        }\r\n    },\r\n    classic: {\r\n        name: 'Classic Lunch Nosh Box',\r\n        items: {\r\n            turkey_cheddar: {name: 'Turkey & Cheddar on Plain Bagel'},\r\n            ham_swiss: {name: 'Ham & Swiss on Plain Bagel'},\r\n            // albacore: {name: 'Albacore Tuna Salad on Wheat'},\r\n            avocado: {name: 'Avocado Veg Out on Sesame Bagel'}\r\n        },\r\n        full: {\r\n            price: 79.99,\r\n            qty: 0,\r\n            total: 0,\r\n            list: []\r\n        },\r\n        half: {\r\n            price: 39.99,\r\n            qty: 0,\r\n            total: 0,\r\n            list: []\r\n        }\r\n    },\r\n    forGroup: {\r\n        price: 179.99,\r\n        qty: 0,\r\n        total: 0,\r\n        list: [],\r\n        items: {\r\n            sandwich: {\r\n                //Check length of string on render, if too long the string may render two lines on the page and look incorrect.\r\n                turkey_cheddar: {name: 'Turkey & Cheddar on Plain Bagel'},\r\n                ham_swiss: {name: 'Ham & Swiss on Plain Bagel'},\r\n                turkey: {name: 'Tasty Turkey on Asiago Bagel'},\r\n                turkey_bacon : {name: 'Turkey, Bacon, & Avocado on Ciabatta Bread'},\r\n                avocado: {name: 'Avocado Veg Out on Sesame Bagel'},\r\n                //albacore: {name: 'Albacore Tuna Salad on Wheat Bagel'},\r\n                //hummus: {name: 'Hummus Veg Out on Wheat Bagel'}\r\n            },\r\n            cookie: {\r\n                choco: {name: 'Chocolate Chip'},\r\n                //sugar: {name: 'Sugar Cookie'}\r\n            },\r\n            chip: {\r\n                bakedlays: {name: 'Baked Lays'},\r\n                kettleplain: {name: 'Kettle Plain Sea Salt'},\r\n                //kettlebbq: {name: 'Kettle BBQ'}\r\n            },\r\n            drink: {\r\n                coke: {name: 'Coke', price: 2.09, qty: 0, total: 0,},\r\n                diet_coke: {name: 'Diet Coke', price: 2.09, qty: 0, total: 0,},\r\n                dr_pepper: {name: 'Dr.Pepper', price: 2.09, qty: 0, total: 0,},\r\n                diet_dr_pepper: {name: 'Diet Dr.Pepper', price: 2.09, qty: 0, total: 0,},\r\n                sprite: {name: 'Sprite', price: 2.09, qty:0, total: 0,},\r\n                dasani: {name: 'Dasani Water', price: 1.69, qty: 0, total: 0,},\r\n                //cherry_coke: {name: 'Cherry Coke', price: 2.09, qty: 0, total: 0,},\r\n                coke_zero: {name: 'Coke Zero', price: 2.09, qty: 0, total: 0,},\r\n            }\r\n        }\r\n    },\r\n    lunchBox: {\r\n        //price: 9.49, //this price will no longer work because each choice/flavor below have various prices. Price has been moved to be a child of each choice/flavor.\r\n        qty: 0,\r\n        total: 0,\r\n        // these items are printed by LunchSandwiches.js and the unordered list section <ul className=\"summary-list-group\"> must be changed if these items below are changed. Change items that contain (this.props.lunchsandwich.lunchBox) to reflect item changes below.\r\n        turkey: {name: 'Turkey & Cheddar', description: 'Roasted Turkey, Cheddar Cheese, Lettuce, Tomato with Mayo & Mustard on a Plain Bagel', price: 9.49, qty: 0, total: 0, list: []},\r\n        harvest: {name: 'Harvest Chicken Salad', description: 'Grilled Chicken Breast, Celery, Lettuce, Tomato, Red Onion with Mayo on a Fresh-Baked Wheat Bagel', price: 9.49, qty: 0, total: 0, list: []},\r\n        ham: {name: 'Ham & Swiss', description: 'Smoked Ham, Lettuce, Tomato, Red Onion, Swiss Cheese, Mayonnaise & Mustard on a Plain Bagel', price: 9.49, qty: 0, total: 0, list: []},\r\n        // albacore: {name: 'Albacore Tuna Salad', description: 'Albacore Tuna, Celery, Lettuce, Tomato, Red Onion, with Mayo on a Fresh-Baked Wheat Bagel', price: 9.49, qty: 0, total: 0, list: []},\r\n        tasty: {name: 'Tasty Turkey', description: 'Roasted Turkey, Spinach, Cucumber, Lettuce, Tomato with Onion & Chive Shmear on an Asiago Bagel', price: 9.49, qty: 0, total: 0, list: []},\r\n        avocado: {name: 'Avocado Veg Out', description: 'Avocado, Tomato, Lettuce, Spinach, Cucumbers, Red Onions with Garden Veggie Shmear on a Sesame Seed Bagel', price: 9.49, qty: 0, total: 0, list: []},\r\n        green: {name: 'Green Chile Club', description: 'Roasted Turkey, Applewood Bacon, Lettuce, Tomato, Red Onion, Cheddar Cheese with Mayo, on Green Chile Gourmet Bagel', price: 9.49, qty: 0, total: 0, list: []},\r\n        nova: {name: 'Nova Lox', description: 'Nova Lox, Red Onion, Capers, Tomato with Plain Shmear on a Plain Bagel', price: 9.99, qty: 0, total: 0, list: []},\r\n        chips: {\r\n            sea: {name: 'Sea Salt'},\r\n            //bbq: {name: 'BBQ'},\r\n            layBake: {name: 'Lays Baked'}\r\n        },\r\n        cookie: {\r\n            choco: {name: 'Chocolate Chip'},\r\n            //sugar: {name: 'Sugar Cookie'}\r\n        }\r\n    },\r\n    // nova_lox: {name: 'Nova Lox', description: 'Nova Lox, Red Onion, Capers, Tomato with Plain Shmear on a Plain Bagel', price: 9.99, total: 0, qty: 0},\r\n    total: 0\r\n}\r\n\r\nconst roundTo = require('roundto');\r\n\r\nexport default function(state = initialState, action) {\r\n    switch (action.type) {\r\n        case UPDATE_LUNCHSANDWICH_QTY : {\r\n            const {name, qty} = action.payload;\r\n\r\n            // Get total\r\n            const subtotal = state[name].total;\r\n            \r\n            state[name].total = roundTo(state[name].price * qty, 2);\r\n            state[name].qty = qty;\r\n\r\n            const diff = state[name].total - subtotal;\r\n\r\n            state.total = roundTo(state.total + diff, 2);            \r\n\r\n            return {...state};\r\n        }\r\n        case OPEN_LUNCHSANDWICH_BOX : {\r\n            const {name, mode} = action.payload;\r\n            const [box, type] = name.split('_');\r\n\r\n            state.box = box;\r\n            state.type = (type === 'null' ? null : type);\r\n            state.mode = mode;\r\n\r\n            return {...state};\r\n        }\r\n        case OPEN_EDIT_LUNCHSANDWICH_BOX : {\r\n            const {box, type, id} = action.payload;\r\n\r\n            state.box = box;\r\n            state.type = type;\r\n            state.id = id;\r\n            state.mode = 'edit';\r\n\r\n            return {...state}\r\n        }\r\n        case ADD_LUNCHSANDWICH_BOX : {\r\n            const {item, box} = action.payload;\r\n            let box_total = 0;\r\n            let diff = 0;\r\n\r\n            console.log(box);\r\n            if (state.box === 'forGroup'){\r\n                state.forGroup.list.push(item);\r\n                state.forGroup.qty = state.forGroup.qty + 1;\r\n\r\n                // Get Subtotal\r\n                box_total = state.forGroup.total;\r\n                state.forGroup.total = roundTo(state.forGroup.qty * state.forGroup.price, 2);\r\n                diff = state.forGroup.total - box_total;\r\n            }\r\n            else if (state.box === 'lunchBox'){\r\n                if (item in state.lunchBox[state.type].list) {\r\n                    state.lunchBox[state.type].list[item] = state.lunchBox[state.type].list[item] + 1;\r\n                }\r\n                else {\r\n                    state.lunchBox[state.type].list[item] = 1;\r\n                }\r\n                state.lunchBox[state.type].qty = state.lunchBox[state.type].qty + 1;\r\n                state.lunchBox[state.type].total = roundTo(state.lunchBox[state.type].price*state.lunchBox[state.type].qty, 2);\r\n                state.lunchBox.qty = state.lunchBox.qty + 1;\r\n                \r\n                state.lunchBox.total = roundTo(state.lunchBox.total + state.lunchBox[state.type].price, 2);\r\n                diff = state.lunchBox[state.type].price;\r\n            }\r\n             else {\r\n                state[state.box][state.type].list.push(item);                                   \r\n                state[state.box][state.type].qty = state[state.box][state.type].qty + 1;\r\n\r\n                // Get Subtotal\r\n                box_total = state[state.box][state.type].total;\r\n                state[state.box][state.type].total = roundTo(state[state.box][state.type].qty * state[state.box][state.type].price, 2);\r\n                diff = state[state.box][state.type].total - box_total;\r\n             }\r\n\r\n            // Get Total\r\n            state.total = roundTo(state.total + diff, 2);\r\n\r\n            // Reset box, type, mode\r\n            state.box = null;\r\n            state.type = null;\r\n            state.mode = null;\r\n\r\n            return {...state}\r\n        }\r\n        case UPDATE_LUNCHSANDWICH_BOX : {\r\n            const {item, box} = action.payload;\r\n\r\n            // Decrement previous item\r\n\r\n        \r\n            if (state.box === 'forGroup') {\r\n                state.forGroup.list[state.id] = item;\r\n            } else {\r\n            state[box].list[state.id] = item;\r\n            }\r\n\r\n            // Reset box, type, mode\r\n            state.box = null;\r\n            state.type = null;\r\n            state.mode = null;\r\n\r\n            return {...state}\r\n        }\r\n        case REMOVE_LUNCHSANDWICH_BOX: {\r\n            const {box, type, id} = action.payload;\r\n\r\n            let box_total = 0;\r\n            let diff = 0;\r\n\r\n            if (box === 'forGroup'){\r\n\r\n                state.forGroup.list[id] = null;\r\n                state.forGroup.list = state.forGroup.list.filter(function (box) {\r\n                    return box != null\r\n                })\r\n                state.forGroup.qty = state.forGroup.qty - 1;\r\n\r\n                // Subtotal\r\n                box_total = state.forGroup.total;\r\n                state.forGroup.total = roundTo(state.forGroup.qty * state.forGroup.price, 2);\r\n                diff = state.forGroup.total - box_total;\r\n\r\n            }\r\n            else {\r\n\r\n                state[box][type].list[id] = null;\r\n                state[box][type].list = state[box][type].list.filter(function (box) {\r\n                    return box != null\r\n                })\r\n                state[box][type].qty = state[box][type].qty - 1;\r\n\r\n                // Subtotal\r\n                box_total = state[box][type].total;\r\n                state[box][type].total = roundTo(state[box][type].qty * state[box][type].price, 2);\r\n                diff = state[box][type].total - box_total;\r\n\r\n            }\r\n\r\n            // Get Total\r\n            state.total = roundTo(state.total + diff, 2);\r\n\r\n            return {...state}\r\n        }\r\n        case REMOVE_LUNCHSANDWICH_CHOICE: {\r\n            const {sandwich, cookie} = action.payload;\r\n\r\n            state.lunchBox[sandwich].list[cookie] = state.lunchBox[sandwich].list[cookie] - 1;\r\n            if (state.lunchBox[sandwich].list[cookie] === 0) {\r\n                // delete state.lunchBox[sandwich].list[cookie]\r\n                let new_list = {}\r\n                for (let key in state.lunchBox[sandwich].list){\r\n                    if (state.lunchBox[sandwich].list[key] !== 0){\r\n                        new_list[key] = state.lunchBox[sandwich].list[key]\r\n                    }\r\n                }\r\n                state.lunchBox[sandwich].list = new_list;\r\n            }\r\n\r\n            // Subtotal\r\n            state.lunchBox[sandwich].qty = state.lunchBox[sandwich].qty - 1;\r\n            state.lunchBox.qty = state.lunchBox.qty - 1;\r\n            state.lunchBox.total = roundTo(state.lunchBox.total - state.lunchBox[sandwich].price, 2)\r\n            state.total = roundTo(state.total - state.lunchBox[sandwich].price, 2)\r\n\r\n            return {...state}\r\n        }\r\n        case CLOSE_LUNCHSANDWICH_BOX: {\r\n            state.box = null;\r\n            state.type = null;\r\n            state.mode = null;\r\n\r\n            return {...state};\r\n        }\r\n        case ADD_LUNCHSANDWICH_LUNCHBOX: {\r\n            const {item} = action.payload;\r\n            let box_total = 0;\r\n            let diff = 0;\r\n\r\n            state.lunchBox[state.type].list.push(item);\r\n            state.lunchBox[state.type].qty = state.lunchBox[state.type].qty + 1;\r\n            state.lunchBox[state.type].total = state.lunchBox[state.type].qty * state.lunchBox[state.type].price; //had to add [state.type] here to get right price because of price differences between items. Price is now a prop of lunchbox.type (or lunchbox[state.type]) not lunchbox\r\n\r\n            // Get Subtotal\r\n            box_total = state.lunchBox.total;\r\n            state.lunchBox.qty = state.lunchBox.qty + 1;\r\n            state.lunchBox.total = roundTo(state.lunchBox.total + state.lunchBox[state.type].price, 2);\r\n            // state.lunchBox.total = roundTo(state.lunchBox.qty * state.lunchBox[state.type].price, 2); //had to add [state.type] here to get right price because of price differences between items. Price is now a prop of lunchbox.type (or lunchbox[state.type]) not lunchbox\r\n            diff = state.lunchBox.total - box_total;\r\n            \r\n            // Get Total\r\n            state.total = roundTo(state.total + diff, 2);\r\n\r\n            // Reset box, type, mode\r\n            state.box = null;\r\n            state.type = null;\r\n            state.mode = null;\r\n\r\n            return {...state}\r\n        }\r\n        case UPDATE_LUNCHSANDWICH_LUNCHBOX: {\r\n            const {item} = action.payload;\r\n\r\n            state.lunchBox[state.type].list[state.id] = item;\r\n\r\n            // Reset box, type, mode\r\n            state.box = null;\r\n            state.type = null;\r\n            state.mode = null;\r\n\r\n            return {...state}\r\n        }\r\n        case REMOVE_LUNCHSANDWICH_LUNCHBOX: {\r\n            const {sandwich, id} = action.payload;\r\n\r\n            let new_list = [];\r\n            state.lunchBox[sandwich].list[id] = null;\r\n            for (const list_id in state.lunchBox[sandwich].list){\r\n                if (state.lunchBox[sandwich].list[list_id] !== null){\r\n                    new_list.push(state.lunchBox[sandwich].list[list_id])\r\n                }\r\n            }\r\n            state.lunchBox[sandwich].list = new_list;\r\n\r\n            state.lunchBox[sandwich].qty = state.lunchBox[sandwich].qty - 1;\r\n            state.lunchBox[sandwich].total = state.lunchBox[sandwich].qty * state.lunchBox[sandwich].price;\r\n\r\n            let box_total = 0;\r\n            let diff = 0;\r\n            // Get Subtotal\r\n            box_total = state.lunchBox.total;\r\n            state.lunchBox.qty = state.lunchBox.qty - 1;\r\n            state.lunchBox.total = roundTo(state.lunchBox.total - state.lunchBox[sandwich].price, 2);\r\n            // state.lunchBox.total = roundTo(state.lunchBox.qty * state.lunchBox[sandwich].price, 2);\r\n            diff = state.lunchBox.total - box_total;\r\n\r\n            // Get Total\r\n            state.total = roundTo(state.total + diff, 2);\r\n\r\n            return {...state}\r\n        }\r\n        default :\r\n            return state;\r\n    }\r\n}","import { combineReducers } from \"redux\";\r\nimport main from \"./main\";\r\nimport bagelandsheamr from \"./bagelandsheamr_reducer\";\r\nimport egg_sandwich from \"./egg_sandwiches_reducer\";\r\nimport bk_fav_reducer from \"./bk_fav_reducer\";\r\nimport sweet_snack from \"./sweet_snack_reducer\";\r\nimport beverage from \"./beverage\";\r\nimport fresh_salads from \"./fresh_salads_reducer\";\r\nimport cookie from \"./cookie_reducer\";\r\nimport lunchsandwich from \"./lunchsandwich_reducer\";\r\n\r\nexport default combineReducers({ main, bagelandsheamr, egg_sandwich, bk_fav_reducer, sweet_snack, beverage, fresh_salads, cookie, lunchsandwich });","export const UPDATE_CURRENT_NAV = \"UPDATE_CURRENT_NAV\";\r\nexport const CALCULATE_SUBTOTAL = \"CALCULATE_SUBTOTAL\";\r\nexport const SUBMIT_ORDER = \"SUBMIT_ORDER\";\r\nexport const SUBMIT_SUCCESS = \"SUBMIT_SUCCESS\";\r\nexport const SUBMIT_FAILURE = \"SUBMIT_FAILURE\";\r\nexport const GET_DELIVERY_METHOD = \"GET_DELIVERY_METHOD\";\r\nexport const GET_DELIVERY_METHOD_FAILURE = \"GET_DELIVERY_METHOD_FAILURE\";\r\nexport const ADDITIONAL_NOTE = \"ADDITIONAL_NOTE\";\r\n\r\n// Bagel & Sheamr\r\nexport const UPDATE_BAGEL_SHEAMR_QTY = \"UPDATE_BAGEL_SHEAMR_QTY\";\r\nexport const OPEN_BAGEL_SHEAMR_CHOICE = \"OPEN_BAGEL_SHEAMR_CHOICE\";\r\nexport const OPEN_EDIT_BAGEL_SHEAMR_CHOICE = \"OPEN_EDIT_BAGEL_SHEAMR_CHOICE\";\r\nexport const CLOSE_BAGEL_SHEAMR_CHOICE = \"CLOSE_BAGEL_SHEAMR_CHOICE\";\r\nexport const ADD_BAGEL_SHEAMR_CHOICE = \"ADD_BAGEL_SHEAMR_CHOICE\";\r\nexport const UPDATE_BAGEL_SHEAMR_CHOICE = \"UPDATE_BAGEL_SHEAMR_CHOICE\";\r\nexport const REMOVE_BAGEL_SHEAMR_CHOICE = \"REMOVE_BAGEL_SHEAMR_CHOICE\";\r\n\r\n// Egg Sandwiches\r\nexport const OPEN_EGG_SANDWICH_BOX = \"OPEN_EGG_SANDWICH_BOX\";\r\nexport const OPEN_EDIT_EGG_SANDWICH_BOX = \"OPEN_EDIT_EGG_SANDWICH_BOX\";\r\nexport const CLOSE_EGG_SANDWICH_BOX = \"CLOSE_EGG_SANDWICH_BOX\";\r\nexport const ADD_EGG_SANDWICH_BOX = \"ADD_EGG_SANDWICH_BOX\";\r\nexport const UPDATE_EGG_SANDWICH_BOX = \"UPDATE_EGG_SANDWICH_BOX\";\r\nexport const REMOVE_EGG_SANDWICH_BOX = \"REMOVE_EGG_SANDWICH_BOX\";\r\n\r\n// Breakfast Favorites\r\nexport const UPDATE_BK_QTY = \"UPDATE_BK_QTY\";\r\nexport const OPEN_BK_BOX = \"OPEN_BK_BOX\";\r\nexport const OPEN_EDIT_BK_BOX = \"OPEN_EDIT_BK_BOX\";\r\nexport const CLOSE_BK_BOX = \"CLOSE_BK_BOX\";\r\nexport const ADD_BK_BOX = \"ADD_BK_BOX\";\r\nexport const UPDATE_BK_BOX = \"UPDATE_BK_BOX\";\r\nexport const REMOVE_BK_BOX = \"REMOVE_BK_BOX\";\r\nexport const ADD_BK_PASTRY = \"ADD_LUNCHSANDWICH_PASTRY\";\r\nexport const UPDATE_BK_PASTRY = \"UPDATE_BK_PASTRY\";\r\nexport const CLOSE_BK_PASTRY = \"CLOSE_BK_PASTRY\";\r\nexport const REMOVE_BK_PASTRY = \"REMOVE_BK_PASTRY\";\r\n\r\n\r\n// Sweets & Snacks\r\nexport const UPDATE_SWEETSNACK_QTY = \"UPDATE_SWEETSNACK_QTY\";\r\nexport const OPEN_SWEETSNACK_BOX = \"OPEN_SWEETSNACK_BOX\";\r\nexport const OPEN_EDIT_SWEETSNACK_BOX = \"OPEN_EDIT_SWEETSNACK_BOX\";\r\nexport const CLOSE_SWEETSNACK_BOX = \"CLOSE_SWEETSNACK_BOX\";\r\nexport const ADD_SWEETSNACK_BOX = \"ADD_SWEETSNACK_BOX\";\r\nexport const UPDATE_SWEETSNACK_BOX = \"UPDATE_SWEETSNACK_BOX\";\r\nexport const REMOVE_SWEETSNACK_BOX = \"REMOVE_SWEETSNACK_BOX\";\r\n\r\n// Beverage\r\nexport const UPDATE_BEVERAGE_QTY = \"UPDATE_BEVERAGE_QTY\";\r\n\r\n// Fresh Salads\r\nexport const UPDATE_FRESHSALADS_QTY = \"UPDATE_FRESHSALADS_QTY\";\r\nexport const OPEN_FRESHSALADS_BOX = \"OPEN_FRESHSALADS_BOX\";\r\nexport const OPEN_EDIT_FRESHSALADS_BOX = \"OPEN_EDIT_FRESHSALADS_BOX\";\r\nexport const CLOSE_FRESHSALADS_BOX = \"CLOSE_FRESHSALADS_BOX\";\r\nexport const ADD_FRESHSALADS_BOX = \"ADD_FRESHSALADS_BOX\";\r\nexport const UPDATE_FRESHSALADS_BOX = \"UPDATE_FRESHSALADS_BOX\";\r\nexport const REMOVE_FRESHSALADS_BOX = \"REMOVE_FRESHSALADS_BOX\";\r\nexport const REMOVE_FRESHSALADS_CHOICE = \"REMOVE_FRESHSALADS_CHOICE\";\r\n\r\n// Cookies\r\nexport const UPDATE_COOKIE_QTY = \"UPDATE_COOKIE_QTY\";\r\nexport const OPEN_COOKIE_BOX = \"OPEN_COOKIE_BOX\";\r\nexport const OPEN_EDIT_COOKIE_BOX = \"OPEN_EDIT_COOKIE_BOX\";\r\nexport const CLOSE_COOKIE_BOX = \"CLOSE_COOKIE_BOX\";\r\nexport const ADD_COOKIE_BOX = \"ADD_COOKIE_BOX\";\r\nexport const UPDATE_COOKIE_BOX = \"UPDATE_COOKIE_BOX\";\r\nexport const REMOVE_COOKIE_BOX = \"REMOVE_COOKIE_BOX\";\r\nexport const REMOVE_COOKIE_CHOICE = \"REMOVE_COOKIE_CHOICE\";\r\nexport const ADD_KETTLE_CHIP = \"ADD_KETTLE_CHIP\";\r\nexport const UPDATE_KETTLE_CHIP = \"UPDATE_KETTLE_CHIP\";\r\nexport const CLOSE_KETTLE_CHIP = \"CLOSE_KETTLE_CHIP\";\r\nexport const REMOVE_KETTLE_CHIP = \"REMOVE_KETTLE_CHIP\";\r\n\r\n// Lunch Sandwich\r\nexport const UPDATE_LUNCHSANDWICH_QTY = \"UPDATE_LUNCHSANDWICH_QTY\";\r\nexport const OPEN_LUNCHSANDWICH_BOX = \"OPEN_LUNCHSANDWICH_BOX\";\r\nexport const OPEN_EDIT_LUNCHSANDWICH_BOX = \"OPEN_EDIT_LUNCHSANDWICH_BOX\";\r\nexport const CLOSE_LUNCHSANDWICH_BOX = \"CLOSE_LUNCHSANDWICH_BOX\";\r\nexport const ADD_LUNCHSANDWICH_BOX = \"ADD_LUNCHSANDWICH_BOX\";\r\nexport const UPDATE_LUNCHSANDWICH_BOX = \"UPDATE_LUNCHSANDWICH_BOX\";\r\nexport const REMOVE_LUNCHSANDWICH_BOX = \"REMOVE_LUNCHSANDWICH_BOX\";\r\nexport const REMOVE_LUNCHSANDWICH_CHOICE = \"REMOVE_LUNCHSANDWICH_CHOICE\";\r\nexport const ADD_LUNCHSANDWICH_LUNCHBOX = \"ADD_LUNCHSANDWICH_LUNCHBOX\";\r\nexport const UPDATE_LUNCHSANDWICH_LUNCHBOX = \"UPDATE_LUNCHSANDWICH_LUNCHBOX\";\r\nexport const REMOVE_LUNCHSANDWICH_LUNCHBOX = \"REMOVE_LUNCHSANDWICH_LUNCHBOX\";\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport thunkMiddleware  from 'redux-thunk';\r\nimport rootReducer from \"./reducers\";\r\n\r\nexport default createStore( rootReducer, applyMiddleware( thunkMiddleware ));","import React from 'react';\r\n\r\nclass NumberInput extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            value: parseInt(this.props.value)\r\n        }\r\n    }\r\n\r\n    increase = () => {\r\n        this.setState({\r\n            value: this.state.value + 1\r\n        }, function() {\r\n            const result = this.props.onChange(this.props.name, this.state.value);\r\n            if (result === 'error'){\r\n                this.setState({\r\n                    value: this.state.value - 1\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    decrease = () => {\r\n        if (this.state.value-1 >= 0) {\r\n            this.setState({\r\n                value: this.state.value - 1\r\n            }, function() {\r\n                this.props.onChange(this.props.name, this.state.value)\r\n            })\r\n        }\r\n    }\r\n\r\n    onChangeHandler = (event) => {\r\n        const target = event.target;\r\n        const value = target.value;\r\n        this.setState({\r\n            value: parseInt(value)\r\n        }, function() {\r\n            this.props.onChange(this.props.name, this.state.value)\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"def-number-input number-input\" style={this.props.style}>\r\n                {\r\n                    !this.props.noleft ?\r\n                    <button className=\"minus\" onClick={this.decrease}></button> :\r\n                    <button className=\"minus disabled\"></button>\r\n                }\r\n                <input className={'quantity ' + (this.props.readonly ? 'input-readonly' : '')} name={this.props.name}\r\n                min={0}\r\n                value={this.props.value}\r\n                onChange={this.onChangeHandler.bind(this)}\r\n                type=\"number\"\r\n                readOnly={this.props.readonly ? true : false} />\r\n                {\r\n                    !this.props.noright ?\r\n                    <button className=\"plus\" onClick={this.increase}></button> :\r\n                    <button className=\"plus disabled\"></button>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NumberInput;","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n    Link\r\n} from 'react-router-dom';\r\n\r\nimport { Row } from 'react-bootstrap';\r\n\r\nimport { AiOutlineShoppingCart } from \"react-icons/ai\";\r\n\r\n// import ArrowLeft from '../../img/arrow_left.png';\r\n\r\nclass TopNav extends React.Component {\r\n\r\n    render() {\r\n        return(\r\n            <React.Fragment>\r\n                <Row className=\"m-0\">\r\n                    <Link\r\n                    to=\"/bagelandshmear\"\r\n                    className={'topnav col ' + (this.props.global.main.nav === 0 ? 'active' : '')}\r\n                    >\r\n                        <p><u>Bagels &<br /> Shmear</u></p>\r\n                    </Link>\r\n                    <Link\r\n                    to=\"/eggsandwich\"\r\n                    className={'topnav col ' + (this.props.global.main.nav === 1 ? 'active' : '')}\r\n                    >\r\n                        <p><u>Egg<br />Sandwiches</u></p>\r\n                    </Link>\r\n                    <Link\r\n                    to=\"/breakfastfavorites\"\r\n                    className={'topnav col ' + (this.props.global.main.nav === 2 ? 'active' : '')}\r\n                    >\r\n                        <p><u>Breakfast<br />Favorites</u></p>\r\n                    </Link>\r\n                    <Link\r\n                    to=\"/sweetsnack\"\r\n                    className={'topnav col ' + (this.props.global.main.nav === 3 ? 'active' : '')}\r\n                    >\r\n                        <p><u>Sweets &<br />Snacks</u></p>\r\n                    </Link>\r\n                    <Link\r\n                    to=\"/beverage\"\r\n                    className={'topnav col ' + (this.props.global.main.nav === 4 ? 'active' : '')}\r\n                    >\r\n                        <p><u>Beverages</u></p>\r\n                    </Link>\r\n                    <Link\r\n                    to=\"/freshsalads\"\r\n                    className={'topnav col ' + (this.props.global.main.nav === 5 ? 'active' : '')}\r\n                    >\r\n                        <p><u>Fresh<br />Salads</u></p>\r\n                    </Link>\r\n                    <Link\r\n                    to=\"/cookies\"\r\n                    className={'topnav col ' + (this.props.global.main.nav === 6 ? 'active' : '')}\r\n                    >\r\n                        <p><u>Cookies</u></p>\r\n                    </Link>\r\n                    <Link\r\n                    to=\"/lunchsandwich\"\r\n                    className={'topnav col ' + (this.props.global.main.nav === 7 ? 'active' : '')}\r\n                    >\r\n                        <p><u>Lunch<br />Sandwiches</u></p>\r\n                    </Link>\r\n                    <Link\r\n                    to=\"/summary\"\r\n                    className={'topnav col ' + (this.props.global.main.nav === 8 ? 'active' : '')}\r\n                    >\r\n                        <p><u><AiOutlineShoppingCart style={{fontSize: '25px', marginTop: '13px'}} /></u></p>\r\n                    </Link>\r\n                </Row>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    global: state\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps\r\n)(TopNav)","import { \r\n    UPDATE_CURRENT_NAV, \r\n    SUBMIT_ORDER, \r\n    CALCULATE_SUBTOTAL,\r\n    SUBMIT_SUCCESS,\r\n    SUBMIT_FAILURE,\r\n    GET_DELIVERY_METHOD,\r\n    GET_DELIVERY_METHOD_FAILURE,\r\n    ADDITIONAL_NOTE\r\n} from './actionTypes.js'\r\n\r\nexport const updateCurrentNav = (index) => ({\r\n    type: UPDATE_CURRENT_NAV,\r\n    payload: {\r\n        index\r\n    }\r\n})\r\n\r\nexport const calculateSubtotal = (subtotal, tax, total) => ({\r\n    type: CALCULATE_SUBTOTAL,\r\n    payload: {\r\n        subtotal, tax, total\r\n    }\r\n})\r\n\r\nexport const initSubmitOrder = () => ({\r\n    type: SUBMIT_ORDER\r\n})\r\n\r\nexport const formValidationFailure = () => ({\r\n\r\n})\r\n\r\nexport const formSubmitSuccess = (id, email) => ({\r\n    type: SUBMIT_SUCCESS,\r\n    payload: {\r\n        id, email\r\n    }\r\n})\r\n\r\nexport const formSubmitFailure = (code) => ({\r\n    type: SUBMIT_FAILURE,\r\n    payload: {\r\n        code\r\n    }\r\n})\r\n\r\nexport function submitOrder(data) {\r\n    return (dispatch) => {\r\n        dispatch(initSubmitOrder());\r\n\r\n        // Validate Form\r\n\r\n        let error = false;\r\n\r\n        if (error){\r\n            dispatch(formValidationFailure());\r\n        }\r\n        else {\r\n            // console.log(data);\r\n            const fetch_option = {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(data)\r\n            }\r\n\r\n            // const url = 'http://192.168.99.100/api/catering/retail/catalyst/submit';\r\n            const url = '/api/catering/retail/einsteins/submit';\r\n\r\n            fetch(url, fetch_option)\r\n            .then((res) => {\r\n                // console.log(res);\r\n                if(res.ok) {\r\n                    return res.json();\r\n                } else {\r\n                    // console.log(res);\r\n                    throw new Error('An error occurred.');\r\n                }\r\n            })\r\n            .then(res => {\r\n                // console.log('return', res.return);\r\n                if (res.success){\r\n                    dispatch(formSubmitSuccess(res.return.order_id, res.return.email));\r\n                }\r\n                else {\r\n                    dispatch(formSubmitFailure(res.return.code));\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n                // dispatch(formSubmitFailure(err));\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport function getDeliveryMethod() {\r\n    return (dispatch) => {\r\n        const fetch_option = {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json'\r\n            }\r\n        }\r\n\r\n        // const url = 'http://192.168.99.100/catering/retail/customer_info/getDeliveryMethod';\r\n        const url = '/api/catering/retail/customer_info/getDeliveryMethod';\r\n\r\n        fetch(url, fetch_option)\r\n        .then((res) => {\r\n            if(res.ok) {\r\n                return res.json();\r\n            } else {\r\n                // console.log(res);\r\n                throw new Error('An error occurred.');\r\n            }\r\n        })\r\n        .then(res => {\r\n            // console.log('return', res.return);\r\n            dispatch(getDeliveryMethodSuccess(res.return.delivery_method));\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n            dispatch(getDeliveryMethodFailure(err));\r\n        })\r\n    }\r\n}\r\n\r\nexport const getDeliveryMethodSuccess = (delivery_method) => ({\r\n    type: GET_DELIVERY_METHOD,\r\n    payload: {\r\n        delivery_method\r\n    }\r\n})\r\n\r\nexport const getDeliveryMethodFailure = (err) => ({\r\n    type: GET_DELIVERY_METHOD_FAILURE,\r\n    payload: {\r\n        err\r\n    }\r\n})\r\n\r\nexport const handleTextarea = (text) => ({\r\n    type: ADDITIONAL_NOTE,\r\n    payload: text\r\n})","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from 'react-router-dom';\r\nimport { Row, Col, ButtonToolbar } from 'react-bootstrap';\r\n\r\nimport { updateCurrentNav } from '../redux/actions/main';\r\n\r\nconst roundTo = require('roundto');\r\n\r\nclass Bottom extends React.Component {\r\n\r\n    getTotal = () => {\r\n        return roundTo(\r\n                this.props.global.bagelandsheamr.total +\r\n                this.props.global.egg_sandwich.total +\r\n                this.props.global.bk_fav_reducer.total +\r\n                this.props.global.sweet_snack.total + \r\n                this.props.global.beverage.total + \r\n                this.props.global.fresh_salads.total + \r\n                this.props.global.cookie.total +\r\n                this.props.global.lunchsandwich.total\r\n                , 2\r\n            );\r\n    }\r\n\r\n    render() {\r\n\r\n        const navIndex = this.props.global.main.nav;\r\n        const routes = this.props.global.main.routes;\r\n\r\n        return(\r\n            <React.Fragment>\r\n                <Row>\r\n                    <Col>\r\n                        <p style={{fontSize: '22px', fontWeight: '600', textAlign: 'right', padding: '20px 15px'}}>Subtotal ${this.getTotal()}</p>\r\n                    </Col>\r\n                </Row>\r\n                <ButtonToolbar>\r\n\r\n                    {\r\n                        (navIndex !== 0 && navIndex !== 8) ?\r\n                        <Link\r\n                        className={\"btn add-btn\"}\r\n                        style={{marginRight: '10px', width: '200px'}}\r\n                        to={routes[navIndex-1]}\r\n                        >Prev</Link>\r\n                        :\r\n                        null\r\n                    }\r\n\r\n                    {\r\n                        navIndex !== 8 ? \r\n                        <Link\r\n                        className={\"btn add-btn\"}\r\n                        style={{marginLeft: 'auto', width:'200px'}}\r\n                        to={routes[navIndex+1]}\r\n                        >Next</Link>\r\n                        :\r\n                        <Link\r\n                        className={\"btn add-btn\"}\r\n                        style={{marginLeft: 'auto', width:'150px'}}\r\n                        to={routes[0]}\r\n                        >Add More Food</Link>\r\n                    }\r\n\r\n                </ButtonToolbar>\r\n\r\n                {/* <ButtonToolbar style={{marginTop: '15px'}}>\r\n                    {\r\n                        navIndex !== 5 ?\r\n                        <Link\r\n                        className={\"btn add-btn\"}\r\n                        style={{width:'100%'}}\r\n                        to={routes[5]}\r\n                        >Review Order</Link>\r\n                        :\r\n                        null\r\n                    }\r\n                </ButtonToolbar> */}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    global: state\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => (\r\n    {\r\n        updateCurrentNav: (index) => dispatch(updateCurrentNav(index))\r\n    }\r\n)\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Bottom)","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Row, Col, Card, ListGroup, ButtonToolbar, Button } from 'react-bootstrap';\r\nimport NumberInput from '../common/numberInput.js';\r\n\r\nimport { addBox, closeBox, updateBox } from '../../redux/actions/bagelandsheamr_action';\r\n\r\nclass Choice extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        let list = {\r\n            bagel: {},\r\n            whip: {}\r\n        };\r\n        if (this.props.bagel_shmear.mode === 'add'){ \r\n            for (let key in this.props.bagel_shmear.bagel){ list.bagel[key] = 0; }\r\n            for (let key in this.props.bagel_shmear.whip){ list.whip[key] = 0; }\r\n        }\r\n        else {\r\n            list = this.props.bagel_shmear[this.props.bagel_shmear.box].list[this.props.bagel_shmear.id];\r\n        }\r\n        \r\n        this.state = {\r\n            \r\n        \r\n\r\n            list: list,\r\n            bagel_qty: (this.props.bagel_shmear.mode === 'edit' ? (this.props.box === 'baker_dozen' ? 13 : (this.props.box === 'half_dozen' ? 6 : 24)) : 0),\r\n            bagel_err: false,\r\n            bagel_max: (this.props.box === 'baker_dozen' ? 13 : (this.props.box === 'half_dozen' ? 6 : (this.props.box === 'nosh_box' ? 24 : 0))),\r\n            whip_qty: (this.props.bagel_shmear.mode === 'edit' ? (this.props.box === 'baker_dozen' ? 2 : (this.props.box === 'nosh_box' ? 4 : 1)) : 0),\r\n            whip_err: false,\r\n            whip_max: (this.props.box === 'baker_dozen' ? 2 : (this.props.box === 'nosh_box' ? 4 : 1)),\r\n\r\n\r\n            sandwich_qty: 0,\r\n            cookie_qty: 0,\r\n            chip_qty: 0,\r\n            drink_qty: 0,\r\n            error: false,\r\n            sandwich_err: false,\r\n            cookie_err: false,\r\n            chip_err: false,\r\n            drink_err: false,\r\n            error_msg: '',\r\n            // max_bagel: (this.props.box === 'baker_dozen' ? 13 : 24),\r\n            // max_whip: (this.props.box === 'baker_dozen' ? 2 : 4)\r\n        }\r\n    }\r\n\r\n    checkQty = (type, name, qty) => {\r\n        let tmp_qty = 0;\r\n        for (let key in this.state.list[type]){\r\n            if (key !== name){\r\n                tmp_qty = tmp_qty + this.state.list[type][key];\r\n            }\r\n            else {\r\n                tmp_qty = tmp_qty + qty\r\n            }\r\n        }\r\n\r\n        return tmp_qty;\r\n    }\r\n\r\n    closeBox = () => {\r\n        this.props.closeBox();\r\n    }\r\n\r\n    addBox = () => {\r\n        if (this.validateBox()){\r\n\r\n        }\r\n        else {\r\n            this.props.addBox(this.state.list);\r\n        }\r\n    }\r\n\r\n    updateBox = () => {\r\n        if (this.validateBox()){\r\n\r\n        }\r\n        else {\r\n            this.props.updateBox(this.state.list);\r\n        }\r\n    }\r\n\r\n    validateBox = () => {\r\n        let error = false;       \r\n\r\n        // Check Bagel \r\n        if (this.state.bagel_qty !== this.state.bagel_max){\r\n            this.setState({bagel_err: true});\r\n            error = true;\r\n        }\r\n\r\n        // Check Whip\r\n        if (this.state.whip_qty !== this.state.whip_max){\r\n            this.setState({whip_err: true});\r\n            error = true;\r\n        }\r\n\r\n        return error;\r\n    }\r\n\r\n    printBagels = () => {\r\n        let print = [];\r\n        let index = 0;\r\n        const items = this.props.bagel_shmear.bagel;\r\n        \r\n        for (let key in items) {\r\n            print.push(\r\n                <Col md={6} className=\"wrap_qty mb-3\" key={'bagel_input'+index}>\r\n                    {items[key].name}\r\n                    <NumberInput \r\n                        readonly={true}\r\n                        onChange={this.onChangeBagel.bind(this)}\r\n                        name={key}\r\n                        value={this.state.list.bagel[key]}\r\n                        style={{float: 'left', textAlign: 'left'}}\r\n                    />\r\n                </Col>\r\n            )\r\n            index++;\r\n        }\r\n\r\n        return print;\r\n    }\r\n\r\n    onChangeBagel = (name, qty) => {\r\n        const checkQty = this.checkQty('bagel', name, qty)\r\n        if (checkQty < (this.state.bagel_max + 1)){\r\n            this.setState({\r\n                list: {\r\n                    ...this.state.list,\r\n                    bagel: {\r\n                        ...this.state.list.bagel,\r\n                        [name]: qty\r\n                    }\r\n                },\r\n                bagel_qty: checkQty\r\n            })\r\n        }\r\n        else {\r\n            this.setState({\r\n                bagel_err: true\r\n            }, () => {\r\n                setTimeout(() => {\r\n                    this.setState({\r\n                        bagel_err: false\r\n                    })\r\n                }, 1000)\r\n            })\r\n            return 'error';\r\n        }\r\n    }\r\n\r\n    printWhip = (key) => {\r\n        return (\r\n            <Col md={6} className=\"wrap_qty mb-3\" >\r\n                {this.props.bagel_shmear.whip[key].name}\r\n                <NumberInput \r\n                    readonly={true}\r\n                    onChange={this.onChangeWhip.bind(this)}\r\n                    name={key}\r\n                    value={this.state.list.whip[key]}\r\n                    style={{float: 'left', textAlign: 'left'}}\r\n                />\r\n            </Col>\r\n        );\r\n    }\r\n\r\n    onChangeWhip = (name, qty) => {\r\n        const checkQty = this.checkQty('whip', name, qty)\r\n        if (checkQty < this.state.whip_max + 1){\r\n            this.setState({\r\n                list: {\r\n                    ...this.state.list,\r\n                    whip: {\r\n                        ...this.state.list.whip,\r\n                        [name]: qty\r\n                    }\r\n                },\r\n                whip_qty: checkQty\r\n            })\r\n        }\r\n        else {\r\n            this.setState({\r\n                whip_err: true\r\n            }, () => {\r\n                setTimeout(() => {\r\n                    this.setState({\r\n                        whip_err: false\r\n                    })\r\n                }, 1000)\r\n            })\r\n            return 'error';\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.props.box === 'whip'){\r\n            return (\r\n            <Card className=\"col-md-12 p-0\">\r\n                <Card.Body className={this.state.whip_err ? 'su-alert' : ''}>\r\n                    <Card.Text>You selected <strong>{this.state.whip_qty} of {this.state.whip_max}</strong> Whips.</Card.Text>\r\n                </Card.Body>\r\n                <ListGroup style={{marginTop: '10px'}}>\r\n                    <ListGroup.Item className=\"menu-list\">\r\n                        <Row style={{marginTop: '5px'}}>\r\n                            <Col className=\"wrap_name\">\r\n                                <p className=\"item-header\" style={{marginBottom: '10px', paddingLeft: '0px', fontSize: '25px', color: '#b36a3b'}}>Double-Whipped Shmear</p>\r\n                                <p className=\"item-description\"></p>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            {this.printWhip('plain')}\r\n                            {this.printWhip('onion')}\r\n                            {this.printWhip('salmon')}\r\n                        </Row>\r\n                        <Row style={{marginTop: '5px'}}>\r\n                            <Col className=\"wrap_name\">\r\n                                <p className=\"item-header\" style={{marginBottom: '10px', paddingLeft: '0px', fontSize: '15px', color: '#b36a3b'}}>25% Reduced Fat</p>\r\n                                <p className=\"item-description\"></p>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            {this.printWhip('plainRF')}\r\n                            {this.printWhip('garden')}\r\n                            {this.printWhip('honey')}\r\n                            {this.printWhip('jalapeno')}\r\n                            {this.printWhip('strawberry')}\r\n                        </Row>\r\n                    </ListGroup.Item>\r\n                </ListGroup>\r\n                <Row>\r\n                    <Col>\r\n                        <ButtonToolbar className=\"mt-3\">\r\n                            {\r\n                                this.props.bagel_shmear.mode === 'add' ?\r\n                                <Button variant=\"primary\" size=\"md\" onClick={this.addBox.bind(this)} className=\"add-btn\">\r\n                                    Add\r\n                                </Button>\r\n                                :\r\n                                <Button variant=\"primary\" size=\"md\" onClick={this.updateBox.bind(this)} className=\"add-btn\">\r\n                                    Update\r\n                                </Button>\r\n                            }\r\n                            <Button variant=\"light\" size=\"md\" onClick={this.closeBox.bind(this)} className=\"cancel-btn ml-2\">\r\n                                Cancel\r\n                            </Button>\r\n                        </ButtonToolbar>\r\n                    </Col>\r\n                </Row>\r\n            </Card>\r\n            )\r\n        } else {\r\n        return (\r\n            <Card className=\"col-md-12 p-0\">\r\n\r\n                <Card.Header>\r\n                    <p>{this.props.bagel_shmear[this.props.box].name}</p>\r\n                    <p>Serves up to {(this.props.box === 'baker_dozen' ? 13 : (this.props.box === 'half_dozen' ? 6 : 24))}</p>\r\n                    <ul>\r\n                        <li>Choose your bagels</li>\r\n                        <li>Choose your whipped shmear</li>\r\n                    </ul>\r\n                </Card.Header>\r\n\r\n                <Card.Body className={this.state.bagel_err ? 'su-alert' : ''}>\r\n                    <Card.Text>You selected <strong>{this.state.bagel_qty} of {this.state.bagel_max}</strong> Bagels.</Card.Text>\r\n                </Card.Body>\r\n\r\n                <ListGroup style={{marginTop: '10px'}}>\r\n\r\n                    <ListGroup.Item className=\"menu-list\">\r\n\r\n                        <Row style={{marginTop: '5px'}}>\r\n                            <Col className=\"wrap_name\">\r\n                                <p className=\"item-header\" style={{marginBottom: '10px', paddingLeft: '0px', fontSize: '25px', color: '#b36a3b'}}>Fresh-Baked Bagels</p>\r\n                                <p className=\"item-description\"></p>\r\n                            </Col>\r\n                        </Row>\r\n                        \r\n                        <Row>\r\n                            {this.printBagels()}\r\n                        </Row>\r\n\r\n                    </ListGroup.Item>\r\n\r\n                </ListGroup>\r\n\r\n                <Card.Body className={this.state.whip_err ? 'su-alert' : ''}>\r\n                    <Card.Text>You selected <strong>{this.state.whip_qty} of {this.state.whip_max}</strong> Whips.</Card.Text>\r\n                </Card.Body>\r\n\r\n                <ListGroup style={{marginTop: '10px'}}>\r\n\r\n                    <ListGroup.Item className=\"menu-list\">\r\n\r\n                        <Row style={{marginTop: '5px'}}>\r\n                            <Col className=\"wrap_name\">\r\n                                <p className=\"item-header\" style={{marginBottom: '10px', paddingLeft: '0px', fontSize: '25px', color: '#b36a3b'}}>Double-Whipped Shmear</p>\r\n                                <p className=\"item-description\"></p>\r\n                            </Col>\r\n                        </Row>\r\n                        \r\n                        <Row>\r\n                            {this.printWhip('plain')}\r\n                            {this.printWhip('onion')}\r\n                            {this.printWhip('salmon')}\r\n                        </Row>\r\n\r\n                        <Row style={{marginTop: '5px'}}>\r\n                            <Col className=\"wrap_name\">\r\n                                <p className=\"item-header\" style={{marginBottom: '10px', paddingLeft: '0px', fontSize: '15px', color: '#b36a3b'}}>25% Reduced Fat</p>\r\n                                <p className=\"item-description\"></p>\r\n                            </Col>\r\n                        </Row>\r\n                        \r\n                        <Row>\r\n                            {this.printWhip('plainRF')}\r\n                            {this.printWhip('garden')}\r\n                            {this.printWhip('honey')}\r\n                            {this.printWhip('jalapeno')}\r\n                            {this.printWhip('strawberry')}\r\n                        </Row>\r\n\r\n                    </ListGroup.Item>\r\n\r\n                </ListGroup>\r\n\r\n                \r\n\r\n                <Row>\r\n                    <Col>\r\n                        <ButtonToolbar className=\"mt-3\">\r\n                            {\r\n                                this.props.bagel_shmear.mode === 'add' ?\r\n                                <Button variant=\"primary\" size=\"md\" onClick={this.addBox.bind(this)} className=\"add-btn\">\r\n                                    Add\r\n                                </Button>\r\n                                :\r\n                                <Button variant=\"primary\" size=\"md\" onClick={this.updateBox.bind(this)} className=\"add-btn\">\r\n                                    Update\r\n                                </Button>\r\n                            }\r\n                            <Button variant=\"light\" size=\"md\" onClick={this.closeBox.bind(this)} className=\"cancel-btn ml-2\">\r\n                                Cancel\r\n                            </Button>\r\n                        </ButtonToolbar>\r\n                    </Col>\r\n                </Row>\r\n\r\n            </Card>\r\n        )\r\n    }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    bagel_shmear: state.bagelandsheamr\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => (\r\n    {\r\n        addBox: (list) => dispatch(addBox(list)),\r\n        closeBox: () => dispatch(closeBox()),\r\n        updateBox: (id, list) => dispatch(updateBox(id, list))\r\n    }\r\n)\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Choice)","import { \r\n    UPDATE_BAGEL_SHEAMR_QTY,\r\n    OPEN_BAGEL_SHEAMR_CHOICE,\r\n    OPEN_EDIT_BAGEL_SHEAMR_CHOICE,\r\n    CLOSE_BAGEL_SHEAMR_CHOICE,\r\n    ADD_BAGEL_SHEAMR_CHOICE,\r\n    UPDATE_BAGEL_SHEAMR_CHOICE,\r\n    REMOVE_BAGEL_SHEAMR_CHOICE \r\n} from './actionTypes.js'\r\n\r\nexport const updateQty = (name, qty) => ({\r\n    type: UPDATE_BAGEL_SHEAMR_QTY,\r\n    payload: {\r\n        name,\r\n        qty\r\n    }\r\n})\r\n\r\nexport const openBox = (name, mode) => ({\r\n    type: OPEN_BAGEL_SHEAMR_CHOICE,\r\n    payload: {\r\n        name,\r\n        mode\r\n    }\r\n})\r\n\r\nexport const openEditBox = (box, id) => ({\r\n    type: OPEN_EDIT_BAGEL_SHEAMR_CHOICE,\r\n    payload: {\r\n        box,\r\n        id\r\n    }\r\n})\r\n\r\nexport const closeBox = () => ({\r\n    type: CLOSE_BAGEL_SHEAMR_CHOICE\r\n})\r\n\r\nexport const addBox = (item) => ({\r\n    type: ADD_BAGEL_SHEAMR_CHOICE,\r\n    payload: {\r\n        item\r\n    }\r\n})\r\n\r\nexport const updateBox = (item) => ({\r\n    type: UPDATE_BAGEL_SHEAMR_CHOICE,\r\n    payload: {\r\n        item\r\n    }\r\n})\r\n\r\nexport const removeBox = (box, id) => ({\r\n    type: REMOVE_BAGEL_SHEAMR_CHOICE,\r\n    payload: {\r\n        box,\r\n        id\r\n    }\r\n})","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Row, Col, Card, ListGroup, ButtonToolbar, Button } from 'react-bootstrap';\r\nimport NumberInput from '../common/numberInput.js';\r\nimport TopNav from '../common/TopNav.js';\r\n\r\nimport { updateCurrentNav } from '../../redux/actions/main';\r\nimport { updateQty, openBox, openEditBox, removeBox } from '../../redux/actions/bagelandsheamr_action';\r\n\r\nimport Bottom from '../bottom';\r\n\r\nimport Choice from './Choice';\r\n\r\n// import styles from '../common/style.js';\r\n\r\nclass BagelShmear extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.state = {\r\n            total: this.props.bagel_shmear.total\r\n        }\r\n\r\n        this.props.updateCurrentNav(0);\r\n    }\r\n\r\n    onChangeHandler = (name, value) => {\r\n        this.props.updateQty(name, value);\r\n    }\r\n\r\n    openBox = (name) => {\r\n        this.props.openBox(name, 'add');\r\n    }\r\n\r\n    openEditBox = (box, id) => {\r\n        this.props.openEditBox(box, id);\r\n    }\r\n\r\n    removeBox = (box, id) => {\r\n        this.props.removeBox(box, id);\r\n    }\r\n\r\n    printItem = (key) => {\r\n        return (\r\n            <React.Fragment>\r\n\r\n                <Row style={{marginTop: '10px'}}>\r\n                    <Col className=\"wrap_name\">\r\n                        <p className=\"item-header\" style={{marginBottom: '0px', paddingLeft: '0px', color: '#b36a3b'}}>{this.props.bagel_shmear[key].name}</p>\r\n                        <p className=\"item-description\">{this.props.bagel_shmear[key].description}</p>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                    <Col className=\"wrap_qty\">\r\n                        <p style={{float: 'left', fontWeight: '600'}}>Serves up to {key === 'baker_dozen' ? 13 : (key === 'half_dozen' ? 6 : 24)}</p>\r\n                        <NumberInput \r\n                            noleft={true}\r\n                            readonly={true}\r\n                            onChange={this.openBox.bind(this)}\r\n                            name={key}\r\n                            value={this.props.bagel_shmear[key].qty}\r\n                        />\r\n                        <p style={{float: 'right', fontWeight: '600'}}>${this.props.bagel_shmear[key].price}</p> \r\n                    </Col>\r\n                </Row>\r\n\r\n                {\r\n                    this.props.bagel_shmear[key].qty === 0 ?\r\n                    null\r\n                    :\r\n                    <Row style={{marginTop: '1rem', marginBottom: '1rem', borderBottom: '1px solid #e1e1e1'}}>\r\n                        { this.printSelectedBox(key) }\r\n                    </Row>\r\n                }\r\n\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    printItemWhip = (key) => {\r\n        return (\r\n            <React.Fragment>\r\n\r\n                <Row style={{marginTop: '10px'}}>\r\n                    <Col className=\"wrap_name\">\r\n                        <p className=\"item-header\" style={{marginBottom: '0px', paddingLeft: '0px', color: '#b36a3b'}}>{this.props.bagel_shmear[key].name}</p>\r\n                        <p className=\"item-description\">{this.props.bagel_shmear[key].description}</p>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                    <Col className=\"wrap_qty\">\r\n                        <p style={{float: 'left', fontWeight: '600'}}>6oz Tub</p>\r\n                        <NumberInput \r\n                            noleft={true}\r\n                            readonly={true}\r\n                            onChange={this.openBox.bind(this)}\r\n                            name={key}\r\n                            value={this.props.bagel_shmear[key].qty}\r\n                        />\r\n                        <p style={{float: 'right', fontWeight: '600'}}>${this.props.bagel_shmear[key].price}</p> \r\n                    </Col>\r\n                </Row>\r\n\r\n                {\r\n                    this.props.bagel_shmear[key].qty === 0 ?\r\n                    null\r\n                    :\r\n                    <Row style={{marginTop: '1rem', marginBottom: '1rem', borderBottom: '1px solid #e1e1e1'}}>\r\n                        { this.printSelectedBox(key) }\r\n                    </Row>\r\n                }\r\n\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    printSelectedBox = (box) => {\r\n        let print = [];\r\n        let box_count = 0;\r\n        const list = this.props.bagel_shmear[box].list;\r\n        for (let box_id in list){\r\n            let print_li = [];\r\n            let tmp_count = 0;\r\n\r\n            //const items = ['bagel', 'whip'];\r\n            const items = box === 'whip' ? ['whip'] : ['bagel', 'whip']; //simplifys the small print box if user is choosing to buy whip by the tub which doesn't include bagels\r\n\r\n            for (let item_id in items){\r\n                const item = items[item_id];\r\n                print_li.push(<p className=\"mb-0\" style={{color: '#b36a3b'}}>{item}</p>)\r\n                for (let key in list[box_id][item]){\r\n                    if (list[box_id][item][key] !== 0){\r\n                        let name = this.props.bagel_shmear[item][key].name;\r\n                        if (item === 'whip' && key !== 'plain' && key !== 'onion' && key !== 'salmon'){\r\n                            name = 'Reduced Fat ' + name\r\n                        }\r\n                        print_li.push(<li className=\"\" key={'_child_' + tmp_count}> - { name + ' : ' + list[box_id][item][key] } </li>)\r\n                        tmp_count++;\r\n                    }\r\n                }\r\n            }\r\n            if (box === 'whip') {\r\n                print.push(\r\n                <Col md={6} className=\"selected_box_wrap\" style={{padding: '5px'}} key={'ex_box' + box_count}>\r\n                    <div key={box_count} className=\"\" style={{padding: '5px', border: '1px solid #e1e1e1'}}>\r\n                        <h3 className=\"p-0\" style={{fontSize: '1rem'}}>{box} #{box_count+1}\r\n                            <ButtonToolbar style={{float: 'right'}}>\r\n                                <Button onClick={this.removeBox.bind(this, box, box_count)} className=\"remove-btn\">Remove</Button>\r\n                            </ButtonToolbar>\r\n                        </h3>\r\n                        <ul key={box_count} className=\"\" style={{height: '', paddingLeft: '10px', listStyle: 'none'}}> {print_li} </ul>\r\n                    </div>\r\n                </Col>\r\n                )    \r\n            } else {\r\n            print.push(\r\n                <Col md={6} className=\"selected_box_wrap\" style={{padding: '5px'}} key={'ex_box' + box_count}>\r\n                    <div key={box_count} className=\"\" style={{padding: '5px', border: '1px solid #e1e1e1'}}>\r\n                        <h3 className=\"p-0\" style={{fontSize: '1rem'}}>{box} #{box_count+1}\r\n                            <ButtonToolbar style={{float: 'right'}}>\r\n                                <Button onClick={this.openEditBox.bind(this, box, box_count)} className=\"edit-btn\">Edit</Button>\r\n                                <Button onClick={this.removeBox.bind(this, box, box_count)} className=\"remove-btn\">Remove</Button>\r\n                            </ButtonToolbar>\r\n                        </h3>\r\n                        <ul key={box_count} className=\"\" style={{height: '', paddingLeft: '10px', listStyle: 'none'}}> {print_li} </ul>\r\n                    </div>\r\n                </Col>\r\n            )\r\n            }\r\n\r\n            box_count++;\r\n        }\r\n\r\n        return print;\r\n    }\r\n\r\n    render() {\r\n        if (this.props.bagel_shmear.box !== null){\r\n            return <Choice box={this.props.bagel_shmear.box} />\r\n        }\r\n\r\n        return(\r\n            <Card className=\"col-md-12 p-0 menu-card\">\r\n\r\n                <Card.Header>\r\n                    <TopNav />\r\n                </Card.Header>\r\n\r\n                <Card.Body>\r\n                    <Card.Title>Bagels & Shmear</Card.Title>\r\n                    <p className=\"item-description\" style={{marginTop: '0px', marginBottom: '0px'}}>Served with utensils, plates & napkins</p>\r\n                </Card.Body>\r\n\r\n                <ListGroup>\r\n\r\n                    <Row style={{margin: '0px'}}>\r\n                        <ListGroup.Item className=\"menu-list es-list-group-item col-md-6\">\r\n                            {this.printItem('baker_dozen')}\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item className=\"menu-list es-list-group-item col-md-6\">\r\n                            {this.printItem('nosh_box')}\r\n                        </ListGroup.Item>\r\n                    </Row>\r\n\r\n                    <Row style={{margin: '0px'}}>\r\n                        <ListGroup.Item className=\"menu-list es-list-group-item col-md-6\">\r\n                            {this.printItem('half_dozen')}\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item className=\"menu-list es-list-group-item col-md-6\">\r\n                            {this.printItemWhip('whip')}\r\n                        </ListGroup.Item>                        \r\n                    </Row>\r\n\r\n                    <ListGroup.Item className=\"menu-list es-list-group-item total\">\r\n                        <Row>\r\n                            <Col>\r\n                                ${this.props.bagel_shmear.total}\r\n                            </Col>\r\n                        </Row>\r\n                    </ListGroup.Item>\r\n\r\n                </ListGroup>\r\n\r\n                <Row>\r\n                    <Col md={12}>\r\n                        <Bottom />\r\n                    </Col>\r\n                </Row>\r\n\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    bagel_shmear: state.bagelandsheamr\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => (\r\n    {\r\n        updateQty: (name, qty) => dispatch(updateQty(name, qty)),\r\n        openBox: (name, mode) => dispatch(openBox(name, mode)),\r\n        openEditBox: (box, id) => dispatch(openEditBox(box, id)),\r\n        removeBox: (box, key) => dispatch(removeBox(box, key)),\r\n        updateCurrentNav: (index) => dispatch(updateCurrentNav(index))\r\n    }\r\n)\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(BagelShmear)","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Row, Col, Card, ButtonToolbar, Button, ListGroup } from 'react-bootstrap';\r\nimport NumberInput from '../common/numberInput.js';\r\n\r\nimport { addBox, closeBox, updateBox } from '../../redux/actions/egg_sandwiches_action';\r\n\r\nclass BoxController extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        let list = {};\r\n\r\n        if (this.props.mode === 'edit'){ \r\n            list = this.props.egg_sandwich[this.props.box][this.props.type].list[this.props.id]; \r\n        }\r\n        else if (this.props.box === 'classic'){\r\n            list = {\r\n                    applewood: 0,\r\n                    turkey: 0,\r\n                    ham: 0,\r\n                    garden: 0\r\n                }\r\n        }\r\n        else if (this.props.box === 'signature'){\r\n            list = {\r\n                    farmhouse: 0,\r\n                    applewood: 0,\r\n                    turkey: 0,\r\n                    ham: 0,\r\n                    garden: 0\r\n                }\r\n        }\r\n        else if (this.props.box === 'thintastic'){\r\n            list = {\r\n                    santafe: 0,\r\n                    bacon: 0\r\n                }\r\n        }\r\n\r\n        this.state = {\r\n            //qty: 0,\r\n            qty: (this.props.mode === 'edit' ? (this.props.type === 'half' ? 6 : 12) : 0),\r\n            list: list,\r\n            error: false,\r\n            error_msg: '',\r\n            max_qty: (this.props.type === 'half' ? 6 : 12)\r\n        }\r\n        \r\n    }\r\n\r\n    onChangeInput = (name, qty) => {\r\n        this.setState({error: false})\r\n\r\n        let list = this.state.list;\r\n        // list[name] = qty;\r\n        const max_qty = this.state.max_qty;\r\n        let tmp_qty = 0;\r\n        for (let key in list){\r\n            if (key !== name){\r\n                tmp_qty = tmp_qty + list[key];    \r\n            }\r\n            else{\r\n                tmp_qty = tmp_qty + qty;\r\n            }\r\n        }\r\n        \r\n        if (tmp_qty <= max_qty){\r\n            list[name] = qty;\r\n            this.setState({\r\n                list: list,\r\n                qty: tmp_qty\r\n            })\r\n        }\r\n        else {\r\n            this.setState({\r\n                error: true,\r\n                error_msg: 'qty max error'\r\n            }, () => {\r\n                setTimeout(() => {\r\n                    this.setState({\r\n                        error: false\r\n                    })\r\n                }, 1000)\r\n            })\r\n            return 'error';\r\n        }\r\n    }\r\n\r\n    closeBox = () => {\r\n        this.props.closeBox();\r\n    }\r\n\r\n    addBox = () => {\r\n        if (this.validateBox()){\r\n\r\n        }\r\n        else {\r\n            this.props.addBox(this.state.list);\r\n        }\r\n    }\r\n\r\n    updateBox = () => {\r\n        if (this.validateBox()){\r\n\r\n        }\r\n        else {\r\n            this.props.updateBox(this.state.list);\r\n        }\r\n    }\r\n\r\n    validateBox = () => {\r\n        let error = false;        \r\n        if (this.state.qty !== this.state.max_qty){\r\n            this.setState({error: true});\r\n            error = true;\r\n        }\r\n        return error;\r\n    }\r\n\r\n    printItem = () => {\r\n        let print = [];\r\n        let index = 0;\r\n        const items = this.props.egg_sandwich[this.props.box].items;\r\n        for (let key in items) {\r\n            print.push(\r\n                <Col md={12} className=\"wrap_qty mb-3\" key={'sandwich_input'+index}>\r\n                    {items[key].name}\r\n                    <NumberInput \r\n                        readonly={true}\r\n                        onChange={this.onChangeInput.bind(this)}\r\n                        name={key}\r\n                        value={this.state.list[key]}\r\n                        style={{float: 'left', textAlign: 'left'}}\r\n                    />\r\n                </Col>\r\n            )\r\n            index++;\r\n        }\r\n\r\n        return print;\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <Card className=\"col-md-12 p-0\">\r\n                <Card.Header>\r\n\r\n                </Card.Header>\r\n\r\n                <Card.Body>\r\n                    <Card.Title>\r\n                        Select Your Sandwiches\r\n                        <span style={{ textTransform: 'initial', marginLeft: '12px', fontSize: '17px', color: '#545454'}}>\r\n                        {\r\n                            this.props.type === 'half' ?\r\n                            'Select 6'\r\n                            :\r\n                            'Select 12'\r\n                        }\r\n                        </span>\r\n                    </Card.Title>\r\n                </Card.Body>\r\n\r\n                <Card.Body className={this.state.error ? 'su-alert' : ''}>\r\n                    <Card.Text>You selected <strong>{this.state.qty} of {this.state.max_qty}</strong> Sandwiches.</Card.Text>\r\n                </Card.Body>\r\n\r\n                <ListGroup variant=\"flush\">\r\n\r\n                    <ListGroup.Item className=\"menu-list\">\r\n                        <Row className=\"mb-3\">\r\n\r\n                            { this.printItem() }\r\n\r\n                        </Row>\r\n\r\n                        <Row>\r\n                            <Col>\r\n                                <ButtonToolbar className=\"mt-4\">\r\n                                    {\r\n                                        this.props.mode === 'add' ?\r\n                                        <Button variant=\"primary\" size=\"md\" onClick={this.addBox.bind(this)} className=\"add-btn\">\r\n                                            Add\r\n                                        </Button>\r\n                                        :\r\n                                        <Button variant=\"primary\" size=\"md\" onClick={this.updateBox.bind(this)} className=\"add-btn\">\r\n                                            Update\r\n                                        </Button>\r\n                                    }\r\n                                    <Button variant=\"light\" size=\"md\" onClick={this.closeBox.bind(this)} className=\"cancel-btn ml-2\">\r\n                                        Cancel\r\n                                    </Button>\r\n                                </ButtonToolbar>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                    </ListGroup.Item>\r\n\r\n                </ListGroup>\r\n\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    egg_sandwich: state.egg_sandwich\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => (\r\n    {\r\n        addBox: (list) => dispatch(addBox(list)),\r\n        closeBox: () => dispatch(closeBox()),\r\n        updateBox: (id, list) => dispatch(updateBox(id, list))\r\n    }\r\n)\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(BoxController)","import {\r\n    OPEN_EGG_SANDWICH_BOX,\r\n    OPEN_EDIT_EGG_SANDWICH_BOX,\r\n    CLOSE_EGG_SANDWICH_BOX,\r\n    ADD_EGG_SANDWICH_BOX,\r\n    UPDATE_EGG_SANDWICH_BOX,\r\n    REMOVE_EGG_SANDWICH_BOX\r\n} from './actionTypes.js'\r\n\r\nexport const openBox = (name, mode) => ({\r\n    type: OPEN_EGG_SANDWICH_BOX,\r\n    payload: {\r\n        name,\r\n        mode\r\n    }\r\n})\r\n\r\nexport const openEditBox = (box, type, id) => ({\r\n    type: OPEN_EDIT_EGG_SANDWICH_BOX,\r\n    payload: {\r\n        box,\r\n        type,\r\n        id\r\n    }\r\n})\r\n\r\nexport const closeBox = () => ({\r\n    type: CLOSE_EGG_SANDWICH_BOX\r\n})\r\n\r\nexport const addBox = (list) => ({\r\n    type: ADD_EGG_SANDWICH_BOX,\r\n    payload: {\r\n        list\r\n    }\r\n})\r\n\r\nexport const updateBox = (list) => ({\r\n    type: UPDATE_EGG_SANDWICH_BOX,\r\n    payload: {\r\n        list\r\n    }\r\n})\r\n\r\nexport const removeBox = (box, type, id) => ({\r\n    type: REMOVE_EGG_SANDWICH_BOX,\r\n    payload: {\r\n        box,\r\n        type,\r\n        id\r\n    }\r\n})","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Row, Col, Card, ListGroup, ButtonToolbar, Button } from 'react-bootstrap';\r\nimport NumberInput from '../common/numberInput.js';\r\nimport TopNav from '../common/TopNav.js';\r\n\r\nimport { updateCurrentNav } from '../../redux/actions/main';\r\nimport { openBox, openEditBox, removeBox } from '../../redux/actions/egg_sandwiches_action';\r\n\r\nimport BoxController from './BoxController';\r\nimport Bottom from '../bottom';\r\n\r\n// import styles from '../common/style.js';\r\n\r\n// const subHeader = {\r\n//     marginTop: '1rem',\r\n//     marginBottom: '10px',\r\n//     paddingLeft: '20px',\r\n//     fontWeight: '600',\r\n//     fontSize: '17px'\r\n// }\r\n// const style_listGroup = {\r\n//     padding: '0px',\r\n//     paddingLeft: '20px',\r\n//     borderBottom: '1px solid #dadada'\r\n// } \r\n\r\nclass EggSandwich extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.state = {\r\n            total: this.props.egg_sandwich.total\r\n        }\r\n\r\n        this.props.updateCurrentNav(1);\r\n    }\r\n\r\n    // onChangeHandler = (name, value) => {\r\n    //     this.props.updateQty(name, value);\r\n    // }\r\n\r\n    openBox = (name) => {\r\n        this.props.openBox(name, 'add');\r\n    }\r\n\r\n    openEditBox = (box, type, id) => {\r\n        this.props.openEditBox(box, type, id);\r\n    }\r\n\r\n    removeBox = (box, type, id) => {\r\n        this.props.removeBox(box, type, id);\r\n    }\r\n\r\n    printSelectedBox = (box, type, list, index, num) => {\r\n        const names = this.props.egg_sandwich[box].items;\r\n        let print = [];\r\n        let count = 0;\r\n        let total_qty = 0;\r\n\r\n        for (let key in names) {\r\n            if (list[key] !== 0){\r\n                if (typeof list[key] === 'undefined'){ return null; }\r\n                print.push(<li className=\"\" key={'_child_' + count}> { names[key].name + ' : ' + list[key] } </li>);\r\n                total_qty = total_qty + list[key];\r\n                count++;\r\n            }\r\n        }\r\n\r\n        if (total_qty === 0){return null;}\r\n        \r\n        return (\r\n            <Col md={4} style={{padding: '5px'}} key={'ex_box' + num}>\r\n                <div key={index} className=\"selected_box_wrap\" style={{padding: '5px', border: '1px solid #e1e1e1'}}>\r\n                    <h3 className=\"p-0\" style={{fontSize: '1rem'}}>#{num} {box} {type}\r\n                        <ButtonToolbar style={{float: 'right'}}>\r\n                            <Button onClick={() => {this.openEditBox(box, type, index)}} className=\"edit-btn\">Edit</Button>\r\n                            <Button onClick={() => {this.removeBox(box, type, index)}} className=\"remove-btn\">Remove</Button>\r\n                        </ButtonToolbar>\r\n                    </h3>\r\n                    <ul key={index} className=\"\" style={{height: '', paddingLeft: '10px', listStyle: 'none'}}> {print} </ul>\r\n                </div>\r\n            </Col>\r\n        )\r\n    }\r\n\r\n    printRow = (name, box, type, qty, list) => {\r\n        let count = 0;\r\n        return (\r\n            <React.Fragment>\r\n\r\n                <Row>\r\n                    <Col className=\"wrap_qty\">\r\n                        <NumberInput \r\n                            noleft={true}\r\n                            readonly={true}\r\n                            onChange={this.openBox.bind(this)}\r\n                            name={box + '_' + type}\r\n                            value={qty}\r\n                        />\r\n                        <p style={{float: 'right', fontWeight: '600'}}>{name} - ${this.props.egg_sandwich[box][type].price}</p> \r\n                    </Col>\r\n                </Row>\r\n\r\n                {\r\n                    qty === 0 ?\r\n                    null\r\n                    :\r\n                    <Row style={{marginBottom: '1rem'}}>\r\n                        {\r\n                            list.map((row, index) => {\r\n                                if (row === null){return null;}\r\n                                else {\r\n                                    count++;\r\n                                    return this.printSelectedBox(box, type, row, index, count)\r\n                                }\r\n                            })\r\n                        }\r\n                    </Row>\r\n                }\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        switch (this.props.egg_sandwich.box) {\r\n            case 'classic': {\r\n                return <BoxController \r\n                            box={this.props.egg_sandwich.box}\r\n                            type={this.props.egg_sandwich.type}\r\n                            mode={this.props.egg_sandwich.mode}\r\n                            id={this.props.egg_sandwich.id}\r\n                       />\r\n            }\r\n            case 'signature': {\r\n                return <BoxController \r\n                            box={this.props.egg_sandwich.box}\r\n                            type={this.props.egg_sandwich.type}\r\n                            mode={this.props.egg_sandwich.mode}\r\n                            id={this.props.egg_sandwich.id}\r\n                       />\r\n            }\r\n            case 'thintastic': {\r\n                return <BoxController \r\n                            box={this.props.egg_sandwich.box}\r\n                            type={this.props.egg_sandwich.type}\r\n                            mode={this.props.egg_sandwich.mode}\r\n                            id={this.props.egg_sandwich.id}\r\n                       />\r\n            }\r\n            default : {\r\n                return(\r\n                    <Card className=\"col-md-12 p-0 menu-card\">\r\n        \r\n                        <Card.Header>\r\n                            <TopNav />\r\n                        </Card.Header>\r\n        \r\n                        <Card.Body>\r\n                            <Card.Title>Egg Sandwiches</Card.Title>\r\n                        </Card.Body>\r\n        \r\n                        <ListGroup style={{marginTop: '15px'}}>\r\n\r\n                            <ListGroup.Item>\r\n\r\n                                <Row>\r\n                                    <Col className=\"wrap_name\">\r\n                                        <p className=\"item-header\" style={{marginBottom: '0px', paddingLeft: '0px', color: '#b36a3b'}}>{this.props.egg_sandwich.classic.name}</p>\r\n                                        <p className=\"item-description\">{this.props.egg_sandwich.classic.description}</p>\r\n                                    </Col>\r\n                                </Row>\r\n\r\n                                { \r\n                                    this.printRow(\r\n                                        'Half Dozen', \r\n                                        \"classic\",\r\n                                        \"half\",\r\n                                        this.props.egg_sandwich.classic.half.qty, \r\n                                        this.props.egg_sandwich.classic.half.list\r\n                                    ) \r\n                                }\r\n\r\n                                { \r\n                                    this.printRow(\r\n                                        'Dozen', \r\n                                        \"classic\",\r\n                                        \"dozen\",\r\n                                        this.props.egg_sandwich.classic.dozen.qty, \r\n                                        this.props.egg_sandwich.classic.dozen.list\r\n                                    ) \r\n                                }\r\n\r\n                            </ListGroup.Item>\r\n        \r\n                        </ListGroup>\r\n\r\n                        <ListGroup style={{marginTop: '15px'}}>\r\n\r\n                            <ListGroup.Item>\r\n\r\n                                <Row>\r\n                                    <Col className=\"wrap_name\">\r\n                                        <p className=\"item-header\" style={{marginBottom: '0px', paddingLeft: '0px', color: '#b36a3b'}}>{this.props.egg_sandwich.signature.name}</p>\r\n                                        <p className=\"item-description\">{this.props.egg_sandwich.signature.description}</p>\r\n                                    </Col>\r\n                                </Row>\r\n\r\n                                { \r\n                                    this.printRow(\r\n                                        'Half Dozen', \r\n                                        \"signature\",\r\n                                        \"half\",\r\n                                        this.props.egg_sandwich.signature.half.qty, \r\n                                        this.props.egg_sandwich.signature.half.list\r\n                                    ) \r\n                                }\r\n\r\n                                { \r\n                                    this.printRow(\r\n                                        'Dozen', \r\n                                        \"signature\",\r\n                                        \"dozen\",\r\n                                        this.props.egg_sandwich.signature.dozen.qty, \r\n                                        this.props.egg_sandwich.signature.dozen.list\r\n                                    ) \r\n                                }\r\n\r\n                            </ListGroup.Item>\r\n        \r\n                        </ListGroup>\r\n\r\n                        <ListGroup style={{marginTop: '15px'}}>\r\n\r\n                            <ListGroup.Item>\r\n\r\n                                <Row>\r\n                                    <Col className=\"wrap_name\">\r\n                                        <p className=\"item-header\" style={{marginBottom: '0px', paddingLeft: '0px', color: '#b36a3b'}}>{this.props.egg_sandwich.thintastic.name}</p>\r\n                                        <p className=\"item-description\">{this.props.egg_sandwich.thintastic.description}</p>\r\n                                    </Col>\r\n                                </Row>\r\n\r\n                                { \r\n                                    this.printRow(\r\n                                        'Half Dozen', \r\n                                        \"thintastic\",\r\n                                        \"half\",\r\n                                        this.props.egg_sandwich.thintastic.half.qty, \r\n                                        this.props.egg_sandwich.thintastic.half.list\r\n                                    ) \r\n                                }\r\n\r\n                                { \r\n                                    this.printRow(\r\n                                        'Dozen', \r\n                                        \"thintastic\",\r\n                                        \"dozen\",\r\n                                        this.props.egg_sandwich.thintastic.dozen.qty, \r\n                                        this.props.egg_sandwich.thintastic.dozen.list\r\n                                    ) \r\n                                }\r\n\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item className=\"menu-list es-list-group-item total\">\r\n                                <Row>\r\n                                    <Col>\r\n                                        ${this.props.egg_sandwich.total}\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n        \r\n                        </ListGroup>\r\n        \r\n                        <Row>\r\n                            <Col md={12}>\r\n                                <Bottom />\r\n                            </Col>\r\n                        </Row>\r\n        \r\n                    </Card>\r\n                )\r\n            }\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    egg_sandwich: state.egg_sandwich\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => (\r\n    {\r\n        openBox: (name, mode) => dispatch(openBox(name, mode)),\r\n        openEditBox: (box, type, id) => dispatch(openEditBox(box, type, id)),\r\n        removeBox: (box, type, id) => dispatch(removeBox(box, type, id)),\r\n        updateCurrentNav: (index) => dispatch(updateCurrentNav(index))\r\n    }\r\n)\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(EggSandwich)","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Row, Col, Card, ListGroup, ButtonToolbar, Button } from 'react-bootstrap';\r\nimport NumberInput from '../common/numberInput.js';\r\n\r\nimport { addBox, closeBox, updateBox } from '../../redux/actions/bk_fav_action';\r\n\r\nclass Bagel extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        let list = {\r\n            bagel: {},\r\n            whip: {}\r\n        };\r\n        if (this.props.favorites.mode === 'add'){ \r\n            for (let key in this.props.favorites.bagel){ list.bagel[key] = 0; }\r\n            for (let key in this.props.favorites.whip){ list.whip[key] = 0; }\r\n        }\r\n        else {\r\n            list = this.props.favorites[this.props.favorites.box].list[this.props.favorites.id];\r\n        }\r\n        \r\n        this.state = {\r\n            list: list,\r\n            bagel_qty: (this.props.favorites.mode === 'edit' ? this.props.favorites[this.props.favorites.box].bagel_max : 0),\r\n            bagel_err: false,\r\n            bagel_max: this.props.favorites[this.props.favorites.box].bagel_max,\r\n            whip_qty: (this.props.favorites.mode === 'edit' ? this.props.favorites[this.props.favorites.box].whip_max : 0),\r\n            whip_err: false,\r\n            whip_max: this.props.favorites[this.props.favorites.box].whip_max,\r\n\r\n\r\n            sandwich_qty: 0,\r\n            cookie_qty: 0,\r\n            chip_qty: 0,\r\n            drink_qty: 0,\r\n            error: false,\r\n            sandwich_err: false,\r\n            cookie_err: false,\r\n            chip_err: false,\r\n            drink_err: false,\r\n            error_msg: '',\r\n            // max_bagel: (this.props.box === 'baker_dozen' ? 13 : 24),\r\n            // max_whip: (this.props.box === 'baker_dozen' ? 2 : 4)\r\n        }\r\n    }\r\n\r\n    checkQty = (type, name, qty) => {\r\n        let tmp_qty = 0;\r\n        for (let key in this.state.list[type]){\r\n            if (key !== name){\r\n                tmp_qty = tmp_qty + this.state.list[type][key];\r\n            }\r\n            else {\r\n                tmp_qty = tmp_qty + qty\r\n            }\r\n        }\r\n\r\n        return tmp_qty;\r\n    }\r\n\r\n    closeBox = () => {\r\n        this.props.closeBox();\r\n    }\r\n\r\n    addBox = () => {\r\n        if (this.validateBox()){\r\n\r\n        }\r\n        else {\r\n            this.props.addBox(this.state.list);\r\n        }\r\n    }\r\n\r\n    updateBox = () => {\r\n        if (this.validateBox()){\r\n\r\n        }\r\n        else {\r\n            this.props.updateBox(this.state.list);\r\n        }\r\n    }\r\n\r\n    validateBox = () => {\r\n        let error = false;        \r\n        if (this.state.bagel_qty !== this.state.bagel_max){\r\n            this.setState({bagel_err: true}, () => {\r\n                setTimeout(() => {\r\n                    this.setState({\r\n                        whip_err: false\r\n                    })\r\n                }, 1000)\r\n            });\r\n            error = true;\r\n        }\r\n\r\n        if (this.state.whip_qty !== this.state.whip_max){\r\n            this.setState({whip_err: true}, () => {\r\n                setTimeout(() => {\r\n                    this.setState({\r\n                        whip_err: false\r\n                    })\r\n                }, 1000)\r\n            });\r\n            error = true;\r\n        }\r\n        return error;\r\n    }\r\n\r\n    printBagels = () => {\r\n        let print = [];\r\n        let index = 0;\r\n        const items = this.props.favorites.bagel;\r\n        \r\n        for (let key in items) {\r\n            print.push(\r\n                <Col md={6} className=\"wrap_qty mb-3\" key={'bagel_input'+index}>\r\n                    {items[key].name}\r\n                    <NumberInput \r\n                        readonly={true}\r\n                        onChange={this.onChangeBagel.bind(this)}\r\n                        name={key}\r\n                        value={this.state.list.bagel[key]}\r\n                        style={{float: 'left', textAlign: 'left'}}\r\n                    />\r\n                </Col>\r\n            )\r\n            index++;\r\n        }\r\n\r\n        return print;\r\n    }\r\n\r\n    onChangeBagel = (name, qty) => {\r\n        const checkQty = this.checkQty('bagel', name, qty)\r\n        if (checkQty < (this.state.bagel_max + 1)){\r\n            this.setState({\r\n                list: {\r\n                    ...this.state.list,\r\n                    bagel: {\r\n                        ...this.state.list.bagel,\r\n                        [name]: qty\r\n                    }\r\n                },\r\n                bagel_qty: checkQty\r\n            })\r\n        }\r\n        else {\r\n            this.setState({\r\n                bagel_err: true\r\n            }, () => {\r\n                setTimeout(() => {\r\n                    this.setState({\r\n                        bagel_err: false\r\n                    })\r\n                }, 1000)\r\n            })\r\n            return 'error';\r\n        }\r\n    }\r\n\r\n    printWhip = (key) => {\r\n        return (\r\n            <Col md={6} className=\"wrap_qty mb-3\" >\r\n                {this.props.favorites.whip[key].name}\r\n                <NumberInput \r\n                    readonly={true}\r\n                    onChange={this.onChangeWhip.bind(this)}\r\n                    name={key}\r\n                    value={this.state.list.whip[key]}\r\n                    style={{float: 'left', textAlign: 'left'}}\r\n                />\r\n            </Col>\r\n        );\r\n    }\r\n\r\n    onChangeWhip = (name, qty) => {\r\n        const checkQty = this.checkQty('whip', name, qty)\r\n        if (checkQty < this.state.whip_max + 1){\r\n            this.setState({\r\n                list: {\r\n                    ...this.state.list,\r\n                    whip: {\r\n                        ...this.state.list.whip,\r\n                        [name]: qty\r\n                    }\r\n                },\r\n                whip_qty: checkQty\r\n            })\r\n        }\r\n        else {\r\n            this.setState({\r\n                whip_err: true\r\n            }, () => {\r\n                setTimeout(() => {\r\n                    this.setState({\r\n                        whip_err: false\r\n                    })\r\n                }, 1000)\r\n            })\r\n            return 'error';\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Card className=\"col-md-12 p-0\">\r\n\r\n                <Card.Header>\r\n                    <p className=\"item-header\" style={{paddingLeft: '10px', fontSize: '20px', color: '#b36a3b'}}>{this.props.favorites[this.props.favorites.box].name}</p>\r\n                    <ul>\r\n                        <li>Choose your bagels</li>\r\n                        <li>Choose your Whipped Shmear</li>\r\n                    </ul>\r\n                </Card.Header>\r\n\r\n                <Card.Body className={this.state.bagel_err ? 'su-alert' : ''}>\r\n                    <Card.Text>You selected <strong>{this.state.bagel_qty} of {this.state.bagel_max}</strong> Bagels.</Card.Text>\r\n                </Card.Body>\r\n\r\n                <ListGroup style={{marginTop: '10px'}}>\r\n\r\n                    <ListGroup.Item className=\"menu-list\">\r\n\r\n                        <Row style={{marginTop: '5px'}}>\r\n                            <Col className=\"wrap_name\">\r\n                                <p className=\"item-header\" style={{marginBottom: '10px', paddingLeft: '0px', fontSize: '25px', color: '#b36a3b'}}>Fresh-Baked Bagels</p>\r\n                                <p className=\"item-description\"></p>\r\n                            </Col>\r\n                        </Row>\r\n                        \r\n                        <Row>\r\n                            {this.printBagels()}\r\n                        </Row>\r\n\r\n                    </ListGroup.Item>\r\n\r\n                </ListGroup>\r\n\r\n                {\r\n                    this.props.favorites[this.props.favorites.box].whip_max === 0 ?\r\n                    null\r\n                    :\r\n                    <React.Fragment>\r\n                        <Card.Body className={this.state.whip_err ? 'su-alert' : ''}>\r\n                            <Card.Text>You selected <strong>{this.state.whip_qty} of {this.state.whip_max}</strong> Whips.</Card.Text>\r\n                        </Card.Body>\r\n\r\n                        <ListGroup style={{marginTop: '10px'}}>\r\n\r\n                            <ListGroup.Item className=\"menu-list\">\r\n\r\n                                <Row style={{marginTop: '5px'}}>\r\n                                    <Col className=\"wrap_name\">\r\n                                        <p className=\"item-header\" style={{marginBottom: '10px', paddingLeft: '0px', fontSize: '25px', color: '#b36a3b'}}>Double-Whipped Shmear</p>\r\n                                        <p className=\"item-description\"></p>\r\n                                    </Col>\r\n                                </Row>\r\n                                \r\n                                <Row>\r\n                                    {this.printWhip('plain')}\r\n                                    {this.printWhip('onion')}\r\n                                    {this.printWhip('salmon')}\r\n                                </Row>\r\n\r\n                                <Row style={{marginTop: '5px'}}>\r\n                                    <Col className=\"wrap_name\">\r\n                                        <p className=\"item-header\" style={{marginBottom: '10px', paddingLeft: '0px', fontSize: '15px', color: '#b36a3b'}}>25% Reduced Fat</p>\r\n                                        <p className=\"item-description\"></p>\r\n                                    </Col>\r\n                                </Row>\r\n                                \r\n                                <Row>\r\n                                    {this.printWhip('plainRF')}\r\n                                    {this.printWhip('garden')}\r\n                                    {this.printWhip('honey')}\r\n                                    {this.printWhip('jalapeno')}\r\n                                    {this.printWhip('strawberry')}\r\n                                </Row>\r\n\r\n                            </ListGroup.Item>\r\n\r\n                        </ListGroup>\r\n                    </React.Fragment>\r\n                }                \r\n\r\n                <Row>\r\n                    <Col>\r\n                        <ButtonToolbar className=\"mt-3\">\r\n                            {\r\n                                this.props.favorites.mode === 'add' ?\r\n                                <Button variant=\"primary\" size=\"md\" onClick={this.addBox.bind(this)} className=\"add-btn\">\r\n                                    Add\r\n                                </Button>\r\n                                :\r\n                                <Button variant=\"primary\" size=\"md\" onClick={this.updateBox.bind(this)} className=\"add-btn\">\r\n                                    Update\r\n                                </Button>\r\n                            }\r\n                            <Button variant=\"light\" size=\"md\" onClick={this.closeBox.bind(this)} className=\"cancel-btn ml-2\">\r\n                                Cancel\r\n                            </Button>\r\n                        </ButtonToolbar>\r\n                    </Col>\r\n                </Row>\r\n\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    favorites: state.bk_fav_reducer\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => (\r\n    {\r\n        addBox: (list) => dispatch(addBox(list)),\r\n        closeBox: () => dispatch(closeBox()),\r\n        updateBox: (id, list) => dispatch(updateBox(id, list))\r\n    }\r\n)\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Bagel)","import {\r\n    UPDATE_BK_QTY,\r\n    OPEN_BK_BOX,\r\n    OPEN_EDIT_BK_BOX,\r\n    CLOSE_BK_BOX,\r\n    ADD_BK_BOX,\r\n    UPDATE_BK_BOX,\r\n    REMOVE_BK_BOX,\r\n    ADD_BK_PASTRY,\r\n    UPDATE_BK_PASTRY,\r\n    CLOSE_BK_PASTRY,\r\n    REMOVE_BK_PASTRY\r\n} from './actionTypes.js'\r\n\r\nexport const updateQty = (name, qty) => ({\r\n    type: UPDATE_BK_QTY,\r\n    payload: {\r\n        name,\r\n        qty\r\n    }\r\n})\r\n\r\nexport const openBox = (name, mode) => ({\r\n    type: OPEN_BK_BOX,\r\n    payload: {\r\n        name,\r\n        mode\r\n    }\r\n})\r\n\r\nexport const openEditBox = (box, id) => ({\r\n    type: OPEN_EDIT_BK_BOX,\r\n    payload: {\r\n        box,\r\n        id\r\n    }\r\n})\r\n\r\nexport const closeBox = () => ({\r\n    type: CLOSE_BK_BOX\r\n})\r\n\r\nexport const addBox = (list) => ({\r\n    type: ADD_BK_BOX,\r\n    payload: {\r\n        list\r\n    }\r\n})\r\n\r\nexport const updateBox = (list) => ({\r\n    type: UPDATE_BK_BOX,\r\n    payload: {\r\n        list\r\n    }\r\n})\r\n\r\nexport const removeBox = (box, id) => ({\r\n    type: REMOVE_BK_BOX,\r\n    payload: {\r\n        box,\r\n        id\r\n    }\r\n})\r\n\r\nexport const closePastry = () => ({\r\n    type: CLOSE_BK_PASTRY\r\n})\r\n\r\nexport const addPastry = (item) => ({\r\n    type: ADD_BK_PASTRY,\r\n    payload: {\r\n        item\r\n    }\r\n})\r\n\r\nexport const updatePastry = (item) => ({\r\n    type: UPDATE_BK_PASTRY,\r\n    payload: {\r\n        item\r\n    }\r\n})\r\n\r\nexport const removePastry = (item) => ({\r\n    type: REMOVE_BK_PASTRY,\r\n    payload: {\r\n        item\r\n    }\r\n})","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Row, Col, ButtonToolbar, Button, ListGroup, Modal } from 'react-bootstrap';\r\n// import NumberInput from '../common/numberInput.js';\r\n\r\nimport { addPastry, closePastry, updatePastry } from '../../redux/actions/bk_fav_action';\r\n\r\nclass Pastry extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        let selected = null;\r\n\r\n        // if (this.props.mode === 'edit'){ \r\n        //     selected = this.props.fresh_salads[this.props.box].list[this.props.id]; \r\n        // }\r\n\r\n        this.state = {\r\n            selected: selected,\r\n            error: false,\r\n            error_msg: ''\r\n        }\r\n        \r\n    }\r\n\r\n    closePastry = () => {\r\n        this.props.closePastry();\r\n    }\r\n\r\n    addPastry = () => {\r\n        if (this.state.selected === null){\r\n            this.displayErr();\r\n        }\r\n        else {\r\n            this.props.addPastry(this.state.selected);\r\n        }\r\n    }\r\n\r\n    updatePastry = () => {\r\n        if (this.state.selected === null){\r\n            this.displayErr();\r\n        }\r\n        else {\r\n            this.props.updatePastry(this.state.selected);\r\n        }\r\n    }\r\n\r\n    displayErr = () => {\r\n        this.setState({\r\n            error: true\r\n        })\r\n    }\r\n\r\n    onSelectItem = (key) => {\r\n        this.setState({\r\n            selected: key\r\n        });\r\n    }\r\n\r\n    printItems = () => {\r\n        let print = [];\r\n        let index = 0;\r\n        for (let key in this.props.favorites[this.props.box].items){\r\n            const name = this.props.favorites[this.props.box].items[key].name;\r\n            print.push(\r\n                <Button onClick={this.onSelectItem.bind(this, key)} className={(this.state.selected === key ? 'btn-select' : 'btn-unselect') + ' mr-1 mb-1'} key={'item_'+index}>\r\n                    {name}\r\n                </Button>\r\n            )\r\n            index++;\r\n        }\r\n\r\n        return (\r\n                <ButtonToolbar>\r\n                    {print}\r\n                </ButtonToolbar>\r\n            );\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <Modal show={true}>\r\n                <Modal.Header style={{fontWeight: '600'}}>\r\n                    Choose Muffin or Strudel\r\n                </Modal.Header>\r\n\r\n                <Modal.Body style={{padding: '5px'}}>\r\n                    <ListGroup >\r\n\r\n                        <ListGroup.Item className=\"menu-list es-list-group-item\" style={{paddingTop: '0px', marginTop: '0px', borderWidth: '0px'}}>\r\n\r\n                            {/* <Row style={{marginTop: '25px'}}>\r\n                                <Col className=\"wrap_name\">\r\n                                    <p className=\"item-header\" style={{marginBottom: '0px', paddingLeft: '0px', color: '#b36a3b'}}>Cookie</p>\r\n                                </Col>\r\n                            </Row> */}\r\n\r\n                            <Row className=\"mt-3 mb-3\">\r\n                                <Col md={12}>\r\n                                    {\r\n                                        this.printItems()\r\n                                    }\r\n                                </Col>\r\n                            </Row>\r\n\r\n                        </ListGroup.Item>\r\n\r\n                    </ListGroup>\r\n                </Modal.Body>\r\n\r\n                <Modal.Footer style={{justifyContent: 'left'}}>\r\n                    <ButtonToolbar className=\"\">\r\n                        {\r\n                            this.props.mode === 'add' ?\r\n                            <Button variant=\"primary\" onClick={this.addPastry.bind(this)} className=\"add-btn\">\r\n                                Add\r\n                            </Button>\r\n                            :\r\n                            <Button variant=\"primary\" onClick={this.updatePastry.bind(this)} className=\"add-btn\">\r\n                                Update\r\n                            </Button>\r\n                        }\r\n                        <Button variant=\"light\" onClick={this.closePastry.bind(this)} className=\"cancel-btn ml-2\">\r\n                            Cancel\r\n                        </Button>\r\n                    </ButtonToolbar>\r\n                </Modal.Footer>\r\n\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    favorites: state.bk_fav_reducer\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => (\r\n    {\r\n        addPastry: (item) => dispatch(addPastry(item)),\r\n        closePastry: () => dispatch(closePastry()),\r\n        updatePastry: (item) => dispatch(updatePastry(item))\r\n    }\r\n)\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Pastry)","\r\nexport default {\r\n    subHeader: {\r\n        marginTop: '1rem',\r\n        marginBottom: '10px',\r\n        paddingLeft: '20px',\r\n        fontWeight: '600',\r\n        fontSize: '17px'\r\n    },\r\n    itemHeader: {\r\n        // marginTop: '1rem',\r\n        marginBottom: '10px',\r\n        paddingLeft: '5px',\r\n        fontWeight: '600',\r\n        fontSize: '17px'\r\n    },\r\n    itemHeader_sp: {\r\n        marginTop: '1rem',\r\n        marginBottom: '10px',\r\n        paddingLeft: '20px',\r\n        fontWeight: '600',\r\n        fontSize: '17px'\r\n    },\r\n    style_listGroup: {\r\n        padding: '0px',\r\n        paddingLeft: '20px',\r\n        borderBottom: '1px solid #dadada'\r\n    },\r\n    listGroupItem: {\r\n    }\r\n}","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Row, Col, Card, ListGroup, ButtonToolbar, Button } from 'react-bootstrap';\r\nimport NumberInput from '../common/numberInput.js';\r\nimport TopNav from '../common/TopNav.js';\r\n\r\nimport { updateCurrentNav } from '../../redux/actions/main';\r\nimport { updateQty, openBox, openEditBox, removeBox, removePastry } from '../../redux/actions/bk_fav_action';\r\n\r\n// import IndividualBreakfastBoxes from './IndividualBreakfastBoxes';\r\nimport Bottom from '../bottom';\r\n\r\nimport Bagel from './Bagel';\r\nimport Pastry from './Pastry';\r\n\r\nimport styles from '../common/style.js';\r\n\r\n// const subHeader = {\r\n//     marginTop: '1rem',\r\n//     marginBottom: '10px',\r\n//     paddingLeft: '20px',\r\n//     fontWeight: '600',\r\n//     fontSize: '17px'\r\n// }\r\n// const style_listGroup = {\r\n//     padding: '0px',\r\n//     paddingLeft: '20px',\r\n//     borderBottom: '1px solid #dadada'\r\n// } \r\n\r\nclass BreakfastFavorites extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.state = {\r\n            total: this.props.favorites.total\r\n        }\r\n\r\n        this.props.updateCurrentNav(2);\r\n    }\r\n\r\n    onChangeHandler = (name, value) => {\r\n        this.props.updateQty(name, value);\r\n    }\r\n\r\n    openBox = (name) => {\r\n        this.props.openBox(name, 'add');\r\n    }\r\n\r\n    openEditBox = (box, id) => {\r\n        this.props.openEditBox(box, id);\r\n    }\r\n\r\n    removeBox = (box, id) => {\r\n        this.props.removeBox(box, id);\r\n    }\r\n\r\n    printItem = (key) => {\r\n\r\n        return (\r\n            <React.Fragment>\r\n\r\n                <Row style={{marginTop: '10px'}}>\r\n                    <Col className=\"wrap_name\">\r\n                        <p className=\"item-header\" style={{marginBottom: '0px', paddingLeft: '0px', color: '#b36a3b'}}>{this.props.favorites[key].name}</p>\r\n                        <p className=\"item-description\">{this.props.favorites[key].description}</p>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                    <Col className=\"wrap_qty\">\r\n                        {/* <p style={{float: 'left', fontWeight: '600'}}>Serves up to {serves}</p> */}\r\n                        <NumberInput \r\n                        readonly={true}\r\n                        onChange={this.onChangeHandler.bind(this)}\r\n                        name={key}\r\n                        value={this.props.favorites[key].qty}\r\n                    />\r\n                        <p style={{float: 'right', fontWeight: '600'}}>${this.props.favorites[key].price}</p> \r\n                    </Col>\r\n                </Row>\r\n\r\n            </React.Fragment>\r\n        )\r\n    }\r\n    \r\n    printItemWithBox = (key) => {\r\n        let serves = null;\r\n        if (key === 'for_group'){serves = 20}\r\n        else if (key === 'salmon_platter'){serves = 13}\r\n        else if (key === 'nosh_box'){serves = 21}\r\n\r\n        return (\r\n            <React.Fragment>\r\n\r\n                <Row style={{marginTop: '10px'}}>\r\n                    <Col className=\"wrap_name\">\r\n                        <p className=\"item-header\" style={{marginBottom: '0px', paddingLeft: '0px', color: '#b36a3b'}}>{this.props.favorites[key].name}</p>\r\n                        <p className=\"item-description\">{this.props.favorites[key].description}</p>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                    <Col className=\"wrap_qty\">\r\n                        {  \r\n                            key === 'bagel_shmear_break_box' || key === 'Pastry_breakfast_box' ?\r\n                            null :\r\n                            <p style={{float: 'left', fontWeight: '600'}}>Serves up to {serves}</p>\r\n                        }\r\n                        <NumberInput \r\n                            noleft={true}\r\n                            readonly={true}\r\n                            onChange={this.openBox.bind(this)}\r\n                            name={key}\r\n                            value={this.props.favorites[key].qty}\r\n                        />\r\n                        <p style={{float: 'right', fontWeight: '600'}}>${this.props.favorites[key].price}</p> \r\n                    </Col>\r\n                </Row>\r\n\r\n                {\r\n                    this.props.favorites[key].qty === 0 ?\r\n                    null\r\n                    :\r\n                    <React.Fragment>\r\n                    {\r\n                        key === 'Pastry_breakfast_box' ?\r\n                        <Row style={{marginTop: '1rem', marginBottom: '1rem'}}>\r\n                            { this.printPastry() }\r\n                        </Row>\r\n                        :\r\n                        <Row style={{marginTop: '1rem', marginBottom: '1rem', borderBottom: '1px solid #e1e1e1'}}>\r\n                            { this.printSelectedBox(key) }\r\n                        </Row>\r\n                    }\r\n                    </React.Fragment>\r\n                }\r\n\r\n            </React.Fragment>\r\n        )\r\n\r\n    }\r\n\r\n    printSelectedBox = (box) => {\r\n        let print = [];\r\n        let box_count = 0;\r\n        const list = this.props.favorites[box].list;\r\n        for (let box_id in list){\r\n            let print_li = [];\r\n            let tmp_count = 0;\r\n\r\n            const items = ['bagel', 'whip'];\r\n\r\n            for (let item_id in items){\r\n                const item = items[item_id];\r\n                print_li.push(<p className=\"mb-0\" style={{color: '#b36a3b'}} key={box+'_'+item_id}>{item}</p>)\r\n                for (let key in list[box_id][item]){\r\n                    if (list[box_id][item][key] !== 0){\r\n                        let name = this.props.favorites[item][key].name;\r\n                        if (item === 'whip' && key !== 'plain' && key !== 'onion' && key !== 'salmon'){\r\n                            name = 'Reduced Fat ' + name\r\n                        }\r\n                        print_li.push(<li className=\"\" key={'_child_' + tmp_count}> - { name + ' : ' + list[box_id][item][key] } </li>)\r\n                        tmp_count++;\r\n                    }\r\n                }\r\n            }\r\n\r\n            print.push(\r\n                <Col md={4} className=\"selected_box_wrap\" style={{padding: '5px'}} key={'ex_box' + box_count}>\r\n                    <div key={box_count} className=\"\" style={{padding: '5px', border: '1px solid #e1e1e1'}}>\r\n                        <h3 className=\"p-0\" style={{fontSize: '1rem'}}>{box} #{box_count+1}\r\n                            <ButtonToolbar style={{float: 'right'}}>\r\n                                <Button onClick={this.openEditBox.bind(this, box, box_count)} className=\"edit-btn\">Edit</Button>\r\n                                <Button onClick={this.removeBox.bind(this, box, box_count)} className=\"remove-btn\">Remove</Button>\r\n                            </ButtonToolbar>\r\n                        </h3>\r\n                        <ul key={box_count} className=\"\" style={{height: '', paddingLeft: '10px', listStyle: 'none'}}> {print_li} </ul>\r\n                    </div>\r\n                </Col>\r\n            )\r\n            box_count++;\r\n        }\r\n\r\n        return print;\r\n    }\r\n\r\n    printPastry = () => {\r\n        let printPastry = [];\r\n        let count = 0;\r\n        const list = this.props.favorites.Pastry_breakfast_box.list;\r\n        \r\n        for (let key in list){\r\n\r\n            let name = this.props.favorites.Pastry_breakfast_box.items[key].name;\r\n            printPastry.push(\r\n                <Col md={12} key={name+'_selected_item_'+count} className=\"mb-1\">\r\n                    <NumberInput \r\n                        noright={true}\r\n                        readonly={true}\r\n                        onChange={this.removePastry.bind(this, key)}\r\n                        name={'pastry_'+key}\r\n                        value={list[key]}\r\n                    />\r\n                    <p className=\"mb-0\" style={{float: 'right'}}>- {name}</p>\r\n                </Col>\r\n            )\r\n            count++;\r\n\r\n        }\r\n\r\n        return printPastry;\r\n    }\r\n\r\n    removePastry = (item) => {\r\n        this.props.removePastry(item)\r\n    }\r\n\r\n    render() {\r\n        if (this.props.favorites.box !== null && this.props.favorites.box !== 'Pastry_breakfast_box'){\r\n            return <Bagel box={this.props.favorites.box} />\r\n        }\r\n        else {\r\n            return(\r\n                <Card className=\"col-md-12 p-0 menu-card\">\r\n\r\n                    <Card.Header>\r\n                        <TopNav />\r\n                    </Card.Header>\r\n\r\n                    <Card.Body>\r\n                        <Card.Title>Breakfast Favorites</Card.Title>\r\n                    </Card.Body>\r\n\r\n                    <ListGroup>\r\n\r\n                        <ListGroup.Item className=\"menu-list es-list-group-item\" style={styles.listGroupItem}>\r\n\r\n                            {this.printItemWithBox('for_group')}\r\n\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item className=\"menu-list es-list-group-item\" style={styles.listGroupItem}>\r\n\r\n                            {this.printItemWithBox('salmon_platter')}\r\n\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item className=\"menu-list es-list-group-item\" style={styles.listGroupItem}>\r\n\r\n                            {this.printItemWithBox('nosh_box')}\r\n\r\n                        </ListGroup.Item>\r\n\r\n                    </ListGroup>\r\n\r\n\r\n                    <div className=\"sub-header col-6\">\r\n                        <p>Individual Breakfast Boxes</p>\r\n                        <span>Perfect for groups on the go, served with utensils</span>\r\n                    </div>\r\n\r\n                    <ListGroup>\r\n\r\n                        <ListGroup.Item className=\"menu-list es-list-group-item\" style={styles.listGroupItem}>\r\n\r\n                            {this.printItemWithBox('bagel_shmear_break_box')}\r\n\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item className=\"menu-list es-list-group-item\" style={styles.listGroupItem}>\r\n\r\n                            {this.printItem('power_protein_breakfast_box')}\r\n\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item className=\"menu-list es-list-group-item\" style={styles.listGroupItem}>\r\n\r\n                            {this.printItemWithBox('Pastry_breakfast_box')}\r\n\r\n                            {\r\n                                this.props.favorites.box === 'Pastry_breakfast_box' ?\r\n                                <Pastry box={this.props.favorites.box} mode='add' />\r\n                                :\r\n                                null\r\n                            }\r\n\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item className=\"menu-list es-list-group-item total\">\r\n                            <Row>\r\n                                <Col>\r\n                                    ${this.props.favorites.total}\r\n                                </Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n\r\n                    </ListGroup>\r\n                    \r\n\r\n                    <Row>\r\n                        <Col md={12}>\r\n                            <Bottom />\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </Card>\r\n            )\r\n        }\r\n\r\n\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    favorites: state.bk_fav_reducer\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => (\r\n    {\r\n        updateQty: (name, qty) => dispatch(updateQty(name, qty)),\r\n        openBox: (name, mode) => dispatch(openBox(name, mode)),\r\n        openEditBox: (box, id) => dispatch(openEditBox(box, id)),\r\n        removeBox: (box, key) => dispatch(removeBox(box, key)),\r\n        removePastry: (item) => dispatch(removePastry(item)),\r\n        updateCurrentNav: (index) => dispatch(updateCurrentNav(index))\r\n    }\r\n)\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(BreakfastFavorites)","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Row, Col, Card, ButtonToolbar, Button, ListGroup } from 'react-bootstrap';\r\nimport NumberInput from '../common/numberInput.js';\r\n\r\nimport { addBox, closeBox, updateBox } from '../../redux/actions/sweet_snack_action';\r\n\r\nclass Box extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        let list = {};\r\n\r\n        if (this.props.mode === 'edit'){ \r\n            list = this.props.egg_sandwich[this.props.box][this.props.type].list[this.props.id]; \r\n        }\r\n        else if (this.props.box === 'noshbox'){\r\n            list = {\r\n                    applewood: 0,\r\n                    turkey: 0,\r\n                    ham: 0\r\n                }\r\n        }\r\n\r\n        this.state = {\r\n            qty: 0,\r\n            list: list,\r\n            error: false,\r\n            error_msg: '',\r\n            max_qty: (this.props.type === 'half' ? 6 : 12)\r\n        }\r\n        \r\n    }\r\n\r\n    onChangeInput = (name, qty) => {\r\n        this.setState({error: false})\r\n\r\n        let list = this.state.list;\r\n        // list[name] = qty;\r\n        const max_qty = this.state.max_qty;\r\n        let tmp_qty = 0;\r\n        for (let key in list){\r\n            if (key !== name){\r\n                tmp_qty = tmp_qty + list[key];    \r\n            }\r\n            else{\r\n                tmp_qty = tmp_qty + qty;\r\n            }\r\n        }\r\n        \r\n        if (tmp_qty <= max_qty){\r\n            list[name] = qty;\r\n            this.setState({\r\n                list: list,\r\n                qty: tmp_qty\r\n            })\r\n        }\r\n        else {\r\n            this.setState({\r\n                error: true,\r\n                error_msg: 'qty max error'\r\n            }, () => {\r\n                setTimeout(() => {\r\n                    this.setState({\r\n                        error: false\r\n                    })\r\n                }, 1000)\r\n            })\r\n            return 'error';\r\n        }\r\n    }\r\n\r\n    closeBox = () => {\r\n        this.props.closeBox();\r\n    }\r\n\r\n    addBox = () => {\r\n        if (this.validateBox()){\r\n\r\n        }\r\n        else {\r\n            this.props.addBox(this.state.list);\r\n        }\r\n    }\r\n\r\n    updateBox = () => {\r\n        if (this.validateBox()){\r\n\r\n        }\r\n        else {\r\n            this.props.updateBox(this.state.list);\r\n        }\r\n    }\r\n\r\n    validateBox = () => {\r\n        let error = false;        \r\n        if (this.state.qty !== this.state.max_qty){\r\n            this.setState({error: true});\r\n            error = true;\r\n        }\r\n        return error;\r\n    }\r\n\r\n    printItem = () => {\r\n        let print = [];\r\n        let index = 0;\r\n        const items = this.props.sweet_snack[this.props.box].items;\r\n        for (let key in items) {\r\n            print.push(\r\n                <Col md={12} className=\"wrap_qty mb-3\" key={'sandwich_input'+index}>\r\n                    {items[key].name}\r\n                    <NumberInput \r\n                        readonly={true}\r\n                        onChange={this.onChangeInput.bind(this)}\r\n                        name={key}\r\n                        value={this.state.list[key]}\r\n                        style={{float: 'left', textAlign: 'left'}}\r\n                    />\r\n                </Col>\r\n            )\r\n            index++;\r\n        }\r\n\r\n        return print;\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <Card className=\"col-md-12 p-0\">\r\n                <Card.Header>\r\n\r\n                </Card.Header>\r\n\r\n                <Card.Body>\r\n                    <Card.Title>\r\n                        Select Your Sandwiches\r\n                        <span style={{ textTransform: 'initial', marginLeft: '12px', fontSize: '17px', color: '#545454'}}>\r\n                        {\r\n                            this.props.type === 'half' ?\r\n                            'Select 6'\r\n                            :\r\n                            'Select 12'\r\n                        }\r\n                        </span>\r\n                    </Card.Title>\r\n                </Card.Body>\r\n\r\n                <Card.Body className={this.state.error ? 'su-alert' : ''}>\r\n                    <Card.Text>You selected <strong>{this.state.qty} of {this.state.max_qty}</strong> Sandwiches.</Card.Text>\r\n                </Card.Body>\r\n\r\n                <ListGroup variant=\"flush\">\r\n\r\n                    <ListGroup.Item className=\"menu-list\">\r\n                        <Row className=\"mb-3\">\r\n\r\n                            { this.printItem() }\r\n\r\n                        </Row>\r\n\r\n                        <Row>\r\n                            <Col>\r\n                                <ButtonToolbar className=\"mt-4\">\r\n                                    {\r\n                                        this.props.mode === 'add' ?\r\n                                        <Button variant=\"primary\" size=\"md\" onClick={this.addBox.bind(this)} className=\"add-btn\">\r\n                                            Add\r\n                                        </Button>\r\n                                        :\r\n                                        <Button variant=\"primary\" size=\"md\" onClick={this.updateBox.bind(this)} className=\"add-btn\">\r\n                                            Update\r\n                                        </Button>\r\n                                    }\r\n                                    <Button variant=\"light\" size=\"md\" onClick={this.closeBox.bind(this)} className=\"cancel-btn ml-2\">\r\n                                        Cancel\r\n                                    </Button>\r\n                                </ButtonToolbar>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                    </ListGroup.Item>\r\n\r\n                </ListGroup>\r\n\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    sweet_snack: state.sweet_snack\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => (\r\n    {\r\n        addBox: (list) => dispatch(addBox(list)),\r\n        closeBox: () => dispatch(closeBox()),\r\n        updateBox: (id, list) => dispatch(updateBox(id, list))\r\n    }\r\n)\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Box)","import {\r\n    UPDATE_SWEETSNACK_QTY,\r\n    OPEN_SWEETSNACK_BOX,\r\n    OPEN_EDIT_SWEETSNACK_BOX,\r\n    CLOSE_SWEETSNACK_BOX,\r\n    ADD_SWEETSNACK_BOX,\r\n    UPDATE_SWEETSNACK_BOX,\r\n    REMOVE_SWEETSNACK_BOX\r\n} from './actionTypes.js'\r\n\r\nexport const updateQty = (name, qty) => ({\r\n    type: UPDATE_SWEETSNACK_QTY,\r\n    payload: {\r\n        name,\r\n        qty\r\n    }\r\n})\r\n\r\nexport const openBox = (name, mode) => ({\r\n    type: OPEN_SWEETSNACK_BOX,\r\n    payload: {\r\n        name,\r\n        mode\r\n    }\r\n})\r\n\r\nexport const openEditBox = (box, type, id) => ({\r\n    type: OPEN_EDIT_SWEETSNACK_BOX,\r\n    payload: {\r\n        box,\r\n        type,\r\n        id\r\n    }\r\n})\r\n\r\nexport const closeBox = () => ({\r\n    type: CLOSE_SWEETSNACK_BOX\r\n})\r\n\r\nexport const addBox = (list) => ({\r\n    type: ADD_SWEETSNACK_BOX,\r\n    payload: {\r\n        list\r\n    }\r\n})\r\n\r\nexport const updateBox = (list) => ({\r\n    type: UPDATE_SWEETSNACK_BOX,\r\n    payload: {\r\n        list\r\n    }\r\n})\r\n\r\nexport const removeBox = (box, type, id) => ({\r\n    type: REMOVE_SWEETSNACK_BOX,\r\n    payload: {\r\n        box,\r\n        type,\r\n        id\r\n    }\r\n})","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Row, Col, Card, ListGroup, ButtonToolbar, Button } from 'react-bootstrap';\r\nimport NumberInput from '../common/numberInput.js';\r\nimport TopNav from '../common/TopNav.js';\r\n\r\nimport { updateCurrentNav } from '../../redux/actions/main';\r\nimport { updateQty, openBox, openEditBox, removeBox } from '../../redux/actions/sweet_snack_action';\r\n\r\nimport BoxController from './Box';\r\nimport Bottom from '../bottom';\r\n\r\n// import styles from '../common/style.js';\r\n\r\nclass SweetSnack extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.state = {\r\n            total: this.props.sweet_snack.total\r\n        }\r\n\r\n        this.props.updateCurrentNav(3);\r\n    }\r\n\r\n    onChangeHandler = (name, value) => {\r\n        this.props.updateQty(name, value);\r\n    }\r\n\r\n    openBox = (name) => {\r\n        this.props.openBox(name, 'add');\r\n    }\r\n\r\n    openEditBox = (box, type, id) => {\r\n        this.props.openEditBox(box, type, id);\r\n    }\r\n\r\n    removeBox = (box, type, id) => {\r\n        this.props.removeBox(box, type, id);\r\n    }\r\n\r\n    printSelectedBox = (box, type, list, index, num) => {\r\n        const names = this.props.sweet_snack[box].items;\r\n        let print = [];\r\n        let count = 0;\r\n        let total_qty = 0;\r\n\r\n        for (let key in names) {\r\n            if (list[key] !== 0){\r\n                if (typeof list[key] === 'undefined'){ return null; }\r\n                print.push(<li className=\"\" key={'_child_' + count}> { names[key].name + ' : ' + list[key] } </li>);\r\n                total_qty = total_qty + list[key];\r\n                count++;\r\n            }\r\n        }\r\n\r\n        if (total_qty === 0){return null;}\r\n        \r\n        return (\r\n            <Col md={6} style={{padding: '5px'}} key={'ex_box' + num}>\r\n                <div key={index} className=\"\" style={{padding: '5px', border: '1px solid #e1e1e1'}}>\r\n                    <h3 className=\"p-0\" style={{fontSize: '1rem'}}>#{num}\r\n                        <ButtonToolbar style={{float: 'right'}}>\r\n                            <Button onClick={() => {this.openEditBox(box, type, index)}} className=\"edit-btn\">Edit</Button>\r\n                            <Button onClick={() => {this.removeBox(box, type, index)}} className=\"remove-btn\">Remove</Button>\r\n                        </ButtonToolbar>\r\n                    </h3>\r\n                    <ul key={index} className=\"\" style={{height: '72px', paddingLeft: '10px', listStyle: 'none'}}> {print} </ul>\r\n                </div>\r\n            </Col>\r\n        )\r\n    }\r\n\r\n    printRow = (name, box, type, qty, list) => {\r\n        let count = 0;\r\n        return (\r\n            <React.Fragment>\r\n\r\n                <Row>\r\n                    <Col className=\"wrap_qty\">\r\n                        <NumberInput \r\n                            noleft={true}\r\n                            readonly={true}\r\n                            onChange={this.openBox.bind(this)}\r\n                            name={box + '_' + type}\r\n                            value={qty}\r\n                        />\r\n                        <p style={{float: 'right', fontWeight: '600'}}>{name} - ${this.props.sweet_snack[box][type].price}</p> \r\n                    </Col>\r\n                </Row>\r\n\r\n                {\r\n                    qty === 0 ?\r\n                    null\r\n                    :\r\n                    <Row style={{marginBottom: '1rem'}}>\r\n                        {\r\n                            list.map((row, index) => {\r\n                                if (row === null){return null;}\r\n                                else {\r\n                                    count++;\r\n                                    return this.printSelectedBox(box, type, row, index, count)\r\n                                }\r\n                            })\r\n                        }\r\n                    </Row>\r\n                }\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        if (this.props.sweet_snack.box === null)\r\n        {\r\n            return(\r\n                <Card className=\"col-md-12 p-0 menu-card\">\r\n    \r\n                    <Card.Header>\r\n                        <TopNav />\r\n                    </Card.Header>\r\n    \r\n                    <Card.Body>\r\n                        <Card.Title>Sweets & Snacks</Card.Title>\r\n                        <p className=\"item-description\" style={{marginTop: '0px', marginBottom: '0px'}}>Served with utensils, plates & napkins</p>\r\n                    </Card.Body>\r\n\r\n                    <ListGroup>\r\n\r\n                        <ListGroup.Item className=\"es-list-group-item\">\r\n\r\n                            <Row>\r\n                                <Col className=\"wrap_name\">\r\n                                    <p className=\"item-header\" style={{marginBottom: '0px', paddingLeft: '0px', color: '#b36a3b'}}>{this.props.sweet_snack.salad_large.name}</p>\r\n                                    <p className=\"item-description\">{this.props.sweet_snack.salad_large.description}</p>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                <Col className=\"wrap_qty\">\r\n                                    <p style={{float: 'left', fontWeight: '600'}}>Large - Serves up to 20</p>\r\n                                    <NumberInput \r\n                                        readonly={true}\r\n                                        onChange={this.onChangeHandler.bind(this)}\r\n                                        name=\"salad_large\"\r\n                                        value={this.props.sweet_snack.salad_large.qty}\r\n                                    />\r\n                                    <p style={{float: 'right', fontWeight: '600'}}>${this.props.sweet_snack.salad_large.price}</p> \r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                <Col className=\"wrap_qty\">\r\n                                    <p style={{float: 'left', fontWeight: '600'}}>Small - Serves up to 8</p>\r\n                                    <NumberInput \r\n                                        readonly={true}\r\n                                        onChange={this.onChangeHandler.bind(this)}\r\n                                        name=\"salad_small\"\r\n                                        value={this.props.sweet_snack.salad_small.qty}\r\n                                    />\r\n                                    <p style={{float: 'right', fontWeight: '600'}}>${this.props.sweet_snack.salad_small.price}</p> \r\n                                </Col>\r\n                            </Row>\r\n\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item className=\"menu-list es-list-group-item\">\r\n\r\n                            <Row>\r\n                                <Col className=\"wrap_name\">\r\n                                    <p className=\"item-header\" style={{marginBottom: '0px', paddingLeft: '0px', color: '#b36a3b'}}>Vanilla Strawberry Granola Parfait</p>\r\n                                    <p className=\"item-description\">{this.props.sweet_snack.parfait.description}</p>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                <Col className=\"wrap_qty\">\r\n                                    <p style={{float: 'left', fontWeight: '600'}}>Group - Serves up to 10</p>\r\n                                    <NumberInput \r\n                                        readonly={true}\r\n                                        onChange={this.onChangeHandler.bind(this)}\r\n                                        name=\"parfait\"\r\n                                        value={this.props.sweet_snack.parfait.qty}\r\n                                    />\r\n                                    <p style={{float: 'right', fontWeight: '600'}}>${this.props.sweet_snack.parfait.price}</p> \r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                <Col className=\"wrap_qty\">\r\n                                    <p style={{float: 'left', fontWeight: '600'}}>Individual - 12oz</p>\r\n                                    <NumberInput \r\n                                        readonly={true}\r\n                                        onChange={this.onChangeHandler.bind(this)}\r\n                                        name=\"parfait_individual\"\r\n                                        value={this.props.sweet_snack.parfait_individual.qty}\r\n                                    />\r\n                                    <p style={{float: 'right', fontWeight: '600'}}>${this.props.sweet_snack.parfait_individual.price}</p> \r\n                                </Col>\r\n                            </Row>\r\n\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n    \r\n                    <ListGroup>\r\n\r\n                        <ListGroup.Item className=\"es-list-group-item\">\r\n\r\n                            <Row>\r\n                                <Col className=\"wrap_name\">\r\n                                    <p className=\"item-header\" style={{marginBottom: '0px', paddingLeft: '0px', color: '#b36a3b'}}>{this.props.sweet_snack.noshbox.name}</p>\r\n                                    <p className=\"item-description\">{this.props.sweet_snack.noshbox.description}</p>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                <Col className=\"wrap_qty\">\r\n                                    <NumberInput \r\n                                        readonly={true}\r\n                                        onChange={this.onChangeHandler.bind(this)}\r\n                                        name=\"noshbox_half\"\r\n                                        value={this.props.sweet_snack.noshbox_half.qty}\r\n                                    />\r\n                                    <p style={{float: 'right', fontWeight: '600'}}>Half Dozen - ${this.props.sweet_snack.noshbox_half.price}</p> \r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                <Col className=\"wrap_qty\">\r\n                                    <NumberInput \r\n                                        readonly={true}\r\n                                        onChange={this.onChangeHandler.bind(this)}\r\n                                        name=\"noshbox_dozen\"\r\n                                        value={this.props.sweet_snack.noshbox_dozen.qty}\r\n                                    />\r\n                                    <p style={{float: 'right', fontWeight: '600'}}>Baker's Dozen - ${this.props.sweet_snack.noshbox_dozen.price}</p> \r\n                                </Col>\r\n                            </Row>\r\n\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item className=\"menu-list es-list-group-item total\">\r\n                            <Row>\r\n                                <Col>\r\n                                    ${this.props.sweet_snack.total}\r\n                                </Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n    \r\n                    </ListGroup>\r\n    \r\n                    <Row>\r\n                        <Col md={12}>\r\n                            <Bottom />\r\n                        </Col>\r\n                    </Row>\r\n    \r\n                </Card>\r\n            )\r\n            \r\n        }\r\n        else {\r\n            return <BoxController \r\n                            box={this.props.sweet_snack.box}\r\n                            type={this.props.sweet_snack.type}\r\n                            mode={this.props.sweet_snack.mode}\r\n                            id={this.props.sweet_snack.id}\r\n                       />\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    sweet_snack: state.sweet_snack\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => (\r\n    {\r\n        updateQty: (name, qty) => dispatch(updateQty(name,qty)),\r\n        openBox: (name, mode) => dispatch(openBox(name, mode)),\r\n        openEditBox: (box, type, id) => dispatch(openEditBox(box, type, id)),\r\n        removeBox: (box, type, id) => dispatch(removeBox(box, type, id)),\r\n        updateCurrentNav: (index) => dispatch(updateCurrentNav(index))\r\n    }\r\n)\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(SweetSnack)","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Row, Col, Card, ListGroup } from 'react-bootstrap';\r\nimport NumberInput from '../common/numberInput.js';\r\nimport TopNav from '../common/TopNav.js';\r\n\r\nimport { updateCurrentNav } from '../../redux/actions/main';\r\nimport { \r\n    updateBeverage,\r\n} from '../../redux/actions/beverage';\r\n\r\nimport Bottom from '../bottom';\r\n\r\n// const roundTo = require('roundto');\r\n\r\nclass Beverage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.props.updateCurrentNav(4);\r\n    }\r\n\r\n    onChangeBeverage = (name, qty) => {\r\n        this.props.updateBeverage(name, qty);\r\n    }\r\n\r\n    printDrink = (name) => {\r\n    const bevName = (name === \"hon_tea_green\" || name === \"hon_tea_half\" || name === \"vitamin_acai\" || name === \"vitamin_tropical\" || name === \"vitamin_strawberry\") ? this.props.beverage.list[name].description : this.props.beverage.list[name].name;\r\n        return (\r\n            <Col md={4} className=\"wrap_qty\">\r\n                <p style={{marginBottom: '5px', fontWeight: '600'}}>{bevName} - ${this.props.beverage.list[name].price}</p>\r\n                <NumberInput \r\n                    readonly={true}\r\n                    onChange={this.onChangeBeverage.bind(this)}\r\n                    name={name}\r\n                    value={this.props.beverage.list[name].qty}\r\n                    style={{float:'left', textAlign: 'left'}}\r\n                />\r\n            </Col>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Card className=\"col-md-12 p-0 menu-card\">\r\n\r\n                <Card.Header>\r\n                    <TopNav />\r\n                </Card.Header>\r\n\r\n                <Card.Body>\r\n                    <Card.Title>Beverages</Card.Title>\r\n                </Card.Body>\r\n\r\n\r\n                <ListGroup className=\"sp-list-group\" style={{}}>\r\n\r\n                    <ListGroup.Item className=\"menu-list es-list-group-item\" style={{marginTop: '25px', backgroundColor: '#e1e1e1', color: '#542608'}}>\r\n\r\n                        <Row>\r\n                            <Col md={9} className=\"wrap_name\">\r\n                                <p className=\"item-header\" style={{marginBottom: '0px', paddingLeft: '0px', color: '#bd6e39', fontSize: '25px'}}>Coffee for the Group</p>\r\n                                <p className=\"item-description\" style={{marginBottom: '0px'}}>Your choice of one of our 4 Fresh-Brewed Coffee Blends conveniently served in a portable & pourable box (includes cups, lids, half & half, sweeteners & stir sticks)</p>\r\n                                <p className=\"item-serves\" style={{marginBottom: '20px'}}>Serves up to 10 (96 oz.)</p>\r\n                            </Col>\r\n                            <Col className=\"wrap_price\">\r\n                                <p style={{float: 'right'}}>$16.99</p>\r\n                            </Col>\r\n                        </Row>\r\n                    \r\n                        <Row>\r\n                            <Col className=\"wrap_name\">\r\n                                <p className=\"item-header\" style={{marginBottom: '0px', paddingLeft: '0px', color: '#b36a3b'}}>{this.props.beverage.list.neighborhood_blend.name}</p>\r\n                                <p className=\"item-description\">{this.props.beverage.list.neighborhood_blend.description}</p>\r\n                            </Col>\r\n                            <Col className=\"wrap_qty\">\r\n                                <NumberInput \r\n                                    readonly={true}\r\n                                    onChange={this.onChangeBeverage.bind(this)}\r\n                                    name=\"neighborhood_blend\"\r\n                                    value={this.props.beverage.list.neighborhood_blend.qty}\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <Row>\r\n                            <Col className=\"wrap_name\">\r\n                                <p className=\"item-header\" style={{marginBottom: '0px', paddingLeft: '0px', color: '#b36a3b'}}>{this.props.beverage.list.neighborhood_decaf.name}</p>\r\n                                <p className=\"item-description\">{this.props.beverage.list.neighborhood_decaf.description}</p>\r\n                            </Col>\r\n                            <Col className=\"wrap_qty\">\r\n                                <NumberInput \r\n                                    readonly={true}\r\n                                    onChange={this.onChangeBeverage.bind(this)}\r\n                                    name=\"neighborhood_decaf\"\r\n                                    value={this.props.beverage.list.neighborhood_decaf.qty}\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <Row>\r\n                            <Col className=\"wrap_name\">\r\n                                <p className=\"item-header\" style={{marginBottom: '0px', paddingLeft: '0px', color: '#b36a3b'}}>{this.props.beverage.list.vanilla_hazelnut.name}</p>\r\n                                <p className=\"item-description\">{this.props.beverage.list.vanilla_hazelnut.description}</p>\r\n                            </Col>\r\n                            <Col className=\"wrap_qty\">\r\n                                <NumberInput \r\n                                    readonly={true}\r\n                                    onChange={this.onChangeBeverage.bind(this)}\r\n                                    name=\"vanilla_hazelnut\"\r\n                                    value={this.props.beverage.list.vanilla_hazelnut.qty}\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <Row>\r\n                            <Col className=\"wrap_name\">\r\n                                <p className=\"item-header\"  style={{marginBottom: '0px', paddingLeft: '0px', color: '#b36a3b'}}>{this.props.beverage.list.seasonal_roast.name}</p>\r\n                                <p className=\"item-description\">{this.props.beverage.list.seasonal_roast.description}</p>\r\n                            </Col>\r\n                            <Col className=\"wrap_qty\">\r\n                                <NumberInput \r\n                                    readonly={true}\r\n                                    onChange={this.onChangeBeverage.bind(this)}\r\n                                    name=\"seasonal_roast\"\r\n                                    value={this.props.beverage.list.seasonal_roast.qty}\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n\r\n                    </ListGroup.Item>\r\n\r\n                </ListGroup>\r\n\r\n\r\n                <ListGroup>\r\n\r\n                    <ListGroup.Item className=\"menu-list es-list-group-item\" style={{marginTop: '25px'}}>\r\n\r\n                        <Row style={{marginTop: '10px'}}>\r\n                            <Col className=\"wrap_name\">\r\n                                <p className=\"item-header\" style={{marginBottom: '0px', paddingLeft: '0px', color: '#b36a3b'}}>{this.props.beverage.list.orange_juice.name}</p>\r\n                                <p className=\"item-description\">Includes cups & ice</p>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <Row>\r\n                            <Col className=\"wrap_qty\">\r\n                                <p style={{float: 'left', fontWeight: '600'}}>Serves up to 6 (64 oz.)</p>\r\n                                <NumberInput \r\n                                    readonly={true}\r\n                                    onChange={this.onChangeBeverage.bind(this)}\r\n                                    name=\"orange_juice\"\r\n                                    value={this.props.beverage.list.orange_juice.qty}\r\n                                />\r\n                                <p style={{float: 'right', fontWeight: '600'}}>${this.props.beverage.list.orange_juice.price}</p> \r\n                            </Col>\r\n                        </Row>\r\n                    </ListGroup.Item>\r\n\r\n                    <ListGroup.Item className=\"menu-list es-list-group-item\">\r\n                        <Row style={{marginTop: '10px'}}>\r\n                            <Col className=\"wrap_name\">\r\n                                <p className=\"item-header\" style={{marginBottom: '0px', paddingLeft: '0px', color: '#b36a3b'}}>Tea & Lemonade For The Group</p>\r\n                                <p className=\"item-description\">Choose from Tea, Lemonade, Blackberry Lemonade<br/>(includes lemons, cups & ice)<br/><span style={{fontWeight: '600'}}>Serves up to 6 (64 oz.)</span></p>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <Row>\r\n                            <Col className=\"wrap_qty\">\r\n                                <NumberInput \r\n                                    readonly={true}\r\n                                    onChange={this.onChangeBeverage.bind(this)}\r\n                                    name=\"tea_forTheGroup\"\r\n                                    value={this.props.beverage.list.tea_forTheGroup.qty}\r\n                                />\r\n                                <p style={{float: 'right', fontWeight: '600'}}>Tea&nbsp;&nbsp; ${this.props.beverage.list.tea_forTheGroup.price}</p> \r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <Row>\r\n                            <Col className=\"wrap_qty\">\r\n                                <NumberInput \r\n                                    readonly={true}\r\n                                    onChange={this.onChangeBeverage.bind(this)}\r\n                                    name=\"lemonade_forTheGroup\"\r\n                                    value={this.props.beverage.list.lemonade_forTheGroup.qty}\r\n                                />\r\n                                <p style={{float: 'right', fontWeight: '600'}}>Lemonade&nbsp;&nbsp; ${this.props.beverage.list.lemonade_forTheGroup.price}</p> \r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <Row>\r\n                            <Col className=\"wrap_qty\">\r\n                                <NumberInput \r\n                                    readonly={true}\r\n                                    onChange={this.onChangeBeverage.bind(this)}\r\n                                    name=\"blackberryLemonade_forTheGroup\"\r\n                                    value={this.props.beverage.list.blackberryLemonade_forTheGroup.qty}\r\n                                />\r\n                                <p style={{float: 'right', fontWeight: '600'}}>Blackberry Lemonade&nbsp;&nbsp; ${this.props.beverage.list.blackberryLemonade_forTheGroup.price}</p> \r\n                            </Col>\r\n                        </Row>\r\n                    </ListGroup.Item>\r\n\r\n                    <ListGroup.Item className=\"menu-list es-list-group-item\">\r\n                        <Row style={{marginTop: '10px'}}>\r\n                            <Col className=\"wrap_name\">\r\n                                <p className=\"item-header\" style={{marginBottom: '0px', paddingLeft: '0px', color: '#b36a3b'}}>{this.props.beverage.list.hot_tea.name}</p>\r\n                                <p className=\"item-description\">British Breakfast<br/>(includes cups, lids, half & half, sweeteners & stir sticks)</p>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <Row>\r\n                            <Col className=\"wrap_qty\">\r\n                                <p style={{float: 'left', fontWeight: '600'}}>Serves up to 10</p>\r\n                                <NumberInput \r\n                                    readonly={true}\r\n                                    onChange={this.onChangeBeverage.bind(this)}\r\n                                    name=\"hot_tea\"\r\n                                    value={this.props.beverage.list.hot_tea.qty}\r\n                                />\r\n                                <p style={{float: 'right', fontWeight: '600'}}>${this.props.beverage.list.hot_tea.price}</p> \r\n                            </Col>\r\n                        </Row>\r\n                    </ListGroup.Item>\r\n\r\n                </ListGroup>\r\n\r\n                <ListGroup>\r\n\r\n                    <ListGroup.Item className=\"menu-list es-list-group-item\">\r\n\r\n                        <p className=\"item-header\" style={{marginTop: '1rem', color: '#b36a3b'}}>Honest Tea</p>\r\n\r\n                        <Row>\r\n\r\n                            {this.printDrink('hon_tea_green')}\r\n                            {this.printDrink('hon_tea_half')}\r\n\r\n                        </Row>\r\n\r\n                        <p className=\"item-header mt-5\" style={{marginTop: '1rem', color: '#b36a3b'}}>Vitamin Water</p>\r\n\r\n                        <Row>\r\n\r\n                            {this.printDrink('vitamin_acai')}\r\n                            {this.printDrink('vitamin_tropical')}\r\n                            {this.printDrink('vitamin_strawberry')}\r\n\r\n                        </Row>\r\n\r\n                        <p className=\"item-header mt-5\" style={{marginTop: '1rem', color: '#b36a3b'}}>Soda</p>\r\n\r\n                        <Row>\r\n\r\n                            {this.printDrink('coke')}\r\n                            {this.printDrink('diet_coke')}\r\n                            {this.printDrink('dr_pepper')}\r\n\r\n                        </Row>\r\n\r\n                        <Row className=\"mt-2\">\r\n\r\n                            {this.printDrink('sprite')}\r\n                            {this.printDrink('fanta_orange')}\r\n\r\n                        </Row>\r\n\r\n                    </ListGroup.Item>\r\n\r\n                </ListGroup>\r\n\r\n\r\n                <ListGroup style={{marginTop: '10px'}}>\r\n                    <ListGroup.Item className=\"menu-list es-list-group-item\">\r\n\r\n                        <Row style={{marginTop: '10px'}}>\r\n                            <Col className=\"wrap_name\">\r\n                                <p className=\"item-header\" style={{marginBottom: '0px', paddingLeft: '0px', color: '#b36a3b'}}>{this.props.beverage.list.gallon_water.name}</p>\r\n                                <p className=\"item-description\">{this.props.beverage.list.gallon_water.description}</p>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <Row>\r\n                            <Col className=\"wrap_qty\">\r\n                                {/* <p style={{float: 'left', fontWeight: '600'}}>Serves up to 10</p> */}\r\n                                <NumberInput \r\n                                    onChange={this.onChangeBeverage.bind(this)}\r\n                                    name=\"gallon_water\"\r\n                                    value={this.props.beverage.list.gallon_water.qty}\r\n                                />\r\n                                <p style={{float: 'right', fontWeight: '600'}}>$5.00</p> \r\n                            </Col>\r\n                        </Row>\r\n                    </ListGroup.Item>\r\n\r\n                    <ListGroup.Item className=\"menu-list es-list-group-item total\">\r\n                        <Row>\r\n                            <Col>\r\n                                ${this.props.beverage.total}\r\n                            </Col>\r\n                        </Row>\r\n                    </ListGroup.Item>\r\n\r\n                </ListGroup>\r\n\r\n                <Row>\r\n                    <Col md={12}>\r\n                        <Bottom />\r\n                    </Col>\r\n                </Row>\r\n\r\n            </Card>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    beverage: state.beverage\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => (\r\n    {\r\n        updateBeverage: (name, qty) => dispatch(updateBeverage(name, qty)),\r\n        updateCurrentNav: (index) => dispatch(updateCurrentNav(index))\r\n    }\r\n)\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Beverage)","import { \r\n    UPDATE_BEVERAGE_QTY\r\n} from './actionTypes.js'\r\n\r\nexport const updateBeverage = (name, qty) => ({\r\n    type: UPDATE_BEVERAGE_QTY,\r\n    payload: {\r\n        name,\r\n        qty\r\n    }\r\n})","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Row, Col, Card, ButtonToolbar, Button, ListGroup } from 'react-bootstrap';\r\n// import NumberInput from '../common/numberInput.js';\r\n\r\nimport { addBox, closeBox, updateBox } from '../../redux/actions/fresh_salads_action';\r\n\r\nclass Choice extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        let selected_item = null;\r\n\r\n        if (this.props.mode === 'edit'){ \r\n            selected_item = this.props.fresh_salads[this.props.box].list[this.props.id]; \r\n        }\r\n\r\n        this.state = {\r\n            selected_item: selected_item,\r\n            error: false,\r\n            error_msg: ''\r\n        }\r\n        \r\n    }\r\n\r\n    closeBox = () => {\r\n        this.props.closeBox();\r\n    }\r\n\r\n    addBox = () => {\r\n        if (this.state.selected_item === null){\r\n            this.displayErr();\r\n        }\r\n        else {\r\n            this.props.addBox(this.state.selected_item);\r\n        }\r\n    }\r\n\r\n    updateBox = () => {\r\n        if (this.state.selected_item === null){\r\n            this.displayErr();\r\n        }\r\n        else {\r\n            this.props.updateBox(this.state.selected_item);\r\n        }\r\n    }\r\n\r\n    displayErr = () => {\r\n        this.setState({\r\n            error: true\r\n        })\r\n    }\r\n\r\n    onSelectItem = (key) => {\r\n        this.setState({\r\n            selected_item: key\r\n        });\r\n    }\r\n\r\n    printItem = (type, key, index) => {\r\n        const name = this.props.fresh_salads.items[type][key].name;\r\n\r\n        return (\r\n            <Button onClick={this.onSelectItem.bind(this, key)} className={(this.state.selected_item === key ? 'btn-select' : 'btn-unselect') + ' mr-1'} key={'item_'+type+'_'+index}>\r\n                {name}\r\n            </Button>\r\n        );\r\n    }\r\n\r\n    printItemsByType = (type) => {\r\n        let print = [];\r\n        let index = 0;\r\n        for (let key in this.props.fresh_salads.items[type]){\r\n            print.push(\r\n                this.printItem(type, key, index)\r\n            )\r\n            index++;\r\n        }\r\n\r\n        return (\r\n                <ButtonToolbar>\r\n                    {print}\r\n                </ButtonToolbar>\r\n            );\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <Card className=\"col-md-12 p-0\">\r\n                <Card.Header>\r\n                    <p className=\"item-header\" style={{paddingLeft: '10px', fontSize: '20px', color: '#b36a3b'}}>\r\n                        {this.props.fresh_salads[this.props.box].name}\r\n                        {\r\n                            this.props.box === 'chicken' ?\r\n                            \"Strawberry Chicken Salad\"\r\n                            :\r\n                            \"Strawberry Almond Salad\"\r\n                        }\r\n                    </p>\r\n                </Card.Header>\r\n\r\n                {/* <Card.Body className={this.state.error ? 'su-alert' : ''}>\r\n                    <Card.Text>You selected <strong>{this.state.qty} of {this.state.max_qty}</strong> Sandwiches.</Card.Text>\r\n                </Card.Body> */}\r\n\r\n                <ListGroup >\r\n\r\n                    <ListGroup.Item className=\"menu-list es-list-group-item\">\r\n\r\n                        <Row style={{marginTop: '25px'}}>\r\n                            <Col className=\"wrap_name\">\r\n                                <p className=\"item-header\" style={{marginBottom: '0px', paddingLeft: '0px', color: '#b36a3b'}}>Bagel</p>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <Row className=\"mt-3 mb-3\">\r\n                            <Col md={12}>\r\n                                {\r\n                                    this.printItemsByType('bagel')\r\n                                }\r\n                            </Col>\r\n                        </Row>\r\n\r\n                    </ListGroup.Item>\r\n\r\n                    <ListGroup.Item className=\"menu-list es-list-group-item\">\r\n\r\n                        <Row style={{marginTop: '25px'}}>\r\n                            <Col className=\"wrap_name\">\r\n                                <p className=\"item-header\" style={{marginBottom: '0px', paddingLeft: '0px', color: '#b36a3b'}}>Chips</p>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <Row className=\"mt-3 mb-3\">\r\n                            <Col md={12}>\r\n                                {\r\n                                    this.printItemsByType('chips')\r\n                                }\r\n                            </Col>\r\n                        </Row>\r\n\r\n                    </ListGroup.Item>\r\n\r\n                </ListGroup>\r\n\r\n                <Row>\r\n                    <Col>\r\n                        <ButtonToolbar className=\"mt-4\">\r\n                            {\r\n                                this.props.mode === 'add' ?\r\n                                <Button variant=\"primary\" size=\"md\" onClick={this.addBox.bind(this)} className=\"add-btn\">\r\n                                    Add\r\n                                </Button>\r\n                                :\r\n                                <Button variant=\"primary\" size=\"md\" onClick={this.updateBox.bind(this)} className=\"add-btn\">\r\n                                    Update\r\n                                </Button>\r\n                            }\r\n                            <Button variant=\"light\" size=\"md\" onClick={this.closeBox.bind(this)} className=\"cancel-btn ml-2\">\r\n                                Cancel\r\n                            </Button>\r\n                        </ButtonToolbar>\r\n                    </Col>\r\n                </Row>\r\n\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    fresh_salads: state.fresh_salads\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => (\r\n    {\r\n        addBox: (item) => dispatch(addBox(item)),\r\n        closeBox: () => dispatch(closeBox()),\r\n        updateBox: (item) => dispatch(updateBox(item))\r\n    }\r\n)\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Choice)","import {\r\n    UPDATE_FRESHSALADS_QTY,\r\n    OPEN_FRESHSALADS_BOX,\r\n    OPEN_EDIT_FRESHSALADS_BOX,\r\n    CLOSE_FRESHSALADS_BOX,\r\n    ADD_FRESHSALADS_BOX,\r\n    UPDATE_FRESHSALADS_BOX,\r\n    REMOVE_FRESHSALADS_BOX,\r\n    REMOVE_FRESHSALADS_CHOICE\r\n} from './actionTypes.js'\r\n\r\nexport const updateQty = (name, qty) => ({\r\n    type: UPDATE_FRESHSALADS_QTY,\r\n    payload: {\r\n        name,\r\n        qty\r\n    }\r\n})\r\n\r\nexport const openBox = (box, mode) => ({\r\n    type: OPEN_FRESHSALADS_BOX,\r\n    payload: {\r\n        box,\r\n        mode\r\n    }\r\n})\r\n\r\nexport const openEditBox = (box, id) => ({\r\n    type: OPEN_EDIT_FRESHSALADS_BOX,\r\n    payload: {\r\n        box,\r\n        id\r\n    }\r\n})\r\n\r\nexport const closeBox = () => ({\r\n    type: CLOSE_FRESHSALADS_BOX\r\n})\r\n\r\nexport const addBox = (item) => ({\r\n    type: ADD_FRESHSALADS_BOX,\r\n    payload: {\r\n        item\r\n    }\r\n})\r\n\r\nexport const updateBox = (item) => ({\r\n    type: UPDATE_FRESHSALADS_BOX,\r\n    payload: {\r\n        item\r\n    }\r\n})\r\n\r\nexport const removeBox = (box, id) => ({\r\n    type: REMOVE_FRESHSALADS_BOX,\r\n    payload: {\r\n        box,\r\n        id\r\n    }\r\n})\r\n\r\nexport const removeChoice = (type, key) => ({\r\n    type: REMOVE_FRESHSALADS_CHOICE,\r\n    payload: {\r\n        type,\r\n        key\r\n    }\r\n})","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Row, Col, Card, ListGroup } from 'react-bootstrap';\r\nimport NumberInput from '../common/numberInput.js';\r\nimport TopNav from '../common/TopNav.js';\r\n\r\nimport { updateCurrentNav } from '../../redux/actions/main';\r\nimport { updateQty, openBox, openEditBox, removeChoice } from '../../redux/actions/fresh_salads_action';\r\n\r\nimport Bottom from '../bottom';\r\n\r\nimport Choice from './Choice';\r\n\r\n// import styles from '../common/style.js';\r\n\r\nclass FreshSalads extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.state = {\r\n            total: this.props.fresh_salads.total\r\n        }\r\n\r\n        this.props.updateCurrentNav(5);\r\n    }\r\n\r\n    onChangeHandler = (name, value) => {\r\n        this.props.updateQty(name, value);\r\n    }\r\n\r\n    openBox = (name) => {\r\n        this.props.openBox(name, 'add');\r\n    }\r\n\r\n    openEditBox = (box, id) => {\r\n        this.props.openEditBox(box, id);\r\n    }\r\n\r\n    removeBox = (box, id) => {\r\n        this.props.removeBox(box, id);\r\n    }\r\n\r\n    removeChoice = (type, key) => {\r\n        this.props.removeChoice(type, key);\r\n    }\r\n\r\n    printSelectedItems = (type) => {\r\n        let print = [];\r\n        let count = 0;\r\n        const items = this.props.fresh_salads[type].selected;\r\n        \r\n        for (let key in items){\r\n            let name = null;\r\n            if (key in this.props.fresh_salads.items.bagel){\r\n                name = this.props.fresh_salads.items.bagel[key].name;\r\n            }\r\n            else if (key in this.props.fresh_salads.items.chips){\r\n                name = this.props.fresh_salads.items.chips[key].name;\r\n            }\r\n\r\n            if (items[key] !== 0){\r\n                print.push(\r\n                    <Col md={12} key={type+'_selected_item_'+count} className=\"mb-1\">\r\n                        <NumberInput \r\n                            noright={true}\r\n                            readonly={true}\r\n                            onChange={this.removeChoice.bind(this, type, key)}\r\n                            name={type+'_'+key}\r\n                            value={items[key]}\r\n                        />\r\n                        <p className=\"mb-0\" style={{float: 'right'}}>- {name}</p>\r\n                    </Col>\r\n                )\r\n                count++;\r\n            }\r\n        }\r\n\r\n        return print\r\n    }\r\n\r\n    render() {\r\n        if (this.props.fresh_salads.box === null)\r\n        {\r\n            return(\r\n                <Card className=\"col-md-12 p-0 menu-card\">\r\n    \r\n                    <Card.Header>\r\n                        <TopNav />\r\n                    </Card.Header>\r\n    \r\n                    <Card.Body>\r\n                        <Card.Title>Fresh Salads</Card.Title>\r\n                    </Card.Body>\r\n\r\n                    <ListGroup>\r\n\r\n                        <div style={{paddingLeft: '20px'}}>\r\n                            <p className=\"item-description\" style={{marginTop: '25px'}}><b>Made with Fresh, Mixed Seasonal Greens</b></p>\r\n\r\n                            <p className=\"item-description\"><b>Single salads</b> are served with a Gourmet Cookie <u>AND</u> your choice of Plain,<br/> Sesame or Asiago Bagel <u>OR</u> a Bag of Chips</p>\r\n\r\n                            <p className=\"item-description\"><b>Group salads</b> are served with utensils, plates & napkins<br/>Serves 6 to 8</p>\r\n                        </div>\r\n\r\n                        <ListGroup.Item className=\"es-list-group-item\">\r\n\r\n                            <Row style={{marginTop: '25px'}}>\r\n                                <Col className=\"wrap_name\">\r\n                                    <p className=\"item-header\" style={{marginBottom: '0px', paddingLeft: '0px', color: '#b36a3b'}}>Strawberry Chicken Salad</p>\r\n                                    <p className=\"item-description\">Grilled Chicken, Fresh Greens, Fresh Cut Strawberries, Craisins® Dried Cranberries and Toasted Almonds,<br/>Served with a Light Balsamic Vinaigrette Dressing</p>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                <Col className=\"wrap_qty\">\r\n                                    <NumberInput \r\n                                        noleft={true}\r\n                                        readonly={true}\r\n                                        onChange={this.openBox.bind(this)}\r\n                                        name=\"chicken\"\r\n                                        value={this.props.fresh_salads.chicken.qty}\r\n                                    />\r\n                                    <p style={{float: 'right', fontWeight: '600'}}>Single ${this.props.fresh_salads.chicken.price}</p> \r\n                                </Col>\r\n                            </Row>\r\n\r\n                            {\r\n                                this.props.fresh_salads.chicken.qty === 0 ?\r\n                                null\r\n                                :\r\n                                <Row style={{marginTop: '1rem', marginBottom: '1rem', borderBottom: '1px solid #e1e1e1'}}>\r\n                                    {\r\n                                        this.printSelectedItems('chicken')\r\n                                    }\r\n                                </Row>\r\n                            }\r\n\r\n                            <Row>\r\n                                <Col className=\"wrap_qty\">\r\n                                    <NumberInput \r\n                                        readonly={true}\r\n                                        onChange={this.onChangeHandler.bind(this)}\r\n                                        name=\"chicken_group\"\r\n                                        value={this.props.fresh_salads.chicken_group.qty}\r\n                                    />\r\n                                    <p style={{float: 'right', fontWeight: '600'}}>Group ${this.props.fresh_salads.chicken_group.price}</p> \r\n                                </Col>\r\n                            </Row>\r\n\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item className=\"es-list-group-item\">\r\n\r\n                            <Row style={{marginTop: '25px'}}>\r\n                                <Col className=\"wrap_name\">\r\n                                    <p className=\"item-header\" style={{marginBottom: '0px', paddingLeft: '0px', color: '#b36a3b'}}>Strawberry Almond Salad</p>\r\n                                    <p className=\"item-description\">Fresh Greens, Fresh Cut Strawberries, Craisins® Dried Cranberries and Toasted Almonds,<br/>Served with a Light Balsamic Vinaigrette Dressing</p>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                <Col className=\"wrap_qty\">\r\n                                    <NumberInput \r\n                                        noleft={true}\r\n                                        readonly={true}\r\n                                        onChange={this.openBox.bind(this)}\r\n                                        name=\"almond\"\r\n                                        value={this.props.fresh_salads.almond.qty}\r\n                                    />\r\n                                    <p style={{float: 'right', fontWeight: '600'}}>Single ${this.props.fresh_salads.almond.price}</p> \r\n                                </Col>\r\n                            </Row>\r\n\r\n                            {\r\n                                this.props.fresh_salads.almond.qty === 0 ?\r\n                                null\r\n                                :\r\n                                <Row style={{marginTop: '1rem', marginBottom: '1rem', borderBottom: '1px solid #e1e1e1'}}>\r\n                                    {\r\n                                        this.printSelectedItems('almond')\r\n                                    }\r\n                                </Row>\r\n                            }\r\n\r\n                            <Row>\r\n                                <Col className=\"wrap_qty\">\r\n                                    <NumberInput \r\n                                        readonly={true}\r\n                                        onChange={this.onChangeHandler.bind(this)}\r\n                                        name=\"almond_group\"\r\n                                        value={this.props.fresh_salads.almond_group.qty}\r\n                                    />\r\n                                    <p style={{float: 'right', fontWeight: '600'}}>Group ${this.props.fresh_salads.almond_group.price}</p> \r\n                                </Col>\r\n                            </Row>\r\n\r\n                        </ListGroup.Item>\r\n\r\n\r\n                        <ListGroup.Item className=\"menu-list es-list-group-item total\">\r\n                            <Row>\r\n                                <Col>\r\n                                    ${this.props.fresh_salads.total}\r\n                                </Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n\r\n                    </ListGroup>\r\n    \r\n                    <Row>\r\n                        <Col md={12}>\r\n                            <Bottom />\r\n                        </Col>\r\n                    </Row>\r\n    \r\n                </Card>\r\n            )\r\n            \r\n        }\r\n        else {\r\n            return <Choice \r\n                            box={this.props.fresh_salads.box}\r\n                            mode={this.props.fresh_salads.mode}\r\n                            id={this.props.fresh_salads.id}\r\n                       />\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    fresh_salads: state.fresh_salads\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => (\r\n    {\r\n        updateQty: (name, qty) => dispatch(updateQty(name,qty)),\r\n        openBox: (name, mode) => dispatch(openBox(name, mode)),\r\n        openEditBox: (box, id) => dispatch(openEditBox(box, id)),\r\n        removeChoice: (type, key) => dispatch(removeChoice(type, key)),\r\n        updateCurrentNav: (index) => dispatch(updateCurrentNav(index))\r\n    }\r\n)\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(FreshSalads)","import {\r\n    UPDATE_COOKIE_QTY,\r\n    OPEN_COOKIE_BOX,\r\n    OPEN_EDIT_COOKIE_BOX,\r\n    CLOSE_COOKIE_BOX,\r\n    ADD_COOKIE_BOX,\r\n    UPDATE_COOKIE_BOX,\r\n    REMOVE_COOKIE_BOX,\r\n    ADD_KETTLE_CHIP,\r\n    UPDATE_KETTLE_CHIP,\r\n    CLOSE_KETTLE_CHIP,\r\n    REMOVE_KETTLE_CHIP\r\n} from './actionTypes.js'\r\n\r\nexport const updateQty = (name, qty) => ({\r\n    type: UPDATE_COOKIE_QTY,\r\n    payload: {\r\n        name,\r\n        qty\r\n    }\r\n})\r\n\r\nexport const openBox = (name, mode) => ({\r\n    type: OPEN_COOKIE_BOX,\r\n    payload: {\r\n        name,\r\n        mode\r\n    }\r\n})\r\n\r\nexport const openEditBox = (box, type, id) => ({\r\n    type: OPEN_EDIT_COOKIE_BOX,\r\n    payload: {\r\n        box,\r\n        type,\r\n        id\r\n    }\r\n})\r\n\r\nexport const closeBox = () => ({\r\n    type: CLOSE_COOKIE_BOX\r\n})\r\n\r\nexport const addBox = (list) => ({\r\n    type: ADD_COOKIE_BOX,\r\n    payload: {\r\n        list\r\n    }\r\n})\r\n\r\nexport const updateBox = (list) => ({\r\n    type: UPDATE_COOKIE_BOX,\r\n    payload: {\r\n        list\r\n    }\r\n})\r\n\r\nexport const removeBox = (box, type, id) => ({\r\n    type: REMOVE_COOKIE_BOX,\r\n    payload: {\r\n        box,\r\n        type,\r\n        id\r\n    }\r\n})\r\n\r\nexport const closeChip = () => ({\r\n    type: CLOSE_KETTLE_CHIP\r\n})\r\n\r\nexport const addChip = (item) => ({\r\n    type: ADD_KETTLE_CHIP,\r\n    payload: {\r\n        item\r\n    }\r\n})\r\n\r\nexport const updateChip = (item) => ({\r\n    type: UPDATE_KETTLE_CHIP,\r\n    payload: {\r\n        item\r\n    }\r\n})\r\n\r\nexport const removeChip = (type, item) => ({\r\n    type: REMOVE_KETTLE_CHIP,\r\n    payload: {\r\n        type,\r\n        item\r\n    }\r\n})","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Row, Col, Card, ButtonToolbar, Button, ListGroup } from 'react-bootstrap';\r\n//import NumberInput from '../common/numberInput.js';\r\n\r\nimport { addBox, closeBox, updateBox } from '../../redux/actions/cookie_action';\r\n\r\nclass Box extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        let list = {};\r\n\r\n        if (this.props.mode === 'edit'){ \r\n            list = this.props.cookie[this.props.box][this.props.type].list[this.props.id]; \r\n        }\r\n        else {\r\n            for (const key in this.props.cookie.items){\r\n                list[key] = 0;\r\n            }\r\n        }\r\n        \r\n        \r\n        let max_qty = 0;\r\n        if (this.props.box === 'variety'){\r\n            max_qty = (this.props.type === 'half' ? 6 : 12);\r\n        }\r\n        else if (this.props.box === 'sweet'){\r\n            max_qty = (this.props.type === 'small' ? 10 : 20);\r\n        }\r\n\r\n        \r\n\r\n        this.state = {\r\n            qty: max_qty, //This should be qty:0 if you want users to select number of items. This was set to qty: max_qty when there was only one cookie flavor option and it needed to be automatically chosen as max quantity.\r\n            list: list,\r\n            error: false,\r\n            error_msg: '',\r\n            max_qty: max_qty\r\n        }\r\n        \r\n    }\r\n\r\n    onChangeInput = (name, qty) => {\r\n        this.setState({error: false})\r\n\r\n        let list = this.state.list;\r\n        // list[name] = qty;\r\n        const max_qty = this.state.max_qty;\r\n        let tmp_qty = 0;\r\n        for (let key in list){\r\n            if (key !== name){\r\n                tmp_qty = tmp_qty + list[key];    \r\n            }\r\n            else{\r\n                tmp_qty = tmp_qty + qty;\r\n            }\r\n        }\r\n        \r\n        if (tmp_qty <= max_qty){\r\n            list[name] = qty;\r\n            this.setState({\r\n                list: list,\r\n                qty: tmp_qty\r\n            })\r\n        }\r\n        else {\r\n            this.setState({\r\n                error: true,\r\n                error_msg: 'qty max error'\r\n            })\r\n            return 'error';\r\n        }\r\n    }\r\n\r\n    closeBox = () => {\r\n        this.props.closeBox();\r\n    }\r\n\r\n    addBox = () => {\r\n        if (this.validateBox()){\r\n\r\n        }\r\n        else {\r\n            this.props.addBox(this.state.list);\r\n        }\r\n    }\r\n\r\n    updateBox = () => {\r\n        if (this.validateBox()){\r\n\r\n        }\r\n        else {\r\n            this.props.updateBox(this.state.list);\r\n        }\r\n    }\r\n\r\n    validateBox = () => {\r\n        let error = false;        \r\n        if (this.state.qty !== this.state.max_qty){\r\n            this.setState({error: true});\r\n            error = true;\r\n        }\r\n        return error;\r\n    }\r\n\r\n    printItem = () => {\r\n        let print = [];\r\n        let index = 0;\r\n        const items = this.props.cookie.items;\r\n        for (let key in items) {\r\n            print.push(\r\n                <Col md={12} className=\"wrap_qty mb-3\" key={'sandwich_input'+index}>\r\n                    {this.state.max_qty} {items[key].name} cookies will be added to your order.{/*{items[key].name}\r\n                    <NumberInput \r\n                        readonly={true}\r\n                        onChange={this.onChangeInput.bind(this)}\r\n                        name={key}\r\n                        value={this.state.list[key]}\r\n                        style={{float: 'left', textAlign: 'left'}}\r\n                    />*/}\r\n                </Col>\r\n            )\r\n            index++;\r\n        }\r\n\r\n        return print;\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <Card className=\"col-md-12 p-0\">\r\n                <Card.Header>\r\n\r\n                </Card.Header>\r\n\r\n                <Card.Body>\r\n                    <Card.Title>\r\n                        Select Your Cookies \r\n                        <span style={{ textTransform: 'initial', marginLeft: '12px', fontSize: '17px', color: '#545454'}}>\r\n                        {\r\n                            this.props.type === 'half' ?\r\n                            'Select 6'\r\n                            :\r\n                            'Select 12'\r\n                        }\r\n                        </span>\r\n                    </Card.Title>\r\n                </Card.Body>\r\n\r\n                <Card.Body className={this.state.error ? 'su-alert' : ''}>\r\n                    <Card.Text>You selected <strong>{this.state.qty} of {this.state.max_qty} Chocolate Chip</strong> Cookies.</Card.Text>\r\n                </Card.Body>\r\n\r\n                <ListGroup variant=\"flush\">\r\n\r\n                    <ListGroup.Item className=\"menu-list\">\r\n                        <Row className=\"mb-3\">\r\n\r\n                            { this.printItem() }\r\n\r\n                        </Row>\r\n\r\n                        <Row>\r\n                            <Col>\r\n                                <ButtonToolbar className=\"mt-4\">\r\n                                    {\r\n                                        this.props.mode === 'add' ?\r\n                                        <Button variant=\"primary\" size=\"md\" onClick={this.addBox.bind(this)} className=\"add-btn\">\r\n                                            Add\r\n                                        </Button>\r\n                                        :\r\n                                        <Button variant=\"primary\" size=\"md\" onClick={this.updateBox.bind(this)} className=\"add-btn\">\r\n                                            Update\r\n                                        </Button>\r\n                                    }\r\n                                    <Button variant=\"light\" size=\"md\" onClick={this.closeBox.bind(this)} className=\"cancel-btn ml-2\">\r\n                                        Cancel\r\n                                    </Button>\r\n                                </ButtonToolbar>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                    </ListGroup.Item>\r\n\r\n                </ListGroup>\r\n\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    cookie: state.cookie\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => (\r\n    {\r\n        addBox: (list) => dispatch(addBox(list)),\r\n        closeBox: () => dispatch(closeBox()),\r\n        updateBox: (id, list) => dispatch(updateBox(id, list))\r\n    }\r\n)\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Box)","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Row, Col, Card, ButtonToolbar, Button, ListGroup } from 'react-bootstrap';\r\nimport NumberInput from '../common/numberInput.js';\r\n\r\nimport { addBox, closeBox, updateBox } from '../../redux/actions/cookie_action';\r\n\r\nclass Chips extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        let list = {};\r\n\r\n        if (this.props.mode === 'edit'){ \r\n            list = this.props.cookie[this.props.box][this.props.type].list[this.props.id]; \r\n        }\r\n        else {\r\n            for (const key in this.props.cookie.kettle.items){\r\n                list[key] = 0;\r\n            }\r\n        }\r\n\r\n\r\n        this.state = {\r\n            //qty: 0, //when editing an order quantity shown to user is 0, want it to be max quantity. May be able to fix this in functions below \r\n            qty : (this.props.mode === 'edit' ? (this.props.type === 'single' ? 1 : this.props.type ==='small' ? 5 : 10) : 0),\r\n            list: list,\r\n            error: false,\r\n            error_msg: '',\r\n            max_qty: (this.props.type === 'single' ? 1 : this.props.type ==='small' ? 5 : 10)\r\n        }\r\n        \r\n    }\r\n\r\n    onChangeInput = (name, qty) => {\r\n        this.setState({error: false})\r\n\r\n        let list = this.state.list;\r\n        // list[name] = qty;\r\n        const max_qty = this.state.max_qty;\r\n        let tmp_qty = 0;\r\n        for (let key in list){\r\n            if (key !== name){\r\n                tmp_qty = tmp_qty + list[key];    \r\n            }\r\n            else{\r\n                tmp_qty = tmp_qty + qty;\r\n            }\r\n        }\r\n        \r\n        if (tmp_qty <= max_qty){\r\n            list[name] = qty;\r\n            this.setState({\r\n                list: list,\r\n                qty: tmp_qty\r\n            })\r\n        }\r\n        else {\r\n            this.setState({\r\n                error: true,\r\n                error_msg: 'qty max error'\r\n            })\r\n            return 'error';\r\n        }\r\n    }\r\n\r\n    closeBox = () => {\r\n        this.props.closeBox();\r\n    }\r\n\r\n    addBox = () => {\r\n        if (this.validateBox()){\r\n\r\n        }\r\n        else {\r\n            this.props.addBox(this.state.list);\r\n        }\r\n    }\r\n\r\n    updateBox = () => {\r\n        if (this.validateBox()){\r\n\r\n        }\r\n        else {\r\n            this.props.updateBox(this.state.list);\r\n        }\r\n    }\r\n\r\n    validateBox = () => {\r\n        let error = false;        \r\n        if (this.state.qty !== this.state.max_qty){\r\n            this.setState({error: true});\r\n            error = true;\r\n        }\r\n        return error;\r\n    }\r\n\r\n    printItem = () => {\r\n        let print = [];\r\n        let index = 0;\r\n        const items = this.props.cookie.kettle.items;\r\n        for (let key in items) {\r\n            print.push(\r\n                <Col md={12} className=\"wrap_qty mb-3\" key={'kettle_input'+index}>\r\n                    {items[key].name}\r\n                    <NumberInput \r\n                        readonly={true}\r\n                        onChange={this.onChangeInput.bind(this)}\r\n                        name={key}\r\n                        value={this.state.list[key]}\r\n                        style={{float: 'left', textAlign: 'left'}}\r\n                    />\r\n                </Col>\r\n            )\r\n            index++;\r\n        }\r\n\r\n        return print;\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <Card className=\"col-md-12 p-0\">\r\n                <Card.Header>\r\n\r\n                </Card.Header>\r\n\r\n                <Card.Body>\r\n                    <Card.Title>\r\n                        Select Your Chips\r\n                        <span style={{ textTransform: 'initial', marginLeft: '12px', fontSize: '17px', color: '#545454'}}>\r\n                        {\r\n                            this.props.type === 'single' ?\r\n                            'Select 1'\r\n                            :\r\n                            this.props.type === 'small' ? 'Select 5' : 'Select 10'\r\n                        }\r\n                        </span>\r\n                    </Card.Title>\r\n                </Card.Body>\r\n\r\n                <Card.Body className={this.state.error ? 'su-alert' : ''}>\r\n                    <Card.Text>You selected <strong>{this.state.qty} of {this.state.max_qty}</strong> Chips.</Card.Text>\r\n                </Card.Body>\r\n\r\n                <ListGroup variant=\"flush\">\r\n\r\n                    <ListGroup.Item className=\"menu-list\">\r\n                        <Row className=\"mb-3\">\r\n\r\n                            { this.printItem() }\r\n\r\n                        </Row>\r\n\r\n                        <Row>\r\n                            <Col>\r\n                                <ButtonToolbar className=\"mt-4\">\r\n                                    {\r\n                                        this.props.mode === 'add' ?\r\n                                        <Button variant=\"primary\" size=\"md\" onClick={this.addBox.bind(this)} className=\"add-btn\">\r\n                                            Add\r\n                                        </Button>\r\n                                        :\r\n                                        <Button variant=\"primary\" size=\"md\" onClick={this.updateBox.bind(this)} className=\"add-btn\">\r\n                                            Update\r\n                                        </Button>\r\n                                    }\r\n                                    <Button variant=\"light\" size=\"md\" onClick={this.closeBox.bind(this)} className=\"cancel-btn ml-2\">\r\n                                        Cancel\r\n                                    </Button>\r\n                                </ButtonToolbar>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                    </ListGroup.Item>\r\n\r\n                </ListGroup>\r\n\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    cookie: state.cookie\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => (\r\n    {\r\n        addBox: (list) => dispatch(addBox(list)),\r\n        closeBox: () => dispatch(closeBox()),\r\n        updateBox: (id, list) => dispatch(updateBox(id, list))\r\n    }\r\n)\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Chips)","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Row, Col, Card, ListGroup, ButtonToolbar, Button } from 'react-bootstrap';\r\nimport NumberInput from '../common/numberInput.js';\r\nimport TopNav from '../common/TopNav.js';\r\n\r\nimport { updateCurrentNav } from '../../redux/actions/main';\r\nimport { updateQty, openBox, openEditBox, removeBox, removeChip } from '../../redux/actions/cookie_action';\r\n\r\nimport Box from './Box';\r\nimport Chips from './Chips';\r\nimport Bottom from '../bottom';\r\n\r\n// import styles from '../common/style.js';\r\n\r\nclass Cookie extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.state = {\r\n            total: this.props.cookie.total\r\n        }\r\n\r\n        this.props.updateCurrentNav(6);\r\n    }\r\n\r\n    onChangeHandler = (name, value) => {\r\n        this.props.updateQty(name, value);\r\n    }\r\n\r\n    openBox = (name) => {\r\n        this.props.openBox(name, 'add');\r\n    }\r\n\r\n    openEditBox = (box, type, id) => {\r\n        this.props.openEditBox(box, type, id);\r\n    }\r\n\r\n    removeBox = (box, type, id) => {\r\n        this.props.removeBox(box, type, id);\r\n    }\r\n\r\n    printSelectedCookies = (box, type) => {\r\n        const names = this.props.cookie.items;\r\n        const list = this.props.cookie[box][type].list;\r\n        //const list = this.props.type === null ? this.props.cookie[box].list : this.props.cookie[box][type].list ;\r\n        let print = [];\r\n        let box_count = 1;\r\n        let id = 0;\r\n\r\n        for (const list_id in list){\r\n            let tmp_print = [];\r\n            let tmp_count = 0;\r\n            \r\n            const cookie_box = list[list_id];\r\n            for (const key in cookie_box){\r\n                if (cookie_box[key] !== 0){\r\n                    tmp_print.push(<li className=\"\" key={'_child_' + tmp_count}> { names[key].name + ' : ' + cookie_box[key] } </li>);\r\n                    tmp_count++;\r\n                }\r\n            }\r\n            print.push(\r\n                <Col md={3} style={{padding: '5px'}} key={'ex_box' + list_id}>\r\n                    <div key={id} className=\"\" style={{padding: '5px', border: '1px solid #e1e1e1'}}>\r\n                        {/*<h3 className=\"p-0\" style={{fontSize: '1rem'}}>{box}-{type} #{box_count}*/}\r\n                        <h3 className=\"p-0\" style={{fontSize: '1rem'}}>{type} #{box_count}\r\n                            <ButtonToolbar style={{float: 'right'}}>\r\n                                <Button onClick={() => {this.openEditBox(box, type, list_id)}} className=\"edit-btn\">Edit</Button>\r\n                                <Button onClick={() => {this.removeBox(box, type, list_id)}} className=\"remove-btn\">Remove</Button>\r\n                            </ButtonToolbar>\r\n                        </h3>\r\n                        <ul key={id} className=\"\" style={{paddingLeft: '10px', listStyle: 'none'}}> {tmp_print} </ul>\r\n                    </div>\r\n                </Col>\r\n            )\r\n            id++;\r\n            box_count++;\r\n        }\r\n\r\n        return print;\r\n    }\r\n\r\n    printKettleChips = (type) => {\r\n        const names = this.props.cookie.kettle.items;\r\n        const list = this.props.cookie.kettle[type].list;\r\n        let print = [];\r\n        let box_count = 1;\r\n        let id = 0;\r\n\r\n        for (const list_id in list){\r\n            let tmp_print = [];\r\n            let tmp_count = 0;\r\n            \r\n            const cookie_box = list[list_id];\r\n            for (const key in cookie_box){\r\n                if (cookie_box[key] !== 0){\r\n                    tmp_print.push(<li className=\"\" key={'_child_' + tmp_count}> { names[key].name + ' : ' + cookie_box[key] } </li>);\r\n                    tmp_count++;\r\n                }\r\n            }\r\n            print.push(\r\n                <Col md={3} style={{padding: '5px'}} key={'ex_box' + id}>\r\n                    <div key={id} className=\"\" style={{padding: '5px', border: '1px solid #e1e1e1'}}>\r\n                        <h3 className=\"p-0\" style={{fontSize: '1rem'}}>#{box_count} kettle-{type}\r\n                            <ButtonToolbar style={{float: 'right'}}>\r\n                                <Button onClick={() => {this.openEditBox('kettle', type, list_id)}} className=\"edit-btn\">Edit</Button>\r\n                                <Button onClick={() => {this.removeBox('kettle', type, list_id)}} className=\"remove-btn\">Remove</Button>\r\n                            </ButtonToolbar>\r\n                        </h3>\r\n                        <ul key={id} className=\"\" style={{paddingLeft: '10px', listStyle: 'none'}}> {tmp_print} </ul>\r\n                    </div>\r\n                </Col>\r\n            )\r\n            id++;\r\n            box_count++;\r\n        }\r\n\r\n        return print;\r\n    }\r\n\r\n    removeKettleChip = (type, item) => {\r\n        this.prop.removeChip(type, item);\r\n    }\r\n\r\n    render() {\r\n        if (this.props.cookie.box !== null && this.props.cookie.box !== 'kettle'){\r\n            return <Box \r\n                            box={this.props.cookie.box}\r\n                            type={this.props.cookie.type}\r\n                            mode={this.props.cookie.mode}\r\n                            id={this.props.cookie.id}\r\n                       />\r\n        }\r\n        else if (this.props.cookie.box === 'kettle'){\r\n            return <Chips \r\n                            box={this.props.cookie.box}\r\n                            type={this.props.cookie.type}\r\n                            mode={this.props.cookie.mode}\r\n                            id={this.props.cookie.id}\r\n                       />\r\n        }\r\n        else {\r\n            return(\r\n                <Card className=\"col-md-12 p-0 menu-card\">\r\n    \r\n                    <Card.Header>\r\n                        <TopNav />\r\n                    </Card.Header>\r\n    \r\n                    <Card.Body>\r\n                        <Card.Title>Cookies</Card.Title>\r\n                    </Card.Body>\r\n    \r\n                    <ListGroup className=\"mt-1\">\r\n\r\n                        <ListGroup.Item>\r\n\r\n                            <Row>\r\n                                <Col className=\"wrap_name\">\r\n                                    <p className=\"item-header\" style={{marginBottom: '0px', paddingLeft: '0px', color: '#b36a3b'}}>Cookie Box</p>\r\n                                    <p className=\"item-description\">Full-size gourmet chocolate chip cookies, fresh-baked daily</p>\r\n\r\n                                </Col>\r\n                            </Row>\r\n                            {/* <Row>\r\n                                <Col className=\"wrap_qty\">\r\n                                    <NumberInput \r\n                                        readonly={true}\r\n                                        onChange={this.onChangeHandler.bind(this)}\r\n                                        name=\"variety_half\"\r\n                                        value={this.props.cookie.variety_half.qty}\r\n                                    />\r\n                                    <p style={{float: 'right', fontWeight: '600'}}>Half Dozen $10.49</p> \r\n                                </Col>\r\n                            </Row> */}\r\n\r\n                            {<Row>\r\n                                <Col className=\"wrap_qty\">\r\n                                    <NumberInput \r\n                                        noleft={true}\r\n                                        readonly={true}\r\n                                        onChange={this.openBox.bind(this)}\r\n                                        name=\"variety_half\"\r\n                                        value={this.props.cookie.variety.half.qty}\r\n                                    />\r\n                                    <p style={{float: 'right', fontWeight: '600'}}>Half Dozen $10.49</p> \r\n                                </Col>\r\n                            </Row>}\r\n\r\n                            {\r\n                                this.props.cookie.variety.half.qty === 0 ?\r\n                                null\r\n                                :\r\n                                <Row style={{marginTop: '1rem', marginBottom: '1rem', borderBottom: '1px solid #e1e1e1'}}>\r\n                                    {\r\n                                        this.printSelectedCookies('variety', 'half')\r\n                                    }\r\n                                </Row>\r\n                            }\r\n                            {/* <Row>\r\n                                <Col className=\"wrap_qty\">\r\n                                    <NumberInput \r\n                                        readonly={true}\r\n                                        onChange={this.onChangeHandler.bind(this)}\r\n                                        name=\"variety_dozen\"\r\n                                        value={this.props.cookie.variety_dozen.qty}\r\n                                    />\r\n                                    <p style={{float: 'right', fontWeight: '600'}}>Dozen $18.99</p> \r\n                                </Col>\r\n                            </Row> */}\r\n                            {<Row>\r\n                                <Col className=\"wrap_qty\">\r\n                                    <NumberInput \r\n                                        noleft={true}\r\n                                        readonly={true}\r\n                                        onChange={this.openBox.bind(this)}\r\n                                        name=\"variety_dozen\"\r\n                                        value={this.props.cookie.variety.dozen.qty}\r\n                                    />\r\n                                    <p style={{float: 'right', fontWeight: '600'}}>Dozen $18.99</p> \r\n                                </Col>\r\n                            </Row>}\r\n\r\n                            {\r\n                                this.props.cookie.variety.dozen.qty === 0 ?\r\n                                null\r\n                                :\r\n                                <Row style={{marginTop: '1rem', marginBottom: '1rem', borderBottom: '1px solid #e1e1e1'}}>\r\n                                    {\r\n                                        this.printSelectedCookies('variety', 'dozen')\r\n                                    }\r\n                                </Row>\r\n                            }\r\n\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item className=\"mt-1\">\r\n\r\n                            <Row>\r\n                                <Col className=\"wrap_name\">\r\n                                    <p className=\"item-header\" style={{marginBottom: '0px', paddingLeft: '0px', color: '#b36a3b'}}>Sweets & Coffee Break</p>\r\n                                    <p className=\"item-description\">Coffee & Chocolate Chip Cookies</p>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                <Col className=\"wrap_qty\">\r\n                                    <NumberInput \r\n                                        noleft={true}\r\n                                        readonly={true}\r\n                                        onChange={this.openBox.bind(this)}\r\n                                        name=\"sweet_large\"\r\n                                        value={this.props.cookie.sweet.large.qty}\r\n                                    />\r\n                                    <p style={{float: 'right', fontWeight: '600'}}>\r\n                                        <b>LARGE</b>(Serves up to 20) $61.99\r\n                                    </p> \r\n                                </Col>\r\n                            </Row>\r\n                            {/*<Row>\r\n                                <Col className=\"wrap_qty\">\r\n                                    <NumberInput \r\n                                        readonly={true}\r\n                                        onChange={this.onChangeHandler.bind(this)}\r\n                                        name=\"sweet_large\"\r\n                                        value={this.props.cookie.sweet_large.qty}\r\n                                    />\r\n                                    <p style={{float: 'right', fontWeight: '600'}}>\r\n                                        <b>LARGE</b>(Serves up to 20) $61.99\r\n                                    </p> \r\n                                </Col>\r\n                            </Row>*/}\r\n\r\n                            {\r\n                                this.props.cookie.sweet.large.qty === 0 ?\r\n                                null\r\n                                :\r\n                                <Row style={{marginTop: '1rem', marginBottom: '1rem', borderBottom: '1px solid #e1e1e1'}}>\r\n                                    {\r\n                                        this.printSelectedCookies('sweet', 'large')\r\n                                    }\r\n                                </Row>\r\n                            }\r\n\r\n                            <Row>\r\n                                <Col className=\"wrap_qty\">\r\n                                    <NumberInput \r\n                                        noleft={true}\r\n                                        readonly={true}\r\n                                        onChange={this.openBox.bind(this)}\r\n                                        name=\"sweet_small\"\r\n                                        value={this.props.cookie.sweet.small.qty}\r\n                                    />\r\n                                    <p style={{float: 'right', fontWeight: '600'}}><b>SMALL</b>(Serves up to 10) $36.99</p> \r\n                                </Col>\r\n                            </Row>\r\n                            {/*<Row>\r\n                                <Col className=\"wrap_qty\">\r\n                                    <NumberInput \r\n                                        readonly={true}\r\n                                        onChange={this.onChangeHandler.bind(this)}\r\n                                        name=\"sweet_small\"\r\n                                        value={this.props.cookie.sweet_small.qty}\r\n                                    />\r\n                                    <p style={{float: 'right', fontWeight: '600'}}><b>SMALL</b>(Serves up to 10) $36.99</p> \r\n                                </Col>\r\n                            </Row>*/}\r\n\r\n                            {\r\n                                this.props.cookie.sweet.small.qty === 0 ?\r\n                                null\r\n                                :\r\n                                <Row style={{marginTop: '1rem', marginBottom: '1rem', borderBottom: '1px solid #e1e1e1'}}>\r\n                                    {\r\n                                        this.printSelectedCookies('sweet', 'small')\r\n                                    }\r\n                                </Row>\r\n                            }\r\n\r\n                        </ListGroup.Item>\r\n\r\n                        <div className=\"sub-header col-6\">\r\n                            <p>Sides for the Group</p>\r\n                            {/* <span>Perfect for groups on the go, served with utensils</span> */}\r\n                        </div>\r\n\r\n                        <ListGroup.Item className=\"mt-1\">\r\n                            <Row>\r\n                                <Col className=\"wrap_name\">\r\n                                    <p className=\"item-header\" style={{marginBottom: '0px', paddingLeft: '0px', color: '#b36a3b'}}>Kettle Potato Chips</p>\r\n                                </Col>\r\n                            </Row>\r\n                            {/* <Row>\r\n                                <Col className=\"wrap_qty\">\r\n                                    <NumberInput \r\n                                        readonly={true}\r\n                                        onChange={this.onChangeHandler.bind(this)}\r\n                                        name=\"kettle_large\"\r\n                                        value={this.props.cookie.kettle_large.qty}\r\n                                    />\r\n                                    <p style={{float: 'right', fontWeight: '600'}}>10 bags $9.99</p> \r\n                                </Col>\r\n                            </Row> */}\r\n                            <Row>\r\n                                <Col className=\"wrap_qty\">\r\n                                    <NumberInput \r\n                                        noleft={true}\r\n                                        readonly={true}\r\n                                        onChange={this.openBox.bind(this)}\r\n                                        name=\"kettle_single\"\r\n                                        value={this.props.cookie.kettle.single.qty}\r\n                                    />\r\n                                    <p style={{float: 'right', fontWeight: '600'}}>{this.props.cookie.kettle.single.name} $1.00</p> \r\n                                </Col>\r\n                            </Row>\r\n\r\n                            {\r\n                                this.props.cookie.kettle.single.qty === 0 ?\r\n                                null\r\n                                :\r\n                                <Row>\r\n                                    {this.printKettleChips('single')}\r\n                                </Row>\r\n                            }\r\n                            <Row>\r\n                                <Col className=\"wrap_qty\">\r\n                                    <NumberInput \r\n                                        noleft={true}\r\n                                        readonly={true}\r\n                                        onChange={this.openBox.bind(this)}\r\n                                        name=\"kettle_small\"\r\n                                        value={this.props.cookie.kettle.small.qty}\r\n                                    />\r\n                                    <p style={{float: 'right', fontWeight: '600'}}>{this.props.cookie.kettle.small.name} ${this.props.cookie.kettle.small.price}</p> \r\n                                </Col>\r\n                            </Row>\r\n\r\n                            {\r\n                                this.props.cookie.kettle.small.qty === 0 ?\r\n                                null\r\n                                :\r\n                                <Row>\r\n                                    {this.printKettleChips('small')}\r\n                                </Row>\r\n                            }\r\n\r\n                            <Row>\r\n                                <Col className=\"wrap_qty\">\r\n                                    <NumberInput \r\n                                        noleft={true}\r\n                                        readonly={true}\r\n                                        onChange={this.openBox.bind(this)}\r\n                                        name=\"kettle_large\"\r\n                                        value={this.props.cookie.kettle.large.qty}\r\n                                    />\r\n                                    <p style={{float: 'right', fontWeight: '600'}}>{this.props.cookie.kettle.large.name} ${this.props.cookie.kettle.large.price}</p> \r\n                                </Col>\r\n                            </Row>\r\n\r\n                            {\r\n                                this.props.cookie.kettle.large.qty === 0 ?\r\n                                null\r\n                                :\r\n                                <Row>\r\n                                    {this.printKettleChips('large')}\r\n                                </Row>\r\n                            }\r\n\r\n                            {/* <Row>\r\n                                <Col className=\"wrap_qty\">\r\n                                    <NumberInput \r\n                                        readonly={true}\r\n                                        onChange={this.onChangeHandler.bind(this)}\r\n                                        name=\"kettle_small\"\r\n                                        value={this.props.cookie.kettle_small.qty}\r\n                                    />\r\n                                    <p style={{float: 'right', fontWeight: '600'}}>5 bags $4.99</p> \r\n                                </Col>\r\n                            </Row> */}\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item className=\"menu-list es-list-group-item total\">\r\n                            <Row>\r\n                                <Col>\r\n                                    ${this.props.cookie.total}\r\n                                </Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n    \r\n                    </ListGroup>\r\n    \r\n                    <Row>\r\n                        <Col md={12}>\r\n                            <Bottom />\r\n                        </Col>\r\n                    </Row>\r\n    \r\n                </Card>\r\n            )\r\n            \r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    cookie: state.cookie\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => (\r\n    {\r\n        updateQty: (name, qty) => dispatch(updateQty(name,qty)),\r\n        openBox: (name, mode) => dispatch(openBox(name, mode)),\r\n        openEditBox: (box, type, id) => dispatch(openEditBox(box, type, id)),\r\n        removeBox: (box, type, id) => dispatch(removeBox(box, type, id)),\r\n        removeChip: (type, item) => dispatch(removeChip(type, item)),\r\n        updateCurrentNav: (index) => dispatch(updateCurrentNav(index))\r\n    }\r\n)\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Cookie)","import {\r\n    UPDATE_LUNCHSANDWICH_QTY,\r\n    OPEN_LUNCHSANDWICH_BOX,\r\n    OPEN_EDIT_LUNCHSANDWICH_BOX,\r\n    CLOSE_LUNCHSANDWICH_BOX,\r\n    ADD_LUNCHSANDWICH_BOX,\r\n    UPDATE_LUNCHSANDWICH_BOX,\r\n    REMOVE_LUNCHSANDWICH_BOX,\r\n    REMOVE_LUNCHSANDWICH_CHOICE,\r\n    ADD_LUNCHSANDWICH_LUNCHBOX,\r\n    UPDATE_LUNCHSANDWICH_LUNCHBOX,\r\n    REMOVE_LUNCHSANDWICH_LUNCHBOX\r\n} from './actionTypes.js'\r\n\r\nexport const updateQty = (name, qty) => ({\r\n    type: UPDATE_LUNCHSANDWICH_QTY,\r\n    payload: {\r\n        name,\r\n        qty\r\n    }\r\n})\r\n\r\nexport const openBox = (name, mode) => ({\r\n    type: OPEN_LUNCHSANDWICH_BOX,\r\n    payload: {\r\n        name,\r\n        mode\r\n    }\r\n})\r\n\r\nexport const openEditBox = (box, type, id) => ({\r\n    type: OPEN_EDIT_LUNCHSANDWICH_BOX,\r\n    payload: {\r\n        box,\r\n        type,\r\n        id\r\n    }\r\n})\r\n\r\nexport const closeBox = () => ({\r\n    type: CLOSE_LUNCHSANDWICH_BOX\r\n})\r\n\r\nexport const addBox = (item, box) => ({\r\n    type: ADD_LUNCHSANDWICH_BOX,\r\n    payload: {\r\n        item,\r\n        box\r\n    }\r\n})\r\n\r\nexport const updateBox = (item, box) => ({\r\n    type: UPDATE_LUNCHSANDWICH_BOX,\r\n    payload: {\r\n        item,\r\n        box\r\n    }\r\n})\r\n\r\nexport const removeBox = (box, type, id) => ({\r\n    type: REMOVE_LUNCHSANDWICH_BOX,\r\n    payload: {\r\n        box,\r\n        type,\r\n        id\r\n    }\r\n})\r\n\r\nexport const removeCookie = (sandwich, cookie) => ({\r\n    type: REMOVE_LUNCHSANDWICH_CHOICE,\r\n    payload: {\r\n        sandwich,\r\n        cookie\r\n    }\r\n})\r\n\r\nexport const addLunchBox = (item) => ({\r\n    type: ADD_LUNCHSANDWICH_LUNCHBOX,\r\n    payload: {\r\n        item\r\n    }\r\n})\r\n\r\nexport const updateLunchBox = (item) => ({\r\n    type: UPDATE_LUNCHSANDWICH_LUNCHBOX,\r\n    payload: {\r\n        item\r\n    }\r\n})\r\n\r\nexport const removeLunchBox = (sandwich, id) => ({\r\n    type: REMOVE_LUNCHSANDWICH_LUNCHBOX,\r\n    payload: {\r\n        sandwich,\r\n        id\r\n    }\r\n})","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Row, Col, Card, ButtonToolbar, Button, ListGroup } from 'react-bootstrap';\r\nimport NumberInput from '../common/numberInput.js';\r\n\r\nimport { addBox, closeBox, updateBox } from '../../redux/actions/lunchsandwich_action';\r\n\r\nclass Box extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        let list = {};\r\n\r\n        if (this.props.mode === 'edit'){ \r\n            if (this.props.type === null){\r\n                list = this.props.lunchsandwich[this.props.box].list[this.props.id]; \r\n            }\r\n            else {\r\n                list = this.props.lunchsandwich[this.props.box][this.props.type].list[this.props.id]; \r\n            }\r\n        }\r\n        else {\r\n            const items = this.props.lunchsandwich[this.props.box].items;\r\n            \r\n            for (let key in items){\r\n                list[key] = 0;\r\n            }\r\n        }\r\n        \r\n        this.state = {\r\n            //qty: 0,\r\n            qty: (this.props.mode === 'edit' ? (this.props.type === 'half' ? 5 : 10) : 0),\r\n            list: list,\r\n            error: false,\r\n            error_msg: '',\r\n            max_qty: (this.props.type === 'half' ? 5 : 10)\r\n        }\r\n        \r\n    }\r\n\r\n    onChangeInput = (name, qty) => {\r\n        this.setState({error: false})\r\n\r\n        let list = this.state.list;\r\n        // list[name] = qty;\r\n        const max_qty = this.state.max_qty;\r\n        let tmp_qty = 0;\r\n        for (let key in list){\r\n            if (key !== name){\r\n                tmp_qty = tmp_qty + list[key];    \r\n            }\r\n            else{\r\n                tmp_qty = tmp_qty + qty;\r\n            }\r\n        }\r\n        \r\n        if (tmp_qty <= max_qty){\r\n            list[name] = qty;\r\n            this.setState({\r\n                list: list,\r\n                qty: tmp_qty\r\n            })\r\n        }\r\n        else {\r\n            this.setState({\r\n                error: true,\r\n                error_msg: 'qty max error'\r\n            })\r\n            return 'error';\r\n        }\r\n    }\r\n\r\n    closeBox = () => {\r\n        this.props.closeBox();\r\n    }\r\n\r\n    addBox = (box) => {\r\n        if (this.validateBox()){\r\n\r\n        }\r\n        else {\r\n            this.props.addBox(this.state.list, box);\r\n        }\r\n    }\r\n\r\n    updateBox = (box) => {\r\n        if (this.validateBox()){\r\n\r\n        }\r\n        else {\r\n            this.props.updateBox(this.state.list, box);\r\n        }\r\n    }\r\n\r\n    validateBox = () => {\r\n        let error = false;        \r\n        if (this.state.qty !== this.state.max_qty){\r\n            this.setState({error: true});\r\n            error = true;\r\n        }\r\n        return error;\r\n    }\r\n\r\n    printItem = () => {\r\n        let print = [];\r\n        let index = 0;\r\n        const items = this.props.lunchsandwich[this.props.box].items;\r\n        \r\n        for (let key in items) {\r\n            print.push(\r\n                <Col md={12} className=\"wrap_qty mb-3\" key={'sandwich_input'+index}>\r\n                    {items[key].name}\r\n                    <NumberInput \r\n                        readonly={true}\r\n                        onChange={this.onChangeInput.bind(this)}\r\n                        name={key}\r\n                        value={this.state.list[key]}\r\n                        style={{float: 'left', textAlign: 'left'}}\r\n                    />\r\n                </Col>\r\n            )\r\n            index++;\r\n        }\r\n\r\n        return print;\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <Card className=\"col-md-12 p-0\">\r\n                <Card.Header>\r\n                    <p className=\"item-header\" style={{marginBottom: '0px', paddingLeft: '10px', fontSize: '20px', color: '#b36a3b'}}>\r\n                        {this.props.lunchsandwich[this.props.box].name}\r\n                        <span style={{ textTransform: 'initial', marginLeft: '12px', fontSize: '17px', color: '#545454'}}>\r\n                        {\r\n                            this.props.type === 'half' ?\r\n                            'Select 5'\r\n                            :\r\n                            'Select 10'\r\n                        }\r\n                        </span>\r\n                    </p>\r\n                </Card.Header>\r\n\r\n                {/* <Card.Body>\r\n                    <Card.Title>\r\n                        Select Your Sandwiches\r\n                        <span style={{ textTransform: 'initial', marginLeft: '12px', fontSize: '17px', color: '#545454'}}>\r\n                        {\r\n                            this.props.type === 'half' ?\r\n                            'Select 5'\r\n                            :\r\n                            'Select 10'\r\n                        }\r\n                        </span>\r\n                    </Card.Title>\r\n                </Card.Body> */}\r\n\r\n                <Card.Body className={this.state.error ? 'su-alert' : ''}>\r\n                    <Card.Text>You selected <strong>{this.state.qty} of {this.state.max_qty}</strong> Sandwiches.</Card.Text>\r\n                </Card.Body>\r\n\r\n                <ListGroup variant=\"flush\">\r\n\r\n                    <ListGroup.Item className=\"menu-list\">\r\n                        <Row className=\"mb-3\">\r\n\r\n                            { this.printItem() }\r\n\r\n                        </Row>\r\n\r\n                        <Row>\r\n                            <Col>\r\n                                <ButtonToolbar className=\"mt-4\">\r\n                                    {\r\n                                        this.props.mode === 'add' ?\r\n                                        <Button variant=\"primary\" size=\"md\" onClick={this.addBox.bind(this, 'forGroup')} className=\"add-btn\">\r\n                                            Add\r\n                                        </Button>\r\n                                        :\r\n                                        <Button variant=\"primary\" size=\"md\" onClick={this.updateBox.bind(this, 'forGroup')} className=\"add-btn\">\r\n                                            Update\r\n                                        </Button>\r\n                                    }\r\n                                    <Button variant=\"light\" size=\"md\" onClick={this.closeBox.bind(this)} className=\"cancel-btn ml-2\">\r\n                                        Cancel\r\n                                    </Button>\r\n                                </ButtonToolbar>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                    </ListGroup.Item>\r\n\r\n                </ListGroup>\r\n\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    lunchsandwich: state.lunchsandwich\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => (\r\n    {\r\n        addBox: (list, box) => dispatch(addBox(list, box)),\r\n        closeBox: () => dispatch(closeBox()),\r\n        updateBox: (list, box) => dispatch(updateBox(list, box))\r\n    }\r\n)\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Box)","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Row, Col, Card, ListGroup, ButtonToolbar, Button } from 'react-bootstrap';\r\nimport NumberInput from '../common/numberInput.js';\r\n\r\nimport { addBox, closeBox, updateBox } from '../../redux/actions/lunchsandwich_action';\r\n\r\nclass LunchGroup extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        let list = {\r\n            sandwich: {},\r\n            cookie: {},\r\n            chip: {},\r\n            drink: {}\r\n        };\r\n        if (this.props.lunchsandwich.mode === 'add'){ \r\n            for (let key in this.props.lunchsandwich.forGroup.items.sandwich){ list.sandwich[key] = 0; }\r\n            for (let key in this.props.lunchsandwich.forGroup.items.cookie){ list.cookie[key] = 0; }\r\n            for (let key in this.props.lunchsandwich.forGroup.items.chip){ list.chip[key] = 0; }\r\n            for (let key in this.props.lunchsandwich.forGroup.items.drink){ list.drink[key] = 0; }\r\n        }\r\n        else {\r\n            list = this.props.lunchsandwich.forGroup.list[this.props.id];\r\n        }\r\n\r\n        this.state = {\r\n            list: list,\r\n            //sandwich_qty: 0,\r\n            sandwich_qty: this.props.mode === 'edit' ? 10 : 0,\r\n            //cookie_qty: 0,\r\n            cookie_qty: 12,\r\n            //chip_qty: 0,\r\n            chip_qty : this.props.mode === 'edit' ? 12 : 0,\r\n            //drink_qty: 0,\r\n            drink_qty: this.props.mode === 'edit' ? 12 : 0,\r\n            error: false,\r\n            sandwich_err: false,\r\n            cookie_err: false,\r\n            chip_err: false,\r\n            drink_err: false,\r\n            error_msg: '',\r\n            max_qty: 12\r\n        }\r\n    }\r\n\r\n    checkQty = (type, name, qty) => {\r\n        let tmp_qty = 0;\r\n        for (let key in this.state.list[type]){\r\n            if (key !== name){\r\n                tmp_qty = tmp_qty + this.state.list[type][key];\r\n            }\r\n            else {\r\n                tmp_qty = tmp_qty + qty\r\n            }\r\n        }\r\n\r\n        return tmp_qty;\r\n    }\r\n\r\n    closeBox = () => {\r\n        this.props.closeBox();\r\n    }\r\n\r\n    addBox = (box) => {\r\n        if (this.validateBox()){\r\n\r\n        }\r\n        else {\r\n            this.props.addBox(this.state.list, box);\r\n        }\r\n    }\r\n\r\n    updateBox = (box) => {\r\n        if (this.validateBox()){\r\n\r\n        }\r\n        else {\r\n            this.props.updateBox(this.state.list, box);\r\n        }\r\n    }\r\n\r\n    validateBox = () => {\r\n        let error = false;        \r\n        // if (this.state.qty !== this.state.max_qty){\r\n        //     this.setState({error: true});\r\n        //     error = true;\r\n        // }\r\n        return error;\r\n    }\r\n\r\n    printSandwiches = () => {\r\n        let print = [];\r\n        let index = 0;\r\n        const items = this.props.lunchsandwich.forGroup.items.sandwich;\r\n        //const items = this.state.box === 'forGroup' ? this.props.lunchsandwich.forGroup.items.sandwich : this.props.lunchsandwich.items.sandwich;\r\n        for (let key in items) {\r\n            print.push(\r\n                <Col md={6} className=\"wrap_qty mb-3\" key={'sandwich_input'+index}>\r\n                    {items[key].name}\r\n                    <NumberInput \r\n                        readonly={true}\r\n                        onChange={this.onChangeSandwich.bind(this)}\r\n                        name={key}\r\n                        value={this.state.list.sandwich[key]}\r\n                        style={{float: 'left', textAlign: 'left'}}\r\n                    />\r\n                </Col>\r\n            )\r\n            index++;\r\n        }\r\n\r\n        return print;\r\n    }\r\n\r\n    onChangeSandwich = (name, qty) => {\r\n        const checkQty = this.checkQty('sandwich', name, qty)\r\n        if (checkQty < 11){\r\n            this.setState({\r\n                list: {\r\n                    ...this.state.list,\r\n                    sandwich: {\r\n                        ...this.state.list.sandwich,\r\n                        [name]: qty\r\n                    }\r\n                },\r\n                sandwich_qty: checkQty\r\n            })\r\n        }\r\n        else {\r\n            this.setState({\r\n                sandwich_err: true\r\n            })\r\n            return 'error';\r\n        }\r\n    }\r\n\r\n    printCookies = () => {\r\n        let print = [];\r\n        let index = 0;\r\n        const items = this.props.lunchsandwich.forGroup.items.cookie;\r\n        \r\n        for (let key in items) {\r\n            print.push(\r\n                <Col md={5} className=\"wrap_qty mb-3\" key={'cookie_input'+index}>\r\n                    {this.state.max_qty} {items[key].name} cookies will be added to your order.{/*{items[key].name}\r\n                    <NumberInput \r\n                        readonly={true}\r\n                        onChange={this.onChangeCookie.bind(this)}\r\n                        name={key}\r\n                        value={this.state.list.cookie[key]}\r\n                        style={{float: 'left', textAlign: 'left'}}\r\n                    />*/}\r\n                </Col>\r\n            )\r\n            index++;\r\n        }\r\n\r\n        return print;\r\n    }\r\n\r\n    onChangeCookie = (name, qty) => {\r\n        const checkQty = this.checkQty('cookie', name, qty)\r\n        if (checkQty < 13){\r\n            this.setState({\r\n                list: {\r\n                    ...this.state.list,\r\n                    cookie: {\r\n                        ...this.state.list.cookie,\r\n                        [name]: qty\r\n                    }\r\n                },\r\n                cookie_qty: checkQty\r\n            })\r\n        }\r\n        else {\r\n            this.setState({\r\n                cookie_err: true\r\n            })\r\n            return 'error';\r\n        }\r\n    }\r\n\r\n    printChips = () => {\r\n        let print = [];\r\n        let index = 0;\r\n        const items = this.props.lunchsandwich.forGroup.items.chip;\r\n        \r\n        for (let key in items) {\r\n            print.push(\r\n                <Col md={5} className=\"wrap_qty mb-3\" key={'chip_input'+index}>\r\n                    {items[key].name}\r\n                    <NumberInput \r\n                        readonly={true}\r\n                        onChange={this.onChangeChip.bind(this)}\r\n                        name={key}\r\n                        value={this.state.list.chip[key]}\r\n                        style={{float: 'left', textAlign: 'left'}}\r\n                    />\r\n                </Col>\r\n            )\r\n            index++;\r\n        }\r\n\r\n        return print;\r\n    }\r\n\r\n    onChangeChip = (name, qty) => {\r\n        const checkQty = this.checkQty('chip', name, qty)\r\n        if (checkQty < 13){\r\n            this.setState({\r\n                list: {\r\n                    ...this.state.list,\r\n                    chip: {\r\n                        ...this.state.list.chip,\r\n                        [name]: qty\r\n                    }\r\n                },\r\n                chip_qty: checkQty\r\n            })\r\n        }\r\n        else {\r\n            this.setState({\r\n                chip_err: true\r\n            })\r\n            return 'error';\r\n        }\r\n    }\r\n\r\n    printDrinks = () => {\r\n        let print = [];\r\n        let index = 0;\r\n        const items = this.props.lunchsandwich.forGroup.items.drink;\r\n        \r\n        for (let key in items) {\r\n            print.push(\r\n                <Col md={4} className=\"wrap_qty mb-3\" key={'drink_input'+index}>\r\n                    {items[key].name}\r\n                    <NumberInput \r\n                        readonly={true}\r\n                        onChange={this.onChangeDrink.bind(this)}\r\n                        name={key}\r\n                        value={this.state.list.drink[key]}\r\n                        style={{float: 'left', textAlign: 'left'}}\r\n                    />\r\n                </Col>\r\n            )\r\n            index++;\r\n        }\r\n\r\n        return print;\r\n    }\r\n\r\n    onChangeDrink = (name, qty) => {\r\n        const checkQty = this.checkQty('drink', name, qty)\r\n        if (checkQty < 13){\r\n            this.setState({\r\n                list: {\r\n                    ...this.state.list,\r\n                    drink: {\r\n                        ...this.state.list.drink,\r\n                        [name]: qty\r\n                    }\r\n                },\r\n                drink_qty: checkQty\r\n            })\r\n        }\r\n        else {\r\n            this.setState({\r\n                drink_err: true\r\n            })\r\n            return 'error';\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Card className=\"col-md-12 p-0\">\r\n\r\n                <Card.Header>\r\n                    <p className=\"item-header\" style={{marginBottom: '0px', paddingLeft: '0px', fontSize: '20px', color: '#b36a3b'}}>Lunch For The Group</p>\r\n                    <p>Serves 12</p>\r\n                    <ul>\r\n                        <li>Your choice of 10 full sandwiches (wrapped & cut in half)</li>\r\n                        <li>2 group salads</li>\r\n                        {/*<li>Dozen cookie variety box</li>*/}\r\n                        <li>Dozen cookie box</li>\r\n                        <li>12 bags of chips</li>\r\n                        <li>12 drinks</li>\r\n                    </ul>\r\n                </Card.Header>\r\n\r\n                <Card.Body className={this.state.sandwich_err ? 'su-alert' : ''} style={{borderBottomWidth: '0px'}}>\r\n                    <p className=\"item-header\" style={{marginBottom: '10px', paddingLeft: '0px', fontSize: '25px', color: '#b36a3b'}}>Sandwiches</p>\r\n                    <Card.Text>You selected <strong>{this.state.sandwich_qty} of 10</strong> Sandwiches.</Card.Text>\r\n                </Card.Body>\r\n\r\n                <ListGroup variant=\"flush\">\r\n\r\n                    <ListGroup.Item className=\"menu-list\">\r\n\r\n                        {/* <Row style={{marginTop: '5px'}}>\r\n                            <Col className=\"wrap_name\">\r\n                                <p className=\"item-header\" style={{marginBottom: '10px', paddingLeft: '0px', fontSize: '25px', color: '#b36a3b'}}>Sandwiches</p>\r\n                                <p className=\"item-description\"></p>\r\n                            </Col>\r\n                        </Row> */}\r\n\r\n                        <Row>{this.printSandwiches()}</Row>\r\n\r\n                    </ListGroup.Item>\r\n\r\n                </ListGroup>\r\n\r\n                <Card.Body className={this.state.cookie_err ? 'su-alert' : ''} style={{borderTop: '1px solid #ca9b19', borderBottomWidth: '0px'}}>\r\n                    <p className=\"item-header\" style={{marginBottom: '10px', paddingLeft: '0px', fontSize: '25px', color: '#b36a3b'}}>Cookies</p>\r\n                    <Card.Text>You selected <strong>{this.state.cookie_qty} of 12</strong> Cookies.</Card.Text>\r\n                </Card.Body>\r\n\r\n                <ListGroup variant=\"flush\">\r\n\r\n                    <ListGroup.Item className=\"menu-list\">\r\n\r\n                        {/* <Row style={{marginTop: '5px'}}>\r\n                            <Col className=\"wrap_name\">\r\n                                <p className=\"item-header\" style={{marginBottom: '10px', paddingLeft: '0px', fontSize: '25px', color: '#b36a3b'}}>Cookies</p>\r\n                                <p className=\"item-description\"></p>\r\n                            </Col>\r\n                        </Row> */}\r\n\r\n                        <Row>{this.printCookies()}</Row>\r\n\r\n                    </ListGroup.Item>\r\n\r\n                </ListGroup>\r\n\r\n                <Card.Body className={this.state.chip_err ? 'su-alert' : ''} style={{borderTop: '1px solid #ca9b19', borderBottomWidth: '0px'}}>\r\n                    <p className=\"item-header\" style={{marginBottom: '10px', paddingLeft: '0px', fontSize: '25px', color: '#b36a3b'}}>Chips</p>\r\n                    <Card.Text>You selected <strong>{this.state.chip_qty} of 12</strong> Chips.</Card.Text>\r\n                </Card.Body>\r\n\r\n                <ListGroup variant=\"flush\">\r\n\r\n                    <ListGroup.Item className=\"menu-list\">\r\n\r\n                        {/* <Row style={{marginTop: '5px'}}>\r\n                            <Col className=\"wrap_name\">\r\n                                <p className=\"item-header\" style={{marginBottom: '10px', paddingLeft: '0px', fontSize: '25px', color: '#b36a3b'}}>Chips</p>\r\n                                <p className=\"item-description\"></p>\r\n                            </Col>\r\n                        </Row> */}\r\n\r\n                        <Row>{this.printChips()}</Row>\r\n\r\n                    </ListGroup.Item>\r\n\r\n                </ListGroup>\r\n\r\n                <Card.Body className={this.state.drink_err ? 'su-alert' : ''} style={{borderTop: '1px solid #ca9b19', borderBottomWidth: '0px'}}>\r\n                    <p className=\"item-header\" style={{marginBottom: '10px', paddingLeft: '0px', fontSize: '25px', color: '#b36a3b'}}>Beverages</p>\r\n                    <Card.Text>You selected <strong>{this.state.drink_qty} of 12</strong> Drinks.</Card.Text>\r\n                </Card.Body>\r\n\r\n                <ListGroup variant=\"flush\" style={{borderBottom: '1px solid #ca9b19'}}>\r\n\r\n                    <ListGroup.Item className=\"menu-list\">\r\n\r\n                        {/* <Row style={{marginTop: '5px'}}>\r\n                            <Col className=\"wrap_name\">\r\n                                <p className=\"item-header\" style={{marginBottom: '10px', paddingLeft: '0px', fontSize: '25px', color: '#b36a3b'}}>Beverages</p>\r\n                                <p className=\"item-description\"></p>\r\n                            </Col>\r\n                        </Row> */}\r\n\r\n                        <Row>{this.printDrinks()}</Row>\r\n\r\n                    </ListGroup.Item>\r\n\r\n                </ListGroup>\r\n\r\n                <Row>\r\n                    <Col>\r\n                        <ButtonToolbar className=\"mt-3\">\r\n                            {\r\n                                this.props.lunchsandwich.mode === 'add' ?\r\n                                <Button variant=\"primary\" size=\"md\" onClick={this.addBox.bind(this)} className=\"add-btn\">\r\n                                    Add\r\n                                </Button>\r\n                                :\r\n                                <Button variant=\"primary\" size=\"md\" onClick={this.updateBox.bind(this)} className=\"add-btn\">\r\n                                    Update\r\n                                </Button>\r\n                            }\r\n                            <Button variant=\"light\" size=\"md\" onClick={this.closeBox.bind(this)} className=\"cancel-btn ml-2\">\r\n                                Cancel\r\n                            </Button>\r\n                        </ButtonToolbar>\r\n                    </Col>\r\n                </Row>\r\n\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    lunchsandwich: state.lunchsandwich\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => (\r\n    {\r\n        addBox: (list, box) => dispatch(addBox(list, box)),\r\n        closeBox: () => dispatch(closeBox()),\r\n        updateBox: (list, box) => dispatch(updateBox(list, box))\r\n    }\r\n)\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(LunchGroup)","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Row, Col, Card, ButtonToolbar, Button, ListGroup, Modal } from 'react-bootstrap';\r\n// import NumberInput from '../common/numberInput.js';\r\n\r\nimport { addLunchBox, closeBox, updateLunchBox } from '../../redux/actions/lunchsandwich_action';\r\n\r\nclass Cookie extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        let selected = {\r\n            chip: null,\r\n            fruit: null,\r\n            cookie: null\r\n        };\r\n\r\n        if (this.props.mode === 'edit'){ \r\n            selected = this.props.lunchsandwich.lunchBox[this.props.type].list[this.props.id]; \r\n        }\r\n\r\n        this.state = {\r\n            error: false,\r\n            error_msg: '',\r\n            num_selected: this.props.mode === 'edit' ? 1 : 0,\r\n            selected: selected,\r\n            max_qty: 1\r\n        }\r\n        \r\n    }\r\n\r\n    closeBox = () => {\r\n        this.props.closeBox();\r\n    }\r\n\r\n    addLunchBox = () => {\r\n        if (this.state.num_selected !== 1){\r\n            this.displayErr();\r\n        }\r\n        else {\r\n            this.props.addLunchBox(this.state.selected);\r\n        }\r\n    }\r\n\r\n    updateLunchBox = () => {\r\n        if (this.state.num_selected !== 1){\r\n            this.displayErr();\r\n        }\r\n        else {\r\n            this.props.updateLunchBox(this.state.selected);\r\n        }\r\n    }\r\n\r\n    displayErr = () => {\r\n        this.setState({\r\n            error: true\r\n        })\r\n    }\r\n\r\n    \r\n    onSelectItem = (type, key) => {\r\n        let pass = true;\r\n        let num = this.state.num_selected;\r\n        \r\n        if (this.state.selected[type] === key){\r\n            key = null;\r\n            num = num - 1;\r\n        }\r\n        else if (this.state.num_selected === 1 && this.state.selected[type] !== key){//replacing null for 'key' in this elseif statement makes it so user can select chips and cookies. The final option should say (this.state.num_selected === final_number && this.state.selected[type] !== key) and other options will say (this.state.num_selected === option_number && this.state.selected[type] !== null)\r\n            pass = false;\r\n        }\r\n        //else if (this.state.num_selected === 2 && this.state.selected[type] !== key){\r\n            //(this.state.num_selected ===2 && this.state.selected[type] !== key) //replacing 'key' for null in the above elseif statement makes it so user can select chips OR cookies, not both. Set to null for now so users can select both a chip and cookie option for 'Lunch Boxes'\r\n        //    pass = false;\r\n        //}\r\n        //else if (this.state.num_selected === 3 && this.state.selected[type] !== key){\r\n            //added this third elseif statement after the edit above where '&& this.state.selected[type] !== key' was replaced with '&& this.state.selected[type] !== null'\r\n        //    pass = false;\r\n        //}\r\n        else{\r\n            num = num + 1;\r\n        }\r\n\r\n        if (pass){\r\n            this.setState({\r\n                num_selected: num,\r\n                selected: {\r\n                    ...this.state.selected,\r\n                    [type]: key\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    printChips = () => {\r\n        let print = [];\r\n        let index = 0;\r\n        for (let key in this.props.lunchsandwich.lunchBox.chips){\r\n            const name = this.props.lunchsandwich.lunchBox.chips[key].name;\r\n            print.push(\r\n                <Button onClick={this.onSelectItem.bind(this, 'chip', key)} className={(this.state.selected.chip === key ? 'btn-select' : 'btn-unselect') + ' mr-1'} key={'item_'+index}>\r\n                    {name}\r\n                </Button>\r\n            )\r\n            index++;\r\n        }\r\n\r\n        return (\r\n                <ButtonToolbar>\r\n                    {print}\r\n                </ButtonToolbar>\r\n            );\r\n    }\r\n\r\n    printCookies = () => {\r\n        let print = [];\r\n        let index = 0;\r\n        for (let key in this.props.lunchsandwich.lunchBox.cookie){\r\n            const name = this.props.lunchsandwich.lunchBox.cookie[key].name;\r\n            print.push(\r\n                <Button onClick={this.onSelectItem.bind(this, 'cookie', key)} className={(this.state.selected.cookie === key ? 'btn-select' : 'btn-unselect') + ' mr-1'} key={'item_'+index}>\r\n                    {name}\r\n                </Button>\r\n            )\r\n            index++;\r\n        }\r\n\r\n        return (\r\n                <ButtonToolbar>\r\n                    {print}\r\n                </ButtonToolbar>\r\n            );\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <Modal show={true} className=\"lunchsandwich_lunchbox_wrap\">\r\n                <Modal.Header style={{fontWeight: '600'}}>\r\n                    Choose your items\r\n                </Modal.Header>\r\n\r\n                <Modal.Body style={{padding: '5px'}}>\r\n                \r\n                    <Card.Body className={this.state.error ? 'su-alert' : ''}>\r\n                        <Card.Text>You selected <strong>{this.state.num_selected} of {this.state.max_qty}</strong> Items.</Card.Text>\r\n                    </Card.Body>\r\n\r\n                    <ListGroup >\r\n\r\n                        <ListGroup.Item className=\"menu-list es-list-group-item\" style={{paddingTop: '0px', marginTop: '0px', borderWidth: '0px'}}>\r\n\r\n                            <Row style={{marginTop: '25px'}}>\r\n                                <Col className=\"wrap_name\">\r\n                                    <p className=\"item-header\" style={{marginBottom: '0px', paddingLeft: '0px', color: '#b36a3b'}}>Chips</p>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row className=\"mt-3 mb-3\">\r\n                                <Col md={12}>\r\n                                    {\r\n                                        this.printChips()\r\n                                    }\r\n                                </Col>\r\n                            </Row>\r\n\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item className=\"menu-list es-list-group-item\" style={{paddingTop: '0px', marginTop: '0px', borderWidth: '0px'}}>\r\n\r\n                            <Row style={{marginTop: '25px'}}>\r\n                                <Col className=\"wrap_name\">\r\n                                    <p className=\"item-header\" style={{marginBottom: '0px', paddingLeft: '0px', color: '#b36a3b'}}>Fruit</p>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row className=\"mt-3 mb-3\">\r\n                                <Col md={12}>\r\n                                    <Button onClick={this.onSelectItem.bind(this, 'fruit', 'fruit')} className={(this.state.selected.fruit !== null  ? 'btn-select' : 'btn-unselect') + ' mr-1'} >\r\n                                        Fruit\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                        </ListGroup.Item>\r\n\r\n                        {/* <ListGroup.Item className=\"menu-list es-list-group-item\" style={{paddingTop: '0px', marginTop: '0px', borderWidth: '0px'}}>\r\n\r\n                            <Row style={{marginTop: '25px'}}>\r\n                                <Col className=\"wrap_name\">\r\n                                    <p className=\"item-header\" style={{marginBottom: '0px', paddingLeft: '0px', color: '#b36a3b'}}>Cookie</p>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row className=\"mt-3 mb-3\">\r\n                                <Col md={12}>\r\n                                    {\r\n                                        this.printCookies()\r\n                                    }\r\n                                </Col>\r\n                            </Row>\r\n\r\n                        </ListGroup.Item> */}\r\n\r\n                    </ListGroup>\r\n                </Modal.Body>\r\n\r\n                <Modal.Footer style={{justifyContent: 'left'}}>\r\n                    <ButtonToolbar className=\"\">\r\n                        {\r\n                            this.props.mode === 'add' ?\r\n                            <Button variant=\"primary\" onClick={this.addLunchBox.bind(this)} className=\"add-btn\">\r\n                                Add\r\n                            </Button>\r\n                            :\r\n                            <Button variant=\"primary\" onClick={this.updateLunchBox.bind(this)} className=\"add-btn\">\r\n                                Update\r\n                            </Button>\r\n                        }\r\n                        <Button variant=\"light\" onClick={this.closeBox.bind(this)} className=\"cancel-btn ml-2\">\r\n                            Cancel\r\n                        </Button>\r\n                    </ButtonToolbar>\r\n                </Modal.Footer>\r\n\r\n                {/* <Card className=\"col-md-12 p-0\">\r\n                    <Card.Header>\r\n\r\n                    </Card.Header>\r\n\r\n                    <Card.Body>\r\n                        <Card.Title>\r\n                            Choose your Gourmet Cookie\r\n                        </Card.Title>\r\n                    </Card.Body>\r\n\r\n                    <ListGroup >\r\n\r\n                        <ListGroup.Item className=\"menu-list es-list-group-item\">\r\n\r\n                            <Row style={{marginTop: '25px'}}>\r\n                                <Col className=\"wrap_name\">\r\n                                    <p className=\"item-header\" style={{marginBottom: '0px', paddingLeft: '0px', color: '#b36a3b'}}>Bagel</p>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row className=\"mt-3 mb-3\">\r\n                                <Col md={12}>\r\n                                    {\r\n                                        this.printCookies()\r\n                                    }\r\n                                </Col>\r\n                            </Row>\r\n\r\n                        </ListGroup.Item>\r\n\r\n                    </ListGroup>\r\n\r\n                    <Row>\r\n                        <Col>\r\n                            <ButtonToolbar className=\"mt-4\">\r\n                                {\r\n                                    this.props.mode === 'add' ?\r\n                                    <Button variant=\"primary\" size=\"md\" onClick={this.addBox.bind(this)} className=\"add-btn\">\r\n                                        Add\r\n                                    </Button>\r\n                                    :\r\n                                    <Button variant=\"primary\" size=\"md\" onClick={this.updateBox.bind(this)} className=\"add-btn\">\r\n                                        Update\r\n                                    </Button>\r\n                                }\r\n                                <Button variant=\"light\" size=\"md\" onClick={this.closeBox.bind(this)} className=\"cancel-btn ml-2\">\r\n                                    Cancel\r\n                                </Button>\r\n                            </ButtonToolbar>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </Card> */}\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    lunchsandwich: state.lunchsandwich\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => (\r\n    {\r\n        addLunchBox: (item) => dispatch(addLunchBox(item)),\r\n        closeBox: () => dispatch(closeBox()),\r\n        updateLunchBox: (item) => dispatch(updateLunchBox(item))\r\n    }\r\n)\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Cookie)","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Row, Col, Card, ListGroup, ButtonToolbar, Button } from 'react-bootstrap';\r\nimport NumberInput from '../common/numberInput.js';\r\nimport TopNav from '../common/TopNav.js';\r\n\r\nimport { updateCurrentNav } from '../../redux/actions/main';\r\nimport { updateQty, openBox, openEditBox, removeBox, removeCookie, removeLunchBox } from '../../redux/actions/lunchsandwich_action';\r\n\r\nimport Bottom from '../bottom';\r\n\r\nimport Box from './Box';\r\nimport LunchGroup from './LunchGroup';\r\n\r\n// import styles from '../common/style.js';\r\nimport Cookie from \"./Cookie.js\";\r\n\r\nclass LunchSandwich extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.state = {\r\n            total: this.props.lunchsandwich.total\r\n        }\r\n\r\n        this.props.updateCurrentNav(7);\r\n    }\r\n\r\n    onChangeHandler = (name, value) => {\r\n        this.props.updateQty(name, value);\r\n    }\r\n\r\n    openBox = (name) => {\r\n        this.props.openBox(name, 'add');\r\n    }\r\n\r\n    openEditBox = (box, type, id) => {\r\n        this.props.openEditBox(box, type, id);\r\n    }\r\n\r\n    removeBox = (box, type, id) => {\r\n        this.props.removeBox(box, type, id);\r\n    }\r\n\r\n    removeCookie = (sandwich, cookie) => {\r\n        console.log(sandwich);\r\n        console.log(cookie)\r\n        this.props.removeCookie(sandwich, cookie);\r\n    }\r\n\r\n    printSelectedItems = (box, type) => {\r\n        let print = [];\r\n        const names = this.props.lunchsandwich[box].items;\r\n        const list = this.props.type === null ?\r\n                      this.props.lunchsandwich[box].list :\r\n                      this.props.lunchsandwich[box][type].list;\r\n\r\n        let box_count = 0;\r\n        for (const id in list) {\r\n            let print_selected = [];\r\n            let tmp_count = 0;\r\n            \r\n            for (const key in list[id]) {\r\n                if (list[id][key] !== 0){\r\n                    print_selected.push(<li className=\"\" key={'_child_' + tmp_count}> { names[key].name + ' : ' + list[id][key] } </li>)\r\n                    tmp_count++;\r\n                }\r\n            }\r\n\r\n            print.push(\r\n                <Col md={4} style={{padding: '5px'}} key={'ex_box' + box_count}>\r\n                    <div key={box_count} className=\"\" style={{padding: '5px', border: '1px solid #e1e1e1'}}>\r\n                        <h3 className=\"p-0\" style={{fontSize: '1rem'}}>{box}-{type} #{box_count+1}\r\n                            <ButtonToolbar style={{float: 'right'}}>\r\n                                {/*<Button onClick={this.openEditBox.bind(this, box, type, box_count)} className=\"edit-btn\">Edit</Button>*/}\r\n                                <Button onClick={this.removeBox.bind(this, box, type, box_count)} className=\"remove-btn\">Remove</Button>\r\n                            </ButtonToolbar>\r\n                        </h3>\r\n                        <ul key={box_count} className=\"\" style={{height: '', paddingLeft: '10px', listStyle: 'none'}}> {print_selected} </ul>\r\n                    </div>\r\n                </Col>\r\n            )\r\n            box_count++;\r\n        }\r\n\r\n        return print\r\n    }\r\n\r\n    printSelectedForGroup = () => {\r\n        let print = [];\r\n        let box_count = 0;\r\n        const list = this.props.lunchsandwich.forGroup.list;\r\n        for (let box_id in list){\r\n            let print_li = [];\r\n            let tmp_count = 0;\r\n\r\n            const items = ['sandwich', 'cookie', 'chip', 'drink'];\r\n\r\n            for (let item_id in items){\r\n                const item = items[item_id];\r\n                for (let key in list[box_id][item]){\r\n                    if (list[box_id][item][key] !== 0){\r\n                        print_li.push(<li className=\"\" key={'_child_' + tmp_count}> { this.props.lunchsandwich.forGroup.items[item][key].name + ' : ' + list[box_id][item][key] } </li>)\r\n                        tmp_count++;\r\n                    }\r\n                }\r\n            }\r\n\r\n            print.push(\r\n                <Col md={4} style={{padding: '5px'}} key={'ex_box' + box_count}>\r\n                    <div key={box_count} className=\"\" style={{padding: '5px', border: '1px solid #e1e1e1'}}>\r\n                        <h3 className=\"p-0\" style={{fontSize: '1rem'}}>forGroup #{box_count+1}\r\n                            <ButtonToolbar style={{float: 'right'}}>\r\n                                <Button onClick={this.openEditBox.bind(this, 'forGroup', null, box_count)} className=\"edit-btn\">Edit</Button>\r\n                                <Button onClick={this.removeBox.bind(this, 'forGroup', null, box_count)} className=\"remove-btn\">Remove</Button>\r\n                            </ButtonToolbar>\r\n                        </h3>\r\n                        <ul key={box_count} className=\"\" style={{height: '', paddingLeft: '10px', listStyle: 'none'}}> {print_li}{\"Chocolate Chip Cookies: 12\"} </ul>\r\n                    </div>\r\n                </Col>\r\n            )\r\n            box_count++;\r\n        }\r\n\r\n        return print;\r\n    }\r\n\r\n    printLunchBox = (key) => {\r\n\r\n        let printCookies = [];\r\n        let count = 1;\r\n        const list = this.props.lunchsandwich.lunchBox[key].list;\r\n        \r\n        for (let list_id in list){\r\n\r\n            const items = list[list_id]\r\n            \r\n            let chip_name = this.props.lunchsandwich.lunchBox.chips;\r\n            let cookie_name = this.props.lunchsandwich.lunchBox.cookie;\r\n\r\n            printCookies.push(\r\n                <Col md={6} style={{padding: '5px'}} key={'ex_box' + list_id}>\r\n                    <div key={list_id} className=\"\" style={{padding: '5px', border: '1px solid #e1e1e1'}}>\r\n                        <h3 className=\"p-0\" style={{fontSize: '1rem'}}>#{count} {key}\r\n                            <ButtonToolbar style={{float: 'right'}}>\r\n                                <Button onClick={this.openEditBox.bind(this, 'lunchBox', key, list_id)} className=\"edit-btn\">Edit</Button>\r\n                                <Button onClick={this.removeLunchBox.bind(this, key, list_id)} className=\"remove-btn\">Remove</Button>\r\n                            </ButtonToolbar>\r\n                        </h3>\r\n                        <ul key={list_id} className=\"\" style={{height: '', paddingLeft: '10px', listStyle: 'none'}}>\r\n                            { items.chip !== null ? <li className=\"\"> { chip_name[items.chip].name } </li> : null }\r\n                            { items.fruit !== null ? <li className=\"\"> Fruit </li> : null }\r\n                            { items.cookie !== null ? <li className=\"\"> { cookie_name[items.cookie].name } </li> : null }\r\n                            {<li>Chocolate Chip Cookie</li>}\r\n                        </ul>\r\n                    </div>\r\n                </Col>\r\n            )\r\n            count++;\r\n\r\n        }\r\n\r\n        return (\r\n            <Col md={6} style={{borderBottom: '1px solid rgba(0, 0, 0, 0.125)'}}>\r\n                <Row style={{marginTop: '25px'}}>\r\n                    <Col className=\"wrap_name\">\r\n                        <p className=\"item-header\" style={{marginBottom: '0px', paddingLeft: '0px', color: '#b36a3b'}}>{this.props.lunchsandwich.lunchBox[key].name}</p>\r\n                        <p className=\"item-description\">{this.props.lunchsandwich.lunchBox[key].description}</p>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                    <Col className=\"wrap_qty\">\r\n                        <NumberInput \r\n                            noleft={true}\r\n                            readonly={true}\r\n                            onChange={this.openBox.bind(this)}\r\n                            name={\"lunchBox_\" + key}\r\n                            value={this.props.lunchsandwich.lunchBox[key].qty}\r\n                        />\r\n                        <p style={{float: 'right', fontWeight: '600'}}>${this.props.lunchsandwich.lunchBox[key].price}</p> \r\n                    </Col>\r\n                </Row>\r\n\r\n                {\r\n                    this.props.lunchsandwich.lunchBox[key].qty === 0 ?\r\n                    null\r\n                    :\r\n                    <Row style={{marginTop: '1rem', marginBottom: '1rem'}}>\r\n                        {printCookies}\r\n                    </Row>\r\n                }\r\n            </Col>\r\n        )\r\n    }\r\n\r\n    removeLunchBox = (sandwich, id) => {\r\n        this.props.removeLunchBox(sandwich, id)\r\n    }\r\n\r\n    render() {\r\n        if (this.props.lunchsandwich.box === null || this.props.lunchsandwich.box === 'lunchBox')\r\n        {\r\n            return(\r\n                <Card className=\"col-md-12 p-0 menu-card\">\r\n    \r\n                    <Card.Header>\r\n                        <TopNav />\r\n                    </Card.Header>\r\n    \r\n                    <Card.Body>\r\n                        <Card.Title>Lunch Sandwiches</Card.Title>\r\n                    </Card.Body>\r\n\r\n                    <div className=\"sub-header col-6\" style={{borderTopWidth: '0px'}}>\r\n                        <p>For the Group</p>\r\n                        <span>Served with utensils, plates, & napkins</span>\r\n                    </div>\r\n\r\n                    <ListGroup>\r\n\r\n                        <ListGroup.Item className=\"es-list-group-item\">\r\n\r\n                            <Row style={{marginTop: '25px'}}>\r\n                                <Col className=\"wrap_name\">\r\n                                    <p className=\"item-header\" style={{marginBottom: '0px', paddingLeft: '0px', color: '#b36a3b'}}>Signature Lunch Nosh Box</p>\r\n                                    <p className=\"item-description\">An assortment of our Signature Sandwiches including: Tasty Turkey on Asiago Bagel, Turkey Bacon & Avocado on Plain Bagel, Avocado Veg Out on Sesame Bagel, and Ham & Swiss on Plain Bagel</p>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                <Col className=\"wrap_qty\">\r\n                                    <NumberInput \r\n                                        noleft={true}\r\n                                        readonly={true}\r\n                                        onChange={this.openBox.bind(this)}\r\n                                        name=\"signature_full\"\r\n                                        value={this.props.lunchsandwich.signature.full.qty}\r\n                                    />\r\n                                    <p style={{float: 'right', fontWeight: '600'}}>10 Full Sandwiches (wrapped & cut in half) ${this.props.lunchsandwich.signature.full.price}</p> \r\n                                </Col>\r\n                            </Row>\r\n\r\n                            {\r\n                                this.props.lunchsandwich.signature.full.qty === 0 ?\r\n                                null\r\n                                :\r\n                                <Row style={{marginTop: '1rem', marginBottom: '1rem', borderBottom: '1px solid #e1e1e1'}}>\r\n                                    { this.printSelectedItems('signature', 'full') }\r\n                                </Row>\r\n                            }\r\n\r\n                            <Row>\r\n                                <Col className=\"wrap_qty\">\r\n                                    <NumberInput \r\n                                        noleft={true}\r\n                                        readonly={true}\r\n                                        onChange={this.openBox.bind(this)}\r\n                                        name=\"signature_half\"\r\n                                        value={this.props.lunchsandwich.signature.half.qty}\r\n                                    />\r\n                                    <p style={{float: 'right', fontWeight: '600'}}>5 Full Sandwiches (wrapped & cut in half) ${this.props.lunchsandwich.signature.half.price}</p> \r\n                                </Col>\r\n                            </Row>\r\n\r\n                            {\r\n                                this.props.lunchsandwich.signature.half.qty === 0 ?\r\n                                null\r\n                                :\r\n                                <Row style={{marginTop: '1rem', marginBottom: '1rem', borderBottom: '1px solid #e1e1e1'}}>\r\n                                    { this.printSelectedItems('signature', 'half') }\r\n                                </Row>\r\n                            }\r\n\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item className=\"es-list-group-item\">\r\n\r\n                            <Row style={{marginTop: '25px'}}>\r\n                                <Col className=\"wrap_name\">\r\n                                    <p className=\"item-header\" style={{marginBottom: '0px', paddingLeft: '0px', color: '#b36a3b'}}>Classic Lunch Nosh Box</p>\r\n                                    <p className=\"item-description\">An assortment of our Classic Lunch Sandwiches including: Turkey & Cheddar on Plain Bagel, Ham & Swiss on Plain Bagel, and Avocado Veg Out on Sesame Bagel</p>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                <Col className=\"wrap_qty\">\r\n                                    <NumberInput \r\n                                        noleft={true}\r\n                                        readonly={true}\r\n                                        onChange={this.openBox.bind(this)}\r\n                                        name=\"classic_full\"\r\n                                        value={this.props.lunchsandwich.classic.full.qty}\r\n                                    />\r\n                                    <p style={{float: 'right', fontWeight: '600'}}>10 Full Sandwiches (wrapped & cut in half) ${this.props.lunchsandwich.classic.full.price}</p> \r\n                                </Col>\r\n                            </Row>\r\n\r\n                            {\r\n                                this.props.lunchsandwich.classic.full.qty === 0 ?\r\n                                null\r\n                                :\r\n                                <Row style={{marginTop: '1rem', marginBottom: '1rem', borderBottom: '1px solid #e1e1e1'}}>\r\n                                    { this.printSelectedItems('classic', 'full') }\r\n                                </Row>\r\n                            }\r\n\r\n                            <Row>\r\n                                <Col className=\"wrap_qty\">\r\n                                    <NumberInput \r\n                                        noleft={true}\r\n                                        readonly={true}\r\n                                        onChange={this.openBox.bind(this)}\r\n                                        name=\"classic_half\"\r\n                                        value={this.props.lunchsandwich.classic.half.qty}\r\n                                    />\r\n                                    <p style={{float: 'right', fontWeight: '600'}}>5 Full Sandwiches (wrapped & cut in half) ${this.props.lunchsandwich.classic.half.price}</p> \r\n                                </Col>\r\n                            </Row>\r\n\r\n                            {\r\n                                this.props.lunchsandwich.classic.half.qty === 0 ?\r\n                                null\r\n                                :\r\n                                <Row style={{marginTop: '1rem', marginBottom: '1rem', borderBottom: '1px solid #e1e1e1'}}>\r\n                                    { this.printSelectedItems('classic', 'half') }\r\n                                </Row>\r\n                            }\r\n\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item className=\"es-list-group-item\">\r\n\r\n                            <Row style={{marginTop: '25px'}}>\r\n                                <Col className=\"wrap_name\">\r\n                                    <p className=\"item-header\" style={{marginBottom: '0px', paddingLeft: '0px', color: '#b36a3b'}}>Lunch For The Group</p>\r\n                                    <p className=\"item-description\">Your choice of 10 full sandwiches (wrapped & cut in half), 2 Group Salads, Dozen Cookie Box, 12 bags of chips and 12 drinks</p>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                <Col className=\"wrap_qty\">\r\n                                    <NumberInput \r\n                                        noleft={true}\r\n                                        readonly={true}\r\n                                        onChange={this.openBox.bind(this)}\r\n                                        name=\"forGroup_null\"\r\n                                        value={this.props.lunchsandwich.forGroup.qty}\r\n                                    />\r\n                                    <p style={{float: 'right', fontWeight: '600'}}>Serves up to 12 ${this.props.lunchsandwich.forGroup.price}</p> \r\n                                </Col>\r\n                            </Row>\r\n\r\n                            {\r\n                                this.props.lunchsandwich.forGroup.qty === 0 ?\r\n                                null\r\n                                :\r\n                                <Row style={{marginTop: '1rem', marginBottom: '1rem', borderBottom: '1px solid #e1e1e1'}}>\r\n                                    { this.printSelectedForGroup() }\r\n                                </Row>\r\n                            }\r\n\r\n                        </ListGroup.Item>\r\n\r\n                    </ListGroup>\r\n\r\n                    <div className=\"sub-header col-6\" style={{}}>\r\n                        <p>Lunch Boxes</p>\r\n                        <span>All sandwiches are served with choice of Chips or Fruit, & Gourmet Cookie</span>\r\n                    </div>\r\n\r\n                    <ListGroup>\r\n\r\n                        <ListGroup.Item style={{marginTop: '5px'}}>\r\n\r\n                            <Row>\r\n                                {this.printLunchBox('turkey')}\r\n\r\n                                {this.printLunchBox('harvest')}\r\n\r\n                                {this.printLunchBox('ham')}\r\n\r\n                                {/*this.printLunchBox('albacore')*/}\r\n\r\n                                {this.printLunchBox('tasty')}\r\n\r\n                                {this.printLunchBox('avocado')}\r\n\r\n                                {this.printLunchBox('green')}\r\n\r\n                                {this.printLunchBox('nova')}\r\n                            </Row>\r\n    \r\n                        </ListGroup.Item>\r\n\r\n                    </ListGroup>\r\n\r\n                    {\r\n                        this.props.lunchsandwich.box === 'lunchBox' ?\r\n                        <Cookie\r\n                            box={this.props.lunchsandwich.box}\r\n                            type={this.props.lunchsandwich.type}\r\n                            mode={this.props.lunchsandwich.mode}\r\n                            id={this.props.lunchsandwich.id}\r\n                        />\r\n                        :\r\n                        null\r\n                    }\r\n\r\n\r\n\r\n                    <div className=\"sub-header col-12\" style={{padding: '0px', marginBottom: '15px', borderTopWidth: '0px'}}>  \r\n                    </div>\r\n\r\n                    <ListGroup>\r\n\t\t    \t{/**This first ListGroup item with two rows was the previous way this file rendered the lunchbox nova lox item.\r\n\t\t\t  **This nova lox item has since been updated to be included in the lunchbox object/component as an option, and prices were assigned to each individual option/flavor.\r\n\t\t\t  **After price was assigned to each individual item, redux\\reducers\\lunchsandwich_reducer.js was updated to apply this new price prop to the subtotal and total calculation using slicing.\r\n\t\t\t  **In other words, the new price variable/prop is now a child of each flavor option (which are children of lunchBox). Price was previously a child of lunchBox and sibling of the flavor options\r\n\t\t\t  **/}\r\n                        {/*<ListGroup.Item style={{marginTop: '5px'}}>\r\n                            <Row style={{marginTop: '25px'}}>\r\n                                <Col className=\"wrap_name\">\r\n                                    <p className=\"item-header\" style={{marginBottom: '0px', paddingLeft: '0px', color: '#b36a3b'}}>{this.props.lunchsandwich.nova_lox.name}</p>\r\n                                    <p className=\"item-description\">{this.props.lunchsandwich.nova_lox.description}</p>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                <Col className=\"wrap_qty\">\r\n                                    <NumberInput \r\n                                        readonly={true}\r\n                                        onChange={this.onChangeHandler.bind(this)}\r\n                                        name=\"nova_lox\"\r\n                                        value={this.props.lunchsandwich.nova_lox.qty}\r\n                                    />\r\n                                    <p style={{float: 'right', fontWeight: '600'}}>${this.props.lunchsandwich.nova_lox.price}</p> \r\n                                </Col>\r\n                            </Row>\r\n                            </ListGroup.Item> \r\n                        */}\r\n\r\n                        <ListGroup.Item className=\"menu-list es-list-group-item total\">\r\n                            <Row>\r\n                                <Col>\r\n                                    ${this.props.lunchsandwich.total}\r\n                                </Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n\r\n                    </ListGroup>\r\n    \r\n                    <Row>\r\n                        <Col md={12}>\r\n                            <Bottom />\r\n                        </Col>\r\n                    </Row>\r\n    \r\n                </Card>\r\n            )\r\n            \r\n        }\r\n        else if (this.props.lunchsandwich.box === 'forGroup') {\r\n            return <LunchGroup\r\n                        mode={this.props.lunchsandwich.mode}\r\n                        id={this.props.lunchsandwich.id}\r\n                    />\r\n        }\r\n        // else if (this.props.lunchsandwich.box === 'lunchBox') {\r\n        //     return <Cookie\r\n        //                 box={this.props.lunchsandwich.box}\r\n        //                 mode={this.props.lunchsandwich.mode}\r\n        //                 id={this.props.lunchsandwich.id}\r\n        //             />\r\n        // }\r\n        else if (this.props.lunchsandwich.box !== 'lunchBox') {\r\n            return <Box \r\n                        box={this.props.lunchsandwich.box}\r\n                        type={this.props.lunchsandwich.type}\r\n                        mode={this.props.lunchsandwich.mode}\r\n                        id={this.props.lunchsandwich.id}\r\n                    />\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    lunchsandwich: state.lunchsandwich\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => (\r\n    {\r\n        updateQty: (name, qty) => dispatch(updateQty(name,qty)),\r\n        openBox: (name, mode) => dispatch(openBox(name, mode)),\r\n        openEditBox: (box, type, id) => dispatch(openEditBox(box, type, id)),\r\n        removeBox: (box, type, key) => dispatch(removeBox(box, type, key)),\r\n        removeCookie: (sandwich, cookie) => dispatch(removeCookie(sandwich, cookie)),\r\n        updateCurrentNav: (index) => dispatch(updateCurrentNav(index)),\r\n        removeLunchBox: (sandwich, id) => dispatch(removeLunchBox(sandwich, id))\r\n    }\r\n)\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(LunchSandwich)","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { Row, Col, ListGroup } from 'react-bootstrap';\r\n\r\nclass BagelShmear extends React.Component {\r\n\r\n    printBox = (box) => {\r\n        let print = [];\r\n        let box_count = 0;\r\n        const list = this.props.bagelandsheamr[box].list;\r\n        for (let box_id in list){\r\n            let print_li = [];\r\n            let tmp_count = 0;\r\n\r\n            //const items = ['bagel', 'whip'];\r\n            const items = box === 'whip' ? ['whip'] : ['bagel', 'whip']; //simplifys the print box if user is choosing to buy whip by the tub which doesn't include bagels\r\n\r\n\r\n            for (let item_id in items){\r\n                const item = items[item_id];\r\n                print_li.push(<p className=\"mb-0\" style={{color: '#b36a3b'}}>{item}</p>)\r\n                for (let key in list[box_id][item]){\r\n                    if (list[box_id][item][key] !== 0){\r\n                        let name = this.props.bagelandsheamr[item][key].name;\r\n                        if (item === 'whip' && key !== 'plain' && key !== 'onion' && key !== 'salmon'){\r\n                            name = 'Reduced Fat ' + name\r\n                        }\r\n                        print_li.push(<li className=\"\" key={'_child_' + tmp_count}> { name + ' : ' + list[box_id][item][key] } </li>)\r\n                        tmp_count++;\r\n                    }\r\n                }\r\n            }\r\n\r\n            print.push(\r\n                <Col md={6} style={{padding: '5px'}} key={'ex_box' + box_count}>\r\n                    <div key={box_count} className=\"\" style={{padding: '5px', border: '1px solid #e1e1e1'}}>\r\n                        <h3 className=\"p-0\" style={{fontSize: '1rem'}}>{box} #{box_count+1}\r\n                            {/* <ButtonToolbar style={{float: 'right'}}>\r\n                                <Button onClick={this.openEditBox.bind(this, box, box_count)} className=\"edit-btn\">Edit</Button>\r\n                                <Button onClick={this.removeBox.bind(this, box, box_count)} className=\"remove-btn\">Remove</Button>\r\n                            </ButtonToolbar> */}\r\n                        </h3>\r\n                        <ul key={box_count} className=\"\" style={{height: '', paddingLeft: '10px', listStyle: 'none'}}> {print_li} </ul>\r\n                    </div>\r\n                </Col>\r\n            )\r\n            box_count++;\r\n        }\r\n\r\n        return print;\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <ListGroup.Item style={{display: (this.props.bagelandsheamr.total === 0 ? 'none' : null)}}>\r\n                <h3>Bagels & Shmear</h3>\r\n                <ul className=\"summary-list-group\">\r\n\r\n                    <li className=\"summary-list header\">\r\n                        <Row>\r\n                            <Col className=\"item\" md={5}>Item</Col>\r\n                            <Col className=\"qty\">Quantity</Col>\r\n                            <Col className=\"price\">Price</Col>\r\n                            <Col className=\"total\">Total</Col>\r\n                        </Row>\r\n                    </li>\r\n\r\n                    <li className=\"summary-list\" style={{display: (this.props.bagelandsheamr.baker_dozen.qty === 0 ? 'none' : null)}}>\r\n                        <Row>\r\n                            <Col className=\"item\" md={5}>{this.props.bagelandsheamr.baker_dozen.name}</Col>\r\n                            <Col className=\"qty\">{this.props.bagelandsheamr.baker_dozen.qty}</Col>\r\n                            <Col className=\"price\">${this.props.bagelandsheamr.baker_dozen.price}</Col>\r\n                            <Col className=\"total\">${this.props.bagelandsheamr.baker_dozen.total}</Col>\r\n                        </Row>\r\n\r\n                        <Row className=\"item sub\" style={{paddingTop: '10px'}}>\r\n                            {this.printBox('baker_dozen')}\r\n                        </Row>\r\n                    </li>\r\n\r\n                    <li className=\"summary-list\" style={{display: (this.props.bagelandsheamr.half_dozen.qty === 0 ? 'none' : null)}}>\r\n                        <Row>\r\n                            <Col className=\"item\" md={5}>{this.props.bagelandsheamr.half_dozen.name}</Col>\r\n                            <Col className=\"qty\">{this.props.bagelandsheamr.half_dozen.qty}</Col>\r\n                            <Col className=\"price\">${this.props.bagelandsheamr.half_dozen.price}</Col>\r\n                            <Col className=\"total\">${this.props.bagelandsheamr.half_dozen.total}</Col>\r\n                        </Row>\r\n\r\n                        <Row className=\"item sub\" style={{paddingTop: '10px'}}>\r\n                            {this.printBox('half_dozen')}\r\n                        </Row>\r\n                    </li>\r\n\r\n                    <li className=\"summary-list\" style={{display: (this.props.bagelandsheamr.nosh_box.qty === 0 ? 'none' : null)}}>\r\n                        <Row>\r\n                            <Col className=\"item\" md={5}>{this.props.bagelandsheamr.nosh_box.name}</Col>\r\n                            <Col className=\"qty\">{this.props.bagelandsheamr.nosh_box.qty}</Col>\r\n                            <Col className=\"price\">${this.props.bagelandsheamr.nosh_box.price}</Col>\r\n                            <Col className=\"total\">${this.props.bagelandsheamr.nosh_box.total}</Col>\r\n                        </Row>\r\n\r\n                        <Row className=\"item sub\" style={{paddingTop: '10px'}}>\r\n                            {this.printBox('nosh_box')}\r\n                        </Row>\r\n                    </li>\r\n\r\n                    <li className=\"summary-list\" style={{display: (this.props.bagelandsheamr.whip.qty === 0 ? 'none' : null)}}>\r\n                        <Row>\r\n                            <Col className=\"item\" md={5}>{this.props.bagelandsheamr.whip.name}</Col>\r\n                            <Col className=\"qty\">{this.props.bagelandsheamr.whip.qty}</Col>\r\n                            <Col className=\"price\">${this.props.bagelandsheamr.whip.price}</Col>\r\n                            <Col className=\"total\">${this.props.bagelandsheamr.whip.total}</Col>\r\n                        </Row>\r\n\r\n                        <Row className=\"item sub\" style={{paddingTop: '10px'}}>\r\n                            {this.printBox('whip')}\r\n                        </Row>\r\n                    </li>\r\n\r\n                    <li className=\"summary-list footer\">\r\n                        <Row>\r\n                            <Col className=\"item\" md={5}></Col>\r\n                            <Col className=\"qty\"></Col>\r\n                            <Col className=\"price\"></Col>\r\n                            <Col className=\"total\">${this.props.bagelandsheamr.total}</Col>\r\n                        </Row>\r\n                    </li>\r\n                </ul>\r\n            </ListGroup.Item>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    bagelandsheamr: state.bagelandsheamr\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps\r\n)(BagelShmear)","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { Row, Col, ListGroup } from 'react-bootstrap';\r\n\r\n// const roundTo = require('roundto');\r\n\r\nclass EggSandwich extends React.Component {    \r\n\r\n    printListWithSub = (box, type, name) => {\r\n        let box_count = 0;\r\n\r\n        let print_subitem = this.props.egg_sandwich[box][type].list.map((list, index) => {\r\n            const names = this.props.egg_sandwich[box].items;\r\n            let print = [];\r\n            let count = 0;\r\n            let total_qty = 0;\r\n\r\n            if (list === null){return null;}\r\n            box_count++;\r\n            \r\n            for (let key in names) {\r\n                if (list[key] !== 0){\r\n                    if (typeof list[key] === 'undefined'){ return null; }\r\n                    print.push(<li className=\"\" key={'_child_' + count}> { names[key].name + ' : ' + list[key] } </li>);\r\n                    total_qty = total_qty + list[key];\r\n                    count++;\r\n                }\r\n            }\r\n            \r\n            return (\r\n                <Col key={'ex_box' + index} md={6} style={{padding: '5px'}}>\r\n                    <div style={{padding: '5px', borderBottom: '1px solid #e1e1e1'}}>\r\n                        <h3 className=\"p-0\" style={{fontSize: '1rem'}}>{box}-{type} #{box_count}</h3>\r\n                        <ul key={index} className=\"list-inline\" style={{paddingLeft: '10px', listStyle: 'none'}}> \r\n                            {print} \r\n                        </ul>\r\n                    </div>\r\n                </Col>\r\n            )\r\n        })\r\n\r\n        return (\r\n            <React.Fragment>\r\n\r\n                <Row>\r\n                    <Col className=\"item\" md={5}>{name}</Col>\r\n                    <Col className=\"qty\">{this.props.egg_sandwich[box][type].qty}</Col>\r\n                    <Col className=\"price\">${this.props.egg_sandwich[box][type].price}</Col>\r\n                    <Col className=\"total\">${this.props.egg_sandwich[box][type].total}</Col>\r\n                </Row>\r\n\r\n                <Row className=\"item sub\" style={{paddingTop: '10px'}}>\r\n                    { print_subitem }\r\n                </Row>\r\n\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <ListGroup.Item style={{display: (this.props.egg_sandwich.total === 0 ? 'none' : null)}}>\r\n                <h3>Egg Sandwiches</h3>\r\n                <ul className=\"summary-list-group\">\r\n                    <li className=\"summary-list header\">\r\n                        <Row>\r\n                            <Col className=\"item\" md={5}>Item</Col>\r\n                            <Col className=\"qty\">Quantity</Col>\r\n                            <Col className=\"price\">Price</Col>\r\n                            <Col className=\"total\">Total</Col>\r\n                        </Row>\r\n                    </li>\r\n\r\n                    <li className=\"summary-list\" style={{display: (this.props.egg_sandwich.classic.half.qty === 0 ? 'none' : null)}}>\r\n                        {this.printListWithSub('classic', 'half', 'Classic - Half Dozen')}\r\n                    </li>\r\n\r\n                    <li className=\"summary-list\" style={{display: (this.props.egg_sandwich.classic.dozen.qty === 0 ? 'none' : null)}}>\r\n                        {this.printListWithSub('classic', 'dozen', 'Classic - Dozen')}\r\n                    </li>\r\n\r\n                    <li className=\"summary-list\" style={{display: (this.props.egg_sandwich.signature.half.qty === 0 ? 'none' : null)}}>\r\n                        {this.printListWithSub('signature', 'half', 'Signature - Half Dozen')}\r\n                    </li>\r\n\r\n                    <li className=\"summary-list\" style={{display: (this.props.egg_sandwich.signature.dozen.qty === 0 ? 'none' : null)}}>\r\n                        {this.printListWithSub('signature', 'dozen', 'Signature - Dozen')}\r\n                    </li>\r\n\r\n                    <li className=\"summary-list\" style={{display: (this.props.egg_sandwich.thintastic.half.qty === 0 ? 'none' : null)}}>\r\n                        {this.printListWithSub('thintastic', 'half', 'Thintastic - Half Dozen')}\r\n                    </li>\r\n\r\n                    <li className=\"summary-list\" style={{display: (this.props.egg_sandwich.thintastic.dozen.qty === 0 ? 'none' : null)}}>\r\n                        {this.printListWithSub('thintastic', 'dozen', 'Thintastic - Dozen')}\r\n                    </li>\r\n                    \r\n\r\n                    <li className=\"summary-list footer\">\r\n                        <Row>\r\n                            <Col className=\"item\" md={5}></Col>\r\n                            <Col className=\"qty\"></Col>\r\n                            <Col className=\"price\"></Col>\r\n                            <Col className=\"total\">${this.props.egg_sandwich.total}</Col>\r\n                        </Row>\r\n                    </li>\r\n                </ul>\r\n            </ListGroup.Item>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    egg_sandwich: state.egg_sandwich\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps\r\n)(EggSandwich)","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { Row, Col, ListGroup } from 'react-bootstrap';\r\n\r\nclass BreakfastFavorites extends React.Component {\r\n    \r\n    printList = (key) => {\r\n        return (\r\n            <li className=\"summary-list\" style={{display: (this.props.bkfav[key].qty === 0 ? 'none' : null)}}>\r\n                <Row>\r\n                    <Col className=\"item\" md={5}>{this.props.bkfav[key].name}</Col>\r\n                    <Col className=\"qty\">{this.props.bkfav[key].qty}</Col>\r\n                    <Col className=\"price\">${this.props.bkfav[key].price}</Col>\r\n                    <Col className=\"total\">${this.props.bkfav[key].total}</Col>\r\n                </Row>\r\n            </li>\r\n        )\r\n    }\r\n\r\n    printBox = (box) => {\r\n        let print = [];\r\n        let box_count = 0;\r\n        const list = this.props.bkfav[box].list;\r\n        for (let box_id in list){\r\n            let print_li = [];\r\n            let tmp_count = 0;\r\n\r\n            const items = ['bagel', 'whip'];\r\n\r\n            for (let item_id in items){\r\n                const item = items[item_id];\r\n                print_li.push(<p className=\"mb-0\" style={{color: '#b36a3b'}}>{item}</p>)\r\n                for (let key in list[box_id][item]){\r\n                    if (list[box_id][item][key] !== 0){\r\n                        let name = this.props.bkfav[item][key].name;\r\n                        if (item === 'whip' && key !== 'plain' && key !== 'onion' && key !== 'salmon'){\r\n                            name = 'Reduced Fat ' + name\r\n                        }\r\n                        print_li.push(<li className=\"\" key={'_child_' + tmp_count}> - { name + ' : ' + list[box_id][item][key] } </li>)\r\n                        tmp_count++;\r\n                    }\r\n                }\r\n            }\r\n\r\n            print.push(\r\n                <Col md={4} style={{padding: '5px'}} key={'ex_box' + box_count}>\r\n                    <div key={box_count} className=\"\" style={{padding: '5px', border: '1px solid #e1e1e1'}}>\r\n                        <h3 className=\"p-0\" style={{fontSize: '1rem'}}>{box} #{box_count+1}</h3>\r\n                        <ul key={box_count} className=\"\" style={{height: '', paddingLeft: '10px', listStyle: 'none'}}> {print_li} </ul>\r\n                    </div>\r\n                </Col>\r\n            )\r\n            box_count++;\r\n        }\r\n\r\n        return print;\r\n    }\r\n\r\n    printPastry = () => {\r\n        let print_subitem = [];\r\n        let subitem_index = 0;\r\n        const names = this.props.bkfav.Pastry_breakfast_box.items;\r\n        for (let key in this.props.bkfav.Pastry_breakfast_box.list){\r\n            let name = names[key].name;\r\n            print_subitem.push(<li className=\"\" key={'_child_' + subitem_index}> { name + ' : ' + this.props.bkfav.Pastry_breakfast_box.list[key] } </li>)\r\n            subitem_index++;\r\n        }\r\n\r\n        print_subitem = (\r\n            <Col md={6} style={{padding: '5px', fontSize: '13px'}}>\r\n                <div style={{padding: '5px', borderBottom: '1px solid #e1e1e1'}}>\r\n                    {/* <h3 className=\"p-0\" style={{fontSize: '1rem'}}></h3> */}\r\n                    <ul className=\"list-inline\" style={{paddingLeft: '10px', listStyle: 'none'}}> \r\n                        {print_subitem} \r\n                    </ul>\r\n                </div>\r\n            </Col>\r\n        )\r\n\r\n        return (\r\n            <li className=\"summary-list\" style={{display: (this.props.bkfav.Pastry_breakfast_box.qty === 0 ? 'none' : null)}}>\r\n\r\n                <Row>\r\n                    <Col className=\"item\" md={5}>Pastry Breakfast Box</Col>\r\n                    <Col className=\"qty\">{this.props.bkfav.Pastry_breakfast_box.qty}</Col>\r\n                    <Col className=\"price\">${this.props.bkfav.Pastry_breakfast_box.price}</Col>\r\n                    <Col className=\"total\">${this.props.bkfav.Pastry_breakfast_box.total}</Col>\r\n                </Row>\r\n\r\n                <Row className=\"item sub\" style={{paddingTop: '10px'}}>\r\n                    { print_subitem }\r\n                </Row>\r\n\r\n            </li>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ListGroup.Item style={{display: (this.props.bkfav.total === 0 ? 'none' : null)}}>\r\n                <h3>Breakfast Favorites</h3>\r\n                <ul className=\"summary-list-group\">\r\n                    <li className=\"summary-list header\">\r\n                        <Row>\r\n                            <Col className=\"item\" md={5}>Item</Col>\r\n                            <Col className=\"qty\">Quantity</Col>\r\n                            <Col className=\"price\">Price</Col>\r\n                            <Col className=\"total\">Total</Col>\r\n                        </Row>\r\n                    </li>\r\n                    \r\n                    <li className=\"summary-list\" style={{display: (this.props.bkfav.for_group.qty === 0 ? 'none' : null)}}>\r\n                        <Row>\r\n                            <Col className=\"item\" md={5}>{this.props.bkfav.for_group.name}</Col>\r\n                            <Col className=\"qty\">{this.props.bkfav.for_group.qty}</Col>\r\n                            <Col className=\"price\">${this.props.bkfav.for_group.price}</Col>\r\n                            <Col className=\"total\">${this.props.bkfav.for_group.total}</Col>\r\n                        </Row>\r\n\r\n                        <Row className=\"item sub\" style={{paddingTop: '10px'}}>\r\n                            { this.printBox('for_group') }\r\n                        </Row>\r\n                    </li>\r\n\r\n                    <li className=\"summary-list\" style={{display: (this.props.bkfav.salmon_platter.qty === 0 ? 'none' : null)}}>\r\n                        <Row>\r\n                            <Col className=\"item\" md={5}>{this.props.bkfav.salmon_platter.name}</Col>\r\n                            <Col className=\"qty\">{this.props.bkfav.salmon_platter.qty}</Col>\r\n                            <Col className=\"price\">${this.props.bkfav.salmon_platter.price}</Col>\r\n                            <Col className=\"total\">${this.props.bkfav.salmon_platter.total}</Col>\r\n                        </Row>\r\n\r\n                        <Row className=\"item sub\" style={{paddingTop: '10px'}}>\r\n                            { this.printBox('salmon_platter') }\r\n                        </Row>\r\n                    </li>\r\n\r\n                    <li className=\"summary-list\" style={{display: (this.props.bkfav.nosh_box.qty === 0 ? 'none' : null)}}>\r\n                        <Row>\r\n                            <Col className=\"item\" md={5}>{this.props.bkfav.nosh_box.name}</Col>\r\n                            <Col className=\"qty\">{this.props.bkfav.nosh_box.qty}</Col>\r\n                            <Col className=\"price\">${this.props.bkfav.nosh_box.price}</Col>\r\n                            <Col className=\"total\">${this.props.bkfav.nosh_box.total}</Col>\r\n                        </Row>\r\n\r\n                        <Row className=\"item sub\" style={{paddingTop: '10px'}}>\r\n                            { this.printBox('nosh_box') }\r\n                        </Row>\r\n                    </li>\r\n\r\n                    {/*<li className=\"summary-list\" style={{display: (this.props.bkfav.nosh_box.qty === 0 ? 'none' : null)}}>\r\n                        <Row>\r\n                            <Col className=\"item\" md={5}>{this.props.bkfav.nosh_box.name}</Col>\r\n                            <Col className=\"qty\">{this.props.bkfav.nosh_box.qty}</Col>\r\n                            <Col className=\"price\">${this.props.bkfav.nosh_box.price}</Col>\r\n                            <Col className=\"total\">${this.props.bkfav.nosh_box.total}</Col>\r\n                        </Row>\r\n\r\n                        <Row className=\"item sub\" style={{paddingTop: '10px'}}>\r\n                            { this.printBox('nosh_box') }\r\n                        </Row>\r\n                    </li>*/}\r\n\r\n                    <li className=\"summary-list\" style={{display: (this.props.bkfav.bagel_shmear_break_box.qty === 0 ? 'none' : null)}}>\r\n                        <Row>\r\n                            <Col className=\"item\" md={5}>{this.props.bkfav.bagel_shmear_break_box.name}</Col>\r\n                            <Col className=\"qty\">{this.props.bkfav.bagel_shmear_break_box.qty}</Col>\r\n                            <Col className=\"price\">${this.props.bkfav.bagel_shmear_break_box.price}</Col>\r\n                            <Col className=\"total\">${this.props.bkfav.bagel_shmear_break_box.total}</Col>\r\n                        </Row>\r\n\r\n                        <Row className=\"item sub\" style={{paddingTop: '10px'}}>\r\n                            { this.printBox('bagel_shmear_break_box') }\r\n                        </Row>\r\n                    </li>\r\n                    \r\n                    {/* { this.printList('bagel_shmear_break_box') } */}\r\n                    { this.printList('power_protein_breakfast_box') }\r\n                    { this.printPastry() }\r\n\r\n                    <li className=\"summary-list footer\">\r\n                        <Row>\r\n                            <Col className=\"item\" md={5}></Col>\r\n                            <Col className=\"qty\"></Col>\r\n                            <Col className=\"price\"></Col>\r\n                            <Col className=\"total\">${this.props.bkfav.total}</Col>\r\n                        </Row>\r\n                    </li>\r\n                </ul>\r\n            </ListGroup.Item>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    bkfav: state.bk_fav_reducer\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps\r\n)(BreakfastFavorites)","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { Row, Col, ListGroup } from 'react-bootstrap';\r\n\r\nclass SweetSnack extends React.Component {\r\n    \r\n    printList = (key, name) => {\r\n        return (\r\n            <li className=\"summary-list\" style={{display: (this.props.sweet_snack[key].qty === 0 ? 'none' : null)}}>\r\n                <Row>\r\n                    <Col className=\"item\" md={5}>{name}</Col>\r\n                    <Col className=\"qty\">{this.props.sweet_snack[key].qty}</Col>\r\n                    <Col className=\"price\">${this.props.sweet_snack[key].price}</Col>\r\n                    <Col className=\"total\">${this.props.sweet_snack[key].total}</Col>\r\n                </Row>\r\n            </li>\r\n        )\r\n    }\r\n\r\n    printListWithSub = (box, type, name) => {\r\n        let box_count = 0;\r\n\r\n        let print_subitem = this.props.sweet_snack[box][type].list.map((list, index) => {\r\n            const names = this.props.sweet_snack[box].items;\r\n            let print = [];\r\n            let count = 0;\r\n            let total_qty = 0;\r\n\r\n            if (list === null){return null;}\r\n            box_count++;\r\n            \r\n            for (let key in names) {\r\n                if (list[key] !== 0){\r\n                    if (typeof list[key] === 'undefined'){ return null; }\r\n                    print.push(<li className=\"\" key={'_child_' + count}> { names[key].name + ' : ' + list[key] } </li>);\r\n                    total_qty = total_qty + list[key];\r\n                    count++;\r\n                }\r\n            }\r\n            \r\n            return (\r\n                <Col key={'ex_box' + index} md={6} style={{padding: '5px'}}>\r\n                    <div style={{padding: '5px', borderBottom: '1px solid #e1e1e1'}}>\r\n                        <h3 className=\"p-0\" style={{fontSize: '1rem'}}>{box}-{type} #{box_count}</h3>\r\n                        <ul key={index} className=\"list-inline\" style={{paddingLeft: '10px', listStyle: 'none'}}> \r\n                            {print} \r\n                        </ul>\r\n                    </div>\r\n                </Col>\r\n            )\r\n        })\r\n\r\n        return (\r\n            <React.Fragment>\r\n\r\n                <Row>\r\n                    <Col className=\"item\" md={5}>{name}</Col>\r\n                    <Col className=\"qty\">{this.props.sweet_snack[box][type].qty}</Col>\r\n                    <Col className=\"price\">${this.props.sweet_snack[box][type].price}</Col>\r\n                    <Col className=\"total\">${this.props.sweet_snack[box][type].total}</Col>\r\n                </Row>\r\n\r\n                <Row className=\"item sub\" style={{paddingTop: '10px'}}>\r\n                    { print_subitem }\r\n                </Row>\r\n\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ListGroup.Item style={{display: (this.props.sweet_snack.total === 0 ? 'none' : null)}}>\r\n                <h3>Sweets & Snacks</h3>\r\n                <ul className=\"summary-list-group\">\r\n                    <li className=\"summary-list header\">\r\n                        <Row>\r\n                            <Col className=\"item\" md={5}>Item</Col>\r\n                            <Col className=\"qty\">Quantity</Col>\r\n                            <Col className=\"price\">Price</Col>\r\n                            <Col className=\"total\">Total</Col>\r\n                        </Row>\r\n                    </li>\r\n\r\n                        {this.printList('salad_large', 'Seasonal Fresh Fruit Salad - Large')}\r\n\r\n                        {this.printList('salad_small', 'Seasonal Fresh Fruit Salad - Small')}\r\n\r\n                        {this.printList('parfait', this.props.sweet_snack.parfait.name)}\r\n\r\n                        {this.printList('parfait_individual', this.props.sweet_snack.parfait_individual.name)}\r\n\r\n                    <li className=\"summary-list\" style={{display: (this.props.sweet_snack.noshbox.half.qty === 0 ? 'none' : null)}}>\r\n                        {this.printListWithSub('noshbox', 'half', 'Sweet Nosh Box - Half Dozen')}\r\n                    </li>\r\n\r\n                    {/* <li className=\"summary-list\" style={{display: (this.props.sweet_snack.noshbox.dozen.qty === 0 ? 'none' : null)}}>\r\n                        {this.printListWithSub('noshbox', 'dozen', 'Sweet Nosh Box - Baker\\'s Dozen')}\r\n                    </li> */}\r\n\r\n                    {this.printList('noshbox_dozen', 'Sweets Nosh Box - Baker\\'s Dozen')}\r\n\r\n                    {this.printList('noshbox_half', 'Sweets Nosh Box - Half Dozen')}\r\n                    \r\n                    <li className=\"summary-list footer\">\r\n                        <Row>\r\n                            <Col className=\"item\" md={5}></Col>\r\n                            <Col className=\"qty\"></Col>\r\n                            <Col className=\"price\"></Col>\r\n                            <Col className=\"total\">${this.props.sweet_snack.total}</Col>\r\n                        </Row>\r\n                    </li>\r\n                </ul>\r\n            </ListGroup.Item>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    sweet_snack: state.sweet_snack\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps\r\n)(SweetSnack)","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { Row, Col, ListGroup } from 'react-bootstrap';\r\n\r\nconst roundTo = require('roundto');\r\n\r\nclass Beverage extends React.Component {  \r\n    \r\n    printItem = (name, index) => {\r\n        return (\r\n            <li className=\"summary-list\" style={{display: (this.props.beverage.list[name].qty === 0 ? 'none' : null)}} key={'beverage_summary_'+index}>\r\n                <Row>\r\n                    <Col className=\"item\" md={5}>{this.props.beverage.list[name].name}</Col>\r\n                    <Col className=\"qty\">{this.props.beverage.list[name].qty}</Col>\r\n                    <Col className=\"price\">${this.props.beverage.list[name].price}</Col>\r\n                    <Col className=\"total\">${roundTo(this.props.beverage.list[name].qty*this.props.beverage.list[name].price, 2)}</Col>\r\n                </Row>\r\n            </li>\r\n        )\r\n    }\r\n\r\n    printItems = () => {\r\n        let print = [];\r\n        let index = 0;\r\n        for (let key in this.props.beverage.list){\r\n            print.push(this.printItem(key, index))\r\n            index++;\r\n        }\r\n        return print;\r\n    }\r\n\r\n    totalQty = () => {\r\n        let qty = 0;\r\n        const list = this.props.beverage.list;\r\n        for (let key in list){\r\n            const tmp_qty = list[key].qty;\r\n            qty = qty + tmp_qty;\r\n        }\r\n        \r\n        return qty;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <ListGroup.Item style={{display: (this.props.beverage.total === 0 ? 'none' : null)}}>\r\n                <h3>Beverage</h3>\r\n                <ul className=\"summary-list-group\">\r\n                    <li className=\"summary-list header\">\r\n                        <Row>\r\n                            <Col className=\"item\" md={5}>Item</Col>\r\n                            <Col className=\"qty\">Quantity</Col>\r\n                            <Col className=\"price\">Price</Col>\r\n                            <Col className=\"total\">Total</Col>\r\n                        </Row>\r\n                    </li>\r\n\r\n                    {\r\n                        this.printItems()\r\n                    }\r\n\r\n                    <li className=\"summary-list footer\">\r\n                        <Row>\r\n                            <Col className=\"item\" md={5}></Col>\r\n                            <Col className=\"qty\">{this.totalQty()}</Col>\r\n                            <Col className=\"price\"></Col>\r\n                            <Col className=\"total\">${this.props.beverage.total}</Col>\r\n                        </Row>\r\n                    </li>\r\n                </ul>\r\n            </ListGroup.Item>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    beverage: state.beverage\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps\r\n)(Beverage)","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { Row, Col, ListGroup } from 'react-bootstrap';\r\n\r\nclass FreshSalads extends React.Component {\r\n    \r\n    printList = (key, name) => {\r\n        return (\r\n            <li className=\"summary-list\" style={{display: (this.props.fresh_salads[key].qty === 0 ? 'none' : null)}}>\r\n                <Row>\r\n                    <Col className=\"item\" md={5}>{name}</Col>\r\n                    <Col className=\"qty\">{this.props.fresh_salads[key].qty}</Col>\r\n                    <Col className=\"price\">${this.props.fresh_salads[key].price}</Col>\r\n                    <Col className=\"total\">${this.props.fresh_salads[key].total}</Col>\r\n                </Row>\r\n            </li>\r\n        )\r\n    }\r\n\r\n    printListWithSub = (box, name) => {\r\n        let print_subitem = [];\r\n        let subitem_index = 0;\r\n        const names = this.props.fresh_salads.items;\r\n        for (let key in this.props.fresh_salads[box].selected){\r\n            let name = null;\r\n            if (key in names.bagel){name = names.bagel[key].name;}\r\n            else if (key in names.chips){name = names.chips[key].name;}\r\n            print_subitem.push(<li className=\"\" key={'_child_' + subitem_index}> { name + ' : ' + this.props.fresh_salads[box].selected[key] } </li>)\r\n            subitem_index++;\r\n        }\r\n\r\n        print_subitem = (\r\n            <Col md={6} style={{padding: '5px'}}>\r\n                <div style={{padding: '5px', borderBottom: '1px solid #e1e1e1'}}>\r\n                    <ul className=\"list-inline\" style={{paddingLeft: '10px', listStyle: 'none'}}> \r\n                        {print_subitem} \r\n                    </ul>\r\n                </div>\r\n            </Col>\r\n        )\r\n\r\n        return (\r\n            <React.Fragment>\r\n\r\n                <Row>\r\n                    <Col className=\"item\" md={5}>{name}</Col>\r\n                    <Col className=\"qty\">{this.props.fresh_salads[box].qty}</Col>\r\n                    <Col className=\"price\">${this.props.fresh_salads[box].price}</Col>\r\n                    <Col className=\"total\">${this.props.fresh_salads[box].total}</Col>\r\n                </Row>\r\n\r\n                <Row className=\"item sub\" style={{paddingTop: '10px'}}>\r\n                    { print_subitem }\r\n                </Row>\r\n\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ListGroup.Item style={{display: (this.props.fresh_salads.total === 0 ? 'none' : null)}}>\r\n                <h3>Fresh Salads</h3>\r\n                <ul className=\"summary-list-group\">\r\n                    <li className=\"summary-list header\">\r\n                        <Row>\r\n                            <Col className=\"item\" md={5}>Item</Col>\r\n                            <Col className=\"qty\">Quantity</Col>\r\n                            <Col className=\"price\">Price</Col>\r\n                            <Col className=\"total\">Total</Col>\r\n                        </Row>\r\n                    </li>\r\n\r\n                    <li className=\"summary-list\" style={{display: (this.props.fresh_salads.chicken.qty === 0 ? 'none' : null)}}>\r\n                        {this.printListWithSub('chicken', 'Strawberry Chicken Salad - Single')}\r\n                    </li>\r\n\r\n                    {this.printList('chicken_group', 'Strawberry Chicken Salad - Group')}\r\n\r\n                    <li className=\"summary-list\" style={{display: (this.props.fresh_salads.almond.qty === 0 ? 'none' : null)}}>\r\n                        {this.printListWithSub('almond', 'Strawberry Almond Salad - Single')}\r\n                    </li>\r\n\r\n                    {this.printList('almond_group', 'Strawberry Almond Salad - Group')}\r\n                    \r\n                    <li className=\"summary-list footer\">\r\n                        <Row>\r\n                            <Col className=\"item\" md={5}></Col>\r\n                            <Col className=\"qty\"></Col>\r\n                            <Col className=\"price\"></Col>\r\n                            <Col className=\"total\">${this.props.fresh_salads.total}</Col>\r\n                        </Row>\r\n                    </li>\r\n                </ul>\r\n            </ListGroup.Item>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    fresh_salads: state.fresh_salads\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps\r\n)(FreshSalads)","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { Row, Col, ListGroup } from 'react-bootstrap';\r\n\r\nclass Cookie extends React.Component {\r\n    \r\n    printList = (key, name) => {\r\n        return (\r\n            <li className=\"summary-list\" style={{display: (this.props.cookie[key].qty === 0 ? 'none' : null)}}>\r\n                <Row>\r\n                    <Col className=\"item\" md={5}>{name}</Col>\r\n                    <Col className=\"qty\">{this.props.cookie[key].qty}</Col>\r\n                    <Col className=\"price\">${this.props.cookie[key].price}</Col>\r\n                    <Col className=\"total\">${this.props.cookie[key].total}</Col>\r\n                </Row>\r\n            </li>\r\n        )\r\n    }\r\n\r\n    printListWithSub = (box, type, name) => {\r\n        let print_subitem = [];\r\n        let subitem_index = 0;\r\n        let box_count = 1;\r\n        const names = box === 'kettle' ? this.props.cookie.kettle.items : this.props.cookie.items;\r\n        \r\n        //type = box === 'variety_half' ? 'half' : 'dozen';\r\n        //box = box === 'sweet' ? 'sweet' : 'variety';\r\n        \r\n        for (let list_id in this.props.cookie[box][type].list){\r\n            let tmp_list = []\r\n            for (let key in this.props.cookie[box][type].list[list_id]){\r\n                if (this.props.cookie[box][type].list[list_id][key] > 0){\r\n                    let name = names[key].name;\r\n                    tmp_list.push(<li className=\"\" key={'_child_' + subitem_index}> { name + ' : ' + this.props.cookie[box][type].list[list_id][key] } </li>)\r\n                    subitem_index++;\r\n                }\r\n            }\r\n            print_subitem.push(\r\n                <Col md={6} style={{padding: '5px'}} key={'cookie_box'+list_id}>\r\n                    <div style={{padding: '5px', borderBottom: '1px solid #e1e1e1'}}>\r\n                        <ul className=\"list-inline\" style={{paddingLeft: '10px', listStyle: 'none'}}> \r\n                            {/*<h3 className=\"p-0\" style={{fontSize: '1rem'}}>#{box_count} {box}-{type}</h3>*/}\r\n                            <h3 className=\"p-0\" style={{fontSize: '1rem'}}>#{box_count} {type}</h3>\r\n                            {tmp_list} \r\n                        </ul>\r\n                    </div>\r\n                </Col>\r\n            )\r\n            box_count++;\r\n        }\r\n        \r\n        return (\r\n            <React.Fragment>\r\n\r\n                <Row>\r\n                    <Col className=\"item\" md={5}>{name}</Col>\r\n                    <Col className=\"qty\">{this.props.cookie[box][type].qty}</Col>\r\n                    <Col className=\"price\">${this.props.cookie[box][type].price}</Col>\r\n                    <Col className=\"total\">${this.props.cookie[box][type].total}</Col>\r\n                </Row>\r\n\r\n                <Row className=\"item sub\" style={{paddingTop: '10px'}}>\r\n                    { print_subitem }\r\n                </Row>\r\n\r\n            </React.Fragment>\r\n            )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ListGroup.Item style={{display: (this.props.cookie.total === 0 ? 'none' : null)}}>\r\n                <h3>Cookies</h3>\r\n                <ul className=\"summary-list-group\">\r\n                    <li className=\"summary-list header\">\r\n                        <Row>\r\n                            <Col className=\"item\" md={5}>Item</Col>\r\n                            <Col className=\"qty\">Quantity</Col>\r\n                            <Col className=\"price\">Price</Col>\r\n                            <Col className=\"total\">Total</Col>\r\n                        </Row>\r\n                    </li>\r\n\r\n                    <li className=\"summary-list\" style={{display: (this.props.cookie.variety.half.qty === 0 ? 'none' : null)}}>\r\n                        {this.printListWithSub('variety', 'half', 'Cookie Box - Half Dozen')}\r\n                    </li>\r\n\r\n                    <li className=\"summary-list\" style={{display: (this.props.cookie.variety.dozen.qty === 0 ? 'none' : null)}}>\r\n                        {this.printListWithSub('variety', 'dozen', 'Cookie Box - Dozen')}\r\n                    </li>\r\n\r\n                    <li className=\"summary-list\" style={{display: (this.props.cookie.sweet.small.qty === 0 ? 'none' : null)}}>\r\n                        {this.printListWithSub('sweet', 'small', 'Sweets & Coffee Break')}\r\n                    </li>\r\n\r\n                    <li className=\"summary-list\" style={{display: (this.props.cookie.sweet.large.qty === 0 ? 'none' : null)}}>\r\n                        {this.printListWithSub('sweet', 'large', 'Sweets & Coffee Break')}\r\n                    </li>\r\n\r\n                    {/*<li className=\"summary-list\" style={{display: (this.props.cookie.variety_half.qty === 0 ? 'none' : null)}}>\r\n                        {this.printListWithSub('variety_half', 'half', 'Cookie Variety Box - Half Dozen')}\r\n                    </li>\r\n\r\n                    <li className=\"summary-list\" style={{display: (this.props.cookie.variety_dozen.qty === 0 ? 'none' : null)}}>\r\n                        {this.printListWithSub('variety', 'dozen', 'Cookie Variety Box - Dozen')}\r\n                    </li>\r\n\r\n                    <li className=\"summary-list\" style={{display: (this.props.cookie.sweet_small.qty === 0 ? 'none' : null)}}>\r\n                        {this.printListWithSub('sweet', 'small', 'Sweets & Coffee Break')}\r\n                    </li>\r\n\r\n                    <li className=\"summary-list\" style={{display: (this.props.cookie.sweet_large.qty === 0 ? 'none' : null)}}>\r\n                        {this.printListWithSub('sweet', 'large', 'Sweets & Coffee Break')}\r\n                    </li>*/}\r\n\r\n                    <li className=\"summary-list\" style={{display: (this.props.cookie.kettle.single.qty === 0 ? 'none' : null)}}>\r\n                        {this.printListWithSub('kettle', 'single', 'Kettle Potato Chips - 1 bag')}\r\n                    </li>\r\n\r\n                    <li className=\"summary-list\" style={{display: (this.props.cookie.kettle.small.qty === 0 ? 'none' : null)}}>\r\n                        {this.printListWithSub('kettle', 'small', 'Kettle Potato Chips - 5 bags')}\r\n                    </li>\r\n\r\n                    <li className=\"summary-list\" style={{display: (this.props.cookie.kettle.large.qty === 0 ? 'none' : null)}}>\r\n                        {this.printListWithSub('kettle', 'large', 'Kettle Potato Chips - 10 bags')}\r\n                    </li>\r\n                    \r\n                    <li className=\"summary-list footer\">\r\n                        <Row>\r\n                            <Col className=\"item\" md={5}></Col>\r\n                            <Col className=\"qty\"></Col>\r\n                            <Col className=\"price\"></Col>\r\n                            <Col className=\"total\">${this.props.cookie.total}</Col>\r\n                        </Row>\r\n                    </li>\r\n                </ul>\r\n            </ListGroup.Item>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    cookie: state.cookie\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps\r\n)(Cookie)","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { Row, Col, ListGroup } from 'react-bootstrap';\r\n\r\nclass LunchSandwiches extends React.Component {\r\n    \r\n    printList = (key, name) => {\r\n        return (\r\n            <li className=\"summary-list\" style={{display: (this.props.lunchsandwich[key].qty === 0 ? 'none' : null)}}>\r\n                <Row>\r\n                    <Col className=\"item\" md={5}>{name}</Col>\r\n                    <Col className=\"qty\">{this.props.lunchsandwich[key].qty}</Col>\r\n                    <Col className=\"price\">${this.props.lunchsandwich[key].price}</Col>\r\n                    <Col className=\"total\">${this.props.lunchsandwich[key].total}</Col>\r\n                </Row>\r\n            </li>\r\n        )\r\n    }\r\n\r\n    printListWithSub = (box, type, name) => {\r\n        let print_subitem = [];\r\n        let subitem_index = 0;\r\n        let box_count = 1;\r\n        const names = this.props.lunchsandwich[box].items;\r\n        \r\n        for (let list_id in this.props.lunchsandwich[box][type].list){\r\n            let tmp_list = []\r\n            for (let key in this.props.lunchsandwich[box][type].list[list_id]){\r\n                let name = names[key].name;\r\n                if (this.props.lunchsandwich[box][type].list[list_id][key] !== 0){\r\n                    tmp_list.push(<li className=\"\" key={'_child_' + subitem_index}> { name + ' : ' + this.props.lunchsandwich[box][type].list[list_id][key] } </li>)\r\n                    subitem_index++;\r\n                }\r\n            }\r\n            print_subitem.push(\r\n                <Col md={6} style={{padding: '5px'}} key={'lunchsandwich_box'+list_id}>\r\n                    <div style={{padding: '5px', borderBottom: '1px solid #e1e1e1'}}>\r\n                        <ul className=\"list-inline\" style={{paddingLeft: '10px', listStyle: 'none'}}> \r\n                            <h3 className=\"p-0\" style={{fontSize: '1rem'}}>{box}-{type} #{box_count}</h3>\r\n                            {tmp_list} \r\n                        </ul>\r\n                    </div>\r\n                </Col>\r\n            )\r\n            box_count++;\r\n        }\r\n\r\n        return (\r\n            <React.Fragment>\r\n\r\n                <Row>\r\n                    <Col className=\"item\" md={5}>{name}</Col>\r\n                    <Col className=\"qty\">{this.props.lunchsandwich[box][type].qty}</Col>\r\n                    <Col className=\"price\">${this.props.lunchsandwich[box][type].price}</Col>\r\n                    <Col className=\"total\">${this.props.lunchsandwich[box][type].total}</Col>\r\n                </Row>\r\n\r\n                <Row className=\"item sub\" style={{paddingTop: '10px'}}>\r\n                    { print_subitem }\r\n                </Row>\r\n\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    printListWithChoices = (box) => {\r\n        let print = [];\r\n        let box_count = 0;\r\n        const list = this.props.lunchsandwich[box].list;\r\n        for (let box_id in list){\r\n            let print_li = [];\r\n            let tmp_count = 0;\r\n\r\n            const items = ['sandwich', 'cookie', 'chip', 'drink'];\r\n\r\n            for (let item_id in items){\r\n                const item = items[item_id];\r\n                for (let key in list[box_id][item]){\r\n                    if (list[box_id][item][key] !== 0){\r\n                        print_li.push(<li className=\"\" key={'_child_' + tmp_count}> { this.props.lunchsandwich[box].items[item][key].name + ' : ' + list[box_id][item][key] } </li>)\r\n                        tmp_count++;\r\n                    }\r\n                }\r\n            }\r\n\r\n            print.push(\r\n                <Col md={6} style={{padding: '5px'}} key={'ex_box' + box_count}>\r\n                    <div key={box_count} className=\"\" style={{padding: '5px', borderBottom: '1px solid #e1e1e1'}}>\r\n                        <h3 className=\"p-0\" style={{fontSize: '1rem'}}>{box} #{box_count+1}\r\n                        </h3>\r\n                        <ul key={box_count} className=\"\" style={{height: '', paddingLeft: '10px', listStyle: 'none'}}> {print_li}{\"Chocolate Chip Cookies : 12\"}  </ul>\r\n                    </div>\r\n                </Col>\r\n            )\r\n            box_count++;\r\n        }\r\n        return print;\r\n    }\r\n\r\n    printLunchBox = (box, name) => {\r\n        let print_subitem = [];\r\n        // let subitem_index = 0;\r\n        // const names = this.props.lunchsandwich.lunchBox.cookie;\r\n\r\n        const list = this.props.lunchsandwich.lunchBox[box].list;\r\n\r\n        let count = 1;\r\n        for (let list_id in list){\r\n\r\n            const items = list[list_id]\r\n            \r\n            let chip_name = this.props.lunchsandwich.lunchBox.chips;\r\n            let cookie_name = this.props.lunchsandwich.lunchBox.cookie;\r\n\r\n            print_subitem.push(\r\n                <Col md={3} style={{padding: '5px'}} key={'ex_box' + list_id}>\r\n                    <div key={list_id} className=\"\" style={{padding: '5px', borderBottom: '1px solid #e1e1e1'}}>\r\n                        <h3 className=\"p-0\" style={{fontSize: '1rem'}}>#{count} {box}</h3>\r\n                        <ul key={list_id} className=\"\" style={{height: '', paddingLeft: '10px', listStyle: 'none'}}>\r\n                            { items.chip !== null ? <li className=\"\"> { chip_name[items.chip].name } </li> : null }\r\n                            { items.fruit !== null ? <li className=\"\"> Fruit </li> : null }\r\n                            { items.cookie !== null ? <li className=\"\"> { cookie_name[items.cookie].name } </li> : null }\r\n                            {<li>Chocolate Chip Cookie</li>}\r\n                        </ul>\r\n                    </div>\r\n                </Col>\r\n            )\r\n            count++;\r\n        }\r\n\r\n        return (\r\n            <React.Fragment>\r\n\r\n                <Row>\r\n                    <Col className=\"item\" md={5}>{name}</Col>\r\n                    <Col className=\"qty\">{this.props.lunchsandwich.lunchBox[box].qty}</Col>\r\n                    <Col className=\"price\">${this.props.lunchsandwich.lunchBox[box].price}</Col>\r\n                    <Col className=\"total\">${this.props.lunchsandwich.lunchBox[box].total}</Col>\r\n                </Row>\r\n\r\n                <Row className=\"item sub\" style={{paddingTop: '10px'}}>\r\n                    { print_subitem }\r\n                </Row>\r\n\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ListGroup.Item style={{display: (this.props.lunchsandwich.total === 0 ? 'none' : null)}}>\r\n                <h3>Lunch Sandwiches</h3>\r\n                <ul className=\"summary-list-group\">\r\n                    <li className=\"summary-list header\">\r\n                        <Row>\r\n                            <Col className=\"item\" md={5}>Item</Col>\r\n                            <Col className=\"qty\">Quantity</Col>\r\n                            <Col className=\"price\">Price</Col>\r\n                            <Col className=\"total\">Total</Col>\r\n                        </Row>\r\n                    </li>\r\n\r\n                    <li className=\"summary-list\" style={{display: (this.props.lunchsandwich.signature.full.qty === 0 ? 'none' : null)}}>\r\n                        {this.printListWithSub('signature', 'full', 'Signature Lunch Nosh Box - 10 Sandwiches')}\r\n                    </li>\r\n\r\n                    <li className=\"summary-list\" style={{display: (this.props.lunchsandwich.signature.half.qty === 0 ? 'none' : null)}}>\r\n                        {this.printListWithSub('signature', 'half', 'Signature Lunch Nosh Box - 5 Sandwiches')}\r\n                    </li>\r\n\r\n                    <li className=\"summary-list\" style={{display: (this.props.lunchsandwich.classic.full.qty === 0 ? 'none' : null)}}>\r\n                        {this.printListWithSub('classic', 'full', 'Classic Lunch Nosh Box - 10 Sandwiches')}\r\n                    </li>\r\n\r\n                    <li className=\"summary-list\" style={{display: (this.props.lunchsandwich.classic.half.qty === 0 ? 'none' : null)}}>\r\n                        {this.printListWithSub('classic', 'half', 'Classic Lunch Nosh Box - 5 Sandwiches')}\r\n                    </li>\r\n\r\n\r\n\r\n                    <li className=\"summary-list\" style={{display: (this.props.lunchsandwich.forGroup.qty === 0 ? 'none' : null)}}>\r\n                        <Row>\r\n                            <Col className=\"item\" md={5}>Lunch For The Group</Col>\r\n                            <Col className=\"qty\">{this.props.lunchsandwich.forGroup.qty}</Col>\r\n                            <Col className=\"price\">${this.props.lunchsandwich.forGroup.price}</Col>\r\n                            <Col className=\"total\">${this.props.lunchsandwich.forGroup.total}</Col>\r\n                        </Row>\r\n                        <Row className=\"item sub\" style={{paddingTop: '10px'}}>\r\n                            {this.printListWithChoices('forGroup')}\r\n                        </Row>\r\n                    </li>\r\n\r\n                    <li className=\"summary-list\" style={{display: (this.props.lunchsandwich.lunchBox.turkey.qty === 0 ? 'none' : null)}}>\r\n                        {this.printLunchBox('turkey', 'Lunch Box - Turkey & Cheddar')}\r\n                    </li>\r\n\r\n                    <li className=\"summary-list\" style={{display: (this.props.lunchsandwich.lunchBox.harvest.qty === 0 ? 'none' : null)}}>\r\n                        {this.printLunchBox('harvest', 'Lunch Box - Harvest Chicken Salad')}\r\n                    </li>\r\n\r\n                    <li className=\"summary-list\" style={{display: (this.props.lunchsandwich.lunchBox.ham.qty === 0 ? 'none' : null)}}>\r\n                        {this.printLunchBox('ham', 'Lunch Box - Ham & Swiss')}\r\n                    </li>\r\n\r\n                    {/*<li className=\"summary-list\" style={{display: (this.props.lunchsandwich.lunchBox.albacore.qty === 0 ? 'none' : null)}}>\r\n                        {this.printLunchBox('albacore', 'Lunch Box - Albacore Tuna Salad')}\r\n                    </li>*/}\r\n\r\n                    <li className=\"summary-list\" style={{display: (this.props.lunchsandwich.lunchBox.tasty.qty === 0 ? 'none' : null)}}>\r\n                        {this.printLunchBox('tasty', 'Lunch Box - Tasty Turkey')}\r\n                    </li>\r\n\r\n                    <li className=\"summary-list\" style={{display: (this.props.lunchsandwich.lunchBox.avocado.qty === 0 ? 'none' : null)}}>\r\n                        {this.printLunchBox('avocado', 'Lunch Box - Avocado Veg Out')}\r\n                    </li>\r\n\r\n                    <li className=\"summary-list\" style={{display: (this.props.lunchsandwich.lunchBox.green.qty === 0 ? 'none' : null)}}>\r\n                        {this.printLunchBox('green', 'Lunch Box - Green Chile Club')}\r\n                    </li>\r\n\r\n                    <li className=\"summary-list\" style={{display: (this.props.lunchsandwich.lunchBox.nova.qty === 0 ? 'none' : null)}}>\r\n                        {this.printLunchBox('nova', 'Lunch Box - Nova Lox')}\r\n                    </li>\r\n\r\n\r\n\r\n\r\n\r\n\r\n                    {/*{this.printList('nova_lox', 'Nova Lox')}*/}\r\n                    \r\n                    <li className=\"summary-list footer\">\r\n                        <Row>\r\n                            <Col className=\"item\" md={5}></Col>\r\n                            <Col className=\"qty\"></Col>\r\n                            <Col className=\"price\"></Col>\r\n                            <Col className=\"total\">${this.props.lunchsandwich.total}</Col>\r\n                        </Row>\r\n                    </li>\r\n                </ul>\r\n            </ListGroup.Item>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    lunchsandwich: state.lunchsandwich\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps\r\n)(LunchSandwiches)","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from 'react-router-dom';\r\nimport { updateCurrentNav, calculateSubtotal, submitOrder, getDeliveryMethod, handleTextarea } from '../../redux/actions/main';\r\nimport { Row, Col, Card, ListGroup, ButtonToolbar, Button, Spinner } from 'react-bootstrap';\r\n\r\nimport TopNav from '../common/TopNav.js';\r\n// import Bottom from '../bottom';\r\n\r\nimport BagelShmear from './BagelShmear';\r\nimport EggSandwich from './EggSandwich';\r\nimport BreakfastFavorites from './BreakfastFavorites';\r\nimport SweetSnack from './SweetSnack';\r\nimport Beverage from './Beverage';\r\nimport FreshSalads from './FreshSalads';\r\nimport Cookie from './Cookie';\r\nimport LunchSandwiches from './LunchSandwiches';\r\n\r\nimport './style.css';\r\n\r\nconst roundTo = require('roundto');\r\n\r\nclass Summary extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.props.updateCurrentNav(8);\r\n        \r\n        const subtotal = roundTo(\r\n            this.props.globalState.bagelandsheamr.total +\r\n            this.props.globalState.egg_sandwich.total + \r\n            this.props.globalState.bk_fav_reducer.total +\r\n            this.props.globalState.sweet_snack.total + \r\n            this.props.globalState.beverage.total + \r\n            this.props.globalState.fresh_salads.total + \r\n            this.props.globalState.cookie.total +\r\n            this.props.globalState.lunchsandwich.total\r\n            , 2);\r\n        const tax = roundTo(subtotal*0.061, 2);\r\n        const total = roundTo(subtotal + tax, 2);\r\n\r\n        this.props.calculateSubtotal(subtotal, tax, total);\r\n\r\n        this.state = {\r\n            subtotal: subtotal,\r\n            tax: tax,\r\n            total: total,\r\n            additional_comment: ''\r\n        }\r\n        // console.log(this.props.globalState.byo_breakfast);\r\n    }\r\n\r\n    componentDidMount() {\r\n        // this.props.getDeliveryMethod();\r\n    }\r\n\r\n    handleTextarea = (event) => {\r\n        this.setState({\r\n            additional_comment: event.target.value\r\n        });\r\n        // this.props.handleTextarea(event.target.value);\r\n    }\r\n    \r\n    submitOrder = () => {\r\n        const data = {\r\n            bagelandsheamr: this.props.globalState.bagelandsheamr,\r\n            egg_sandwich: this.props.globalState.egg_sandwich,\r\n            bk_fav: this.props.globalState.bk_fav_reducer,\r\n            sweet_snack: this.props.globalState.sweet_snack,\r\n            beverage: this.props.globalState.beverage,\r\n            fresh_salads: this.props.globalState.fresh_salads,\r\n            cookie: this.props.globalState.cookie,\r\n            lunchsandwich: this.props.globalState.lunchsandwich,\r\n            // breakfast: this.props.globalState.breakfast,\r\n            // byo_breakfast: this.props.globalState.byo_breakfast,\r\n            // lunch: this.props.globalState.lunch,\r\n            // office_party: this.props.globalState.office_party,\r\n            // beverage: this.props.globalState.beverage,\r\n            subtotal: this.state.subtotal,\r\n            tax: this.state.tax,\r\n            total: this.state.total,\r\n            additional_comment: this.state.additional_comment\r\n        };\r\n        this.props.submitOrder(data);\r\n        this.props.history.push('/Confirmation');\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n            {\r\n                this.props.globalState.main.delivery_method !== null ?\r\n                <div style={{textAlign: 'center', padding: '100px 0px'}}>\r\n                    <Spinner animation=\"grow\" style={{backgroundColor: '#f58220'}} />\r\n                </div>\r\n                :\r\n                <React.Fragment>\r\n                    {\r\n                        this.props.globalState.main.error.msg === '' ?\r\n                        <Card className=\"wrap-summary\">\r\n                \r\n                            <Card.Header>\r\n                                <TopNav />\r\n                            </Card.Header>\r\n\r\n                            <Card.Body>\r\n                                <Card.Title>Order Summary</Card.Title>\r\n                            </Card.Body>\r\n\r\n                            {\r\n                                this.state.total === 0 ?\r\n                                <Card.Body className=\"text-center\" style={{marginBottom: '20px'}}>\r\n                                    <Card.Text md={12} style={{paddingTop: '15px', paddingBottom: '15px'}}>\r\n                                        <strong>There are no items in your shopping cart.</strong>\r\n                                    </Card.Text>\r\n                                </Card.Body>\r\n                                :\r\n                                <React.Fragment>\r\n\r\n                                    <ListGroup>\r\n                                        <BagelShmear />\r\n                                        <EggSandwich />\r\n                                        <BreakfastFavorites />\r\n                                        <SweetSnack />\r\n                                        <Beverage />\r\n                                        <FreshSalads />\r\n                                        <Cookie />\r\n                                        <LunchSandwiches />\r\n                                    </ListGroup>\r\n\r\n                                    <Row className=\"wrap-total\" style={{marginTop: '20px'}}>\r\n                                        <Col className=\"total-names\">Subtotal : </Col><Col className=\"total-numbers\"><span className=\"number\">${this.state.subtotal}</span></Col>\r\n                                    </Row>\r\n\r\n                                    <Row className=\"wrap-total\">\r\n                                        <Col className=\"total-names\">Tax : </Col><Col className=\"total-numbers\"><span className=\"number\">${this.state.tax}</span></Col>\r\n                                    </Row>\r\n\r\n                                    {\r\n                                        this.props.globalState.main.delivery_method === 'Delivery' ?\r\n                                        <Row className=\"wrap-total\">\r\n                                            <Col className=\"total-names\">Delivery Fee : </Col><Col className=\"total-numbers\"><span className=\"number\">$10</span></Col>\r\n                                        </Row>\r\n                                        :\r\n                                        null\r\n                                    }\r\n\r\n                                    <Row className=\"wrap-total\">\r\n                                        <Col className=\"total-names\">Total : </Col><Col className=\"total-numbers\">\r\n                                            <span className=\"number\">\r\n                                                ${\r\n                                                    this.props.globalState.main.delivery_method === 'Delivery' ?\r\n                                                    roundTo(this.state.total+10,2)\r\n                                                    :\r\n                                                    this.state.total\r\n                                                }\r\n                                            </span>\r\n                                        </Col>\r\n                                    </Row>\r\n\r\n                                    <ListGroup style={{marginBottom: '40px'}}>\r\n                                        <ListGroup.Item>\r\n                                            <h3 style={{paddingLeft: '0px'}}>Additional Notes (Please provide any dietary restrictions/allergies, etc)</h3>\r\n                                            <textarea style={{width: '100%'}} rows=\"5\" onChange={this.handleTextarea} value={this.state.additional_comment} />\r\n                                        </ListGroup.Item>\r\n                                    </ListGroup>\r\n\r\n                                </React.Fragment>\r\n                            }\r\n\r\n                            <Row>\r\n                                <Col md={6}>\r\n                                    <ButtonToolbar>\r\n                                        <Link\r\n                                        className={\"btn add-btn\"}\r\n                                        style={{marginRight: '10px', width:'200px'}}\r\n                                        to=\"/bagelandshmear\"\r\n                                        >\r\n                                        {\r\n                                            this.state.total === 0 ?\r\n                                            'Add Food'\r\n                                            :\r\n                                            'Add More Food'\r\n                                        }\r\n                                        </Link>\r\n                                    </ButtonToolbar>\r\n                                </Col>\r\n                                {\r\n                                    this.state.total === 0 ?\r\n                                    null\r\n                                    :\r\n                                    <Col md={6}>\r\n                                        <ButtonToolbar>\r\n                                            <Button \r\n                                            className={\"btn add-btn\"}\r\n                                            style={{marginLeft: 'auto', width:'200px'}} onClick={this.submitOrder}>Submit Order</Button>\r\n                                        </ButtonToolbar>\r\n                                    </Col>\r\n                                }\r\n                            </Row>\r\n\r\n                        </Card>\r\n                        :\r\n                        <Card>\r\n                            <Card.Body style={{borderBottomWidth: '0px'}}>\r\n                                <Card.Text>\r\n                                    Your session has expired. Please try again later.\r\n                                </Card.Text>\r\n                            </Card.Body>\r\n\r\n                            <Row>\r\n                                <Col md={12}>\r\n                                    <ButtonToolbar>\r\n                                        <a href=\"/catering/online/agreement.php?r=einsteins\" className=\"btn add-btn btn-lg btn-block\" style={{width: '100%'}}>Try Again</a>\r\n                                    </ButtonToolbar>\r\n                                </Col>\r\n                            </Row>\r\n                        </Card>\r\n                    }                    \r\n                </React.Fragment>\r\n                \r\n            }\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    globalState: state\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => (\r\n    {\r\n        // updateQty: (name, qty) => dispatch(updateQty(name, qty))\r\n        updateCurrentNav: (index) => dispatch(updateCurrentNav(index)),\r\n        calculateSubtotal: (subtotal, tax, total) => dispatch(calculateSubtotal(subtotal, tax, total)),\r\n        submitOrder: (data) => dispatch(submitOrder(data)),\r\n        getDeliveryMethod: () => dispatch(getDeliveryMethod()),\r\n        handleTextarea: (text) => dispatch(handleTextarea(text))\r\n    }\r\n)\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Summary)","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\n// import { Link } from 'react-router-dom';\r\n// import { updateCurrentNav, calculateSubtotal, submitOrder } from '../redux/actions/main';\r\nimport { Card, Spinner } from 'react-bootstrap';\r\n\r\n// import TopNav from './common/TopNav.js';\r\n\r\nclass Confirmation extends React.Component {\r\n\r\n    // constructor(props) {\r\n    //     super(props);\r\n    // }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n            {\r\n                this.props.state.main.confirmation.loading ?\r\n                <div style={{textAlign: 'center', padding: '100px 0px'}}>\r\n                    <Spinner animation=\"grow\" style={{backgroundColor: '#f58220'}} />\r\n                </div>\r\n                :\r\n                <Card className=\"\">\r\n\r\n                    {\r\n                        this.props.state.main.confirmation.orderID === null ?\r\n                        <React.Fragment>\r\n                            <Card.Body>\r\n                                <Card.Text>\r\n                                    We're sorry. An error occurred while processing your order. Please try again later.\r\n                                </Card.Text>\r\n                            </Card.Body>\r\n\r\n                            <div className=\"card-body\">\r\n                                        \r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-4\">\r\n                                        <a href=\"/catering/online/agreement.php?r=einsteins\" className=\"btn add-btn btn-lg btn-block\" style={{width: '100%'}}>Try Again</a>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </React.Fragment>\r\n                        :\r\n                        <React.Fragment>\r\n                            <Card.Body>\r\n                                <Card.Text>\r\n                                    <span style={{fontWeight: '500', lineHeight: '2.2', fontSize: '1.7rem'}}>Thank You</span><br style={{lineHeight: '2.2'}} />\r\n                                    Your order is confirmed. For your convenience, an email has been sent to {this.props.state.main.confirmation.email}. <br />\r\n                                    Your Order ID is {this.props.state.main.confirmation.orderID}.\r\n                                </Card.Text>\r\n                            </Card.Body>\r\n\r\n                            <div className=\"card-body\">\r\n                                        \r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-4\">\r\n                                        <a href=\"/catering/online/agreement.php?r=einsteins\" className=\"btn add-btn btn-lg btn-block\" style={{width: '100%'}}>Order Again</a>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-md-4\">\r\n                                        <a href=\"/dining/sumc/einsteins\" className=\"btn add-btn btn-lg btn-block\" style={{width: '100%'}}>Go to Einsteins Cafe</a>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-md-4\">\r\n                                        <a href=\"/\" className=\"btn add-btn btn-lg btn-block\" style={{width: '100%'}}>Go to Union</a>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </React.Fragment>\r\n                    }\r\n\r\n                </Card>\r\n            }\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    state: state\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => (\r\n    {\r\n    }\r\n)\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Confirmation)","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'react-app-polyfill/ie9';\nimport 'react-app-polyfill/ie11';   \nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\n\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>, \n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route\r\n} from 'react-router-dom'\r\nimport './App.css';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport Banner from './img/Catalyst_Cafe_Catering_Banner.jpg';\r\n// import Menu from './components/Menu';\r\nimport BagelShmear from './components/BagelShmear';\r\nimport EggSandwich from './components/EggSandwich';\r\nimport BreakfastFavorites from './components/BreakfastFavorites';\r\nimport SweetSnack from './components/SweetSnack';\r\nimport Beverage from './components/Beverage';\r\nimport FreshSalads from './components/FreshSalads';\r\nimport Cookie from './components/Cookie';\r\nimport LunchSandwich from './components/LunchSandwich';\r\n\r\nimport Summary from './components/Summary';\r\nimport Confirmation from './components/Confirmation';\r\n// import Bottom from './components/bottom';\r\n\r\nexport default function App() {\r\n  return (\r\n    <Container className=\"su-catering-container\" style={{marginTop: '1rem', marginBottom: '2rem'}}>\r\n\r\n      <Row>\r\n        <img src={Banner} style={{width: '100%'}} alt=\"Banner\" />\r\n      </Row>\r\n\r\n      <Row style={{backgroundColor: '#fff'}}>\r\n        <Col md={12} className=\"wrap-main\">\r\n          <Router basename={'/catering/online/einsteins'}>\r\n            <Route exact path=\"/\" component={BagelShmear} />\r\n            <Route exact path=\"/bagelandshmear\" component={BagelShmear} />\r\n            <Route exact path=\"/eggsandwich\" component={EggSandwich} />\r\n            <Route exact path=\"/breakfastfavorites\" component={BreakfastFavorites} />\r\n            <Route exact path=\"/sweetsnack\" component={SweetSnack} />\r\n            <Route exact path=\"/beverage\" component={Beverage} />\r\n            <Route exact path=\"/freshsalads\" component={FreshSalads} />\r\n            <Route exact path=\"/cookies\" component={Cookie} />\r\n            <Route exact path=\"/lunchsandwich\" component={LunchSandwich} />\r\n\r\n            <Route exact path=\"/summary\" component={Summary} />\r\n            <Route exact path=\"/confirmation\" component={Confirmation} />\r\n          </Router>\r\n        </Col>\r\n      </Row>\r\n\r\n    </Container>\r\n  );\r\n}\r\n"],"sourceRoot":""}