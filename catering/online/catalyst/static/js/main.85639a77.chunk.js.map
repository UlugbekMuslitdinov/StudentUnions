{"version":3,"sources":["img/Catalyst_Banner.jpg","redux/reducers/main.js","redux/reducers/breakfast.js","redux/reducers/byo_breakfast.js","redux/reducers/lunch.js","redux/reducers/officeParty.js","redux/reducers/beverage.js","redux/reducers/index.js","redux/actions/actionTypes.js","redux/store.js","components/common/numberInput.js","components/common/TopNav.js","redux/actions/main.js","components/bottom.js","components/Breakfast/ExecutiveBreakfast.js","redux/actions/breakfast.js","components/Breakfast/index.js","components/ByoBreakfast/SweetTreat.js","redux/actions/byo_breakfast.js","components/ByoBreakfast/index.js","components/Lunch/LunchBox.js","redux/actions/lunch.js","components/Lunch/index.js","components/OfficeParty/index.js","redux/actions/officeParty.js","components/Beverage/index.js","redux/actions/beverage.js","components/Summary/Breakfast.js","components/Summary/ByoBreakfast.js","components/Summary/Lunch.js","components/Summary/OfficeParty.js","components/Summary/Beverage.js","components/Summary/index.js","components/Confirmation.js","serviceWorker.js","index.js","App.js"],"names":["module","exports","__webpack_require__","p","initialState","delivery_method","loading","breakfast","byo_breakfast","byo_lunch","office_party","beverage","subtotal","tax","total","additional_comment","nav","routes","confirmation","success","email","orderID","error","code","msg","bk_beginnings","qty","price","name","description","ex_breakfast","box_open","add","id","list","ex_breakfast_name","ham_gruyere","egg_bacon","egg_chorizo","egg_white","baker_dozen","roundTo","require","updateBreakfastTotal","state","coffee_carafe","regular","decaf","iced","iced_decaf","fruit_salad","serve_20","serve_8","sweet_treats","type","half_dozen","selected","dozen","sweet_treats_name","bear_claws","blueberry_muffins","brownies","chocolate_croissants","cinnamon_blondies","croissants","granookies","variety","sandwiches","zucchini","sausage_bagel","pepper_bagel","red_pepper_bagel","updateByoTotal","actionType","open_box","products","turk_philly_chess","italian_job","chicken_club","bruschetta_panini","salads","hali_caesar","kale_crunch","chips","baked_lays","pb_jalapeno","pb_original","sun_chips","bbq_chips","beverages","coke","diet_coke","dr_pepper","diet_dr_pepper","sprite","dasani","cherry_coke","coke_zero","names","fruit","serve_10","combineReducers","main","arguments","length","undefined","action","index","payload","Object","objectSpread","_action$payload","_action$payload2","err","text","_objectSpread2","defineProperty","push","_action$payload3","coffee_list","total_qty","i","coffee_total","_objectSpread3","fruit_total","_objectSpread4","_action$payload4","_action$payload5","_action$payload6","_action$payload7","_action$payload8","lunch","extras","extra","extra_total","one","two","three","updateOfficePartyTotal","updateTotal","createStore","rootReducer","applyMiddleware","thunkMiddleware","NumberInput","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","increase","setState","value","onChange","decrease","onChangeHandler","event","target","parseInt","react_default","a","createElement","className","style","noleft","onClick","readonly","min","bind","readOnly","React","Component","TopNav","Fragment","Row","react_router_dom","to","global","connect","updateCurrentNav","initSubmitOrder","formSubmitSuccess","formSubmitFailure","getDeliveryMethodSuccess","getDeliveryMethodFailure","Bottom","getTotal","navIndex","Col","fontSize","fontWeight","textAlign","padding","ButtonToolbar","marginRight","width","marginLeft","dispatch","ExecutiveBreakfast","onChangeInput","max_qty","tmp_qty","key","error_msg","closeExecutiveBeginning","addExecutiveBeginning","validateSandwiches","updateExecutiveBeginning","Card","Header","Body","Title","textTransform","color","Text","ListGroup","variant","Item","numberInput","float","Button","size","Breakfast","updateQty","openExecutiveBeginning","printSelectedExBreakfast","num","print","count","md","border","editExBreakfast","removeExBreakfast","height","paddingLeft","listStyle","_this2","ex_count","Breakfast_ExecutiveBreakfast","common_TopNav","marginBottom","map","row","bottom","SweetTreat","closeSweetTreat","addSweetTreat","validateSweetTreat","updateSweetTreat","updateSweetTreats","ByoBreakfast","onChangeCoffee","updateCoffee","onChangeFruitSalad","updateFruitSalad","openSweetTreat","printSelectedSweets","editSweetTreats","removeSweetTreats","onChangeSandwich","updateSandwich","st_half_count","st_dozen_count","ByoBreakfast_SweetTreat","LunchBox","checkQty","updateInput","onChangeFirst","choice_one","onChangeSecond","choice_two","onChangeThree","choice_three","addLunchBox","validateForm","updateLunchBox","closeLunchBox","window","scrollTo","printSandwiches","assertThisInitialized","printSalads","printChips","display","lineHeight","onChangeExtra","order","first","createRef","borderWidth","textDecoration","borderBottom","Form","Group","as","Label","Control","openLunchBox","Lunch","openLunchBoxEditor","removeLunchBox","printItems","printExtra","Lunch_LunchBox","boxes","pindex","OfficeParty","op","Beverage","onChangeBeverage","updateBeverage","printDrink","half_count","dozen_count","paddingTop","paddingBottom","printItem","totalQty","Summary","handleTextarea","submitOrder","data","globalState","history","calculateSubtotal","getDeliveryMethod","Spinner","animation","backgroundColor","Summary_Breakfast","Summary_ByoBreakfast","Summary_Lunch","Summary_OfficeParty","Summary_Beverage","marginTop","rows","borderBottomWidth","href","fetch_option","method","headers","Accept","Content-Type","body","JSON","stringify","fetch","then","res","ok","json","Error","return","order_id","catch","console","log","Confirmation","Boolean","location","hostname","match","ReactDOM","render","es","store","Container","src","Banner","alt","basename","react_router","exact","path","component","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.85639a77.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Catalyst_Banner.a353e906.jpg\";","import { \r\n    UPDATE_CURRENT_NAV, \r\n    CALCULATE_SUBTOTAL,\r\n    SUBMIT_SUCCESS,\r\n    SUBMIT_FAILURE,\r\n    GET_DELIVERY_METHOD,\r\n    GET_DELIVERY_METHOD_FAILURE,\r\n    ADDITIONAL_NOTE\r\n} from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n    delivery_method: null,\r\n    loading: true,\r\n    breakfast: 0,\r\n    byo_breakfast: 0,\r\n    byo_lunch: 0,\r\n    office_party: 0,\r\n    beverage: 0,\r\n    subtotal: 0,\r\n    tax: 0,\r\n    total: 0,\r\n    additional_comment: '',\r\n    nav: 0,\r\n    routes: [\r\n        '/breakfast',\r\n        '/byobreakfast',\r\n        '/lunch',\r\n        '/officeparty',\r\n        '/beverage',\r\n        '/summary'\r\n    ],\r\n    confirmation: {\r\n        loading: true,\r\n        success: false,\r\n        email: null,\r\n        orderID: null,\r\n        error: {\r\n            code: null\r\n        }\r\n    },\r\n    error: {\r\n        msg: ''\r\n    }\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n    switch (action.type) {\r\n        case UPDATE_CURRENT_NAV: {\r\n            const {index} = action.payload;\r\n            state.nav = index;\r\n            return {...state};\r\n        }\r\n        case CALCULATE_SUBTOTAL: {\r\n            const {subtotal, tax, total} = action.payload;\r\n            state.subtotal = subtotal;\r\n            state.tax = tax;\r\n            state.total = total;\r\n            return {...state};\r\n        }\r\n        case SUBMIT_SUCCESS: {\r\n            const {id, email} = action.payload;\r\n            initialState.confirmation = {\r\n                loading: false,\r\n                orderID: id,\r\n                email: email,\r\n                success: true\r\n            }\r\n            return {...initialState};\r\n        }\r\n        case SUBMIT_FAILURE: {\r\n            const {code} = action.payload;\r\n            state.confirmation = {\r\n                loading: false,\r\n                orderID: null\r\n            }\r\n            state.error.code = code;\r\n            return {...state}\r\n        }\r\n        case GET_DELIVERY_METHOD: {\r\n            const {delivery_method} = action.payload;\r\n            state.delivery_method = delivery_method;\r\n            return {...state};\r\n        }\r\n        case GET_DELIVERY_METHOD_FAILURE: {\r\n            const {err} = action.payload;\r\n            state.delivery_method = 'Failed';\r\n            state.error.msg = err;\r\n            return {...state}\r\n        }\r\n        case ADDITIONAL_NOTE: {\r\n            const text = action.payload;\r\n            state.additional_comment = text;\r\n            return {...state}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};","import { \r\n    UPDATE_BREAKFAST_QTY,\r\n    OPEN_BREAKFAST_EXECUTIVE_BEGINNING,\r\n    CLOSE_BREAKFAST_EXECUTIVE_BEGINNING,\r\n    ADD_BREAKFAST_EXECUTIVE_BEGINNING,\r\n    UPDATE_BREAKFAST_EXECUTIVE_BEGINNING,\r\n    EDIT_BREAKFAST_EXECUTIVE_BEGINNING,\r\n    REMOVE_BREAKFAST_EXECUTIVE_BEGINNING\r\n} from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n    bk_beginnings : { qty : 0, price : 24.99, name: 'Breakfast Beginnings', description: '96oz Coffee Carafe and 6 Pastries', total : 0 },\r\n    ex_breakfast : { \r\n        qty : 0, \r\n        price : 47.99, \r\n        name: 'Executive Breakfast', \r\n        description: '96oz Coffee Carafe, 6 Assorted Pastries, and 6 Breakfast Sandwiches', \r\n        total : 0,\r\n        box_open: false,\r\n        add: 'add',\r\n        id: null,\r\n        list: [] \r\n    },\r\n    ex_breakfast_name: {\r\n        ham_gruyere: \"Ham and Gruyere\",\r\n        egg_bacon: \"Egg, bacon, sausage and cheese\",\r\n        egg_chorizo: \"Egg, chorizo, Roasted Poblano peppers and cheese\",\r\n        egg_white: \"Egg white, mushrooms, spinach, red pepper and goat cheese\"\r\n    },\r\n    baker_dozen : { qty : 0, price : 15.99, name: 'Baker\\'s Dozen', description: 'Assorted Bagels and Cream Cheese (13 ea.)', total : 0 },\r\n    total : 0\r\n};\r\n\r\nconst roundTo = require('roundto');\r\n\r\nexport default function(state = initialState, action) {\r\n    switch (action.type) {\r\n        case UPDATE_BREAKFAST_QTY: {\r\n\r\n            const {name, qty} = action.payload;\r\n            const subtotal = roundTo(state[name].price * qty, 2); \r\n            const total = updateBreakfastTotal(state, name, qty);\r\n\r\n            return {\r\n                ...state,\r\n                [name]: {\r\n                    ...state[name],\r\n                    qty: qty,\r\n                    total: subtotal\r\n                },\r\n                total: total\r\n            };\r\n        }\r\n        case OPEN_BREAKFAST_EXECUTIVE_BEGINNING: {\r\n            const {add, id} = action.payload;\r\n            state.ex_breakfast.box_open = true;\r\n            state.ex_breakfast.add = add;\r\n            state.ex_breakfast.id = id;\r\n\r\n            return {...state};\r\n        }\r\n        case CLOSE_BREAKFAST_EXECUTIVE_BEGINNING: {\r\n            state.ex_breakfast.box_open = false;\r\n            return {...state}\r\n        }\r\n        case ADD_BREAKFAST_EXECUTIVE_BEGINNING: {\r\n            const {list} = action.payload;\r\n\r\n            state.ex_breakfast.box_open = false;\r\n\r\n            state.ex_breakfast.list.push(list);\r\n            state.ex_breakfast.qty = state.ex_breakfast.qty + 1;\r\n\r\n            state.ex_breakfast.total = roundTo(state.ex_breakfast.qty * state.ex_breakfast.price, 2);\r\n\r\n            state.total = updateBreakfastTotal(state, 'ex_breakfast', state.ex_breakfast.qty);\r\n\r\n            return {...state};\r\n        }\r\n        case UPDATE_BREAKFAST_EXECUTIVE_BEGINNING: {\r\n            const {id, list} = action.payload;\r\n            state.ex_breakfast.list[id] = list;\r\n            state.ex_breakfast.box_open = false;\r\n            state.ex_breakfast.id = null;\r\n\r\n            return {...state};\r\n        }\r\n        case EDIT_BREAKFAST_EXECUTIVE_BEGINNING: {\r\n            const {id} = action.payload;\r\n            state.ex_breakfast.id = id;\r\n            state.ex_breakfast.box_open = true;\r\n            state.ex_breakfast.add = 'edit';\r\n            return {...state};\r\n        }\r\n        case REMOVE_BREAKFAST_EXECUTIVE_BEGINNING: {\r\n            const {id} = action.payload;\r\n            state.ex_breakfast.list[id] = null;\r\n            state.ex_breakfast.qty = state.ex_breakfast.qty - 1;\r\n\r\n            state.ex_breakfast.id = null;\r\n\r\n            state.ex_breakfast.total = roundTo(state.ex_breakfast.qty * state.ex_breakfast.price, 2);\r\n\r\n            state.total = updateBreakfastTotal(state, 'ex_breakfast', state.ex_breakfast.qty);\r\n\r\n            return {...state};\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nfunction updateBreakfastTotal(state, name, qty) {\r\n    state[name].total = state[name].price * qty;\r\n    return roundTo(state.bk_beginnings.total + state.ex_breakfast.total + state.baker_dozen.total, 2);\r\n}","import { \r\n    UPDATE_BYO_BREAKFAST_COFFEE,\r\n    UPDATE_BYO_BREAKFAST_FRUITSALAD,\r\n    OPEN_BYO_BREAKFAST_SWEETTREATS,\r\n    CLOSE_BYO_BREAKFAST_SWEETTREATS,\r\n    ADD_BYO_BREAKFAST_SWEETTREATS,\r\n    EDIT_BYO_BREAKFAST_SWEETTREATS,\r\n    UPDATE_BYO_BREAKFAST_SWEETTREATS,\r\n    REMOVE_BYO_BREAKFAST_SWEETTREATS,\r\n    UPDATE_BYO_BREAKFAST_SANDWICH\r\n} from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n    coffee_carafe: {\r\n        price: 15.99,\r\n        list: {\r\n            regular: 0,\r\n            decaf: 0,\r\n            iced: 0,\r\n            iced_decaf: 0\r\n        },\r\n        total: 0\r\n    },\r\n    fruit_salad: {\r\n        serve_20: {price: 49.99, qty: 0},\r\n        serve_8: {price: 29.99, qty: 0},\r\n        total: 0\r\n    },\r\n    sweet_treats: {\r\n        box_open: false,\r\n        type: null,\r\n        add: 'add',\r\n        id: null,\r\n        half_dozen: {\r\n            price: 8.99,\r\n            qty: 0,\r\n            selected: true,\r\n            list: [],\r\n            total: 0\r\n        }, \r\n        dozen: {\r\n            price: 16.99,\r\n            qty: 0,\r\n            selected: true,\r\n            list: [],\r\n            total: 0\r\n        },\r\n        total: 0\r\n    },\r\n    sweet_treats_name: {bear_claws:'Bear Claws', blueberry_muffins:'Blueberry Muffins', brownies:'Brownies', chocolate_croissants:'Chocolate Croissants', cinnamon_blondies:'Cinnamon Blondies', croissants:'Croissants', granookies:'Granookies', variety:'Magic Bar'},\r\n    sandwiches: {\r\n        list: {\r\n            zucchini: {price: 21.99, qty: 0, name: 'Ham and Gruyere on Zucchini Bread', description: ''},\r\n            sausage_bagel: {price: 17.99, qty: 0, name: 'Egg, Cheese, Bacon and Sausage on a Bagel', description: ''},\r\n            pepper_bagel: {price: 17.99, qty: 0, name: 'Egg, Cheese, Chorizo, and Roasted Poblano Peppers on a Bagel', description: ''},\r\n            red_pepper_bagel: {price: 17.99, qty: 0, name: 'Egg Whites, Goat Cheese, Mushrooms, Spinach and Red Peppers on a Bagel', description: ''}\r\n        },\r\n        total: 0\r\n    },\r\n    total : 0\r\n};\r\n\r\nconst roundTo = require('roundto');\r\n\r\nexport default function(state = initialState, action) {\r\n    switch (action.type) {\r\n        case UPDATE_BYO_BREAKFAST_COFFEE: {\r\n            const {name, qty} = action.payload;\r\n\r\n            let coffee_list = ['regular', 'decaf', 'iced', 'iced_decaf'];\r\n            let total_qty = 0;\r\n            for (let i = 0; i < coffee_list.length; i++) {\r\n                const coffee_name = coffee_list[i];\r\n                if (coffee_name !== name) {\r\n                    total_qty = total_qty + state.coffee_carafe.list[coffee_list[i]];\r\n                }\r\n                else {\r\n                    total_qty = total_qty + qty;\r\n                }\r\n            }\r\n            \r\n            const coffee_total = roundTo(state.coffee_carafe.price * total_qty, 2); \r\n\r\n\r\n            const total = updateByoTotal(state, 'coffee_carafe', coffee_total);\r\n\r\n            return {\r\n                ...state,\r\n                coffee_carafe: {\r\n                    ...state.coffee_carafe,\r\n                    list: {\r\n                        ...state.coffee_carafe.list,\r\n                        [name]: qty\r\n                    },\r\n                    total: coffee_total\r\n                },\r\n                total: total\r\n            };\r\n        }\r\n        case UPDATE_BYO_BREAKFAST_FRUITSALAD: {\r\n            const {name, qty} = action.payload;\r\n\r\n            state.fruit_salad[name].qty = qty;\r\n\r\n            const fruit_total = (state.fruit_salad.serve_20.price * state.fruit_salad.serve_20.qty) + \r\n                                (state.fruit_salad.serve_8.price * state.fruit_salad.serve_8.qty);\r\n\r\n            const total = updateByoTotal(state, 'fruit_salad', fruit_total);\r\n\r\n            return {\r\n                ...state,\r\n                fruit_salad: {\r\n                    ...state.fruit_salad,\r\n                    [name]: {\r\n                        ...state.fruit_salad[name],\r\n                        qty: qty\r\n                    },\r\n                    total: roundTo(fruit_total, 2)\r\n                },\r\n                total: total\r\n            }\r\n        }\r\n        case OPEN_BYO_BREAKFAST_SWEETTREATS: {\r\n            const {type, add, id} = action.payload;\r\n            \r\n            return {\r\n                ...state,\r\n                sweet_treats:{\r\n                    ...state.sweet_treats,\r\n                    box_open: true,\r\n                    type: type,\r\n                    add: 'add',\r\n                    id: id,\r\n                }\r\n            }\r\n        }\r\n        case CLOSE_BYO_BREAKFAST_SWEETTREATS: {\r\n            return {\r\n                ...state,\r\n                sweet_treats: {\r\n                    ...state.sweet_treats,\r\n                    box_open: false\r\n                }\r\n            }\r\n        }\r\n        case ADD_BYO_BREAKFAST_SWEETTREATS: {\r\n            const {name, list} = action.payload;\r\n            state.sweet_treats[name].list.push(list);\r\n            state.sweet_treats[name].qty = state.sweet_treats[name].qty + 1;\r\n\r\n            // Get total of sweet treats\r\n            const subtotal = roundTo(state.sweet_treats.half_dozen.qty * state.sweet_treats.half_dozen.price, 2) + roundTo(state.sweet_treats.dozen.qty * state.sweet_treats.dozen.price, 2);\r\n\r\n            // BYO Breakfast Total\r\n            const total = updateByoTotal(state, 'sweet_treats', subtotal);\r\n\r\n            return {\r\n                ...state,\r\n                sweet_treats: {\r\n                    ...state.sweet_treats,\r\n                    box_open: false,\r\n                    [name]:{\r\n                        ...state.sweet_treats[name]\r\n                    },\r\n                    total: subtotal\r\n                },\r\n                total: total\r\n            }\r\n        }\r\n        case EDIT_BYO_BREAKFAST_SWEETTREATS: {\r\n            const {type, id} = action.payload;\r\n            \r\n            return {\r\n                ...state,\r\n                sweet_treats: {\r\n                    ...state.sweet_treats,\r\n                    box_open: true,\r\n                    type: type,\r\n                    add: 'edit',\r\n                    id: id\r\n                }\r\n            }\r\n        }\r\n        case UPDATE_BYO_BREAKFAST_SWEETTREATS: {\r\n            const {type, id, list} = action.payload;\r\n            state.sweet_treats[type].list[id] = list;\r\n\r\n            return {\r\n                ...state,\r\n                sweet_treats: {\r\n                    ...state.sweet_treats,\r\n                    box_open: false,\r\n                    id: null\r\n                }\r\n            }\r\n        }\r\n        case REMOVE_BYO_BREAKFAST_SWEETTREATS: {\r\n            const {type, id} = action.payload;\r\n            state.sweet_treats[type].list[id] = null;\r\n            state.sweet_treats[type].qty = state.sweet_treats[type].qty - 1;\r\n\r\n            // Get total of sweet treats\r\n            const subtotal = roundTo(state.sweet_treats.half_dozen.qty * state.sweet_treats.half_dozen.price, 2) + roundTo(state.sweet_treats.dozen.qty * state.sweet_treats.dozen.price, 2);\r\n\r\n            // BYO Breakfast Total\r\n            state.total = updateByoTotal(state, 'sweet_treats', subtotal);\r\n\r\n            return {\r\n                ...state\r\n            }\r\n        }\r\n        case UPDATE_BYO_BREAKFAST_SANDWICH: {\r\n            const {name, qty} = action.payload;\r\n\r\n            let subtotal = 0;\r\n            state.sandwiches.list[name].qty = qty;\r\n            \r\n            for (const name in state.sandwiches.list){\r\n                subtotal = subtotal + roundTo(state.sandwiches.list[name].qty * state.sandwiches.list[name].price, 2);\r\n            }\r\n\r\n            state.sandwiches.total = subtotal;\r\n\r\n            const total = updateByoTotal(state, 'sandwiches', subtotal);\r\n\r\n            return {\r\n                ...state,\r\n                sandwiches: {\r\n                    ...state.sandwiches,\r\n                    total: subtotal\r\n                },\r\n                total: total\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nfunction updateByoTotal(state, name, subtotal) {\r\n    state[name].total = subtotal;\r\n    const total = roundTo(\r\n                            state.coffee_carafe.total + \r\n                            state.fruit_salad.total + \r\n                            state.sweet_treats.total +\r\n                            state.sandwiches.total, \r\n                        2);\r\n    return total;\r\n}","import { \r\n    OPEN_LUNCHBOX,\r\n    ADD_LUNCHBOX,\r\n    OPEN_LUNCHBOX_EDITOR,\r\n    UPDATE_LUNCHBOX,\r\n    REMOVE_LUNCHBOX,\r\n    CLOSE_LUNCHBOX\r\n} from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n    actionType: 'add',\r\n    id: null,\r\n    open_box: false,\r\n    price: 39.99,\r\n    qty: 0,\r\n    products: {\r\n        sandwiches : {\r\n            turk_philly_chess: {name: 'Peppered Turkey Philly Cheese (1/2 Sandwich)', description: 'Peppered Turkey, Sport Peppers, and White Cheddar Cheese'},\r\n            italian_job: {name: 'The Italian Job (1/2 Sandwich)', description: 'Ham, Peppered Turkey, Salami, Provolone, Cured Tomato, and Sport Peppers'},\r\n            chicken_club: {name: 'Chicken Club', description: 'Chicken, Ham, Bacon, Havarti, and Tomato Pesto Spread'},\r\n            bruschetta_panini : {name: 'Bruschetta Panini', description: 'Tomato, Pesto, and Mozzarella'}\r\n        },\r\n        salads: {\r\n            hali_caesar: {name: 'Hail Caesar', description: 'Chopped Romaine, Juicy Chicken, Parmesan, and Caesar Dressing'},\r\n            kale_crunch: {name: 'Kale Crunch', description: 'Kale, Cabbage, Radish, Almond, Cranberry, Peppered Turkey, and Citrus Vinaigrette'}\r\n        },\r\n        chips: {\r\n            baked_lays: 'Baked Lays',\r\n            pb_jalapeno: 'Poore Brother\\'s - Jalapeno',\r\n            pb_original: 'Poore Brother\\'s - Original',\r\n            sun_chips: 'Sun Chips',\r\n            bbq_chips: 'BBQ Chips'\r\n        },\r\n        beverages: {\r\n            coke: 'Coke',\r\n            diet_coke: 'Diet Coke',\r\n            dr_pepper: 'Dr.Pepper',\r\n            diet_dr_pepper: 'Diet Dr.Pepper',\r\n            sprite: 'Sprite',\r\n            dasani: 'Dasani Water',\r\n            cherry_coke: 'Cherry Coke',\r\n            coke_zero: 'Coke Zero'\r\n        }\r\n    },\r\n    names: {\r\n        turk_philly_chess: {name: 'Peppered Turkey Philly Cheese (1/2 Sandwich)', description: 'Peppered Turkey, Sport Peppers, and White Cheddar Cheese'},\r\n        italian_job: {name: 'The Italian Job (1/2 Sandwich)', description: 'Ham, Peppered Turkey, Salami, Provolone, Cured Tomato, and Sport Peppers'},\r\n        chicken_club: {name: 'Chicken Club', description: 'Chicken, Ham, Bacon, Havarti, and Tomato Pesto Spread'},\r\n        bruschetta_panini : {name: 'Bruschetta Panini', description: 'Tomato, Pesto, and Mozzarella'},\r\n        hali_caesar: {name: 'Hail Caesar', description: 'Chopped Romaine, Juicy Chicken, Parmesan, and Caesar Dressing'},\r\n        kale_crunch: {name: 'Kale Crunch', description: 'Kale, Cabbage, Radish, Almond, Cranberry, Peppered Turkey, and Citrus Vinaigrette'},\r\n        baked_lays: {name:'Baked Lays'},\r\n        pb_jalapeno: {name:'Poore Brother\\'s - Jalapeno'},\r\n        pb_original: {name:'Poore Brother\\'s - Original'},\r\n        sun_chips: {name:'Sun Chips'},\r\n        bbq_chips: {name:'BBQ Chips'},\r\n        fruit: {name: 'Fruit'},\r\n        coke: {name:'Coke'},\r\n        diet_coke: {name:'Diet Coke'},\r\n        dr_pepper: {name:'Dr.Pepper'},\r\n        diet_dr_pepper: {name:'Diet Dr.Pepper'},\r\n        sprite: {name:'Sprite'},\r\n        dasani: {name:'Dasani Water'},\r\n        cherry_coke: {name:'Cherry Coke'},\r\n        coke_zero: {name:'Coke Zero'}\r\n    },\r\n    list: [],\r\n    total: 0\r\n};\r\n\r\nconst roundTo = require('roundto');\r\n\r\nexport default function(state = initialState, action) {\r\n    switch (action.type) {\r\n        case OPEN_LUNCHBOX: {\r\n            state.actionType = 'add';\r\n            state.open_box = true;\r\n            return {\r\n                ...state\r\n            };\r\n        }\r\n        case ADD_LUNCHBOX: {\r\n            const {list} = action.payload;\r\n            state.open_box = false;\r\n            state.qty = state.qty + 1;\r\n\r\n            // Check Extra\r\n            const extras = list.extra.list;\r\n            let extra_total = 0;\r\n            for (let i = 0; i < extras.length; i++) {\r\n                if (extras[i].one !== 'None'){extra_total = extra_total + 5;}\r\n                if (extras[i].two !== 'None'){extra_total = extra_total + 0.89;}\r\n                if (extras[i].three !== 'None'){\r\n                    if (extras[i].three === 'Dasani Water'){\r\n                        extra_total = extra_total + 1.69;\r\n                    }\r\n                    else {\r\n                        extra_total = extra_total + 1.99;\r\n                    }\r\n                }\r\n            }\r\n\r\n            list.extra.total = extra_total;\r\n            state.list.push(list);\r\n            state.total = roundTo((state.qty * state.price) + extra_total,2);\r\n            return {\r\n                ...state\r\n            };\r\n        }\r\n        case OPEN_LUNCHBOX_EDITOR: {\r\n            const {index} = action.payload;\r\n            state.id = index;\r\n            state.actionType = 'edit';\r\n            state.open_box = true;\r\n            return {\r\n                ...state\r\n            };\r\n        }\r\n        case UPDATE_LUNCHBOX: {\r\n            const {index, list} = action.payload;\r\n            state.list[index] = list;\r\n\r\n            // Check Extra\r\n            const extras = state.list[index].extra.list;\r\n            let extra_total = 0;\r\n            for (let i = 0; i < extras.length; i++) {\r\n                if (extras[i].one !== 'None'){extra_total = extra_total + 5;}\r\n                if (extras[i].two !== 'None'){extra_total = extra_total + 0.89;}\r\n                if (extras[i].three !== 'None'){\r\n                    if (extras[i].three === 'Dasani Water'){\r\n                        extra_total = extra_total + 1.69;\r\n                    }\r\n                    else {\r\n                        extra_total = extra_total + 1.99;\r\n                    }\r\n                }\r\n            }\r\n            state.list[index].extra.total = extra_total;\r\n            state.total = roundTo((state.qty * state.price) + extra_total,2);\r\n\r\n            state.open_box = false;\r\n            return {\r\n                ...state\r\n            };\r\n        }\r\n        case CLOSE_LUNCHBOX: {\r\n            state.open_box = false;\r\n            return {\r\n                ...state\r\n            };\r\n        }\r\n        case REMOVE_LUNCHBOX: {\r\n            const {index} = action.payload;\r\n            state.qty = state.qty - 1;\r\n            state.list[index] = [];\r\n            state.total = roundTo((state.qty * state.price),2);\r\n            return {\r\n                ...state\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { UPDATE_OFFICEPARTY_QTY } from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n    serve_10 : { qty : 0, price : 24.99, name: 'Serves 10', description: 'Snack sized assorted meats, cheeses, veggies, hummus and pita chips', total : 0 },\r\n    total : 0\r\n};\r\n\r\nconst roundTo = require('roundto');\r\n\r\nexport default function(state = initialState, action) {\r\n    switch (action.type) {\r\n        case UPDATE_OFFICEPARTY_QTY: {\r\n\r\n            const {name, qty} = action.payload;\r\n            const subtotal = roundTo(state[name].price * qty, 2); \r\n            const total = updateOfficePartyTotal(state, name, qty);\r\n\r\n            return {\r\n                ...state,\r\n                [name]: {\r\n                    ...state[name],\r\n                    qty: qty,\r\n                    total: subtotal\r\n                },\r\n                total: total\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nfunction updateOfficePartyTotal(state, name, qty) {\r\n    state[name].total = state[name].price * qty;\r\n    return roundTo(state.serve_10.total, 2);\r\n}","import { \r\n    UPDATE_BEVERAGE_QTY\r\n} from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n    list: {\r\n        coke: {name: 'Coke', price: 1.99, qty: 0},\r\n        diet_coke: {name: 'Diet Coke', price: 1.99, qty: 0},\r\n        dr_pepper: {name: 'Dr.Pepper', price: 1.99, qty: 0},\r\n        diet_dr_pepper: {name: 'Diet Dr.Pepper', price: 1.99, qty: 0},\r\n        sprite: {name: 'Sprite', price: 1.99, qty:0},\r\n        dasani: {name: 'Dasani Water', price: 1.69, qty: 0},\r\n        cherry_coke: {name: 'Cherry Coke', price: 1.99, qty: 0},\r\n        coke_zero: {name: 'Coke Zero', price: 1.99, qty: 0}\r\n    },\r\n    total : 0\r\n};\r\n\r\nconst roundTo = require('roundto');\r\n\r\nexport default function(state = initialState, action) {\r\n    switch (action.type) {\r\n        case UPDATE_BEVERAGE_QTY: {\r\n            const {name, qty} = action.payload;\r\n\r\n            state.list[name].qty = qty;\r\n            state.total = updateTotal(state, name);\r\n\r\n            return {...state};\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nfunction updateTotal(state, name) {\r\n    const total = roundTo(\r\n                            state.list.coke.qty*state.list.coke.price + \r\n                            state.list.diet_coke.qty*state.list.diet_coke.price +\r\n                            state.list.dr_pepper.qty*state.list.dr_pepper.price +\r\n                            state.list.diet_dr_pepper.qty*state.list.diet_dr_pepper.price +\r\n                            state.list.sprite.qty*state.list.sprite.price +\r\n                            state.list.dasani.qty*state.list.dasani.price +\r\n                            state.list.cherry_coke.qty*state.list.cherry_coke.price +\r\n                            state.list.coke_zero.qty*state.list.coke_zero.price, \r\n                        2);\r\n    return total;\r\n}","import { combineReducers } from \"redux\";\r\nimport main from \"./main\";\r\nimport breakfast from \"./breakfast\";\r\nimport byo_breakfast from \"./byo_breakfast\";\r\nimport lunch from \"./lunch\";\r\nimport office_party from \"./officeParty\";\r\nimport beverage from \"./beverage\";\r\n\r\nexport default combineReducers({ main, breakfast, byo_breakfast, lunch, office_party, beverage });","export const UPDATE_CURRENT_NAV = \"UPDATE_CURRENT_NAV\";\r\nexport const CALCULATE_SUBTOTAL = \"CALCULATE_SUBTOTAL\";\r\nexport const SUBMIT_ORDER = \"SUBMIT_ORDER\";\r\nexport const SUBMIT_SUCCESS = \"SUBMIT_SUCCESS\";\r\nexport const SUBMIT_FAILURE = \"SUBMIT_FAILURE\";\r\nexport const GET_DELIVERY_METHOD = \"GET_DELIVERY_METHOD\";\r\nexport const GET_DELIVERY_METHOD_FAILURE = \"GET_DELIVERY_METHOD_FAILURE\";\r\nexport const ADDITIONAL_NOTE = \"ADDITIONAL_NOTE\";\r\n\r\n// Breakfast\r\nexport const UPDATE_QTY = \"UPDATE_QTY\";\r\nexport const UPDATE_BREAKFAST_QTY = \"UPDATE_BREAKFAST_QTY\";\r\nexport const OPEN_BREAKFAST_EXECUTIVE_BEGINNING = \"OPEN_BREAKFAST_EXECUTIVE_BEGINNING\";\r\nexport const CLOSE_BREAKFAST_EXECUTIVE_BEGINNING = \"CLOSE_BREAKFAST_EXECUTIVE_BEGINNING\";\r\nexport const ADD_BREAKFAST_EXECUTIVE_BEGINNING = \"ADD_BREAKFAST_EXECUTIVE_BEGINNING\";\r\nexport const UPDATE_BREAKFAST_EXECUTIVE_BEGINNING = \"UPDATE_BREAKFAST_EXECUTIVE_BEGINNING\";\r\nexport const EDIT_BREAKFAST_EXECUTIVE_BEGINNING = \"EDIT_BREAKFAST_EXECUTIVE_BEGINNING\";\r\nexport const REMOVE_BREAKFAST_EXECUTIVE_BEGINNING = \"REMOVE_BREAKFAST_EXECUTIVE_BEGINNING\";\r\n\r\n// Build Your Own Breakfast\r\nexport const UPDATE_BYO_BREAKFAST_COFFEE = \"UPDATE_BYO_BREAKFAST_COFFEE\";\r\nexport const UPDATE_BYO_BREAKFAST_FRUITSALAD = \"UPDATE_BYO_BREAKFAST_FRUITSALAD\";\r\nexport const OPEN_BYO_BREAKFAST_SWEETTREATS = \"OPEN_BYO_BREAKFAST_SWEETTREATS\";\r\nexport const ADD_BYO_BREAKFAST_SWEETTREATS = \"ADD_BYO_BREAKFAST_SWEETTREATS\";\r\nexport const CLOSE_BYO_BREAKFAST_SWEETTREATS = \"CLOSE_BYO_BREAKFAST_SWEETTREATS\";\r\nexport const EDIT_BYO_BREAKFAST_SWEETTREATS = \"EDIT_BYO_BREAKFAST_SWEETTREATS\";\r\nexport const UPDATE_BYO_BREAKFAST_SWEETTREATS = \"UPDATE_BYO_BREAKFAST_SWEETTREATS\";\r\nexport const REMOVE_BYO_BREAKFAST_SWEETTREATS = \"REMOVE_BYO_BREAKFAST_SWEETTREATS\";\r\nexport const UPDATE_BYO_BREAKFAST_SANDWICH = \"UPDATE_BYO_BREAKFAST_SANDWICH\";\r\n\r\n// Lunch\r\nexport const OPEN_LUNCHBOX = \"OPEN_LUNCHBOX\";\r\nexport const ADD_LUNCHBOX = \"ADD_LUNCHBOX\";\r\nexport const OPEN_LUNCHBOX_EDITOR = \"OPEN_LUNCHBOX_EDITOR\";\r\nexport const UPDATE_LUNCHBOX = \"UPDATE_LUNCHBOX\";\r\nexport const REMOVE_LUNCHBOX = \"REMOVE_LUNCHBOX\";\r\nexport const CLOSE_LUNCHBOX = \"CLOSE_LUNCHBOX\";\r\n\r\n// Office Party\r\nexport const UPDATE_OFFICEPARTY_QTY = \"UPDATE_OFFICEPARTY_QTY\";\r\n\r\n// Beverage\r\nexport const UPDATE_BEVERAGE_QTY = \"UPDATE_BEVERAGE_QTY\";","import { createStore, applyMiddleware } from 'redux';\r\nimport thunkMiddleware  from 'redux-thunk';\r\nimport rootReducer from \"./reducers\";\r\n\r\nexport default createStore( rootReducer, applyMiddleware( thunkMiddleware ));","import React from 'react';\r\n\r\nclass NumberInput extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            value: parseInt(this.props.value)\r\n        }\r\n    }\r\n\r\n    increase = () => {\r\n        this.setState({\r\n            value: this.state.value + 1\r\n        }, function() {\r\n            const result = this.props.onChange(this.props.name, this.state.value);\r\n            if (result === 'error'){\r\n                this.setState({\r\n                    value: this.state.value - 1\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    decrease = () => {\r\n        if (this.state.value-1 >= 0) {\r\n            this.setState({\r\n                value: this.state.value - 1\r\n            }, function() {\r\n                this.props.onChange(this.props.name, this.state.value)\r\n            })\r\n        }\r\n    }\r\n\r\n    onChangeHandler = (event) => {\r\n        const target = event.target;\r\n        const value = target.value;\r\n        this.setState({\r\n            value: parseInt(value)\r\n        }, function() {\r\n            this.props.onChange(this.props.name, this.state.value)\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"def-number-input number-input\" style={this.props.style}>\r\n                {\r\n                    !this.props.noleft ?\r\n                    <button className=\"minus\" onClick={this.decrease}></button> :\r\n                    null\r\n                }\r\n                <input className={'quantity ' + (this.props.readonly ? 'input-readonly' : '')} name={this.props.name}\r\n                min={0}\r\n                value={this.props.value}\r\n                onChange={this.onChangeHandler.bind(this)}\r\n                type=\"number\"\r\n                readOnly={this.props.readonly ? true : false} />\r\n                <button className=\"plus\" onClick={this.increase}></button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NumberInput;","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n    Link\r\n} from 'react-router-dom';\r\n\r\nimport { Row } from 'react-bootstrap';\r\n\r\n// import ArrowLeft from '../../img/arrow_left.png';\r\n\r\nclass TopNav extends React.Component {\r\n\r\n    render() {\r\n        return(\r\n            <React.Fragment>\r\n                <Row className=\"m-0\">\r\n                    <Link\r\n                    to=\"/breakfast\"\r\n                    className={'topnav col ' + (this.props.global.main.nav === 0 ? 'active' : '')}\r\n                    >\r\n                        <p><u>Breakfast</u></p>\r\n                    </Link>\r\n                    <Link\r\n                    to=\"/byobreakfast\"\r\n                    className={'topnav col ' + (this.props.global.main.nav === 1 ? 'active' : '')}\r\n                    >\r\n                        <p><u>Build Your Own Breakfast</u></p>\r\n                    </Link>\r\n                    <Link\r\n                    to=\"/lunch\"\r\n                    className={'topnav col ' + (this.props.global.main.nav === 2 ? 'active' : '')}\r\n                    >\r\n                        <p><u>Lunch</u></p>\r\n                    </Link>\r\n                    <Link\r\n                    to=\"/officeparty\"\r\n                    className={'topnav col ' + (this.props.global.main.nav === 3 ? 'active' : '')}\r\n                    >\r\n                        <p><u>Office Party</u></p>\r\n                    </Link>\r\n                    <Link\r\n                    to=\"/beverage\"\r\n                    className={'topnav col ' + (this.props.global.main.nav === 4 ? 'active' : '')}\r\n                    >\r\n                        <p><u>Beverage</u></p>\r\n                    </Link>\r\n                    <Link\r\n                    to=\"/summary\"\r\n                    className={'topnav col ' + (this.props.global.main.nav === 5 ? 'active' : '')}\r\n                    >\r\n                        <p><u>Order Summary</u></p>\r\n                    </Link>\r\n                </Row>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    global: state\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps\r\n)(TopNav)","import { \r\n    UPDATE_CURRENT_NAV, \r\n    SUBMIT_ORDER, \r\n    CALCULATE_SUBTOTAL,\r\n    SUBMIT_SUCCESS,\r\n    SUBMIT_FAILURE,\r\n    GET_DELIVERY_METHOD,\r\n    GET_DELIVERY_METHOD_FAILURE,\r\n    ADDITIONAL_NOTE\r\n} from './actionTypes.js'\r\n\r\nexport const updateCurrentNav = (index) => ({\r\n    type: UPDATE_CURRENT_NAV,\r\n    payload: {\r\n        index\r\n    }\r\n})\r\n\r\nexport const calculateSubtotal = (subtotal, tax, total) => ({\r\n    type: CALCULATE_SUBTOTAL,\r\n    payload: {\r\n        subtotal, tax, total\r\n    }\r\n})\r\n\r\nexport const initSubmitOrder = () => ({\r\n    type: SUBMIT_ORDER\r\n})\r\n\r\nexport const formValidationFailure = () => ({\r\n\r\n})\r\n\r\nexport const formSubmitSuccess = (id, email) => ({\r\n    type: SUBMIT_SUCCESS,\r\n    payload: {\r\n        id, email\r\n    }\r\n})\r\n\r\nexport const formSubmitFailure = (code) => ({\r\n    type: SUBMIT_FAILURE,\r\n    payload: {\r\n        code\r\n    }\r\n})\r\n\r\nexport function submitOrder(data) {\r\n    return (dispatch) => {\r\n        dispatch(initSubmitOrder());\r\n\r\n        // Validate Form\r\n\r\n        let error = false;\r\n\r\n        if (error){\r\n            dispatch(formValidationFailure());\r\n        }\r\n        else {\r\n            // console.log(data);\r\n            const fetch_option = {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(data)\r\n            }\r\n\r\n            // const url = 'http://192.168.99.100/api/catering/retail/catalyst/submit';\r\n            const url = '/api/catering/retail/catalyst/submit';\r\n\r\n            fetch(url, fetch_option)\r\n            .then((res) => {\r\n                // console.log(res);\r\n                if(res.ok) {\r\n                    return res.json();\r\n                } else {\r\n                    // console.log(res);\r\n                    throw new Error('An error occurred.');\r\n                }\r\n            })\r\n            .then(res => {\r\n                // console.log('return', res.return);\r\n                if (res.success){\r\n                    dispatch(formSubmitSuccess(res.return.order_id, res.return.email));\r\n                }\r\n                else {\r\n                    dispatch(formSubmitFailure(res.return.code));\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n                // dispatch(formSubmitFailure(err));\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport function getDeliveryMethod() {\r\n    return (dispatch) => {\r\n        const fetch_option = {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json'\r\n            }\r\n        }\r\n\r\n        // const url = 'http://192.168.99.100/catering/retail/customer_info/getDeliveryMethod';\r\n        const url = '/api/catering/retail/customer_info/getDeliveryMethod';\r\n\r\n        fetch(url, fetch_option)\r\n        .then((res) => {\r\n            if(res.ok) {\r\n                return res.json();\r\n            } else {\r\n                // console.log(res);\r\n                throw new Error('An error occurred.');\r\n            }\r\n        })\r\n        .then(res => {\r\n            // console.log('return', res.return);\r\n            dispatch(getDeliveryMethodSuccess(res.return.delivery_method));\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n            dispatch(getDeliveryMethodFailure(err));\r\n        })\r\n    }\r\n}\r\n\r\nexport const getDeliveryMethodSuccess = (delivery_method) => ({\r\n    type: GET_DELIVERY_METHOD,\r\n    payload: {\r\n        delivery_method\r\n    }\r\n})\r\n\r\nexport const getDeliveryMethodFailure = (err) => ({\r\n    type: GET_DELIVERY_METHOD_FAILURE,\r\n    payload: {\r\n        err\r\n    }\r\n})\r\n\r\nexport const handleTextarea = (text) => ({\r\n    type: ADDITIONAL_NOTE,\r\n    payload: text\r\n})","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from 'react-router-dom';\r\nimport { Row, Col, ButtonToolbar } from 'react-bootstrap';\r\n\r\nimport { updateCurrentNav } from '../redux/actions/main';\r\n\r\nconst roundTo = require('roundto');\r\n\r\nclass Bottom extends React.Component {\r\n\r\n    getTotal = () => {\r\n        return roundTo(\r\n                this.props.global.breakfast.total +\r\n                this.props.global.byo_breakfast.total +\r\n                this.props.global.lunch.total +\r\n                this.props.global.office_party.total +\r\n                this.props.global.beverage.total,\r\n                2\r\n            );\r\n    }\r\n\r\n    render() {\r\n\r\n        const navIndex = this.props.global.main.nav;\r\n        const routes = this.props.global.main.routes;\r\n\r\n        return(\r\n            <React.Fragment>\r\n                <Row>\r\n                    <Col>\r\n                        <p style={{fontSize: '22px', fontWeight: '600', textAlign: 'right', padding: '20px 15px'}}>Subtotal ${this.getTotal()}</p>\r\n                    </Col>\r\n                </Row>\r\n                <ButtonToolbar>\r\n\r\n                    {\r\n                        (navIndex !== 0 && navIndex !== 5) ?\r\n                        <Link\r\n                        className={\"btn add-btn\"}\r\n                        style={{marginRight: '10px', width: '200px'}}\r\n                        to={routes[navIndex-1]}\r\n                        >Prev</Link>\r\n                        :\r\n                        null\r\n                    }\r\n\r\n                    {\r\n                        navIndex !== 5 ? \r\n                        <Link\r\n                        className={\"btn add-btn\"}\r\n                        style={{marginLeft: 'auto', width:'200px'}}\r\n                        to={routes[navIndex+1]}\r\n                        >Next</Link>\r\n                        :\r\n                        <Link\r\n                        className={\"btn add-btn\"}\r\n                        style={{marginLeft: 'auto', width:'150px'}}\r\n                        to={routes[0]}\r\n                        >Add More Food</Link>\r\n                    }\r\n\r\n                </ButtonToolbar>\r\n\r\n                {/* <ButtonToolbar style={{marginTop: '15px'}}>\r\n                    {\r\n                        navIndex !== 5 ?\r\n                        <Link\r\n                        className={\"btn add-btn\"}\r\n                        style={{width:'100%'}}\r\n                        to={routes[5]}\r\n                        >Review Order</Link>\r\n                        :\r\n                        null\r\n                    }\r\n                </ButtonToolbar> */}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    global: state\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => (\r\n    {\r\n        updateCurrentNav: (index) => dispatch(updateCurrentNav(index))\r\n    }\r\n)\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Bottom)","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Row, Col, Card, ButtonToolbar, Button, ListGroup } from 'react-bootstrap';\r\nimport NumberInput from '../common/numberInput.js';\r\n\r\nimport { addExecutiveBeginning, closeExecutiveBeginning, updateExecutiveBeginning } from '../../redux/actions/breakfast';\r\n\r\nclass ExecutiveBreakfast extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        let list = {\r\n            ham_gruyere: 0,\r\n            egg_bacon: 0,\r\n            egg_chorizo: 0,\r\n            egg_white: 0\r\n        };\r\n        if (this.props.add === 'edit'){ \r\n            list = this.props.breakfast.ex_breakfast.list[this.props.id]; \r\n        }\r\n\r\n        this.state = {\r\n            qty: 0,\r\n            list: list,\r\n            error: false,\r\n            error_msg: '',\r\n            max_qty: 6\r\n        }\r\n    }\r\n\r\n    onChangeInput = (name, qty) => {\r\n        this.setState({error: false})\r\n\r\n        let list = this.state.list;\r\n        // list[name] = qty;\r\n        const max_qty = this.state.max_qty;\r\n        let tmp_qty = 0;\r\n        for (let key in list){\r\n            if (key !== name){\r\n                tmp_qty = tmp_qty + list[key];    \r\n            }\r\n            else{\r\n                tmp_qty = tmp_qty + qty;\r\n            }\r\n        }\r\n        \r\n        if (tmp_qty <= max_qty){\r\n            list[name] = qty;\r\n            this.setState({\r\n                list: list,\r\n                qty: tmp_qty\r\n            })\r\n        }\r\n        else {\r\n            this.setState({\r\n                error: true,\r\n                error_msg: 'qty max error'\r\n            })\r\n            return 'error';\r\n        }\r\n    }\r\n\r\n    closeExecutiveBeginning = () => {\r\n        this.props.closeExecutiveBeginning();\r\n    }\r\n\r\n    addExecutiveBeginning = () => {\r\n        if (this.validateSandwiches()){\r\n\r\n        }\r\n        else {\r\n            this.props.addExecutiveBeginning(this.state.list);\r\n        }\r\n    }\r\n\r\n    updateExecutiveBeginning = () => {\r\n        if (this.validateSandwiches()){\r\n\r\n        }\r\n        else {\r\n            this.props.updateExecutiveBeginning(this.props.id, this.state.list);\r\n        }\r\n    }\r\n\r\n    validateSandwiches = () => {\r\n        let error = false;\r\n        // let list = this.state.list;\r\n        // const max_qty = this.state.max_qty;\r\n        // let tmp_qty = 0;\r\n        // for (let key in list){\r\n        //     tmp_qty = tmp_qty + list[key];\r\n        // }\r\n        \r\n        if (this.state.qty !== this.state.max_qty){\r\n            this.setState({error: true});\r\n            error = true;\r\n        }\r\n        \r\n        return error;\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <Card className=\"col-md-12 p-0\">\r\n                <Card.Header>\r\n\r\n                </Card.Header>\r\n\r\n                <Card.Body>\r\n                    <Card.Title>Select Your Sandwiches\r\n                        <span style={{ textTransform: 'initial', marginLeft: '12px', fontSize: '17px', color: '#545454'}}>\r\n                            Select 6\r\n                        </span>\r\n                    </Card.Title>\r\n                </Card.Body>\r\n\r\n                <Card.Body className={this.state.error ? 'su-alert' : ''}>\r\n                    <Card.Text className=\"pl-3\">\r\n                        You selected <strong>{this.state.qty} of {this.state.max_qty}</strong> Sandwiches.\r\n                    </Card.Text>\r\n                </Card.Body>\r\n\r\n                <ListGroup variant=\"flush\">\r\n\r\n                    <ListGroup.Item className=\"menu-list\">\r\n                        <Row className=\"mb-3\">\r\n\r\n                            <Col className=\"wrap_qty col\">\r\n                                {this.props.breakfast.ex_breakfast_name.ham_gruyere}\r\n                                <NumberInput \r\n                                    readonly={true}\r\n                                    onChange={this.onChangeInput.bind(this)}\r\n                                    name=\"ham_gruyere\"\r\n                                    value={this.state.list.ham_gruyere}\r\n                                    style={{float: 'left'}}\r\n                                />\r\n                            </Col>\r\n\r\n                        </Row>\r\n                        <Row className=\"mb-3\">\r\n\r\n                            <Col className=\"wrap_qty\">\r\n                                {this.props.breakfast.ex_breakfast_name.egg_bacon}\r\n                                <NumberInput \r\n                                    readonly={true}\r\n                                    onChange={this.onChangeInput.bind(this)}\r\n                                    name=\"egg_bacon\"\r\n                                    value={this.state.list.egg_bacon}\r\n                                    style={{float: 'left'}}\r\n                                />\r\n                            </Col>\r\n\r\n                        </Row>\r\n\r\n                        <Row className=\"mb-3\">\r\n\r\n                            <Col className=\"wrap_qty\">\r\n                                {this.props.breakfast.ex_breakfast_name.egg_chorizo}\r\n                                <NumberInput \r\n                                    readonly={true}\r\n                                    onChange={this.onChangeInput.bind(this)}\r\n                                    name=\"egg_chorizo\"\r\n                                    value={this.state.list.egg_chorizo}\r\n                                    style={{float: 'left'}}\r\n                                />\r\n                            </Col>\r\n\r\n                        </Row>\r\n                        <Row className=\"mb-3\">\r\n\r\n                            <Col className=\"wrap_qty\">\r\n                                {this.props.breakfast.ex_breakfast_name.egg_white}\r\n                                <NumberInput \r\n                                    readonly={true}\r\n                                    onChange={this.onChangeInput.bind(this)}\r\n                                    name=\"egg_white\"\r\n                                    value={this.state.list.egg_white}\r\n                                    style={{float: 'left'}}\r\n                                />\r\n                            </Col>\r\n\r\n                        </Row>\r\n\r\n                        \r\n\r\n                        <Row>\r\n                            <Col>\r\n                                <ButtonToolbar className=\"mt-4\">\r\n                                    {\r\n                                        this.props.add === 'add' ?\r\n                                        <Button variant=\"primary\" size=\"md\" onClick={this.addExecutiveBeginning.bind(this)} className=\"add-btn\">\r\n                                            Add\r\n                                        </Button>\r\n                                        :\r\n                                        <Button variant=\"primary\" size=\"md\" onClick={this.updateExecutiveBeginning.bind(this)} className=\"add-btn\">\r\n                                            Update\r\n                                        </Button>\r\n                                    }\r\n                                    <Button variant=\"light\" size=\"md\" onClick={this.closeExecutiveBeginning.bind(this)} className=\"cancel-btn ml-2\">\r\n                                        Cancel\r\n                                    </Button>\r\n                                </ButtonToolbar>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                    </ListGroup.Item>\r\n\r\n                </ListGroup>\r\n\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    breakfast: state.breakfast\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => (\r\n    {\r\n        addExecutiveBeginning: (qty) => dispatch(addExecutiveBeginning(qty)),\r\n        closeExecutiveBeginning: () => dispatch(closeExecutiveBeginning()),\r\n        updateExecutiveBeginning: (id, list) => dispatch(updateExecutiveBeginning(id, list))\r\n    }\r\n)\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(ExecutiveBreakfast)","import { \r\n    UPDATE_BREAKFAST_QTY,\r\n    OPEN_BREAKFAST_EXECUTIVE_BEGINNING,\r\n    CLOSE_BREAKFAST_EXECUTIVE_BEGINNING,\r\n    ADD_BREAKFAST_EXECUTIVE_BEGINNING,\r\n    UPDATE_BREAKFAST_EXECUTIVE_BEGINNING,\r\n    EDIT_BREAKFAST_EXECUTIVE_BEGINNING,\r\n    REMOVE_BREAKFAST_EXECUTIVE_BEGINNING\r\n} from './actionTypes.js'\r\n\r\nexport const updateQty = (name, qty) => ({\r\n    type: UPDATE_BREAKFAST_QTY,\r\n    payload: {\r\n        name,\r\n        qty\r\n    }\r\n})\r\nexport const openExecutiveBeginning = (add, id) => ({\r\n    type: OPEN_BREAKFAST_EXECUTIVE_BEGINNING,\r\n    payload: {\r\n        add,\r\n        id\r\n    }\r\n})\r\nexport const closeExecutiveBeginning = () => ({\r\n    type: CLOSE_BREAKFAST_EXECUTIVE_BEGINNING\r\n})\r\n\r\nexport const addExecutiveBeginning = (list) => ({\r\n    type: ADD_BREAKFAST_EXECUTIVE_BEGINNING,\r\n    payload: {\r\n        list\r\n    }\r\n})\r\n\r\nexport const updateExecutiveBeginning = (id,list) => ({\r\n    type: UPDATE_BREAKFAST_EXECUTIVE_BEGINNING,\r\n    payload: {\r\n        id,\r\n        list\r\n    }\r\n})\r\n\r\nexport const editExBreakfast = (id) => ({\r\n    type: EDIT_BREAKFAST_EXECUTIVE_BEGINNING,\r\n    payload: {\r\n        id\r\n    }\r\n})\r\n\r\nexport const removeExBreakfast = (id) => ({\r\n    type: REMOVE_BREAKFAST_EXECUTIVE_BEGINNING,\r\n    payload: {\r\n        id\r\n    }\r\n})","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Row, Col, Card, ListGroup, ButtonToolbar, Button } from 'react-bootstrap';\r\nimport NumberInput from '../common/numberInput.js';\r\nimport TopNav from '../common/TopNav.js';\r\nimport Bottom from '../bottom';\r\nimport ExecutiveBeginning from './ExecutiveBreakfast.js';\r\n\r\nimport { updateQty, openExecutiveBeginning, editExBreakfast, removeExBreakfast } from '../../redux/actions/breakfast';\r\nimport { updateCurrentNav } from '../../redux/actions/main';\r\n\r\nclass Breakfast extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            total: this.props.breakfast.total\r\n        }\r\n\r\n        this.props.updateCurrentNav(0);\r\n    }\r\n\r\n    onChangeHandler = (name, value) => {\r\n        this.props.updateQty(name, value);\r\n        // console.log(result);\r\n        // console.result\r\n        // console.log(this.props.breakfast.bk_beginnings);\r\n    }\r\n\r\n    openExecutiveBeginning = () => {\r\n        this.props.openExecutiveBeginning('add', null);\r\n    }\r\n\r\n    printSelectedExBreakfast = (list, index, num) => {\r\n        const names = this.props.breakfast.ex_breakfast_name;\r\n        let print = [];\r\n        let count = 0;\r\n        let total_qty = 0;\r\n\r\n        for (let key in names) {\r\n            if (list[key] !== 0){\r\n                if (typeof list[key] === 'undefined'){ return null; }\r\n                print.push(<li className=\"\" key={'_child_' + count}> { names[key] + ' : ' + list[key] } </li>);\r\n                total_qty = total_qty + list[key];\r\n                count++;\r\n            }\r\n        }\r\n\r\n        if (total_qty === 0){return null;}\r\n        \r\n        return (\r\n            <Col md={6} style={{padding: '5px'}} key={'ex_box' + num}>\r\n                <div key={index} className=\"\" style={{padding: '5px', border: '1px solid #e1e1e1'}}>\r\n                    <h3 className=\"p-0\" style={{fontSize: '1rem'}}>#{num}\r\n                        <ButtonToolbar style={{float: 'right'}}>\r\n                            <Button onClick={() => {this.editExBreakfast(index)}} className=\"edit-btn\">Edit</Button>\r\n                            <Button onClick={() => {this.removeExBreakfast(index)}} className=\"remove-btn\">Remove</Button>\r\n                        </ButtonToolbar>\r\n                    </h3>\r\n                    <ul key={index} className=\"\" style={{height: '96px', paddingLeft: '10px', listStyle: 'none'}}> {print} </ul>\r\n                </div>\r\n            </Col>\r\n        )\r\n    }\r\n\r\n    editExBreakfast = (index) => {\r\n        this.props.editExBreakfast(index);\r\n    }\r\n\r\n    removeExBreakfast = (index) => {\r\n        this.props.removeExBreakfast(index);\r\n    }\r\n\r\n    render() {\r\n        let ex_count = 0;\r\n        return(\r\n            <React.Fragment>\r\n            {\r\n                this.props.breakfast.ex_breakfast.box_open ? \r\n                <ExecutiveBeginning\r\n                    add={this.props.breakfast.ex_breakfast.add}\r\n                    id={this.props.breakfast.ex_breakfast.id}\r\n                />\r\n                :\r\n                <Card className=\"col-md-12 p-0\">\r\n\r\n                <Card.Header>\r\n                    <TopNav />\r\n                </Card.Header>\r\n\r\n                <Card.Body>\r\n                    <Card.Title>Breakfast</Card.Title>\r\n                </Card.Body>\r\n\r\n                <ListGroup variant=\"flush\">\r\n\r\n                    <ListGroup.Item className=\"menu-list\">\r\n\r\n                        <Row>\r\n                            <Col className=\"wrap_name\">\r\n                                <p className=\"name\">{this.props.breakfast.bk_beginnings.name}</p>\r\n                                <p className=\"description\">{this.props.breakfast.bk_beginnings.description}</p>\r\n                            </Col>\r\n\r\n                            <Col className=\"wrap_price\">\r\n                                <p>${this.props.breakfast.bk_beginnings.price}</p>\r\n                            </Col>\r\n\r\n                            <Col className=\"wrap_qty\">\r\n\r\n                                <NumberInput \r\n                                    onChange={this.onChangeHandler.bind(this)}\r\n                                    name=\"bk_beginnings\"\r\n                                    value={this.props.breakfast.bk_beginnings.qty}\r\n                                />\r\n\r\n                            </Col>\r\n                        </Row>\r\n\r\n                    </ListGroup.Item>\r\n\r\n                    <ListGroup.Item className=\"menu-list\">\r\n\r\n                        <Row>\r\n                            <Col className=\"wrap_name\">\r\n                                <p className=\"name\">{this.props.breakfast.ex_breakfast.name}</p>\r\n                                <p className=\"description\">{this.props.breakfast.ex_breakfast.description}</p>\r\n                            </Col>\r\n\r\n                            <Col className=\"wrap_price\">\r\n                                <p>${this.props.breakfast.ex_breakfast.price}</p>\r\n                            </Col>\r\n\r\n                            <Col className=\"name\">\r\n                                <NumberInput \r\n                                    noleft={true}\r\n                                    readonly={true}\r\n                                    onChange={this.openExecutiveBeginning.bind(this)}\r\n                                    name=\"ex_breakfast\"\r\n                                    value={this.props.breakfast.ex_breakfast.qty}\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <Row style={{marginBottom: '1rem'}}>\r\n\r\n                                {\r\n                                    this.props.breakfast.ex_breakfast.list.map((row, index) => {\r\n                                        if (row === null){return null;}\r\n                                        else {\r\n                                            ex_count++;\r\n                                            return this.printSelectedExBreakfast(row, index, ex_count)\r\n                                        }\r\n                                    })\r\n                                }\r\n                        </Row>\r\n\r\n                    </ListGroup.Item>\r\n\r\n                    <ListGroup.Item className=\"menu-list\">\r\n\r\n                        <Row>\r\n                            <Col className=\"wrap_name\">\r\n                                <p className=\"name\">{this.props.breakfast.baker_dozen.name}</p>\r\n                                <p className=\"description\">{this.props.breakfast.baker_dozen.description}</p>\r\n                            </Col>\r\n\r\n                            <Col className=\"wrap_price\">\r\n                                <p>${this.props.breakfast.baker_dozen.price}</p>\r\n                            </Col>\r\n\r\n                            <Col className=\"name\">\r\n                                <NumberInput \r\n                                    onChange={this.onChangeHandler.bind(this)}\r\n                                    name=\"baker_dozen\"\r\n                                    value={this.props.breakfast.baker_dozen.qty}\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n\r\n                    </ListGroup.Item>\r\n\r\n                    <ListGroup.Item className=\"menu-list total\">\r\n                        <Row>\r\n                            <Col>\r\n                                ${this.props.breakfast.total}\r\n                            </Col>\r\n                        </Row>\r\n                    </ListGroup.Item>\r\n\r\n                </ListGroup>\r\n\r\n                <Row>\r\n                    <Col md={12}>\r\n                        <Bottom />\r\n                    </Col>\r\n                </Row>\r\n\r\n            </Card>\r\n            }\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    breakfast: state.breakfast\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => (\r\n    {\r\n        updateQty: (name, qty) => dispatch(updateQty(name, qty)),\r\n        openExecutiveBeginning: (add, id) => dispatch(openExecutiveBeginning(add, id)),\r\n        updateCurrentNav: (index) => dispatch(updateCurrentNav(index)),\r\n        editExBreakfast: (id) => dispatch(editExBreakfast(id)),\r\n        removeExBreakfast: (id) => dispatch(removeExBreakfast(id))\r\n\r\n    }\r\n)\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Breakfast)\r\n","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Row, Col, Card, ButtonToolbar, Button, ListGroup } from 'react-bootstrap';\r\nimport NumberInput from '../common/numberInput.js';\r\n\r\nimport { addSweetTreat, closeSweetTreat, updateSweetTreats } from '../../redux/actions/byo_breakfast';\r\n\r\nclass SweetTreat extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        let list = {\r\n            bear_claws: 0,\r\n            blueberry_muffins: 0,\r\n            brownies: 0,\r\n            chocolate_croissants: 0,\r\n            cinnamon_blondies: 0,\r\n            croissants: 0,\r\n            granookies: 0,\r\n            variety: 0\r\n        };\r\n        if (this.props.add === 'edit'){ \r\n            list = this.props.sweet_treats[this.props.type].list[this.props.id]; \r\n        }\r\n\r\n        this.state = {\r\n            qty: 0,\r\n            list: list,\r\n            error: false,\r\n            error_msg: '',\r\n            max_qty: (this.props.type === 'half_dozen' ? 6 : 12)\r\n        }\r\n        // console.log(this.state);\r\n    }\r\n\r\n    onChangeInput = (name, qty) => {\r\n        this.setState({error: false})\r\n\r\n        let list = this.state.list;\r\n        // list[name] = qty;\r\n        const max_qty = this.state.max_qty;\r\n        let tmp_qty = 0;\r\n        for (let key in list){\r\n            if (key !== name){\r\n                tmp_qty = tmp_qty + list[key];    \r\n            }\r\n            else{\r\n                tmp_qty = tmp_qty + qty;\r\n            }\r\n        }\r\n        \r\n        if (tmp_qty <= max_qty){\r\n            list[name] = qty;\r\n            this.setState({\r\n                list: list,\r\n                qty: tmp_qty\r\n            })\r\n        }\r\n        else {\r\n            this.setState({\r\n                error: true,\r\n                error_msg: 'qty max error'\r\n            })\r\n            return 'error';\r\n        }\r\n    }\r\n\r\n    closeSweetTreat = () => {\r\n        this.props.closeSweetTreat();\r\n    }\r\n\r\n    addSweetTreat = () => {\r\n        if (this.validateSweetTreat()){\r\n\r\n        }\r\n        else {\r\n            this.props.addSweetTreat(this.props.type, this.state.list);\r\n        }\r\n    }\r\n\r\n    updateSweetTreat = () => {\r\n        // console.log(this.props.type);\r\n        if (this.validateSweetTreat()){\r\n\r\n        }\r\n        else {\r\n            this.props.updateSweetTreats(this.props.type, this.props.id, this.state.list);\r\n        }\r\n    }\r\n\r\n    validateSweetTreat = () => {\r\n        let error = false;        \r\n        if (this.state.qty !== this.state.max_qty){\r\n            this.setState({error: true});\r\n            error = true;\r\n        }\r\n        return error;\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <Card className=\"col-md-12 p-0\">\r\n                <Card.Header>\r\n\r\n                </Card.Header>\r\n\r\n                <Card.Body>\r\n                    <Card.Title>\r\n                        Select Your Sweet Treats\r\n                        <span style={{ textTransform: 'initial', marginLeft: '12px', fontSize: '17px', color: '#545454'}}>\r\n                        \r\n                        {\r\n                            this.props.type === 'half_dozen' ?\r\n                            'Select 6'\r\n                            :\r\n                            'Select 12'\r\n                        }\r\n                        </span>\r\n                    </Card.Title>\r\n                </Card.Body>\r\n\r\n                <Card.Body className={this.state.error ? 'su-alert' : ''}>\r\n                    <Card.Text>You selected <strong>{this.state.qty} of {this.state.max_qty}</strong> Sweet Treats.</Card.Text>\r\n                </Card.Body>\r\n\r\n                <ListGroup variant=\"flush\">\r\n\r\n                    <ListGroup.Item className=\"menu-list\">\r\n                        <Row className=\"mb-3\">\r\n\r\n                            <Col className=\"wrap_qty\">\r\n                                Bear Claws\r\n                                <NumberInput \r\n                                    readonly={true}\r\n                                    onChange={this.onChangeInput.bind(this)}\r\n                                    name=\"bear_claws\"\r\n                                    value={this.state.list.bear_claws}\r\n                                    style={{float: 'left'}}\r\n                                />\r\n                            </Col>\r\n\r\n                            <Col className=\"wrap_qty\">\r\n                                Blueberry Muffins\r\n                                <NumberInput \r\n                                    readonly={true}\r\n                                    onChange={this.onChangeInput.bind(this)}\r\n                                    name=\"blueberry_muffins\"\r\n                                    value={this.state.list.blueberry_muffins}\r\n                                    style={{float: 'left'}}\r\n                                />\r\n                            </Col>\r\n\r\n                            <Col className=\"wrap_qty\">\r\n                                Brownies\r\n                                <NumberInput \r\n                                    readonly={true}\r\n                                    onChange={this.onChangeInput.bind(this)}\r\n                                    name=\"brownies\"\r\n                                    value={this.state.list.brownies}\r\n                                    style={{float: 'left'}}\r\n                                />\r\n                            </Col>\r\n\r\n                            <Col className=\"wrap_qty\">\r\n                                Chocolate Croissants\r\n                                <NumberInput \r\n                                    readonly={true}\r\n                                    onChange={this.onChangeInput.bind(this)}\r\n                                    name=\"chocolate_croissants\"\r\n                                    value={this.state.list.chocolate_croissants}\r\n                                    style={{float: 'left'}}\r\n                                />\r\n                            </Col>\r\n\r\n                        </Row>\r\n\r\n                        <Row className=\"mb-3\">\r\n\r\n                            {/* <Col className=\"wrap_qty\">\r\n                                Cinnamon Blondies\r\n                                <NumberInput \r\n                                    readonly={true}\r\n                                    onChange={this.onChangeInput.bind(this)}\r\n                                    name=\"cinnamon_blondies\"\r\n                                    value={this.state.list.cinnamon_blondies}\r\n                                    style={{float: 'left'}}\r\n                                />\r\n                            </Col> */}\r\n\r\n                            <Col className=\"wrap_qty\">\r\n                                Croissants\r\n                                <NumberInput \r\n                                    readonly={true}\r\n                                    onChange={this.onChangeInput.bind(this)}\r\n                                    name=\"croissants\"\r\n                                    value={this.state.list.croissants}\r\n                                    style={{float: 'left'}}\r\n                                />\r\n                            </Col>\r\n\r\n                            <Col className=\"wrap_qty\">\r\n                                Granookies\r\n                                <NumberInput \r\n                                    readonly={true}\r\n                                    onChange={this.onChangeInput.bind(this)}\r\n                                    name=\"granookies\"\r\n                                    value={this.state.list.granookies}\r\n                                    style={{float: 'left'}}\r\n                                />\r\n                            </Col>\r\n\r\n                            <Col className=\"wrap_qty\">\r\n                                Magic Bar\r\n                                <NumberInput \r\n                                    readonly={true}\r\n                                    onChange={this.onChangeInput.bind(this)}\r\n                                    name=\"variety\"\r\n                                    value={this.state.list.variety}\r\n                                    style={{float: 'left'}}\r\n                                />\r\n                            </Col>\r\n\r\n                            <Col></Col>                            \r\n\r\n                        </Row>\r\n\r\n                        <Row>\r\n                            <Col>\r\n                                <ButtonToolbar className=\"mt-4\">\r\n                                    {\r\n                                        this.props.add === 'add' ?\r\n                                        <Button variant=\"primary\" size=\"md\" onClick={this.addSweetTreat.bind(this)} className=\"add-btn\">\r\n                                            Add\r\n                                        </Button>\r\n                                        :\r\n                                        <Button variant=\"primary\" size=\"md\" onClick={this.updateSweetTreat.bind(this)} className=\"add-btn\">\r\n                                            Update\r\n                                        </Button>\r\n                                    }\r\n                                    <Button variant=\"light\" size=\"md\" onClick={this.closeSweetTreat.bind(this)} className=\"cancel-btn ml-2\">\r\n                                        Cancel\r\n                                    </Button>\r\n                                </ButtonToolbar>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                    </ListGroup.Item>\r\n\r\n                </ListGroup>\r\n\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    sweet_treats: state.byo_breakfast.sweet_treats\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => (\r\n    {\r\n        addSweetTreat: (name, qty) => dispatch(addSweetTreat(name, qty)),\r\n        closeSweetTreat: () => dispatch(closeSweetTreat()),\r\n        updateSweetTreats: (type, id, list) => dispatch(updateSweetTreats(type, id, list))\r\n    }\r\n)\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(SweetTreat)","import { \r\n    UPDATE_BYO_BREAKFAST_COFFEE,\r\n    UPDATE_BYO_BREAKFAST_FRUITSALAD,\r\n    OPEN_BYO_BREAKFAST_SWEETTREATS,\r\n    CLOSE_BYO_BREAKFAST_SWEETTREATS,\r\n    ADD_BYO_BREAKFAST_SWEETTREATS,\r\n    EDIT_BYO_BREAKFAST_SWEETTREATS,\r\n    UPDATE_BYO_BREAKFAST_SWEETTREATS,\r\n    REMOVE_BYO_BREAKFAST_SWEETTREATS,\r\n    UPDATE_BYO_BREAKFAST_SANDWICH\r\n} from './actionTypes.js'\r\n\r\nexport const updateCoffee = (name, qty) => ({\r\n    type: UPDATE_BYO_BREAKFAST_COFFEE,\r\n    payload: {\r\n        name,\r\n        qty\r\n    }\r\n})\r\n\r\nexport const updateFruitSalad = (name, qty) => ({\r\n    type: UPDATE_BYO_BREAKFAST_FRUITSALAD,\r\n    payload: {\r\n        name,\r\n        qty\r\n    }\r\n})\r\n\r\nexport const openSweetTreat = (type, add, id) => ({\r\n    type: OPEN_BYO_BREAKFAST_SWEETTREATS,\r\n    payload: {\r\n        type,\r\n        add,\r\n        id\r\n    }\r\n})\r\n\r\nexport const closeSweetTreat = () => ({\r\n    type: CLOSE_BYO_BREAKFAST_SWEETTREATS\r\n})\r\n\r\nexport const addSweetTreat = (name, list) => ({\r\n    type: ADD_BYO_BREAKFAST_SWEETTREATS,\r\n    payload: {\r\n        name,\r\n        list\r\n    }\r\n})\r\n\r\nexport const editSweetTreats = (type, id) => ({\r\n    type: EDIT_BYO_BREAKFAST_SWEETTREATS,\r\n    payload: {\r\n        type,\r\n        id\r\n    }\r\n})\r\n\r\nexport const updateSweetTreats = (type, id, list) => ({\r\n    type: UPDATE_BYO_BREAKFAST_SWEETTREATS,\r\n    payload: {\r\n        type,\r\n        id,\r\n        list\r\n    }\r\n})\r\n\r\nexport const removeSweetTreats = (type, id) => ({\r\n    type: REMOVE_BYO_BREAKFAST_SWEETTREATS,\r\n    payload: {\r\n        type,\r\n        id\r\n    }\r\n})\r\n\r\nexport const updateSandwich = (name, qty) => ({\r\n    type: UPDATE_BYO_BREAKFAST_SANDWICH,\r\n    payload: {\r\n        name,\r\n        qty\r\n    }\r\n})","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Row, Col, Card, ListGroup, ButtonToolbar, Button } from 'react-bootstrap';\r\nimport NumberInput from '../common/numberInput.js';\r\nimport TopNav from '../common/TopNav.js';\r\nimport SweetTreat from './SweetTreat';\r\n\r\nimport { updateCurrentNav } from '../../redux/actions/main';\r\nimport { \r\n    updateCoffee, \r\n    updateFruitSalad, \r\n    openSweetTreat, \r\n    editSweetTreats,\r\n    removeSweetTreats,\r\n    updateSandwich \r\n} from '../../redux/actions/byo_breakfast';\r\n\r\nimport Bottom from '../bottom';\r\n\r\nconst roundTo = require('roundto');\r\n\r\nclass ByoBreakfast extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            sweet_treats: {\r\n                selected: false,\r\n                names: this.props.byo_breakfast.sweet_treats_name\r\n            }\r\n        }\r\n        this.props.updateCurrentNav(1);\r\n    }\r\n\r\n    onChangeCoffee = (name, qty) => {\r\n        this.props.updateCoffee(name, qty);\r\n    }\r\n\r\n    onChangeFruitSalad = (name, qty) => {\r\n        this.props.updateFruitSalad(name, qty);\r\n    }\r\n\r\n    openSweetTreat = (type, add, id) => {\r\n        this.props.openSweetTreat(type, true, null);\r\n    }\r\n\r\n    printSelectedSweets = (type, list, index, num) => {\r\n        const names = this.state.sweet_treats.names;\r\n        let print = [];\r\n        let count = 0;\r\n        let height = '72px';\r\n        if (type === \"half_dozen\"){height = '48px';}\r\n        \r\n        for (let key in names) {\r\n            if (list[key] !== 0){\r\n                if (typeof list[key] === 'undefined'){ return null; }\r\n                print.push(<li className=\"list-inline-item\" key={type + '_child_' + count}> { names[key] + ' : ' + list[key] } </li>);\r\n                count++;\r\n            }\r\n        }\r\n        \r\n        return (\r\n            <Col md={6} key={type + num} style={{padding: '5px'}}>\r\n                <div className=\"\" style={{padding: '5px', border: '1px solid #e1e1e1'}}>\r\n                    <h3 className=\"p-0\" style={{fontSize: '1rem'}}>#{num}\r\n                        <ButtonToolbar style={{float: 'right'}}>\r\n                            <Button onClick={() => {this.editSweetTreats(type, index)}} className=\"edit-btn\">Edit</Button>\r\n                            <Button onClick={() => {this.removeSweetTreats(type,index)}} className=\"remove-btn\">Remove</Button>\r\n                        </ButtonToolbar>\r\n                    </h3>\r\n                    <ul key={index} className=\"\" style={{paddingLeft: '10px', listStyle: 'none', height: height}}> {print} </ul>\r\n                </div>\r\n            </Col>\r\n        )\r\n    }\r\n\r\n    editSweetTreats = (type, index) => {\r\n        this.props.editSweetTreats(type, index);\r\n    }\r\n\r\n    removeSweetTreats = (type, index) => {\r\n        this.props.removeSweetTreats(type, index);\r\n    }\r\n\r\n    onChangeSandwich = (name, qty) => {\r\n        this.props.updateSandwich(name, qty);\r\n    }\r\n\r\n    render() {\r\n        let st_half_count = 0;\r\n        let st_dozen_count = 0;\r\n        return (\r\n            <React.Fragment>\r\n            {\r\n                this.props.byo_breakfast.sweet_treats.box_open ?\r\n                <SweetTreat\r\n                    type={this.props.byo_breakfast.sweet_treats.type}\r\n                    add={this.props.byo_breakfast.sweet_treats.add}\r\n                    id={this.props.byo_breakfast.sweet_treats.id}\r\n                ></SweetTreat> :\r\n                <Card className=\"col-md-12 p-0\">\r\n\r\n                    <Card.Header>\r\n                        <TopNav />\r\n                    </Card.Header>\r\n\r\n                    <Card.Body>\r\n                        <Card.Title>Build Your Own Breakfast</Card.Title>\r\n                    </Card.Body>\r\n\r\n                    <ListGroup variant=\"flush\">\r\n\r\n                        <ListGroup.Item className=\"menu-list\">\r\n\r\n                            <Row>\r\n                                <Col className=\"wrap_name\">\r\n                                    <p className=\"name\">96oz Wildcat Coffee Carafe</p>\r\n                                </Col>\r\n\r\n                                <Col className=\"wrap_price\">\r\n                                    <p>${this.props.byo_breakfast.coffee_carafe.price}</p>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row>\r\n\r\n                                <Col className=\"wrap_qty\">\r\n                                    <p>Regular</p>\r\n                                    <NumberInput \r\n                                        onChange={this.onChangeCoffee.bind(this)}\r\n                                        name=\"regular\"\r\n                                        value={this.props.byo_breakfast.coffee_carafe.list.regular}\r\n                                        style={{float:'left'}}\r\n                                    />\r\n                                </Col>\r\n\r\n                                <Col className=\"wrap_qty\">\r\n                                    <p>Decaf</p>\r\n                                    <NumberInput \r\n                                        onChange={this.onChangeCoffee.bind(this)}\r\n                                        name=\"decaf\"\r\n                                        value={this.props.byo_breakfast.coffee_carafe.list.decaf}\r\n                                        style={{float:'left'}}\r\n                                    />\r\n                                </Col>\r\n\r\n                                <Col className=\"wrap_qty\">\r\n                                    <p>Iced</p>\r\n                                    <NumberInput \r\n                                        onChange={this.onChangeCoffee.bind(this)}\r\n                                        name=\"iced\"\r\n                                        value={this.props.byo_breakfast.coffee_carafe.list.iced}\r\n                                        style={{float:'left'}}\r\n                                    />\r\n                                </Col>\r\n\r\n                                <Col className=\"wrap_qty\">\r\n                                    <p>Iced Decaf</p>\r\n                                    <NumberInput \r\n                                        onChange={this.onChangeCoffee.bind(this)}\r\n                                        name=\"iced_decaf\"\r\n                                        value={this.props.byo_breakfast.coffee_carafe.list.iced_decaf}\r\n                                        style={{float:'left'}}\r\n                                    />\r\n                                </Col>\r\n\r\n                            </Row>\r\n\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item className=\"menu-list total\">\r\n                            <Row>\r\n                                <Col>\r\n                                    ${this.props.byo_breakfast.coffee_carafe.total}\r\n                                </Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n\r\n                            <Row>\r\n                                <Col className=\"wrap_name\" style={{marginBottom: '1rem'}}>\r\n                                    <p className=\"name\">Fresh Seasonal Fruit Salad</p>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                <Col>\r\n                                    $49.99 / Serves 20\r\n                                </Col>\r\n                                <Col className=\"wrap_qty\">\r\n                                    <NumberInput \r\n                                        onChange={this.onChangeFruitSalad.bind(this)}\r\n                                        name=\"serve_20\"\r\n                                        value={this.props.byo_breakfast.fruit_salad.serve_20.qty}\r\n                                        style={{float:'left'}}\r\n                                    />\r\n                                </Col>\r\n\r\n                                <Col>\r\n                                    $29.99 / Serves 8\r\n                                </Col>\r\n                                <Col className=\"wrap_qty\">\r\n                                    <NumberInput \r\n                                        onChange={this.onChangeFruitSalad.bind(this)}\r\n                                        name=\"serve_8\"\r\n                                        value={this.props.byo_breakfast.fruit_salad.serve_8.qty}\r\n                                        style={{float:'left'}}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item className=\"menu-list total\">\r\n                            <Row>\r\n                                <Col>\r\n                                    ${this.props.byo_breakfast.fruit_salad.total}\r\n                                </Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n\r\n                    </ListGroup>\r\n\r\n                    <ListGroup variant=\"flush\">\r\n\r\n                        <ListGroup.Item className=\"menu-list\">\r\n\r\n                            <Row>\r\n                                <Col className=\"wrap_name\" style={{marginBottom: '1rem'}}>\r\n                                    <p className=\"name\">Sweet Treats</p>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row style={{marginBottom: '1rem'}}>\r\n                                <Col>\r\n                                    $8.99 - 1/2 Dozen\r\n                                </Col>\r\n                                <Col className=\"wrap_price\">\r\n                                    <NumberInput \r\n                                        noleft={true}\r\n                                        readonly={true}\r\n                                        onChange={this.openSweetTreat.bind(this)}\r\n                                        name=\"half_dozen\"\r\n                                        value={this.props.byo_breakfast.sweet_treats.half_dozen.qty}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row style={{marginBottom: '1rem'}}>\r\n                                {\r\n                                    this.props.byo_breakfast.sweet_treats.half_dozen.list.map((row, index) => {\r\n                                        if (row === null){return null;}\r\n                                        st_half_count++;\r\n                                        return this.printSelectedSweets('half_dozen', row, index, st_half_count);\r\n                                    })\r\n                                }\r\n                            </Row>\r\n\r\n                            <Row style={{marginBottom: '1rem'}}>\r\n                                <Col>\r\n                                    $16.99 - Dozen\r\n                                </Col>\r\n                                <Col className=\"wrap_price\">\r\n                                    <NumberInput \r\n                                        noleft={true}\r\n                                        readonly={true}\r\n                                        onChange={this.openSweetTreat.bind(this)}\r\n                                        name=\"dozen\"\r\n                                        value={this.props.byo_breakfast.sweet_treats.dozen.qty}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row style={{marginBottom: '1rem'}}>\r\n                                {\r\n                                    this.props.byo_breakfast.sweet_treats.dozen.list.map((row, index) => {\r\n                                        if (row === null){return null;}\r\n                                        st_dozen_count++;\r\n                                        return this.printSelectedSweets('dozen', row, index, st_dozen_count);\r\n                                    })\r\n                                }\r\n                            </Row>\r\n\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item className=\"menu-list total\">\r\n                            <Row>\r\n                                <Col>\r\n                                    ${roundTo(this.props.byo_breakfast.sweet_treats.total,2)}\r\n                                </Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item className=\"menu-list\">\r\n\r\n                            <Row>\r\n                                <Col className=\"wrap_name\" style={{marginBottom: '1rem'}}>\r\n                                    <p className=\"name\">Savory Breakfast Sandwiches</p>\r\n                                    <p className=\"description mb-0\">sold by the 1/2 Dozen</p>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row style={{marginBottom: '.5rem'}}>\r\n\r\n                                <Col className=\"wrap_qty\">\r\n                                    ${this.props.byo_breakfast.sandwiches.list.zucchini.price} - {this.props.byo_breakfast.sandwiches.list.zucchini.name}\r\n                                    <NumberInput \r\n                                        onChange={this.onChangeSandwich.bind(this)}\r\n                                        name=\"zucchini\"\r\n                                        value={this.props.byo_breakfast.sandwiches.list.zucchini.qty}\r\n                                    />\r\n                                </Col>\r\n\r\n                            </Row>\r\n\r\n                            <Row style={{marginBottom: '.5rem'}}>\r\n\r\n                                <Col className=\"wrap_qty\">\r\n                                    ${this.props.byo_breakfast.sandwiches.list.sausage_bagel.price} - {this.props.byo_breakfast.sandwiches.list.sausage_bagel.name}\r\n                                    <NumberInput \r\n                                        onChange={this.onChangeSandwich.bind(this)}\r\n                                        name=\"sausage_bagel\"\r\n                                        value={this.props.byo_breakfast.sandwiches.list.sausage_bagel.qty}\r\n                                    />\r\n                                </Col>\r\n\r\n                            </Row>\r\n\r\n                            <Row style={{marginBottom: '.5rem'}}>\r\n\r\n                                <Col className=\"wrap_qty\">\r\n                                    ${this.props.byo_breakfast.sandwiches.list.pepper_bagel.price} - {this.props.byo_breakfast.sandwiches.list.pepper_bagel.name}\r\n                                    <NumberInput \r\n                                        onChange={this.onChangeSandwich.bind(this)}\r\n                                        name=\"pepper_bagel\"\r\n                                        value={this.props.byo_breakfast.sandwiches.list.pepper_bagel.qty}\r\n                                    />\r\n                                </Col>\r\n\r\n                            </Row>\r\n\r\n                            <Row style={{marginBottom: '.5rem'}}>\r\n\r\n                                <Col className=\"wrap_qty\">\r\n                                    ${this.props.byo_breakfast.sandwiches.list.red_pepper_bagel.price} - {this.props.byo_breakfast.sandwiches.list.red_pepper_bagel.name}\r\n                                    <NumberInput \r\n                                        onChange={this.onChangeSandwich.bind(this)}\r\n                                        name=\"red_pepper_bagel\"\r\n                                        value={this.props.byo_breakfast.sandwiches.list.red_pepper_bagel.qty}\r\n                                    />\r\n                                </Col>\r\n\r\n                            </Row>\r\n\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item className=\"menu-list total\">\r\n                            <Row>\r\n                                <Col>\r\n                                    ${roundTo(this.props.byo_breakfast.sandwiches.total,2)}\r\n                                </Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n\r\n                    </ListGroup>\r\n\r\n                    <Row>\r\n                        <Col md={12}>\r\n                            <Bottom />\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </Card>\r\n            }\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    byo_breakfast: state.byo_breakfast\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => (\r\n    {\r\n        updateCoffee: (name, qty) => dispatch(updateCoffee(name, qty)),\r\n        updateFruitSalad: (name, qty) => dispatch(updateFruitSalad(name, qty)),\r\n        openSweetTreat: (type, add, id) => dispatch(openSweetTreat(type, add, id)),\r\n        editSweetTreats: (type, id) => dispatch(editSweetTreats(type, id)),\r\n        removeSweetTreats: (type, id) => dispatch(removeSweetTreats(type, id)),\r\n        updateSandwich: (name, qty) => dispatch(updateSandwich(name, qty)),\r\n        updateCurrentNav: (index) => dispatch(updateCurrentNav(index))\r\n    }\r\n)\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(ByoBreakfast)","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Row, Col, Card, ListGroup, ButtonToolbar, Button, Form } from 'react-bootstrap';\r\nimport NumberInput from '../common/numberInput.js';\r\n\r\nimport { openLunchBox, addLunchBox, updateLunchBox, closeLunchBox } from '../../redux/actions/lunch';\r\n\r\nimport './lunchbox.css';\r\n\r\nclass LunchBox extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        // Create ref objects\r\n        this.first = React.createRef();\r\n\r\n        // let list = [];\r\n\r\n        if (this.props.lunch.actionType === 'add'){\r\n            // Initialize\r\n            this.state = {\r\n                choice_one: {\r\n                    list: {turk_philly_chess: 0,italian_job: 0,chicken_club: 0,bruschetta_panini: 0,hali_caesar: 0,kale_crunch: 0},\r\n                    qty: 0,\r\n                    error: false\r\n                },\r\n                choice_two: {\r\n                    list: {baked_lays: 0,pb_jalapeno: 0,pb_original: 0,sun_chips: 0,bbq_chips: 0, fruit: 0},\r\n                    qty: 0,\r\n                    error: false\r\n                },\r\n                choice_three: {\r\n                    list: {coke: 0,diet_coke: 0,dr_pepper: 0,diet_dr_pepper: 0,sprite: 0,dasani: 0,cherry_coke: 0,coke_zero: 0},\r\n                    qty: 0,\r\n                    error: false\r\n                },\r\n                extra: {\r\n                    list: [\r\n                        {one: 'None', two: 'None', three: 'None'},\r\n                        {one: 'None', two: 'None', three: 'None'}\r\n                    ],\r\n                    total: 0\r\n                },\r\n                error: false\r\n            }\r\n        }\r\n        else {\r\n            this.state = {\r\n                choice_one: {\r\n                    list: this.props.lunch.list[this.props.lunch.id].choice_one.list,\r\n                    qty: this.props.lunch.list[this.props.lunch.id].choice_one.qty,\r\n                    error: false\r\n                },\r\n                choice_two: {\r\n                    list: this.props.lunch.list[this.props.lunch.id].choice_two.list,\r\n                    qty: this.props.lunch.list[this.props.lunch.id].choice_two.qty,\r\n                    error: false\r\n                },\r\n                choice_three: {\r\n                    list: this.props.lunch.list[this.props.lunch.id].choice_three.list,\r\n                    qty: this.props.lunch.list[this.props.lunch.id].choice_three.qty,\r\n                    error: false\r\n                },\r\n                extra: this.props.lunch.list[this.props.lunch.id].extra,\r\n                error: false\r\n            }\r\n        }\r\n    }\r\n\r\n    checkQty = (list, name, qty) => {\r\n        let tmp_qty = 0;\r\n        for (let key in list){\r\n            if (key !== name){\r\n                tmp_qty = tmp_qty + list[key];    \r\n            }\r\n            else{\r\n                tmp_qty = tmp_qty + qty;\r\n            }\r\n        }\r\n\r\n        return tmp_qty;\r\n    }\r\n\r\n    updateInput = (name, qty, type, total_qty) => {\r\n        this.setState({\r\n            error: false,\r\n            [type]: {\r\n                ...this.state[type],\r\n                list: {\r\n                    ...this.state[type].list,\r\n                    [name]: qty\r\n                },\r\n                qty: total_qty\r\n            }\r\n        })\r\n    }\r\n\r\n    onChangeFirst = (name, qty) => {\r\n        const tmp_qty = this.checkQty(this.state.choice_one.list, name, qty);\r\n        if (tmp_qty > 8) {\r\n            return 'error';\r\n        }\r\n        else {\r\n            this.setState({choice_one:{...this.state.choice_one, error: false}}, function() {\r\n                this.updateInput(name, qty, 'choice_one', tmp_qty);\r\n            });\r\n        }\r\n    }\r\n\r\n    onChangeSecond = (name, qty) => {\r\n        const tmp_qty = this.checkQty(this.state.choice_two.list, name, qty);\r\n        if (tmp_qty > 8) {\r\n            return 'error';\r\n        }\r\n        else {\r\n            this.setState({choice_two:{...this.state.choice_two, error: false}}, function() {\r\n                this.updateInput(name, qty, 'choice_two', tmp_qty);\r\n            });\r\n        }\r\n    }\r\n\r\n    onChangeThree = (name, qty) => {\r\n        const tmp_qty = this.checkQty(this.state.choice_three.list, name, qty);\r\n        if (tmp_qty > 8) {\r\n            return 'error';\r\n        }\r\n        else {\r\n            this.setState({choice_three:{...this.state.choice_three, error: false}}, function() {\r\n                this.updateInput(name, qty, 'choice_three', tmp_qty);\r\n            });\r\n        }\r\n    }\r\n\r\n    addLunchBox = () => {\r\n        // const qty = this.state.choice_one.qty + this.state.choice_two.qty + this.state.choice_three.qty;\r\n\r\n        if (!this.validateForm()) {\r\n            const list = {\r\n                choice_one: this.state.choice_one,\r\n                choice_two: this.state.choice_two,\r\n                choice_three: this.state.choice_three,\r\n                extra: this.state.extra\r\n            }\r\n            this.props.addLunchBox(list);\r\n        }\r\n    }\r\n\r\n    updateLunchBox = () => {\r\n        if (!this.validateForm()){\r\n            const list = {\r\n                choice_one: this.state.choice_one,\r\n                choice_two: this.state.choice_two,\r\n                choice_three: this.state.choice_three,\r\n                extra: this.state.extra\r\n            }\r\n            this.props.updateLunchBox(this.props.lunch.id, list);\r\n        }\r\n    }\r\n\r\n    closeLunchBox = () => {\r\n        this.props.closeLunchBox();\r\n    }\r\n\r\n    validateForm = () => {\r\n        let error = false;\r\n        if (this.state.choice_one.qty !== 8) {\r\n            this.setState({choice_one:{...this.state.choice_one, error: true}}, function() {\r\n                window.scrollTo(0,400);\r\n            });\r\n            error = true;\r\n        }\r\n        else if (this.state.choice_two.qty !== 8) {\r\n            this.setState({choice_two:{...this.state.choice_two, error: true}}, function() {\r\n                window.scrollTo(0,900);\r\n            });\r\n            error = true;\r\n        }\r\n        else if (this.state.choice_three.qty !== 8) {\r\n            this.setState({choice_three:{...this.state.choice_three, error: true}}, function() {\r\n                window.scrollTo(0,1000);\r\n            });\r\n            error = true;\r\n        }\r\n        return error;\r\n    }\r\n\r\n    printSandwiches = (key) => {\r\n        return (\r\n            <Col className=\"wrap_name\" md={6}>\r\n                <p className=\"name\">\r\n                    {this.props.lunch.products.sandwiches[key].name}\r\n                </p>\r\n                <p className=\"description\">\r\n                    {this.props.lunch.products.sandwiches[key].description}\r\n                </p>\r\n                <NumberInput \r\n                    readonly={true}\r\n                    onChange={this.onChangeFirst.bind(this)}\r\n                    name={key}\r\n                    value={this.state.choice_one.list[key]}\r\n                    style={{float: 'right'}}\r\n                />\r\n            </Col>\r\n        );\r\n    }\r\n\r\n    printSalads = (key) => {\r\n        return (\r\n            <Col className=\"wrap_name\" md={6}>\r\n                <p className=\"name\">\r\n                    {this.props.lunch.products.salads[key].name}\r\n                </p>\r\n                <p className=\"description\">\r\n                    {this.props.lunch.products.salads[key].description}\r\n                </p>\r\n                <NumberInput \r\n                    readonly={true}\r\n                    onChange={this.onChangeFirst.bind(this)}\r\n                    name={key}\r\n                    value={this.state.choice_one.list[key]}\r\n                    style={{float: 'right'}}\r\n                />\r\n            </Col>\r\n        );\r\n    }\r\n\r\n    printChips = (key) => {\r\n        return (\r\n            <Col className=\"wrap_name\" md={6}>\r\n                <p className=\"name\" style={{display: 'inline', lineHeight: '32px'}}>\r\n                    {this.props.lunch.products.chips[key]}\r\n                </p>\r\n                <NumberInput \r\n                    readonly={true}\r\n                    onChange={this.onChangeSecond.bind(this)}\r\n                    name={key}\r\n                    value={this.state.choice_two.list[key]}\r\n                    style={{float: 'right'}}\r\n                />\r\n            </Col>\r\n        );\r\n    }\r\n\r\n    onChangeExtra = (id,order,event) => {\r\n        let list = this.state.extra.list;\r\n        list[id][order] = event.target.value;\r\n        this.setState({\r\n            extra: {\r\n                ...this.state.extra,\r\n                list: list\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Card className=\"col-md-12 p-0\">\r\n\r\n                <Card.Header>\r\n                    <p>\"Build Your Own\" Lunch Box</p>\r\n                    <p>Serves 8</p>\r\n                    <ul>\r\n                        <li>Select your salads or sandwiches</li>\r\n                        <li>Select your side</li>\r\n                        <li>Select your bottled beverage</li>\r\n                    </ul>\r\n                </Card.Header>\r\n\r\n                <Card.Body className={this.state.choice_one.error ? 'su-alert' : ''}>\r\n                    <h5 style={{fontWeight: '600', color: '#f48222'}}>1. Select your salads or sandwiches <span style={{color: 'rgb(84, 84, 84)'}}>- {this.state.choice_one.qty} of 8</span></h5>\r\n                    \r\n                    <ListGroup variant=\"flush\">\r\n                        <ListGroup.Item className=\"menu-list\" style={{borderWidth: '0px'}}>\r\n\r\n                            <p style={{fontWeight: '600', textDecoration: 'underline', fontSize: '17px'}}>Sandwiches</p>\r\n\r\n                            <Row className=\"pb-3\" style={{borderBottom: '1px solid #e1e1e1'}}>\r\n                                {this.printSandwiches('turk_philly_chess')}\r\n                                {this.printSandwiches('italian_job')}\r\n                            </Row>\r\n\r\n                            <Row className=\"pt-2 pb-3\" style={{borderBottom: '1px solid #e1e1e1'}}>\r\n                                {this.printSandwiches('chicken_club')}\r\n                                {this.printSandwiches('bruschetta_panini')}\r\n                            </Row>\r\n\r\n                            <p className=\"mt-3\"  style={{fontWeight: '600', textDecoration: 'underline', fontSize: '17px'}}>Salads</p>\r\n\r\n                            <Row className=\"pt-2 pb-3\" style={{borderBottom: '1px solid #e1e1e1'}}>\r\n                                {this.printSalads('hali_caesar')}\r\n                                {this.printSalads('kale_crunch')}\r\n                            </Row>\r\n\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Card.Body>\r\n\r\n                <Card.Body className={this.state.choice_two.error ? 'su-alert' : ''}>\r\n                    <h5 style={{fontWeight: '600', color: '#f48222'}}>2. Select your side <span style={{color: 'rgb(84, 84, 84)'}}>- {this.state.choice_two.qty} of 8</span></h5>\r\n                    <ListGroup variant=\"flush\">\r\n                        <ListGroup.Item className=\"menu-list\" style={{borderWidth: '0px'}}>\r\n\r\n                            <Row className=\"pt-2 pb-2\" style={{borderBottom: '1px solid #e1e1e1'}}>\r\n                                {this.printChips('baked_lays')}\r\n                                {this.printChips('pb_jalapeno')}\r\n                            </Row>\r\n\r\n                            <Row className=\"pt-2 pb-2\" style={{borderBottom: '1px solid #e1e1e1'}}>\r\n                                {this.printChips('pb_original')}\r\n                                {this.printChips('sun_chips')}\r\n                            </Row>\r\n                            <Row className=\"pt-2 pb-2\" style={{borderBottom: '1px solid #e1e1e1'}}>\r\n                                {this.printChips('bbq_chips')}\r\n                                <Col className=\"wrap_name\" md={6}>\r\n                                    <p className=\"name\" style={{display: 'inline', lineHeight: '32px'}}>\r\n                                        Fruit\r\n                                    </p>\r\n                                    <NumberInput \r\n                                        readonly={true}\r\n                                        onChange={this.onChangeSecond.bind(this)}\r\n                                        name=\"fruit\"\r\n                                        value={this.state.choice_two.list.fruit}\r\n                                        style={{float: 'right'}}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Card.Body>\r\n\r\n                <Card.Body className={this.state.choice_three.error ? 'su-alert' : ''}>\r\n                    <h5 style={{fontWeight: '600', color: '#f48222'}}>3. Select your bottled beverage <span style={{color: 'rgb(84, 84, 84)'}}>- {this.state.choice_three.qty} of 8</span></h5>\r\n\r\n                    <ListGroup variant=\"flush\">\r\n                        <ListGroup.Item className=\"menu-list\" style={{borderWidth: '0px'}}>\r\n\r\n                            <Row className=\"pb-3\" style={{borderBottom: '1px solid #e1e1e1'}}>\r\n                                {\r\n                                    ['coke', 'diet_coke', 'dr_pepper', 'diet_dr_pepper'].map((key, index) => {\r\n                                        return (\r\n                                            <Col className=\"wrap_name\" md={3} key={'lunchbox_soda'+index}>\r\n                                                <p className=\"name\">\r\n                                                    {this.props.lunch.products.beverages[key]}\r\n                                                </p>\r\n                                                <NumberInput \r\n                                                    readonly={true}\r\n                                                    onChange={this.onChangeThree.bind(this)}\r\n                                                    name={key}\r\n                                                    value={this.state.choice_three.list[key]}\r\n                                                    style={{float: 'left'}}\r\n                                                />\r\n                                            </Col>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </Row>\r\n\r\n                            <Row className=\"pb-3\" style={{borderBottom: '1px solid #e1e1e1'}}>\r\n                                {\r\n                                    ['sprite', 'dasani', 'cherry_coke', 'coke_zero'].map((key, index) => {\r\n                                        return (\r\n                                            <Col className=\"wrap_name\" md={3} key={'print_soda_'+index}>\r\n                                                <p className=\"name\">\r\n                                                    {this.props.lunch.products.beverages[key]}\r\n                                                </p>\r\n                                                <NumberInput \r\n                                                    readonly={true}\r\n                                                    onChange={this.onChangeThree.bind(this)}\r\n                                                    name={key}\r\n                                                    value={this.state.choice_three.list[key]}\r\n                                                    style={{float: 'left'}}\r\n                                                />\r\n                                            </Col>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </Row>\r\n\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Card.Body>\r\n\r\n                <Card.Body>\r\n                    <h5 style={{fontWeight: '600', color: '#f48222'}}>- Add an Extra Sandwich or Salad</h5>\r\n                    <ListGroup variant=\"flush\">\r\n                        <ListGroup.Item className=\"menu-list\" style={{borderWidth: '0px'}}>\r\n                            \r\n                            <Form.Row>\r\n                            <h6 style={{width: '100%'}}>Extra #1</h6>\r\n                            <Form.Group as={Col} md=\"5\" className=\"pl-0 pr-0\">\r\n                                <Form.Label>Sandwich or Salad - $5.00</Form.Label>\r\n                                <Form.Control as=\"select\" style={{width: '400px'}} value={this.state.extra.list[0].one} onChange={this.onChangeExtra.bind(this,0,'one')}>\r\n                                    <option>None</option>\r\n                                    <option>Peppered Turkey Philly Cheese (1/2 Sandwich)</option>\r\n                                    <option>The Italian Job (1/2 Sandwich)</option>\r\n                                    <option>Chicken Club</option>\r\n                                    <option>Bruschetta Panini</option>\r\n                                    <option>Hali Caesar</option>\r\n                                    <option>Kale Crunch</option>\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                            {\r\n                                this.state.extra.list[0].one === 'None' ?\r\n                                null\r\n                                :\r\n                                <React.Fragment>\r\n                                    <Form.Group as={Col} md=\"3\" className=\"pl-0 pr-0\">\r\n                                        <Form.Label>Chip - $.89</Form.Label>\r\n                                        <Form.Control as=\"select\" style={{width: '200px'}} value={this.state.extra.list[0].two} onChange={this.onChangeExtra.bind(this,0,'two')}>\r\n                                            <option>None</option>\r\n                                            <option>Baked Lays</option>\r\n                                            <option>Poore Brother's - Jalapeno</option>\r\n                                            <option>Poore Brother's - Original</option>\r\n                                            <option>Sun Chips</option>\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n                                    <Form.Group as={Col} md=\"4\" className=\"pl-0 pr-0\">\r\n                                        <Form.Label>All Sodas - $1.99, Dasani Water - $1.69</Form.Label>\r\n                                        <Form.Control as=\"select\" style={{width: '200px'}} value={this.state.extra.list[0].three} onChange={this.onChangeExtra.bind(this,0,'three')}>\r\n                                            <option>None</option>\r\n                                            <option>Coke</option>\r\n                                            <option>Diet Coke</option>\r\n                                            <option>Dr.Pepper</option>\r\n                                            <option>Diet Dr.Pepper</option>\r\n                                            <option>Sprite</option>\r\n                                            <option>Dasani Water</option>\r\n                                            <option>Cherry Coke</option>\r\n                                            <option>Coke Zero</option>\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n                                </React.Fragment>\r\n                            }\r\n                            </Form.Row>\r\n                        </ListGroup.Item>\r\n                        {\r\n                            this.state.extra.list[0].one === 'None' ?\r\n                            null\r\n                            :\r\n                            <ListGroup.Item className=\"menu-list\" style={{borderWidth: '0px'}}>\r\n                                \r\n                                <Form.Row>\r\n                                <h6 style={{width: '100%'}}>Extra #2</h6>\r\n                                <Form.Group as={Col} md=\"5\" className=\"pl-0 pr-0\">\r\n                                    <Form.Label>Sandwich or Salad - $5.00</Form.Label>\r\n                                    <Form.Control as=\"select\" style={{width: '400px'}} value={this.state.extra.list[1].one} onChange={this.onChangeExtra.bind(this,1,'one')}>\r\n                                        <option>None</option>\r\n                                        <option>Peppered Turkey Philly Cheese (1/2 Sandwich)</option>\r\n                                        <option>The Italian Job (1/2 Sandwich)</option>\r\n                                        <option>Chicken Club</option>\r\n                                        <option>Bruschetta Panini</option>\r\n                                        <option>Hali Caesar</option>\r\n                                        <option>Kale Crunch</option>\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                                {\r\n                                    this.state.extra.list[1].one === 'None' ?\r\n                                    null\r\n                                    :\r\n                                    <React.Fragment>\r\n                                        <Form.Group as={Col} md=\"3\" className=\"pl-0 pr-0\">\r\n                                            <Form.Label>Chip - $.89</Form.Label>\r\n                                            <Form.Control as=\"select\" style={{width: '200px'}} value={this.state.extra.list[1].two} onChange={this.onChangeExtra.bind(this,1,'two')}>\r\n                                                <option>None</option>\r\n                                                <option>Baked Lays</option>\r\n                                                <option>Poore Brother's - Jalapeno</option>\r\n                                                <option>Poore Brother's - Original</option>\r\n                                                <option>Sun Chips</option>\r\n                                            </Form.Control>\r\n                                        </Form.Group>\r\n                                        <Form.Group as={Col} md=\"4\" className=\"pl-0 pr-0\">\r\n                                            <Form.Label>All Sodas - $1.99, Dasani Water - $1.69</Form.Label>\r\n                                            <Form.Control as=\"select\" style={{width: '200px'}} value={this.state.extra.list[1].three} onChange={this.onChangeExtra.bind(this,1,'three')}>\r\n                                                <option>None</option>\r\n                                                <option>Coke</option>\r\n                                                <option>Diet Coke</option>\r\n                                                <option>Dr.Pepper</option>\r\n                                                <option>Diet Dr.Pepper</option>\r\n                                                <option>Sprite</option>\r\n                                                <option>Dasani Water</option>\r\n                                                <option>Cherry Coke</option>\r\n                                                <option>Coke Zero</option>\r\n                                            </Form.Control>\r\n                                        </Form.Group>\r\n                                    </React.Fragment>\r\n                                }\r\n                                </Form.Row>\r\n                            </ListGroup.Item>\r\n                        }\r\n                    </ListGroup>\r\n                </Card.Body>\r\n\r\n                <Row>\r\n                    <Col>\r\n                        <ButtonToolbar className=\"mt-3\">\r\n                            {\r\n                                this.props.lunch.actionType === 'add' ?\r\n                                <Button variant=\"primary\" size=\"md\" onClick={this.addLunchBox.bind(this)} className=\"add-btn\">\r\n                                    Add\r\n                                </Button>\r\n                                :\r\n                                <Button variant=\"primary\" size=\"md\" onClick={this.updateLunchBox.bind(this)} className=\"add-btn\">\r\n                                    Update\r\n                                </Button>\r\n                            }\r\n                            <Button variant=\"light\" size=\"md\" onClick={this.closeLunchBox.bind(this)} className=\"cancel-btn ml-2\">\r\n                                Cancel\r\n                            </Button>\r\n                        </ButtonToolbar>\r\n                    </Col>\r\n                </Row>\r\n\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    lunch: state.lunch\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => (\r\n    {\r\n        openLunchBox: () => dispatch(openLunchBox()),\r\n        addLunchBox: (list) => dispatch(addLunchBox(list)),\r\n        updateLunchBox: (id, list) => dispatch(updateLunchBox(id, list)),\r\n        closeLunchBox: () => dispatch(closeLunchBox())\r\n    }\r\n)\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(LunchBox)","import { \r\n    OPEN_LUNCHBOX,\r\n    ADD_LUNCHBOX,\r\n    OPEN_LUNCHBOX_EDITOR,\r\n    UPDATE_LUNCHBOX,\r\n    REMOVE_LUNCHBOX,\r\n    CLOSE_LUNCHBOX \r\n} from './actionTypes.js'\r\n\r\nexport const openLunchBox = () => ({\r\n    type: OPEN_LUNCHBOX\r\n})\r\nexport const addLunchBox = (list) => ({\r\n    type: ADD_LUNCHBOX,\r\n    payload: {\r\n        list\r\n    }\r\n})\r\n\r\nexport const openLunchBoxEditor = (index) => ({\r\n    type: OPEN_LUNCHBOX_EDITOR,\r\n    payload: {\r\n        index\r\n    }\r\n})\r\n\r\nexport const updateLunchBox = (index, list) => ({\r\n    type: UPDATE_LUNCHBOX,\r\n    payload: {\r\n        index,\r\n        list\r\n    }\r\n})\r\n\r\nexport const removeLunchBox = (index) => ({\r\n    type: REMOVE_LUNCHBOX,\r\n    payload: {\r\n        index\r\n    }\r\n})\r\n\r\nexport const closeLunchBox = (name, qty) => ({\r\n    type: CLOSE_LUNCHBOX\r\n})","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Row, Col, Card, ListGroup, ButtonToolbar, Button } from 'react-bootstrap';\r\nimport NumberInput from '../common/numberInput.js';\r\nimport TopNav from '../common/TopNav.js';\r\n\r\nimport { updateCurrentNav } from '../../redux/actions/main';\r\nimport { openLunchBox, removeLunchBox, openLunchBoxEditor } from '../../redux/actions/lunch';\r\n\r\nimport LunchBox from './LunchBox';\r\nimport Bottom from '../bottom';\r\n\r\nclass Lunch extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.props.updateCurrentNav(2);\r\n    }\r\n\r\n    openLunchBox = () => {\r\n        this.props.openLunchBox();\r\n    }\r\n\r\n    openLunchBoxEditor = (id) => {\r\n        this.props.openLunchBoxEditor(id);\r\n    }\r\n\r\n    removeLunchBox = (id) => {\r\n        this.props.removeLunchBox(id);\r\n    }\r\n\r\n    printItems = (list) => {\r\n        let print = [];\r\n        for (let key in list){\r\n            if (list[key] !== 0){\r\n                print.push(<li>{this.props.lunch.names[key].name + ' : ' + list[key]}</li>);     \r\n            }                           \r\n        }\r\n        return (<ul style={{paddingLeft: '20px'}}>{print}</ul>);\r\n    }\r\n\r\n    printExtra = (extras) => {\r\n        let print = [];\r\n        for (let i = 0; i < 2; i++) {\r\n            const extra = extras.list[i];\r\n            if (extra.one !== 'None') {\r\n                const one = <span>{extra.one}</span>;\r\n                let two = null;\r\n                let three = null;\r\n                if (extra.two !== 'None'){ two = <span>, {extra.two}</span> }\r\n                if (extra.three !== 'None'){ three = <span>, {extra.three}</span> }\r\n                print.push(\r\n                    <div key={'extra' + i} style={{fontSize: '0.9rem'}}>Extra #{i+1} : {one} {two} {three}</div>\r\n                )   \r\n\r\n            }            \r\n        }\r\n\r\n        if (print.length === 0){return null;}\r\n        else {\r\n            return (\r\n                <React.Fragment>\r\n                    <hr style={{border: '1px solid #e1e1e1'}} />\r\n                    <h6 style={{width: '100%', fontWeight: '600'}}>Extra Sandwiches or Salads</h6>\r\n                    {print}\r\n                </React.Fragment>\r\n            );\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let count = 0;\r\n        return (\r\n            <React.Fragment>\r\n            {\r\n                this.props.lunch.open_box ?\r\n                <LunchBox></LunchBox>\r\n                :\r\n                <Card className=\"col-md-12 p-0\">\r\n\r\n                    <Card.Header>\r\n                        <TopNav />\r\n                    </Card.Header>\r\n\r\n                    <Card.Body>\r\n                        <Card.Title>Lunch</Card.Title>\r\n                    </Card.Body>\r\n\r\n                    <ListGroup variant=\"flush\">\r\n\r\n                        <ListGroup.Item className=\"menu-list\">\r\n\r\n                            <Row>\r\n                                <Col className=\"wrap_name\">\r\n                                    <p style={{fontWeight: '600'}}>\"Build Your Own\" Lunch Box - $39.99</p>\r\n                                    <p>\r\n                                        Serves 8<br />\r\n                                        Select your salads or sandwiches<br />\r\n                                        Select yor side (chips or fruit)<br />\r\n                                        Select your bottled beverage\r\n                                    </p>\r\n                                </Col>\r\n                                <Col>\r\n                                    <NumberInput \r\n                                        noleft={true}\r\n                                        readonly={true}\r\n                                        onChange={this.openLunchBox.bind(this)}\r\n                                        name=\"lunch\"\r\n                                        value={this.props.lunch.qty}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                        \r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item className=\"menu-list\">\r\n\r\n                            <Row>\r\n                                \r\n                                {\r\n                                    this.props.lunch.list.map((boxes, pindex) => {\r\n                                        if (boxes.length !== 0) {\r\n                                            count++;\r\n                                            return (\r\n                                            <Col md={6} className=\"wrap-lunch-box\">\r\n                                                <div key={'list-'+pindex} style={{padding: '10px', border: '1px solid #dadada'}}>\r\n                                                    <h3 className=\"p-0\" style={{fontSize: '1rem'}}>Box #{count}\r\n                                                        <ButtonToolbar style={{float: 'right'}}>\r\n                                                            <Button onClick={() => {this.openLunchBoxEditor(pindex)}} className=\"sweet-edit-btn edit-btn\">Edit</Button>\r\n                                                            <Button onClick={() => {this.removeLunchBox(pindex)}} className=\"sweet-remove-btn remove-btn\">Remove</Button>\r\n                                                        </ButtonToolbar>\r\n                                                    </h3>\r\n                                                    <div>\r\n                                                        <ul className=\"list-inline\">\r\n                                                            <li className=\"list-inline-item\"> \r\n                                                                {this.printItems(boxes.choice_one.list)}\r\n                                                            </li>\r\n                                                            <li className=\"list-inline-item\">\r\n                                                                {this.printItems(boxes.choice_two.list)} \r\n                                                            </li>\r\n                                                            <li className=\"list-inline-item\">\r\n                                                                {this.printItems(boxes.choice_three.list)} \r\n                                                            </li>\r\n                                                            <li className=\"list-inline-item\">\r\n                                                                {this.printExtra(boxes.extra)} \r\n                                                            </li>\r\n                                                        </ul>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </Col>\r\n                                            );\r\n                                        }\r\n                                        else {\r\n                                            return null;\r\n                                        }\r\n                                    }) \r\n                                }\r\n                            </Row>\r\n\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item className=\"menu-list total\">\r\n                            <Row>\r\n                                <Col>\r\n                                    ${this.props.lunch.total}\r\n                                </Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n\r\n                    </ListGroup>\r\n\r\n                    <Row>\r\n                        <Col md={12}>\r\n                            <Bottom />\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </Card>\r\n            }\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    lunch: state.lunch\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => (\r\n    {\r\n        openLunchBox: () => dispatch(openLunchBox()),\r\n        removeLunchBox: (index) => dispatch(removeLunchBox(index)),\r\n        updateCurrentNav: (index) => dispatch(updateCurrentNav(index)),\r\n        openLunchBoxEditor: (id) => dispatch(openLunchBoxEditor(id))\r\n    }\r\n)\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Lunch)","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Row, Col, Card, ListGroup } from 'react-bootstrap';\r\nimport NumberInput from '../common/numberInput.js';\r\nimport TopNav from '../common/TopNav.js';\r\n\r\nimport { updateCurrentNav } from '../../redux/actions/main';\r\nimport { updateQty } from '../../redux/actions/officeParty';\r\n\r\nimport Bottom from '../bottom';\r\n\r\nclass OfficeParty extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            total: this.props.op.total\r\n        }\r\n\r\n        this.props.updateCurrentNav(3);\r\n    }\r\n\r\n    onChangeHandler = (name, value) => {\r\n        this.props.updateQty(name, value);\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <Card className=\"col-md-12 p-0\">\r\n\r\n                <Card.Header>\r\n                    <TopNav />\r\n                </Card.Header>\r\n\r\n                <Card.Body>\r\n                    <Card.Title>Office Party</Card.Title>\r\n                </Card.Body>\r\n\r\n                <ListGroup variant=\"flush\">\r\n\r\n                    <ListGroup.Item className=\"menu-list\">\r\n\r\n                        <Row>\r\n                            <Col className=\"wrap_name\">\r\n                                <p>{this.props.op.serve_10.name}</p>\r\n                                <p>{this.props.op.serve_10.description}</p>\r\n                            </Col>\r\n\r\n                            <Col className=\"wrap_price\">\r\n                                <p>${this.props.op.serve_10.price}</p>\r\n                            </Col>\r\n\r\n                            <Col className=\"wrap_qty\">\r\n\r\n                                <NumberInput \r\n                                    onChange={this.onChangeHandler.bind(this)}\r\n                                    name=\"serve_10\"\r\n                                    value={this.props.op.serve_10.qty}\r\n                                />\r\n\r\n                            </Col>\r\n                        </Row>\r\n\r\n                    </ListGroup.Item>\r\n\r\n                    <ListGroup.Item className=\"menu-list total\">\r\n                        <Row>\r\n                            <Col>\r\n                                ${this.props.op.total}\r\n                            </Col>\r\n                        </Row>\r\n                    </ListGroup.Item>\r\n\r\n                </ListGroup>\r\n\r\n                <Row>\r\n                    <Col md={12}>\r\n                        <Bottom />\r\n                    </Col>\r\n                </Row>\r\n\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    op: state.office_party\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => (\r\n    {\r\n        updateQty: (name, qty) => dispatch(updateQty(name, qty)),\r\n        updateCurrentNav: (index) => dispatch(updateCurrentNav(index))\r\n    }\r\n)\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(OfficeParty)\r\n","import { UPDATE_OFFICEPARTY_QTY } from './actionTypes.js'\r\n\r\nexport const updateQty = (name, qty) => ({\r\n    type: UPDATE_OFFICEPARTY_QTY,\r\n    payload: {\r\n        name,\r\n        qty\r\n    }\r\n})","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Row, Col, Card, ListGroup } from 'react-bootstrap';\r\nimport NumberInput from '../common/numberInput.js';\r\nimport TopNav from '../common/TopNav.js';\r\n\r\nimport { updateCurrentNav } from '../../redux/actions/main';\r\nimport { \r\n    updateBeverage,\r\n} from '../../redux/actions/beverage';\r\n\r\nimport Bottom from '../bottom';\r\n\r\n// const roundTo = require('roundto');\r\n\r\nclass Beverage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.props.updateCurrentNav(4);\r\n    }\r\n\r\n    onChangeBeverage = (name, qty) => {\r\n        this.props.updateBeverage(name, qty);\r\n    }\r\n\r\n    printDrink = (name) => {\r\n        return (\r\n            <Col className=\"wrap_qty\">\r\n                <p style={{marginBottom: '5px', fontWeight: '600'}}>{this.props.beverage.list[name].name} - {this.props.beverage.list[name].price}</p>\r\n                <NumberInput \r\n                    onChange={this.onChangeBeverage.bind(this)}\r\n                    name={name}\r\n                    value={this.props.beverage.list[name].qty}\r\n                    style={{float:'left'}}\r\n                />\r\n            </Col>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Card className=\"col-md-12 p-0\">\r\n\r\n                <Card.Header>\r\n                    <TopNav />\r\n                </Card.Header>\r\n\r\n                <Card.Body>\r\n                    <Card.Title>Beverage <span style={{fontSize: '17px', textTransform: 'lowercase', color: '#4c4c4c'}}>(20oz)</span></Card.Title>\r\n                </Card.Body>\r\n\r\n                <ListGroup variant=\"flush\">\r\n\r\n                    <ListGroup.Item className=\"menu-list\">\r\n\r\n                        <Row>\r\n\r\n                            {this.printDrink('coke')}\r\n                            {this.printDrink('diet_coke')}\r\n                            {this.printDrink('dr_pepper')}\r\n                            {this.printDrink('diet_dr_pepper')}\r\n\r\n                        </Row>\r\n\r\n                        <Row className=\"mt-3\">\r\n\r\n                            {this.printDrink('sprite')}\r\n                            {this.printDrink('dasani')}\r\n                            {this.printDrink('cherry_coke')}\r\n                            {this.printDrink('coke_zero')}\r\n\r\n                        </Row>\r\n\r\n                    </ListGroup.Item>\r\n\r\n                    <ListGroup.Item className=\"menu-list total\">\r\n                        <Row>\r\n                            <Col>\r\n                                ${this.props.beverage.total}\r\n                            </Col>\r\n                        </Row>\r\n                    </ListGroup.Item>\r\n\r\n                </ListGroup>\r\n\r\n                <Row>\r\n                    <Col md={12}>\r\n                        <Bottom />\r\n                    </Col>\r\n                </Row>\r\n\r\n            </Card>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    beverage: state.beverage\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => (\r\n    {\r\n        updateBeverage: (name, qty) => dispatch(updateBeverage(name, qty)),\r\n        updateCurrentNav: (index) => dispatch(updateCurrentNav(index))\r\n    }\r\n)\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Beverage)","import { \r\n    UPDATE_BEVERAGE_QTY\r\n} from './actionTypes.js'\r\n\r\nexport const updateBeverage = (name, qty) => ({\r\n    type: UPDATE_BEVERAGE_QTY,\r\n    payload: {\r\n        name,\r\n        qty\r\n    }\r\n})","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { Row, Col, ListGroup } from 'react-bootstrap';\r\n\r\nclass Breakfast extends React.Component {    \r\n\r\n    render() {\r\n        let ex_count = 0;\r\n        return (\r\n\r\n            <ListGroup.Item style={{display: (this.props.state.total === 0 ? 'none' : null)}}>\r\n                <h3>Breakfast</h3>\r\n                <ul className=\"summary-list-group\">\r\n                    <li className=\"summary-list header\">\r\n                        <Row>\r\n                            <Col className=\"item\" md={5}>Item</Col>\r\n                            <Col className=\"qty\">Quantity</Col>\r\n                            <Col className=\"price\">Price</Col>\r\n                            <Col className=\"total\">Total</Col>\r\n                        </Row>\r\n                    </li>\r\n                    <li className=\"summary-list\" style={{display: (this.props.state.bk_beginnings.qty === 0 ? 'none' : null)}}>\r\n                        <Row>\r\n                            <Col className=\"item\" md={5}>{this.props.state.bk_beginnings.name}</Col>\r\n                            <Col className=\"qty\">{this.props.state.bk_beginnings.qty}</Col>\r\n                            <Col className=\"price\">${this.props.state.bk_beginnings.price}</Col>\r\n                            <Col className=\"total\">${this.props.state.bk_beginnings.total}</Col>\r\n                        </Row>\r\n                    </li>\r\n                    <li className=\"summary-list\" style={{display: (this.props.state.ex_breakfast.qty === 0 ? 'none' : null)}}>\r\n                        <Row>\r\n                            <Col className=\"item\" md={5}>{this.props.state.ex_breakfast.name}</Col>\r\n                            <Col className=\"qty\">{this.props.state.ex_breakfast.qty}</Col>\r\n                            <Col className=\"price\">${this.props.state.ex_breakfast.price}</Col>\r\n                            <Col className=\"total\">${this.props.state.ex_breakfast.total}</Col>\r\n                        </Row>\r\n                        <Row className=\"item sub\">\r\n                            {\r\n                                this.props.state.ex_breakfast.list.map((list, index) => {\r\n                                    const names = this.props.state.ex_breakfast_name;\r\n                                    let print = [];\r\n                                    let count = 0;\r\n                                    let total_qty = 0;\r\n\r\n                                    if (list === null){return null;}\r\n                                    ex_count++;\r\n                                    \r\n                                    for (let key in names) {\r\n                                        if (list[key] !== 0){\r\n                                            if (typeof list[key] === 'undefined'){ return null; }\r\n                                            print.push(<li className=\"\" key={'_child_' + count}> { names[key] + ' : ' + list[key] } </li>);\r\n                                            total_qty = total_qty + list[key];\r\n                                            count++;\r\n                                        }\r\n                                    }\r\n                                    \r\n                                    return (\r\n                                        <Col key={'ex_box' + index} md={6} style={{padding: '5px'}}>\r\n                                            <div style={{padding: '5px', border: '1px solid #e1e1e1'}}>\r\n                                                <h3 className=\"p-0\" style={{fontSize: '1rem'}}>#{ex_count}</h3>\r\n                                                <ul key={index} className=\"list-inline\" style={{height: '96px', paddingLeft: '10px', listStyle: 'none'}}> \r\n                                                    {print} \r\n                                                </ul>\r\n                                            </div>\r\n                                        </Col>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </Row>\r\n                    </li>\r\n                    <li className=\"summary-list\" style={{display: (this.props.state.baker_dozen.qty === 0 ? 'none' : null)}}>\r\n                        <Row>\r\n                            <Col className=\"item\" md={5}>{this.props.state.baker_dozen.name}</Col>\r\n                            <Col className=\"qty\">{this.props.state.baker_dozen.qty}</Col>\r\n                            <Col className=\"price\">${this.props.state.baker_dozen.price}</Col>\r\n                            <Col className=\"total\">${this.props.state.baker_dozen.total}</Col>\r\n                        </Row>\r\n                    </li>\r\n                    <li className=\"summary-list footer\">\r\n                        <Row>\r\n                            <Col className=\"item\" md={5}></Col>\r\n                            <Col className=\"qty\">{this.props.state.bk_beginnings.qty+this.props.state.ex_breakfast.qty+this.props.state.baker_dozen.qty}</Col>\r\n                            <Col className=\"price\"></Col>\r\n                            <Col className=\"total\">${this.props.state.total}</Col>\r\n                        </Row>\r\n                    </li>\r\n                </ul>\r\n            </ListGroup.Item>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    state: state.breakfast\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps\r\n)(Breakfast)","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { Row, Col, ListGroup } from 'react-bootstrap';\r\n\r\nconst roundTo = require('roundto');\r\n\r\nclass ByoBreakfast extends React.Component {\r\n\r\n    render() {\r\n        let half_count = 0;\r\n        let dozen_count = 0;\r\n\r\n        return (\r\n            <ListGroup.Item style={{display: (this.props.state.total === 0 ? 'none' : null)}}>\r\n                <h3>Build Your Own Breakfast</h3>\r\n                <ul className=\"summary-list-group\">\r\n                    <li className=\"summary-list header\">\r\n                        <Row>\r\n                            <Col className=\"item\" md={5}>Item</Col>\r\n                            <Col className=\"qty\">Quantity</Col>\r\n                            <Col className=\"price\">Price</Col>\r\n                            <Col className=\"total\">Total</Col>\r\n                        </Row>\r\n                    </li>\r\n\r\n                    <li className=\"summary-list\" style={{display: (this.props.state.coffee_carafe.total === 0 ? 'none' : null)}}>\r\n                        <Row>\r\n                            <Col>96oz Wildcat Coffee Carafe</Col>\r\n                        </Row>\r\n                        <Row style={{display: (this.props.state.coffee_carafe.list.regular === 0 ? 'none' : null)}}>\r\n                            <Col className=\"item sub\" md={5}> - Regular</Col>\r\n                            <Col className=\"qty\">{this.props.state.coffee_carafe.list.regular}</Col>\r\n                            <Col className=\"price\">${this.props.state.coffee_carafe.price}</Col>\r\n                            <Col className=\"total\">${roundTo(this.props.state.coffee_carafe.price*this.props.state.coffee_carafe.list.regular,2)}</Col>\r\n                        </Row>\r\n                        <Row style={{display: (this.props.state.coffee_carafe.list.decaf === 0 ? 'none' : null)}}>\r\n                            <Col className=\"item sub\" md={5}> - Decaf</Col>\r\n                            <Col className=\"qty\">{this.props.state.coffee_carafe.list.decaf}</Col>\r\n                            <Col className=\"price\">${this.props.state.coffee_carafe.price}</Col>\r\n                            <Col className=\"total\">${roundTo(this.props.state.coffee_carafe.price*this.props.state.coffee_carafe.list.decaf,2)}</Col>\r\n                        </Row>\r\n                        <Row style={{display: (this.props.state.coffee_carafe.list.iced === 0 ? 'none' : null)}}>\r\n                            <Col className=\"item sub\" md={5}> - Iced</Col>\r\n                            <Col className=\"qty\">{this.props.state.coffee_carafe.list.iced}</Col>\r\n                            <Col className=\"price\">${this.props.state.coffee_carafe.price}</Col>\r\n                            <Col className=\"total\">${roundTo(this.props.state.coffee_carafe.price*this.props.state.coffee_carafe.list.iced,2)}</Col>\r\n                        </Row>\r\n                        <Row style={{display: (this.props.state.coffee_carafe.list.iced_decaf === 0 ? 'none' : null)}}>\r\n                            <Col className=\"item sub\" md={5}> - Iced Decaf</Col>\r\n                            <Col className=\"qty\">{this.props.state.coffee_carafe.list.iced_decaf}</Col>\r\n                            <Col className=\"price\">${this.props.state.coffee_carafe.price}</Col>\r\n                            <Col className=\"total\">${roundTo(this.props.state.coffee_carafe.price*this.props.state.coffee_carafe.list.iced_decaf,2)}</Col>\r\n                        </Row>\r\n                    </li>\r\n\r\n                    <li className=\"summary-list\" style={{display: (this.props.state.fruit_salad.total === 0 ? 'none' : null)}}>\r\n                        <Row>\r\n                            <Col>Fresh Seasonal Fruit Salad</Col>\r\n                        </Row>\r\n                        <Row style={{display: (this.props.state.fruit_salad.serve_20.qty === 0 ? 'none' : null)}}>\r\n                            <Col className=\"item sub\" md={5}> - Serve 20</Col>\r\n                            <Col className=\"qty\">{this.props.state.fruit_salad.serve_20.qty}</Col>\r\n                            <Col className=\"price\">${this.props.state.fruit_salad.serve_20.price}</Col>\r\n                            <Col className=\"total\">${roundTo(this.props.state.fruit_salad.serve_20.qty*this.props.state.fruit_salad.serve_20.price,2)}</Col>\r\n                        </Row>\r\n                        <Row style={{display: (this.props.state.fruit_salad.serve_8.qty === 0 ? 'none' : null)}}>\r\n                            <Col className=\"item sub\" md={5}> - Serve 8</Col>\r\n                            <Col className=\"qty\">{this.props.state.fruit_salad.serve_8.qty}</Col>\r\n                            <Col className=\"price\">${this.props.state.fruit_salad.serve_8.price}</Col>\r\n                            <Col className=\"total\">${roundTo(this.props.state.fruit_salad.serve_8.qty*this.props.state.fruit_salad.serve_8.price,2)}</Col>\r\n                        </Row>\r\n                    </li>\r\n\r\n                    <li className=\"summary-list\" style={{display: (this.props.state.sweet_treats.total === 0 ? 'none' : null)}}>\r\n\r\n                        <Row>\r\n                            <Col>Sweet Treats</Col>\r\n                        </Row>\r\n\r\n                        <Row style={{display: (this.props.state.sweet_treats.half_dozen.qty === 0 ? 'none' : null)}}>\r\n                            <Col className=\"item sub\" md={5}> - 1/2 Dozen</Col>\r\n                            <Col className=\"qty\">{this.props.state.sweet_treats.half_dozen.qty}</Col>\r\n                            <Col className=\"price\">${this.props.state.sweet_treats.half_dozen.price}</Col>\r\n                            <Col className=\"total\">${roundTo(this.props.state.sweet_treats.half_dozen.qty*this.props.state.sweet_treats.half_dozen.price,2)}</Col>\r\n                        </Row>\r\n\r\n                        <Row className=\"item sub\">\r\n                            {\r\n                                this.props.state.sweet_treats.half_dozen.list.map((list, index) => {\r\n                                    const names = this.props.state.sweet_treats_name;\r\n                                    let print = [];\r\n                                    let count = 0;\r\n\r\n                                    if (list === null){return null;}\r\n                                    half_count++;\r\n                                    \r\n                                    for (let key in names) {\r\n                                        if (list[key] !== 0){\r\n                                            if (typeof list[key] === 'undefined'){ return null; }\r\n                                            print.push(<li className=\"list-inline-item\" key={'half_dozen_child_' + count}> { names[key] + ' : ' + list[key] } </li>);\r\n                                            count++;\r\n                                        }\r\n                                    }\r\n                                    \r\n                                    return (\r\n                                        <Col key={'half_dozen' + index} md={6} style={{padding: '5px'}}>\r\n                                            <div style={{padding: '5px', border: '1px solid #e1e1e1'}}>\r\n                                                <h3 className=\"p-0\" style={{fontSize: '1rem'}}>#{half_count}</h3>\r\n                                                <ul key={index} className=\"\" style={{height: '48px', paddingLeft: '10px', listStyle: 'none'}}> {print} </ul>\r\n                                            </div>\r\n                                        </Col>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </Row>\r\n\r\n                        <Row style={{display: (this.props.state.sweet_treats.dozen.qty === 0 ? 'none' : null)}}>\r\n                            <Col className=\"item sub\" md={5}> - Dozen</Col>\r\n                            <Col className=\"qty\">{this.props.state.sweet_treats.dozen.qty}</Col>\r\n                            <Col className=\"price\">${this.props.state.sweet_treats.dozen.price}</Col>\r\n                            <Col className=\"total\">${roundTo(this.props.state.sweet_treats.dozen.qty*this.props.state.sweet_treats.dozen.price,2)}</Col>\r\n                        </Row>\r\n\r\n                        <Row className=\"item sub\">\r\n                            {\r\n                                this.props.state.sweet_treats.dozen.list.map((list, index) => {\r\n                                    const names = this.props.state.sweet_treats_name;\r\n                                    let print = [];\r\n                                    let count = 0;\r\n\r\n                                    if (list === null){return null;}\r\n                                    dozen_count++;\r\n                                    \r\n                                    for (let key in names) {\r\n                                        if (list[key] !== 0){\r\n                                            if (typeof list[key] === 'undefined'){ return null; }\r\n                                            print.push(<li className=\"list-inline-item\" key={'dozen_child_' + count}> { names[key] + ' : ' + list[key] } </li>);\r\n                                            count++;\r\n                                        }\r\n                                    }\r\n                                    \r\n                                    return (\r\n                                        <Col key={'dozen' + index} md={6} style={{padding: '5px'}}>\r\n                                            <div style={{padding: '5px', border: '1px solid #e1e1e1'}}>\r\n                                                <h3 className=\"p-0\" style={{fontSize: '1rem'}}>#{dozen_count}</h3>\r\n                                                <ul key={index} className=\"list-inline\" style={{height: '72px', paddingLeft: '10px', listStyle: 'none'}}> \r\n                                                    {print} \r\n                                                </ul>\r\n                                            </div>\r\n                                        </Col>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </Row>\r\n                    </li>\r\n\r\n                    <li className=\"summary-list\" style={{display: (this.props.state.sandwiches.total === 0 ? 'none' : null)}}>\r\n                        <Row>\r\n                            <Col>Savory Breakfast Sandwiches</Col>\r\n                        </Row>\r\n                        <Row style={{display: (this.props.state.sandwiches.list.zucchini.qty === 0 ? 'none' : null)}}>\r\n                            <Col className=\"item sub\" md={5}> - {this.props.state.sandwiches.list.zucchini.name}</Col>\r\n                            <Col className=\"qty\">{this.props.state.sandwiches.list.zucchini.qty}</Col>\r\n                            <Col className=\"price\">${this.props.state.sandwiches.list.zucchini.price}</Col>\r\n                            <Col className=\"total\">${roundTo(this.props.state.sandwiches.list.zucchini.qty*this.props.state.sandwiches.list.zucchini.price,2)}</Col>\r\n                        </Row>\r\n                        <Row style={{display: (this.props.state.sandwiches.list.sausage_bagel.qty === 0 ? 'none' : null)}}>\r\n                            <Col className=\"item sub\" md={5}> - {this.props.state.sandwiches.list.sausage_bagel.name}</Col>\r\n                            <Col className=\"qty\">{this.props.state.sandwiches.list.sausage_bagel.qty}</Col>\r\n                            <Col className=\"price\">${this.props.state.sandwiches.list.sausage_bagel.price}</Col>\r\n                            <Col className=\"total\">${roundTo(this.props.state.sandwiches.list.sausage_bagel.qty*this.props.state.sandwiches.list.sausage_bagel.price,2)}</Col>\r\n                        </Row>\r\n                        <Row style={{display: (this.props.state.sandwiches.list.pepper_bagel.qty === 0 ? 'none' : null)}}>\r\n                            <Col className=\"item sub\" md={5}> - {this.props.state.sandwiches.list.pepper_bagel.name}</Col>\r\n                            <Col className=\"qty\">{this.props.state.sandwiches.list.pepper_bagel.qty}</Col>\r\n                            <Col className=\"price\">${this.props.state.sandwiches.list.pepper_bagel.price}</Col>\r\n                            <Col className=\"total\">${roundTo(this.props.state.sandwiches.list.pepper_bagel.qty*this.props.state.sandwiches.list.pepper_bagel.price,2)}</Col>\r\n                        </Row>\r\n                        <Row style={{display: (this.props.state.sandwiches.list.red_pepper_bagel.qty === 0 ? 'none' : null)}}>\r\n                            <Col className=\"item sub\" md={5}> - {this.props.state.sandwiches.list.red_pepper_bagel.name}</Col>\r\n                            <Col className=\"qty\">{this.props.state.sandwiches.list.red_pepper_bagel.qty}</Col>\r\n                            <Col className=\"price\">${this.props.state.sandwiches.list.red_pepper_bagel.price}</Col>\r\n                            <Col className=\"total\">${roundTo(this.props.state.sandwiches.list.red_pepper_bagel.qty*this.props.state.sandwiches.list.red_pepper_bagel.price,2)}</Col>\r\n                        </Row>\r\n                    </li>\r\n\r\n                    <li className=\"summary-list footer\">\r\n                        <Row>\r\n                            <Col className=\"item\" md={5}></Col>\r\n                            <Col className=\"qty\"></Col>\r\n                            <Col className=\"price\"></Col>\r\n                            <Col className=\"total\">${this.props.state.total}</Col>\r\n                        </Row>\r\n                    </li>\r\n                </ul>\r\n            </ListGroup.Item>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    state: state.byo_breakfast\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps\r\n)(ByoBreakfast)","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { Row, Col, ListGroup } from 'react-bootstrap';\r\n\r\nconst roundTo = require('roundto');\r\n\r\nclass Lunch extends React.Component {\r\n\r\n    printItems = (list) => {\r\n        let print = [];\r\n        for (let key in list){\r\n            if (list[key] !== 0){\r\n                print.push(<li>{this.props.state.names[key].name + ' : ' + list[key]}</li>);     \r\n            }                           \r\n        }\r\n        return (<ul style={{paddingLeft: '20px'}}>{print}</ul>);\r\n    }\r\n\r\n    printExtra = (extras) => {\r\n        let print = [];\r\n        for (let i = 0; i < 2; i++) {\r\n            const extra = extras.list[i];\r\n            if (extra.one !== 'None') {\r\n                const one = <span>{extra.one}</span>;\r\n                let two = null;\r\n                let three = null;\r\n                if (extra.two !== 'None'){ two = <span>, {extra.two}</span> }\r\n                if (extra.three !== 'None'){ three = <span>, {extra.three}</span> }\r\n                print.push(\r\n                    <div key={'extra' + i} style={{fontSize: '0.9rem'}}>Extra #{i+1} : {one} {two} {three}</div>\r\n                )   \r\n\r\n            }            \r\n        }\r\n\r\n        if (print.length === 0){return null;}\r\n        else {\r\n            return (\r\n                <React.Fragment>\r\n                    <hr style={{border: '1px solid #e1e1e1'}} />\r\n                    <h7 style={{width: '100%', fontWeight: '600'}}>Extra Sandwiches or Salads</h7>\r\n                    {print}\r\n                </React.Fragment>\r\n            );\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let count = 0;\r\n        return (\r\n            <ListGroup.Item style={{display: (this.props.state.total === 0 ? 'none' : null)}}>\r\n                <h3>Lunch</h3>\r\n                <ul className=\"summary-list-group\">\r\n                    <li className=\"summary-list header\">\r\n                        <Row>\r\n                            <Col className=\"item\" md={5}>Item</Col>\r\n                            <Col className=\"qty\">Quantity</Col>\r\n                            <Col className=\"price\">Price</Col>\r\n                            <Col className=\"total\">Total</Col>\r\n                        </Row>\r\n                    </li>\r\n\r\n                    <li className=\"summary-list\">\r\n\r\n                        <Row>\r\n                            <Col>Lunch</Col>\r\n                        </Row>\r\n\r\n\r\n                        <Row>\r\n                            <Col className=\"item sub\" md={5}> - \"Build Your Own\" Lunch Box</Col>\r\n                            <Col className=\"qty\">{this.props.state.qty}</Col>\r\n                            <Col className=\"price\">${this.props.state.price}</Col>\r\n                            <Col className=\"total\">${roundTo(this.props.state.qty*this.props.state.price,2)}</Col>\r\n                        </Row>\r\n\r\n                        <Row style={{paddingLeft: '80px', paddingTop: '10px', paddingBottom: '10px'}} className=\"wrap-lunch-box\">\r\n                            {\r\n                                this.props.state.list.map((boxes, pindex) => {\r\n                                    if (boxes.length !== 0) {\r\n                                        count++;\r\n                                        return (\r\n                                        <Col md={6} className=\"wrap-lunch-box\">\r\n                                            <div key={'list-'+pindex} style={{padding: '10px', border: '1px solid #dadada'}}>\r\n                                                <h3 className=\"p-0\" style={{fontSize: '1rem'}}>Box #{count}</h3>\r\n                                                <div>\r\n                                                    <ul className=\"list-inline\">\r\n                                                        <li className=\"list-inline-item\"> \r\n                                                            {this.printItems(boxes.choice_one.list)}\r\n                                                        </li>\r\n                                                        <li className=\"list-inline-item\">\r\n                                                            {this.printItems(boxes.choice_two.list)} \r\n                                                        </li>\r\n                                                        <li className=\"list-inline-item\">\r\n                                                            {this.printItems(boxes.choice_three.list)} \r\n                                                        </li>\r\n                                                        <li className=\"list-inline-item\">\r\n                                                            {this.printExtra(boxes.extra)} \r\n                                                        </li>\r\n                                                    </ul>\r\n                                                </div>\r\n                                            </div>\r\n                                        </Col>\r\n                                        );\r\n                                    }\r\n                                    else {\r\n                                        return null;\r\n                                    }\r\n                                }) \r\n                            }\r\n                        </Row>\r\n                    </li>\r\n\r\n                    <li className=\"summary-list footer\">\r\n                        <Row>\r\n                            <Col className=\"item\" md={5}></Col>\r\n                            <Col className=\"qty\"></Col>\r\n                            <Col className=\"price\"></Col>\r\n                            <Col className=\"total\">${this.props.state.total}</Col>\r\n                        </Row>\r\n                    </li>\r\n                </ul>\r\n            </ListGroup.Item>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    state: state.lunch\r\n});\r\n\r\n\r\nexport default connect(\r\n    mapStateToProps\r\n)(Lunch)","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { Row, Col, ListGroup } from 'react-bootstrap';\r\n\r\nclass OfficeParty extends React.Component {\r\n    \r\n    render() {\r\n        return (\r\n            <ListGroup.Item style={{display: (this.props.state.total === 0 ? 'none' : null)}}>\r\n                <h3>Office Party</h3>\r\n                <ul className=\"summary-list-group\">\r\n                    <li className=\"summary-list header\">\r\n                        <Row>\r\n                            <Col className=\"item\" md={5}>Item</Col>\r\n                            <Col className=\"qty\">Quantity</Col>\r\n                            <Col className=\"price\">Price</Col>\r\n                            <Col className=\"total\">Total</Col>\r\n                        </Row>\r\n                    </li>\r\n                    <li className=\"summary-list\">\r\n                        <Row>\r\n                            <Col className=\"item\" md={5}>{this.props.state.serve_10.name}</Col>\r\n                            <Col className=\"qty\">{this.props.state.serve_10.qty}</Col>\r\n                            <Col className=\"price\">${this.props.state.serve_10.price}</Col>\r\n                            <Col className=\"total\">${this.props.state.serve_10.total}</Col>\r\n                        </Row>\r\n                    </li>\r\n                    <li className=\"summary-list footer\">\r\n                        <Row>\r\n                            <Col className=\"item\" md={5}></Col>\r\n                            <Col className=\"qty\">{this.props.state.serve_10.qty}</Col>\r\n                            <Col className=\"price\"></Col>\r\n                            <Col className=\"total\">${this.props.state.total}</Col>\r\n                        </Row>\r\n                    </li>\r\n                </ul>\r\n            </ListGroup.Item>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    state: state.office_party\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps\r\n)(OfficeParty)","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { Row, Col, ListGroup } from 'react-bootstrap';\r\n\r\nconst roundTo = require('roundto');\r\n\r\nclass Beverage extends React.Component {  \r\n    \r\n    printItem = (name) => {\r\n        return (\r\n            <li className=\"summary-list\" style={{display: (this.props.state.list[name].qty === 0 ? 'none' : null)}}>\r\n                <Row>\r\n                    <Col className=\"item\" md={5}>{this.props.state.list[name].name}</Col>\r\n                    <Col className=\"qty\">{this.props.state.list[name].qty}</Col>\r\n                    <Col className=\"price\">${this.props.state.list[name].price}</Col>\r\n                    <Col className=\"total\">${roundTo(this.props.state.list[name].qty*this.props.state.list[name].price, 2)}</Col>\r\n                </Row>\r\n            </li>\r\n        )\r\n    }\r\n\r\n    totalQty = () => {\r\n        let qty = 0;\r\n        const list = this.props.state.list;\r\n        for (let key in list){\r\n            const tmp_qty = list[key].qty;\r\n            qty = qty + tmp_qty;\r\n        }\r\n        \r\n        return qty;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <ListGroup.Item style={{display: (this.props.state.total === 0 ? 'none' : null)}}>\r\n                <h3>Beverage</h3>\r\n                <ul className=\"summary-list-group\">\r\n                    <li className=\"summary-list header\">\r\n                        <Row>\r\n                            <Col className=\"item\" md={5}>Item</Col>\r\n                            <Col className=\"qty\">Quantity</Col>\r\n                            <Col className=\"price\">Price</Col>\r\n                            <Col className=\"total\">Total</Col>\r\n                        </Row>\r\n                    </li>\r\n                    {this.printItem('coke')}\r\n                    {this.printItem('diet_coke')}\r\n                    {this.printItem('dr_pepper')}\r\n                    {this.printItem('diet_dr_pepper')}\r\n                    {this.printItem('sprite')}\r\n                    {this.printItem('dasani')}\r\n                    {this.printItem('cherry_coke')}\r\n                    {this.printItem('coke_zero')}\r\n                    <li className=\"summary-list footer\">\r\n                        <Row>\r\n                            <Col className=\"item\" md={5}></Col>\r\n                            <Col className=\"qty\">{this.totalQty()}</Col>\r\n                            <Col className=\"price\"></Col>\r\n                            <Col className=\"total\">${this.props.state.total}</Col>\r\n                        </Row>\r\n                    </li>\r\n                </ul>\r\n            </ListGroup.Item>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    state: state.beverage\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps\r\n)(Beverage)","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from 'react-router-dom';\r\nimport { updateCurrentNav, calculateSubtotal, submitOrder, getDeliveryMethod, handleTextarea } from '../../redux/actions/main';\r\nimport { Row, Col, Card, ListGroup, ButtonToolbar, Button, Spinner } from 'react-bootstrap';\r\n\r\nimport TopNav from '../common/TopNav.js';\r\n// import Bottom from '../bottom';\r\n\r\nimport Breakfast from './Breakfast';\r\nimport ByoBreakfast from './ByoBreakfast';\r\nimport Lunch from './Lunch';\r\nimport OfficeParty from './OfficeParty';\r\nimport Beverage from './Beverage';\r\n\r\nimport './style.css';\r\n\r\nconst roundTo = require('roundto');\r\n\r\nclass Summary extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.props.updateCurrentNav(5);\r\n        \r\n        const subtotal = roundTo(\r\n            this.props.globalState.breakfast.total +\r\n            this.props.globalState.byo_breakfast.total +\r\n            this.props.globalState.lunch.total +\r\n            this.props.globalState.office_party.total +\r\n            this.props.globalState.beverage.total,\r\n            2);\r\n        const tax = roundTo(subtotal*0.061, 2);\r\n        const total = roundTo(subtotal + tax, 2);\r\n\r\n        this.props.calculateSubtotal(subtotal, tax, total);\r\n\r\n        this.state = {\r\n            subtotal: subtotal,\r\n            tax: tax,\r\n            total: total,\r\n            additional_comment: ''\r\n        }\r\n        // console.log(this.props.globalState.byo_breakfast);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.getDeliveryMethod();\r\n    }\r\n\r\n    handleTextarea = (event) => {\r\n        this.setState({\r\n            additional_comment: event.target.value\r\n        });\r\n        // this.props.handleTextarea(event.target.value);\r\n    }\r\n    \r\n    submitOrder = () => {\r\n        const data = {\r\n            breakfast: this.props.globalState.breakfast,\r\n            byo_breakfast: this.props.globalState.byo_breakfast,\r\n            lunch: this.props.globalState.lunch,\r\n            office_party: this.props.globalState.office_party,\r\n            beverage: this.props.globalState.beverage,\r\n            subtotal: this.state.subtotal,\r\n            tax: this.state.tax,\r\n            total: this.state.total,\r\n            additional_comment: this.state.additional_comment\r\n        };\r\n        this.props.submitOrder(data);\r\n        this.props.history.push('/Confirmation');\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n            {\r\n                this.props.globalState.main.delivery_method === null ?\r\n                <div style={{textAlign: 'center', padding: '100px 0px'}}>\r\n                    <Spinner animation=\"grow\" style={{backgroundColor: '#f58220'}} />\r\n                </div>\r\n                :\r\n                <React.Fragment>\r\n                    {\r\n                        this.props.globalState.main.error.msg === '' ?\r\n                        <Card className=\"wrap-summary\">\r\n                \r\n                            <Card.Header>\r\n                                <TopNav />\r\n                            </Card.Header>\r\n\r\n                            <Card.Body>\r\n                                <Card.Title>Order Summary</Card.Title>\r\n                            </Card.Body>\r\n\r\n                            {\r\n                                this.state.total === 0 ?\r\n                                <Card.Body className=\"text-center\" style={{marginBottom: '20px'}}>\r\n                                    <Card.Text md={12} style={{paddingTop: '15px', paddingBottom: '15px'}}>\r\n                                        <strong>There are no items in your shopping cart.</strong>\r\n                                    </Card.Text>\r\n                                </Card.Body>\r\n                                :\r\n                                <React.Fragment>\r\n\r\n                                    <ListGroup>\r\n                                        <Breakfast />\r\n                                        <ByoBreakfast />\r\n                                        <Lunch />\r\n                                        <OfficeParty />\r\n                                        <Beverage />\r\n                                    </ListGroup>\r\n\r\n                                    <Row className=\"wrap-total\" style={{marginTop: '20px'}}>\r\n                                        <Col className=\"total-names\">Subtotal : </Col><Col className=\"total-numbers\"><span className=\"number\">${this.state.subtotal}</span></Col>\r\n                                    </Row>\r\n\r\n                                    <Row className=\"wrap-total\">\r\n                                        <Col className=\"total-names\">Tax : </Col><Col className=\"total-numbers\"><span className=\"number\">${this.state.tax}</span></Col>\r\n                                    </Row>\r\n\r\n                                    {\r\n                                        this.props.globalState.main.delivery_method === 'Delivery' ?\r\n                                        <Row className=\"wrap-total\">\r\n                                            <Col className=\"total-names\">Delivery Fee : </Col><Col className=\"total-numbers\"><span className=\"number\">$10</span></Col>\r\n                                        </Row>\r\n                                        :\r\n                                        null\r\n                                    }\r\n\r\n                                    <Row className=\"wrap-total\">\r\n                                        <Col className=\"total-names\">Total : </Col><Col className=\"total-numbers\">\r\n                                            <span className=\"number\">\r\n                                                ${\r\n                                                    this.props.globalState.main.delivery_method === 'Delivery' ?\r\n                                                    roundTo(this.state.total+10,2)\r\n                                                    :\r\n                                                    this.state.total\r\n                                                }\r\n                                            </span>\r\n                                        </Col>\r\n                                    </Row>\r\n\r\n                                    <ListGroup style={{marginBottom: '40px'}}>\r\n                                        <ListGroup.Item>\r\n                                            <h3 style={{paddingLeft: '0px'}}>Additional Notes (Please provide any dietary restrictions/allergies, etc)</h3>\r\n                                            <textarea style={{width: '100%'}} rows=\"5\" onChange={this.handleTextarea} value={this.state.additional_comment} />\r\n                                        </ListGroup.Item>\r\n                                    </ListGroup>\r\n\r\n                                </React.Fragment>\r\n                            }\r\n\r\n                            <Row>\r\n                                <Col md={6}>\r\n                                    <ButtonToolbar>\r\n                                        <Link\r\n                                        className={\"btn add-btn\"}\r\n                                        style={{marginRight: '10px', width:'200px'}}\r\n                                        to=\"/breakfast\"\r\n                                        >\r\n                                        {\r\n                                            this.state.total === 0 ?\r\n                                            'Add Food'\r\n                                            :\r\n                                            'Add More Food'\r\n                                        }\r\n                                        </Link>\r\n                                    </ButtonToolbar>\r\n                                </Col>\r\n                                {\r\n                                    this.state.total === 0 ?\r\n                                    null\r\n                                    :\r\n                                    <Col md={6}>\r\n                                        <ButtonToolbar>\r\n                                            <Button \r\n                                            className={\"btn add-btn\"}\r\n                                            style={{marginLeft: 'auto', width:'200px'}} onClick={this.submitOrder}>Submit Order</Button>\r\n                                        </ButtonToolbar>\r\n                                    </Col>\r\n                                }\r\n                            </Row>\r\n\r\n                        </Card>\r\n                        :\r\n                        <Card>\r\n                            <Card.Body style={{borderBottomWidth: '0px'}}>\r\n                                <Card.Text>\r\n                                    Your session has expired. Please try again later.\r\n                                </Card.Text>\r\n                            </Card.Body>\r\n\r\n                            <Row>\r\n                                <Col md={12}>\r\n                                    <ButtonToolbar>\r\n                                        <a href=\"/catering/online/agreement.php?r=catalyst\" className=\"btn add-btn btn-lg btn-block\" style={{width: '100%'}}>Try Again</a>\r\n                                    </ButtonToolbar>\r\n                                </Col>\r\n                            </Row>\r\n                        </Card>\r\n                    }                    \r\n                </React.Fragment>\r\n                \r\n            }\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    globalState: state\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => (\r\n    {\r\n        // updateQty: (name, qty) => dispatch(updateQty(name, qty))\r\n        updateCurrentNav: (index) => dispatch(updateCurrentNav(index)),\r\n        calculateSubtotal: (subtotal, tax, total) => dispatch(calculateSubtotal(subtotal, tax, total)),\r\n        submitOrder: (data) => dispatch(submitOrder(data)),\r\n        getDeliveryMethod: () => dispatch(getDeliveryMethod()),\r\n        handleTextarea: (text) => dispatch(handleTextarea(text))\r\n    }\r\n)\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Summary)","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\n// import { Link } from 'react-router-dom';\r\n// import { updateCurrentNav, calculateSubtotal, submitOrder } from '../redux/actions/main';\r\nimport { Card, Spinner } from 'react-bootstrap';\r\n\r\n// import TopNav from './common/TopNav.js';\r\n\r\nclass Confirmation extends React.Component {\r\n\r\n    // constructor(props) {\r\n    //     super(props);\r\n    // }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n            {\r\n                this.props.state.main.confirmation.loading ?\r\n                <div style={{textAlign: 'center', padding: '100px 0px'}}>\r\n                    <Spinner animation=\"grow\" style={{backgroundColor: '#f58220'}} />\r\n                </div>\r\n                :\r\n                <Card className=\"\">\r\n\r\n                    {\r\n                        this.props.state.main.confirmation.orderID === null ?\r\n                        <React.Fragment>\r\n                            <Card.Body>\r\n                                <Card.Text>\r\n                                    We're sorry. An error occurred while processing your order. Please try again later.\r\n                                </Card.Text>\r\n                            </Card.Body>\r\n\r\n                            <div className=\"card-body\">\r\n                                        \r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-4\">\r\n                                        <a href=\"/catering/online/agreement.php?r=catalyst\" className=\"btn add-btn btn-lg btn-block\" style={{width: '100%'}}>Try Again</a>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </React.Fragment>\r\n                        :\r\n                        <React.Fragment>\r\n                            <Card.Body>\r\n                                <Card.Text>\r\n                                    <span style={{fontWeight: '500', lineHeight: '2.2', fontSize: '1.7rem'}}>Thank You</span><br style={{lineHeight: '2.2'}} />\r\n                                    Your order is confirmed. For your convenience, an email has been sent to {this.props.state.main.confirmation.email}. <br />\r\n                                    Your Order ID is {this.props.state.main.confirmation.orderID}.\r\n                                </Card.Text>\r\n                            </Card.Body>\r\n\r\n                            <div className=\"card-body\">\r\n                                        \r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-4\">\r\n                                        <a href=\"/catering/online/agreement.php?r=catalyst\" className=\"btn add-btn btn-lg btn-block\" style={{width: '100%'}}>Order Again</a>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-md-4\">\r\n                                        <a href=\"/dining/other/catalyst\" className=\"btn add-btn btn-lg btn-block\" style={{width: '100%'}}>Go to Catalyst Cafe</a>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-md-4\">\r\n                                        <a href=\"/\" className=\"btn add-btn btn-lg btn-block\" style={{width: '100%'}}>Go to Union</a>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </React.Fragment>\r\n                    }\r\n\r\n                </Card>\r\n            }\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    state: state\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => (\r\n    {\r\n    }\r\n)\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Confirmation)","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'react-app-polyfill/ie9';\nimport 'react-app-polyfill/ie11';   \nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\n\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>, \n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route\r\n} from 'react-router-dom'\r\nimport './App.css';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport Banner from './img/Catalyst_Banner.jpg';\r\n// import Menu from './components/Menu';\r\nimport Breakfast from './components/Breakfast';\r\nimport ByoBreakfast from './components/ByoBreakfast';\r\nimport Lunch from './components/Lunch';\r\nimport OfficeParty from './components/OfficeParty';\r\nimport Beverage from './components/Beverage';\r\nimport Summary from './components/Summary';\r\nimport Confirmation from './components/Confirmation';\r\n// import Bottom from './components/bottom';\r\n\r\nexport default function App() {\r\n  return (\r\n    <Container style={{marginTop: '0rem', marginBottom: '2rem', border: '1px solid #c8942b'}}>\r\n\r\n      <Row>\r\n        <img src={Banner} style={{width: '100%'}} alt=\"Banner\" />\r\n      </Row>\r\n\r\n      <Row style={{backgroundColor: '#fff'}}>\r\n        <Col md={12} className=\"wrap-main\">\r\n          <Router basename={'/catering/online/catalyst'}>\r\n            <Route exact path=\"/\" component={Breakfast} />\r\n            <Route exact path=\"/breakfast\" component={Breakfast} />\r\n            <Route exact path=\"/byobreakfast\" component={ByoBreakfast} />\r\n            <Route exact path=\"/lunch\" component={Lunch} />\r\n            <Route exact path=\"/officeparty\" component={OfficeParty} />\r\n            <Route exact path=\"/beverage\" component={Beverage} />\r\n            <Route exact path=\"/summary\" component={Summary} />\r\n            <Route exact path=\"/confirmation\" component={Confirmation} />\r\n          </Router>\r\n        </Col>\r\n      </Row>\r\n\r\n    </Container>\r\n  );\r\n}\r\n"],"sourceRoot":""}