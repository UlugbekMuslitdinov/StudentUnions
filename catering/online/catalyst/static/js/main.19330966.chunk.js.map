{"version":3,"sources":["img/Catalyst_Banner.jpg","redux/reducers/main.js","redux/reducers/breakfast.js","redux/reducers/byo_breakfast.js","redux/reducers/lunch.js","redux/reducers/officeParty.js","redux/reducers/beverage.js","redux/reducers/index.js","redux/actions/actionTypes.js","redux/store.js","components/common/numberInput.js","components/common/TopNav.js","redux/actions/main.js","components/bottom.js","components/Breakfast/ExecutiveBreakfast.js","redux/actions/breakfast.js","components/Breakfast/index.js","components/ByoBreakfast/SweetTreat.js","redux/actions/byo_breakfast.js","components/ByoBreakfast/index.js","components/Lunch/LunchBox.js","redux/actions/lunch.js","components/Lunch/index.js","components/OfficeParty/index.js","redux/actions/officeParty.js","components/Beverage/index.js","redux/actions/beverage.js","components/Summary/Breakfast.js","components/Summary/ByoBreakfast.js","components/Summary/Lunch.js","components/Summary/OfficeParty.js","components/Summary/Beverage.js","components/Summary/index.js","components/Confirmation.js","serviceWorker.js","index.js","App.js"],"names":["module","exports","initialState","delivery_method","loading","breakfast","byo_breakfast","byo_lunch","office_party","beverage","subtotal","tax","total","additional_comment","nav","routes","confirmation","success","email","orderID","error","code","msg","bk_beginnings","qty","price","name","description","ex_breakfast","box_open","add","id","list","ex_breakfast_name","ham_gruyere","egg_bacon","egg_chorizo","egg_white","baker_dozen","roundTo","require","updateBreakfastTotal","state","coffee_carafe","regular","decaf","iced","iced_decaf","fruit_salad","serve_20","serve_8","sweet_treats","type","half_dozen","selected","dozen","sweet_treats_name","bear_claws","blueberry_muffins","brownies","chocolate_croissants","cinnamon_blondies","croissants","granookies","variety","sandwiches","zucchini","sausage_waffle","sausage_bagel","pepper_bagel","red_pepper_bagel","updateByoTotal","actionType","open_box","products","turk_philly_chess","italian_job","chicken_club","bruschetta_panini","salads","hali_caesar","kale_crunch","chips","baked_lays","pb_jalapeno","pb_original","sun_chips","bbq_chips","beverages","coke","diet_coke","dr_pepper","diet_dr_pepper","sprite","dasani","cherry_coke","coke_zero","names","fruit","serve_10","updateOfficePartyTotal","updateTotal","combineReducers","main","action","index","payload","err","text","push","coffee_list","total_qty","i","length","coffee_name","coffee_total","fruit_total","lunch","extras","extra","extra_total","one","two","three","createStore","rootReducer","applyMiddleware","thunkMiddleware","NumberInput","props","increase","setState","value","this","onChange","decrease","onChangeHandler","event","target","parseInt","className","style","noleft","onClick","readonly","min","bind","readOnly","React","Component","TopNav","Fragment","Row","to","global","connect","updateCurrentNav","getDeliveryMethodSuccess","getDeliveryMethodFailure","Bottom","getTotal","navIndex","Col","fontSize","fontWeight","textAlign","padding","ButtonToolbar","marginRight","width","marginLeft","dispatch","ExecutiveBreakfast","onChangeInput","max_qty","tmp_qty","key","error_msg","closeExecutiveBeginning","addExecutiveBeginning","validateSandwiches","updateExecutiveBeginning","Card","Header","Body","Title","textTransform","color","Text","ListGroup","variant","Item","float","Button","size","Breakfast","updateQty","openExecutiveBeginning","printSelectedExBreakfast","num","print","count","md","border","editExBreakfast","removeExBreakfast","height","paddingLeft","listStyle","ex_count","marginBottom","map","row","SweetTreat","closeSweetTreat","addSweetTreat","validateSweetTreat","updateSweetTreat","updateSweetTreats","ByoBreakfast","onChangeCoffee","updateCoffee","onChangeFruitSalad","updateFruitSalad","openSweetTreat","printSelectedSweets","editSweetTreats","removeSweetTreats","onChangeSandwich","updateSandwich","st_half_count","st_dozen_count","LunchBox","checkQty","updateInput","onChangeFirst","choice_one","onChangeSecond","choice_two","onChangeThree","choice_three","addLunchBox","validateForm","updateLunchBox","closeLunchBox","window","scrollTo","printSandwiches","printSalads","printChips","display","lineHeight","onChangeExtra","order","first","createRef","borderWidth","textDecoration","borderBottom","Form","Group","as","Label","Control","openLunchBox","Lunch","openLunchBoxEditor","removeLunchBox","printItems","printExtra","boxes","pindex","OfficeParty","op","Beverage","onChangeBeverage","updateBeverage","printDrink","half_count","dozen_count","paddingTop","paddingBottom","printItem","totalQty","Summary","handleTextarea","submitOrder","data","globalState","history","calculateSubtotal","getDeliveryMethod","Spinner","animation","backgroundColor","marginTop","rows","borderBottomWidth","href","fetch_option","method","headers","body","JSON","stringify","fetch","then","res","ok","json","Error","return","order_id","catch","console","log","Confirmation","Boolean","location","hostname","match","ReactDOM","render","store","Container","src","Banner","alt","basename","exact","path","component","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.19330966.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Catalyst_Banner.a353e906.jpg\";","import { \r\n    UPDATE_CURRENT_NAV, \r\n    CALCULATE_SUBTOTAL,\r\n    SUBMIT_SUCCESS,\r\n    SUBMIT_FAILURE,\r\n    GET_DELIVERY_METHOD,\r\n    GET_DELIVERY_METHOD_FAILURE,\r\n    ADDITIONAL_NOTE\r\n} from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n    delivery_method: null,\r\n    loading: true,\r\n    breakfast: 0,\r\n    byo_breakfast: 0,\r\n    byo_lunch: 0,\r\n    office_party: 0,\r\n    beverage: 0,\r\n    subtotal: 0,\r\n    tax: 0,\r\n    total: 0,\r\n    additional_comment: '',\r\n    nav: 0,\r\n    routes: [\r\n        '/breakfast',\r\n        '/byobreakfast',\r\n        '/lunch',\r\n        '/officeparty',\r\n        '/beverage',\r\n        '/summary'\r\n    ],\r\n    confirmation: {\r\n        loading: true,\r\n        success: false,\r\n        email: null,\r\n        orderID: null,\r\n        error: {\r\n            code: null\r\n        }\r\n    },\r\n    error: {\r\n        msg: ''\r\n    }\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n    switch (action.type) {\r\n        case UPDATE_CURRENT_NAV: {\r\n            const {index} = action.payload;\r\n            state.nav = index;\r\n            return {...state};\r\n        }\r\n        case CALCULATE_SUBTOTAL: {\r\n            const {subtotal, tax, total} = action.payload;\r\n            state.subtotal = subtotal;\r\n            state.tax = tax;\r\n            state.total = total;\r\n            return {...state};\r\n        }\r\n        case SUBMIT_SUCCESS: {\r\n            const {id, email} = action.payload;\r\n            initialState.confirmation = {\r\n                loading: false,\r\n                orderID: id,\r\n                email: email,\r\n                success: true\r\n            }\r\n            return {...initialState};\r\n        }\r\n        case SUBMIT_FAILURE: {\r\n            const {code} = action.payload;\r\n            state.confirmation = {\r\n                loading: false,\r\n                orderID: null\r\n            }\r\n            state.error.code = code;\r\n            return {...state}\r\n        }\r\n        case GET_DELIVERY_METHOD: {\r\n            const {delivery_method} = action.payload;\r\n            state.delivery_method = delivery_method;\r\n            return {...state};\r\n        }\r\n        case GET_DELIVERY_METHOD_FAILURE: {\r\n            const {err} = action.payload;\r\n            state.delivery_method = 'Failed';\r\n            state.error.msg = err;\r\n            return {...state}\r\n        }\r\n        case ADDITIONAL_NOTE: {\r\n            const text = action.payload;\r\n            state.additional_comment = text;\r\n            return {...state}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};","import { \r\n    UPDATE_BREAKFAST_QTY,\r\n    OPEN_BREAKFAST_EXECUTIVE_BEGINNING,\r\n    CLOSE_BREAKFAST_EXECUTIVE_BEGINNING,\r\n    ADD_BREAKFAST_EXECUTIVE_BEGINNING,\r\n    UPDATE_BREAKFAST_EXECUTIVE_BEGINNING,\r\n    EDIT_BREAKFAST_EXECUTIVE_BEGINNING,\r\n    REMOVE_BREAKFAST_EXECUTIVE_BEGINNING\r\n} from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n    bk_beginnings : { qty : 0, price : 27.99, name: 'Breakfast Beginnings', description: '96oz Coffee Carafe and 6 Pastries', total : 0 },\r\n    ex_breakfast : { \r\n        qty : 0, \r\n        price : 52.99, \r\n        name: 'Executive Breakfast', \r\n        description: '96oz Coffee Carafe, 6 Assorted Pastries, and 6 Breakfast Sandwiches', \r\n        total : 0,\r\n        box_open: false,\r\n        add: 'add',\r\n        id: null,\r\n        list: [] \r\n    },\r\n    ex_breakfast_name: {\r\n        ham_gruyere: \"Ham and Gruyere\",\r\n        egg_bacon: \"Egg, Bacon, Sausage and Cheese\",\r\n        egg_chorizo: \"Egg, Chorizo, Roasted Poblano Peppers and Cheese\",\r\n        egg_white: \"Egg White, Mushrooms, Spinach, Red Pepper and Goat Cheese\"\r\n    },\r\n    baker_dozen : { qty : 0, price : 15.99, name: 'Baker\\'s Dozen', description: 'Assorted Bagels and Cream Cheese (13 ea.)', total : 0 },\r\n    total : 0\r\n};\r\n\r\nconst roundTo = require('roundto');\r\n\r\nexport default function(state = initialState, action) {\r\n    switch (action.type) {\r\n        case UPDATE_BREAKFAST_QTY: {\r\n\r\n            const {name, qty} = action.payload;\r\n            const subtotal = roundTo(state[name].price * qty, 2); \r\n            const total = updateBreakfastTotal(state, name, qty);\r\n\r\n            return {\r\n                ...state,\r\n                [name]: {\r\n                    ...state[name],\r\n                    qty: qty,\r\n                    total: subtotal\r\n                },\r\n                total: total\r\n            };\r\n        }\r\n        case OPEN_BREAKFAST_EXECUTIVE_BEGINNING: {\r\n            const {add, id} = action.payload;\r\n            state.ex_breakfast.box_open = true;\r\n            state.ex_breakfast.add = add;\r\n            state.ex_breakfast.id = id;\r\n\r\n            return {...state};\r\n        }\r\n        case CLOSE_BREAKFAST_EXECUTIVE_BEGINNING: {\r\n            state.ex_breakfast.box_open = false;\r\n            return {...state}\r\n        }\r\n        case ADD_BREAKFAST_EXECUTIVE_BEGINNING: {\r\n            const {list} = action.payload;\r\n\r\n            state.ex_breakfast.box_open = false;\r\n\r\n            state.ex_breakfast.list.push(list);\r\n            state.ex_breakfast.qty = state.ex_breakfast.qty + 1;\r\n\r\n            state.ex_breakfast.total = roundTo(state.ex_breakfast.qty * state.ex_breakfast.price, 2);\r\n\r\n            state.total = updateBreakfastTotal(state, 'ex_breakfast', state.ex_breakfast.qty);\r\n\r\n            return {...state};\r\n        }\r\n        case UPDATE_BREAKFAST_EXECUTIVE_BEGINNING: {\r\n            const {id, list} = action.payload;\r\n            state.ex_breakfast.list[id] = list;\r\n            state.ex_breakfast.box_open = false;\r\n            state.ex_breakfast.id = null;\r\n\r\n            return {...state};\r\n        }\r\n        case EDIT_BREAKFAST_EXECUTIVE_BEGINNING: {\r\n            const {id} = action.payload;\r\n            state.ex_breakfast.id = id;\r\n            state.ex_breakfast.box_open = true;\r\n            state.ex_breakfast.add = 'edit';\r\n            return {...state};\r\n        }\r\n        case REMOVE_BREAKFAST_EXECUTIVE_BEGINNING: {\r\n            const {id} = action.payload;\r\n            state.ex_breakfast.list[id] = null;\r\n            state.ex_breakfast.qty = state.ex_breakfast.qty - 1;\r\n\r\n            state.ex_breakfast.id = null;\r\n\r\n            state.ex_breakfast.total = roundTo(state.ex_breakfast.qty * state.ex_breakfast.price, 2);\r\n\r\n            state.total = updateBreakfastTotal(state, 'ex_breakfast', state.ex_breakfast.qty);\r\n\r\n            return {...state};\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nfunction updateBreakfastTotal(state, name, qty) {\r\n    state[name].total = state[name].price * qty;\r\n    return roundTo(state.bk_beginnings.total + state.ex_breakfast.total + state.baker_dozen.total, 2);\r\n}","import { \r\n    UPDATE_BYO_BREAKFAST_COFFEE,\r\n    UPDATE_BYO_BREAKFAST_FRUITSALAD,\r\n    OPEN_BYO_BREAKFAST_SWEETTREATS,\r\n    CLOSE_BYO_BREAKFAST_SWEETTREATS,\r\n    ADD_BYO_BREAKFAST_SWEETTREATS,\r\n    EDIT_BYO_BREAKFAST_SWEETTREATS,\r\n    UPDATE_BYO_BREAKFAST_SWEETTREATS,\r\n    REMOVE_BYO_BREAKFAST_SWEETTREATS,\r\n    UPDATE_BYO_BREAKFAST_SANDWICH\r\n} from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n    coffee_carafe: {\r\n        price: 16.99,\r\n        list: {\r\n            regular: 0,\r\n            decaf: 0,\r\n            iced: 0,\r\n            iced_decaf: 0\r\n        },\r\n        total: 0\r\n    },\r\n    fruit_salad: {\r\n        serve_20: {price: 49.99, qty: 0},\r\n        serve_8: {price: 29.99, qty: 0},\r\n        total: 0\r\n    },\r\n    sweet_treats: {\r\n        box_open: false,\r\n        type: null,\r\n        add: 'add',\r\n        id: null,\r\n        half_dozen: {\r\n            price: 12.99,\r\n            qty: 0,\r\n            selected: true,\r\n            list: [],\r\n            total: 0\r\n        }, \r\n        dozen: {\r\n            price: 24.99,\r\n            qty: 0,\r\n            selected: true,\r\n            list: [],\r\n            total: 0\r\n        },\r\n        total: 0\r\n    },\r\n    sweet_treats_name: {bear_claws:'Bear Claws', blueberry_muffins:'Blueberry Muffins', brownies:'Brownies', chocolate_croissants:'Chocolate Croissants', cinnamon_blondies:'Cinnamon Blondies', croissants:'Croissants', granookies:'Granookies', variety:'Variety of Cookies'},\r\n    sandwiches: {\r\n        list: {\r\n            zucchini: {price: 21.99, qty: 0, name: 'Ham and Gruyere on Zucchini Bread', description: ''},\r\n            sausage_waffle: {price: 26.99, qty: 0, name: \"Sausage and White Cheddar Waffle\", description: ''},\r\n            sausage_bagel: {price: 17.99, qty: 0, name: 'Egg, Cheese, Bacon and Sausage on a Bagel', description: ''},\r\n            pepper_bagel: {price: 17.99, qty: 0, name: 'Egg, Cheese, Chorizo, and Roasted Poblano Peppers on a Bagel', description: ''},\r\n            red_pepper_bagel: {price: 17.99, qty: 0, name: 'Egg Whites, Mushrooms, Spinach and Red Peppers on a Bagel', description: ''}\r\n        },\r\n        total: 0\r\n    },\r\n    total : 0\r\n};\r\n\r\nconst roundTo = require('roundto');\r\n\r\nexport default function(state = initialState, action) {\r\n    switch (action.type) {\r\n        case UPDATE_BYO_BREAKFAST_COFFEE: {\r\n            const {name, qty} = action.payload;\r\n\r\n            let coffee_list = ['regular', 'decaf', 'iced', 'iced_decaf'];\r\n            let total_qty = 0;\r\n            for (let i = 0; i < coffee_list.length; i++) {\r\n                const coffee_name = coffee_list[i];\r\n                if (coffee_name !== name) {\r\n                    total_qty = total_qty + state.coffee_carafe.list[coffee_list[i]];\r\n                }\r\n                else {\r\n                    total_qty = total_qty + qty;\r\n                }\r\n            }\r\n            \r\n            const coffee_total = roundTo(state.coffee_carafe.price * total_qty, 2); \r\n\r\n\r\n            const total = updateByoTotal(state, 'coffee_carafe', coffee_total);\r\n\r\n            return {\r\n                ...state,\r\n                coffee_carafe: {\r\n                    ...state.coffee_carafe,\r\n                    list: {\r\n                        ...state.coffee_carafe.list,\r\n                        [name]: qty\r\n                    },\r\n                    total: coffee_total\r\n                },\r\n                total: total\r\n            };\r\n        }\r\n        case UPDATE_BYO_BREAKFAST_FRUITSALAD: {\r\n            const {name, qty} = action.payload;\r\n\r\n            state.fruit_salad[name].qty = qty;\r\n\r\n            const fruit_total = (state.fruit_salad.serve_20.price * state.fruit_salad.serve_20.qty) + \r\n                                (state.fruit_salad.serve_8.price * state.fruit_salad.serve_8.qty);\r\n\r\n            const total = updateByoTotal(state, 'fruit_salad', fruit_total);\r\n\r\n            return {\r\n                ...state,\r\n                fruit_salad: {\r\n                    ...state.fruit_salad,\r\n                    [name]: {\r\n                        ...state.fruit_salad[name],\r\n                        qty: qty\r\n                    },\r\n                    total: roundTo(fruit_total, 2)\r\n                },\r\n                total: total\r\n            }\r\n        }\r\n        case OPEN_BYO_BREAKFAST_SWEETTREATS: {\r\n            const {type, add, id} = action.payload;\r\n            \r\n            return {\r\n                ...state,\r\n                sweet_treats:{\r\n                    ...state.sweet_treats,\r\n                    box_open: true,\r\n                    type: type,\r\n                    add: 'add',\r\n                    id: id,\r\n                }\r\n            }\r\n        }\r\n        case CLOSE_BYO_BREAKFAST_SWEETTREATS: {\r\n            return {\r\n                ...state,\r\n                sweet_treats: {\r\n                    ...state.sweet_treats,\r\n                    box_open: false\r\n                }\r\n            }\r\n        }\r\n        case ADD_BYO_BREAKFAST_SWEETTREATS: {\r\n            const {name, list} = action.payload;\r\n            state.sweet_treats[name].list.push(list);\r\n            state.sweet_treats[name].qty = state.sweet_treats[name].qty + 1;\r\n\r\n            // Get total of sweet treats\r\n            const subtotal = roundTo(state.sweet_treats.half_dozen.qty * state.sweet_treats.half_dozen.price, 2) + roundTo(state.sweet_treats.dozen.qty * state.sweet_treats.dozen.price, 2);\r\n\r\n            // BYO Breakfast Total\r\n            const total = updateByoTotal(state, 'sweet_treats', subtotal);\r\n\r\n            return {\r\n                ...state,\r\n                sweet_treats: {\r\n                    ...state.sweet_treats,\r\n                    box_open: false,\r\n                    [name]:{\r\n                        ...state.sweet_treats[name]\r\n                    },\r\n                    total: subtotal\r\n                },\r\n                total: total\r\n            }\r\n        }\r\n        case EDIT_BYO_BREAKFAST_SWEETTREATS: {\r\n            const {type, id} = action.payload;\r\n            \r\n            return {\r\n                ...state,\r\n                sweet_treats: {\r\n                    ...state.sweet_treats,\r\n                    box_open: true,\r\n                    type: type,\r\n                    add: 'edit',\r\n                    id: id\r\n                }\r\n            }\r\n        }\r\n        case UPDATE_BYO_BREAKFAST_SWEETTREATS: {\r\n            const {type, id, list} = action.payload;\r\n            state.sweet_treats[type].list[id] = list;\r\n\r\n            return {\r\n                ...state,\r\n                sweet_treats: {\r\n                    ...state.sweet_treats,\r\n                    box_open: false,\r\n                    id: null\r\n                }\r\n            }\r\n        }\r\n        case REMOVE_BYO_BREAKFAST_SWEETTREATS: {\r\n            const {type, id} = action.payload;\r\n            state.sweet_treats[type].list[id] = null;\r\n            state.sweet_treats[type].qty = state.sweet_treats[type].qty - 1;\r\n\r\n            // Get total of sweet treats\r\n            const subtotal = roundTo(state.sweet_treats.half_dozen.qty * state.sweet_treats.half_dozen.price, 2) + roundTo(state.sweet_treats.dozen.qty * state.sweet_treats.dozen.price, 2);\r\n\r\n            // BYO Breakfast Total\r\n            state.total = updateByoTotal(state, 'sweet_treats', subtotal);\r\n\r\n            return {\r\n                ...state\r\n            }\r\n        }\r\n        case UPDATE_BYO_BREAKFAST_SANDWICH: {\r\n            const {name, qty} = action.payload;\r\n\r\n            let subtotal = 0;\r\n            state.sandwiches.list[name].qty = qty;\r\n            \r\n            for (const name in state.sandwiches.list){\r\n                subtotal = subtotal + roundTo(state.sandwiches.list[name].qty * state.sandwiches.list[name].price, 2);\r\n            }\r\n\r\n            state.sandwiches.total = subtotal;\r\n\r\n            const total = updateByoTotal(state, 'sandwiches', subtotal);\r\n\r\n            return {\r\n                ...state,\r\n                sandwiches: {\r\n                    ...state.sandwiches,\r\n                    total: subtotal\r\n                },\r\n                total: total\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nfunction updateByoTotal(state, name, subtotal) {\r\n    state[name].total = subtotal;\r\n    const total = roundTo(\r\n                            state.coffee_carafe.total + \r\n                            state.fruit_salad.total + \r\n                            state.sweet_treats.total +\r\n                            state.sandwiches.total, \r\n                        2);\r\n    return total;\r\n}","import { \r\n    OPEN_LUNCHBOX,\r\n    ADD_LUNCHBOX,\r\n    OPEN_LUNCHBOX_EDITOR,\r\n    UPDATE_LUNCHBOX,\r\n    REMOVE_LUNCHBOX,\r\n    CLOSE_LUNCHBOX\r\n} from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n    actionType: 'add',\r\n    id: null,\r\n    open_box: false,\r\n    price: 54.99,\r\n    qty: 0,\r\n    products: {\r\n        sandwiches : {\r\n            turk_philly_chess: {name: 'Peppered Turkey Philly Cheese (1/2 Sandwich)', description: 'Peppered Turkey, Sport Peppers, and White Cheddar Cheese'},\r\n            italian_job: {name: 'The Italian Job (1/2 Sandwich)', description: 'Ham, Peppered Turkey, Salami, Provolone, Cured Tomato, and Sport Peppers'},\r\n            chicken_club: {name: 'Chicken Club', description: 'Chicken, Ham, Bacon, Havarti, and Tomato Pesto Spread'},\r\n            bruschetta_panini : {name: 'Bruschetta Panini', description: 'Tomato, Pesto, and Mozzarella'}\r\n        },\r\n        salads: {\r\n            hali_caesar: {name: 'Hail Caesar', description: 'Chopped Romaine, Juicy Chicken, Parmesan, Croutons, and Caesar Dressing'},\r\n            kale_crunch: {name: 'Kale Crunch', description: 'Kale, Cabbage, Radish, Almond, Cranberry, Peppered Turkey, and Citrus Vinaigrette'}\r\n        },\r\n        chips: {\r\n            baked_lays: 'Baked Lays',\r\n            pb_jalapeno: 'Poore Brother\\'s - Jalapeno',\r\n            pb_original: 'Poore Brother\\'s - Original',\r\n            sun_chips: 'Sun Chips',\r\n            bbq_chips: 'BBQ Chips'\r\n        },\r\n        beverages: {\r\n            coke: 'Coke',\r\n            diet_coke: 'Diet Coke',\r\n            dr_pepper: 'Dr.Pepper',\r\n            diet_dr_pepper: 'Diet Dr.Pepper',\r\n            sprite: 'Sprite',\r\n            dasani: 'Dasani Water',\r\n            cherry_coke: 'Cherry Coke',\r\n            coke_zero: 'Coke Zero'\r\n        }\r\n    },\r\n    names: {\r\n        turk_philly_chess: {name: 'Peppered Turkey Philly Cheese (1/2 Sandwich)', description: 'Peppered Turkey, Sport Peppers, and White Cheddar Cheese'},\r\n        italian_job: {name: 'The Italian Job (1/2 Sandwich)', description: 'Ham, Peppered Turkey, Salami, Provolone, Cured Tomato, and Sport Peppers'},\r\n        chicken_club: {name: 'Chicken Club', description: 'Chicken, Ham, Bacon, Havarti, and Tomato Pesto Spread'},\r\n        bruschetta_panini : {name: 'Bruschetta Panini', description: 'Tomato, Pesto, and Mozzarella'},\r\n        hali_caesar: {name: 'Hail Caesar', description: 'Chopped Romaine, Juicy Chicken, Parmesan, and Caesar Dressing'},\r\n        kale_crunch: {name: 'Kale Crunch', description: 'Kale, Cabbage, Radish, Almond, Cranberry, Peppered Turkey, and Citrus Vinaigrette'},\r\n        baked_lays: {name:'Baked Lays'},\r\n        pb_jalapeno: {name:'Poore Brother\\'s - Jalapeno'},\r\n        pb_original: {name:'Poore Brother\\'s - Original'},\r\n        sun_chips: {name:'Sun Chips'},\r\n        bbq_chips: {name:'BBQ Chips'},\r\n        fruit: {name: 'Fruit'},\r\n        coke: {name:'Coke'},\r\n        diet_coke: {name:'Diet Coke'},\r\n        dr_pepper: {name:'Dr.Pepper'},\r\n        diet_dr_pepper: {name:'Diet Dr.Pepper'},\r\n        sprite: {name:'Sprite'},\r\n        dasani: {name:'Dasani Water'},\r\n        cherry_coke: {name:'Cherry Coke'},\r\n        coke_zero: {name:'Coke Zero'}\r\n    },\r\n    list: [],\r\n    total: 0\r\n};\r\n\r\nconst roundTo = require('roundto');\r\n\r\nexport default function(state = initialState, action) {\r\n    switch (action.type) {\r\n        case OPEN_LUNCHBOX: {\r\n            state.actionType = 'add';\r\n            state.open_box = true;\r\n            return {\r\n                ...state\r\n            };\r\n        }\r\n        case ADD_LUNCHBOX: {\r\n            const {list} = action.payload;\r\n            state.open_box = false;\r\n            state.qty = state.qty + 1;\r\n\r\n            // Check Extra\r\n            const extras = list.extra.list;\r\n            let extra_total = 0;\r\n            for (let i = 0; i < extras.length; i++) {\r\n                if (extras[i].one !== 'None'){extra_total = extra_total + 6.99;}\r\n                if (extras[i].two !== 'None'){extra_total = extra_total + 0.89;}\r\n                if (extras[i].three !== 'None'){\r\n                    if (extras[i].three === 'Dasani Water'){\r\n                        extra_total = extra_total + 1.99;\r\n                    }\r\n                    else {\r\n                        extra_total = extra_total + 2.09;\r\n                    }\r\n                }\r\n            }\r\n\r\n            list.extra.total = extra_total;\r\n            state.list.push(list);\r\n            state.total = roundTo((state.qty * state.price) + extra_total,2);\r\n            return {\r\n                ...state\r\n            };\r\n        }\r\n        case OPEN_LUNCHBOX_EDITOR: {\r\n            const {index} = action.payload;\r\n            state.id = index;\r\n            state.actionType = 'edit';\r\n            state.open_box = true;\r\n            return {\r\n                ...state\r\n            };\r\n        }\r\n        case UPDATE_LUNCHBOX: {\r\n            const {index, list} = action.payload;\r\n            state.list[index] = list;\r\n\r\n            // Check Extra\r\n            const extras = state.list[index].extra.list;\r\n            let extra_total = 0;\r\n            for (let i = 0; i < extras.length; i++) {\r\n                if (extras[i].one !== 'None'){extra_total = extra_total + 6.99;}\r\n                if (extras[i].two !== 'None'){extra_total = extra_total + 0.89;}\r\n                if (extras[i].three !== 'None'){\r\n                    if (extras[i].three === 'Dasani Water'){\r\n                        extra_total = extra_total + 1.99;\r\n                    }\r\n                    else {\r\n                        extra_total = extra_total + 2.09;\r\n                    }\r\n                }\r\n            }\r\n            state.list[index].extra.total = extra_total;\r\n            state.total = roundTo((state.qty * state.price) + extra_total,2);\r\n\r\n            state.open_box = false;\r\n            return {\r\n                ...state\r\n            };\r\n        }\r\n        case CLOSE_LUNCHBOX: {\r\n            state.open_box = false;\r\n            return {\r\n                ...state\r\n            };\r\n        }\r\n        case REMOVE_LUNCHBOX: {\r\n            const {index} = action.payload;\r\n            state.qty = state.qty - 1;\r\n            state.list[index] = [];\r\n            state.total = roundTo((state.qty * state.price),2);\r\n            return {\r\n                ...state\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { UPDATE_OFFICEPARTY_QTY } from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n    serve_10 : { qty : 0, price : 34.99, name: 'Serves 10', description: 'Snack sized assorted meats, cheeses, veggies, hummus and pita chips', total : 0 },\r\n    total : 0\r\n};\r\n\r\nconst roundTo = require('roundto');\r\n\r\nexport default function(state = initialState, action) {\r\n    switch (action.type) {\r\n        case UPDATE_OFFICEPARTY_QTY: {\r\n\r\n            const {name, qty} = action.payload;\r\n            const subtotal = roundTo(state[name].price * qty, 2); \r\n            const total = updateOfficePartyTotal(state, name, qty);\r\n\r\n            return {\r\n                ...state,\r\n                [name]: {\r\n                    ...state[name],\r\n                    qty: qty,\r\n                    total: subtotal\r\n                },\r\n                total: total\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nfunction updateOfficePartyTotal(state, name, qty) {\r\n    state[name].total = state[name].price * qty;\r\n    return roundTo(state.serve_10.total, 2);\r\n}","import { \r\n    UPDATE_BEVERAGE_QTY\r\n} from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n    list: {\r\n        coke: {name: 'Coke', price: 2.09, qty: 0},\r\n        diet_coke: {name: 'Diet Coke', price: 2.09, qty: 0},\r\n        dr_pepper: {name: 'Dr.Pepper', price: 2.09, qty: 0},\r\n        diet_dr_pepper: {name: 'Diet Dr.Pepper', price: 2.09, qty: 0},\r\n        sprite: {name: 'Sprite', price: 2.09, qty:0},\r\n        dasani: {name: 'Dasani Water', price: 1.99, qty: 0},\r\n        cherry_coke: {name: 'Cherry Coke', price: 2.09, qty: 0},\r\n        coke_zero: {name: 'Coke Zero', price: 2.09, qty: 0}\r\n    },\r\n    total : 0\r\n};\r\n\r\nconst roundTo = require('roundto');\r\n\r\nexport default function(state = initialState, action) {\r\n    switch (action.type) {\r\n        case UPDATE_BEVERAGE_QTY: {\r\n            const {name, qty} = action.payload;\r\n\r\n            state.list[name].qty = qty;\r\n            state.total = updateTotal(state, name);\r\n\r\n            return {...state};\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nfunction updateTotal(state, name) {\r\n    const total = roundTo(\r\n                            state.list.coke.qty*state.list.coke.price + \r\n                            state.list.diet_coke.qty*state.list.diet_coke.price +\r\n                            state.list.dr_pepper.qty*state.list.dr_pepper.price +\r\n                            state.list.diet_dr_pepper.qty*state.list.diet_dr_pepper.price +\r\n                            state.list.sprite.qty*state.list.sprite.price +\r\n                            state.list.dasani.qty*state.list.dasani.price +\r\n                            state.list.cherry_coke.qty*state.list.cherry_coke.price +\r\n                            state.list.coke_zero.qty*state.list.coke_zero.price, \r\n                        2);\r\n    return total;\r\n}","import { combineReducers } from \"redux\";\r\nimport main from \"./main\";\r\nimport breakfast from \"./breakfast\";\r\nimport byo_breakfast from \"./byo_breakfast\";\r\nimport lunch from \"./lunch\";\r\nimport office_party from \"./officeParty\";\r\nimport beverage from \"./beverage\";\r\n\r\nexport default combineReducers({ main, breakfast, byo_breakfast, lunch, office_party, beverage });","export const UPDATE_CURRENT_NAV = \"UPDATE_CURRENT_NAV\";\r\nexport const CALCULATE_SUBTOTAL = \"CALCULATE_SUBTOTAL\";\r\nexport const SUBMIT_ORDER = \"SUBMIT_ORDER\";\r\nexport const SUBMIT_SUCCESS = \"SUBMIT_SUCCESS\";\r\nexport const SUBMIT_FAILURE = \"SUBMIT_FAILURE\";\r\nexport const GET_DELIVERY_METHOD = \"GET_DELIVERY_METHOD\";\r\nexport const GET_DELIVERY_METHOD_FAILURE = \"GET_DELIVERY_METHOD_FAILURE\";\r\nexport const ADDITIONAL_NOTE = \"ADDITIONAL_NOTE\";\r\n\r\n// Breakfast\r\nexport const UPDATE_QTY = \"UPDATE_QTY\";\r\nexport const UPDATE_BREAKFAST_QTY = \"UPDATE_BREAKFAST_QTY\";\r\nexport const OPEN_BREAKFAST_EXECUTIVE_BEGINNING = \"OPEN_BREAKFAST_EXECUTIVE_BEGINNING\";\r\nexport const CLOSE_BREAKFAST_EXECUTIVE_BEGINNING = \"CLOSE_BREAKFAST_EXECUTIVE_BEGINNING\";\r\nexport const ADD_BREAKFAST_EXECUTIVE_BEGINNING = \"ADD_BREAKFAST_EXECUTIVE_BEGINNING\";\r\nexport const UPDATE_BREAKFAST_EXECUTIVE_BEGINNING = \"UPDATE_BREAKFAST_EXECUTIVE_BEGINNING\";\r\nexport const EDIT_BREAKFAST_EXECUTIVE_BEGINNING = \"EDIT_BREAKFAST_EXECUTIVE_BEGINNING\";\r\nexport const REMOVE_BREAKFAST_EXECUTIVE_BEGINNING = \"REMOVE_BREAKFAST_EXECUTIVE_BEGINNING\";\r\n\r\n// Build Your Own Breakfast\r\nexport const UPDATE_BYO_BREAKFAST_COFFEE = \"UPDATE_BYO_BREAKFAST_COFFEE\";\r\nexport const UPDATE_BYO_BREAKFAST_FRUITSALAD = \"UPDATE_BYO_BREAKFAST_FRUITSALAD\";\r\nexport const OPEN_BYO_BREAKFAST_SWEETTREATS = \"OPEN_BYO_BREAKFAST_SWEETTREATS\";\r\nexport const ADD_BYO_BREAKFAST_SWEETTREATS = \"ADD_BYO_BREAKFAST_SWEETTREATS\";\r\nexport const CLOSE_BYO_BREAKFAST_SWEETTREATS = \"CLOSE_BYO_BREAKFAST_SWEETTREATS\";\r\nexport const EDIT_BYO_BREAKFAST_SWEETTREATS = \"EDIT_BYO_BREAKFAST_SWEETTREATS\";\r\nexport const UPDATE_BYO_BREAKFAST_SWEETTREATS = \"UPDATE_BYO_BREAKFAST_SWEETTREATS\";\r\nexport const REMOVE_BYO_BREAKFAST_SWEETTREATS = \"REMOVE_BYO_BREAKFAST_SWEETTREATS\";\r\nexport const UPDATE_BYO_BREAKFAST_SANDWICH = \"UPDATE_BYO_BREAKFAST_SANDWICH\";\r\n\r\n// Lunch\r\nexport const OPEN_LUNCHBOX = \"OPEN_LUNCHBOX\";\r\nexport const ADD_LUNCHBOX = \"ADD_LUNCHBOX\";\r\nexport const OPEN_LUNCHBOX_EDITOR = \"OPEN_LUNCHBOX_EDITOR\";\r\nexport const UPDATE_LUNCHBOX = \"UPDATE_LUNCHBOX\";\r\nexport const REMOVE_LUNCHBOX = \"REMOVE_LUNCHBOX\";\r\nexport const CLOSE_LUNCHBOX = \"CLOSE_LUNCHBOX\";\r\n\r\n// Office Party\r\nexport const UPDATE_OFFICEPARTY_QTY = \"UPDATE_OFFICEPARTY_QTY\";\r\n\r\n// Beverage\r\nexport const UPDATE_BEVERAGE_QTY = \"UPDATE_BEVERAGE_QTY\";","import { createStore, applyMiddleware } from 'redux';\r\nimport thunkMiddleware  from 'redux-thunk';\r\nimport rootReducer from \"./reducers\";\r\n\r\nexport default createStore( rootReducer, applyMiddleware( thunkMiddleware ));","import React from 'react';\r\n\r\nclass NumberInput extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            value: parseInt(this.props.value)\r\n        }\r\n    }\r\n\r\n    increase = () => {\r\n        this.setState({\r\n            value: this.state.value + 1\r\n        }, function() {\r\n            const result = this.props.onChange(this.props.name, this.state.value);\r\n            if (result === 'error'){\r\n                this.setState({\r\n                    value: this.state.value - 1\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    decrease = () => {\r\n        if (this.state.value-1 >= 0) {\r\n            this.setState({\r\n                value: this.state.value - 1\r\n            }, function() {\r\n                this.props.onChange(this.props.name, this.state.value)\r\n            })\r\n        }\r\n    }\r\n\r\n    onChangeHandler = (event) => {\r\n        const target = event.target;\r\n        const value = target.value;\r\n        this.setState({\r\n            value: parseInt(value)\r\n        }, function() {\r\n            this.props.onChange(this.props.name, this.state.value)\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"def-number-input number-input\" style={this.props.style}>\r\n                {\r\n                    !this.props.noleft ?\r\n                    <button className=\"minus\" onClick={this.decrease}></button> :\r\n                    null\r\n                }\r\n                <input className={'quantity ' + (this.props.readonly ? 'input-readonly' : '')} name={this.props.name}\r\n                min={0}\r\n                value={this.props.value}\r\n                onChange={this.onChangeHandler.bind(this)}\r\n                type=\"number\"\r\n                readOnly={this.props.readonly ? true : false} />\r\n                <button className=\"plus\" onClick={this.increase}></button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NumberInput;","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n    Link\r\n} from 'react-router-dom';\r\n\r\nimport { Row } from 'react-bootstrap';\r\n\r\n// import ArrowLeft from '../../img/arrow_left.png';\r\n\r\nclass TopNav extends React.Component {\r\n\r\n    render() {\r\n        return(\r\n            <React.Fragment>\r\n                <Row className=\"m-0\">\r\n                    <Link\r\n                    to=\"/breakfast\"\r\n                    className={'topnav col ' + (this.props.global.main.nav === 0 ? 'active' : '')}\r\n                    >\r\n                        <p><u>Breakfast</u></p>\r\n                    </Link>\r\n                    <Link\r\n                    to=\"/byobreakfast\"\r\n                    className={'topnav col ' + (this.props.global.main.nav === 1 ? 'active' : '')}\r\n                    >\r\n                        <p><u>Build Your Own Breakfast</u></p>\r\n                    </Link>\r\n                    <Link\r\n                    to=\"/lunch\"\r\n                    className={'topnav col ' + (this.props.global.main.nav === 2 ? 'active' : '')}\r\n                    >\r\n                        <p><u>Lunch</u></p>\r\n                    </Link>\r\n                    <Link\r\n                    to=\"/officeparty\"\r\n                    className={'topnav col ' + (this.props.global.main.nav === 3 ? 'active' : '')}\r\n                    >\r\n                        <p><u>Office Party</u></p>\r\n                    </Link>\r\n                    <Link\r\n                    to=\"/beverage\"\r\n                    className={'topnav col ' + (this.props.global.main.nav === 4 ? 'active' : '')}\r\n                    >\r\n                        <p><u>Beverage</u></p>\r\n                    </Link>\r\n                    <Link\r\n                    to=\"/summary\"\r\n                    className={'topnav col ' + (this.props.global.main.nav === 5 ? 'active' : '')}\r\n                    >\r\n                        <p><u>Order Summary</u></p>\r\n                    </Link>\r\n                </Row>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    global: state\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps\r\n)(TopNav)","import { \r\n    UPDATE_CURRENT_NAV, \r\n    SUBMIT_ORDER, \r\n    CALCULATE_SUBTOTAL,\r\n    SUBMIT_SUCCESS,\r\n    SUBMIT_FAILURE,\r\n    GET_DELIVERY_METHOD,\r\n    GET_DELIVERY_METHOD_FAILURE,\r\n    ADDITIONAL_NOTE\r\n} from './actionTypes.js'\r\n\r\nexport const updateCurrentNav = (index) => ({\r\n    type: UPDATE_CURRENT_NAV,\r\n    payload: {\r\n        index\r\n    }\r\n})\r\n\r\nexport const calculateSubtotal = (subtotal, tax, total) => ({\r\n    type: CALCULATE_SUBTOTAL,\r\n    payload: {\r\n        subtotal, tax, total\r\n    }\r\n})\r\n\r\nexport const initSubmitOrder = () => ({\r\n    type: SUBMIT_ORDER\r\n})\r\n\r\nexport const formValidationFailure = () => ({\r\n\r\n})\r\n\r\nexport const formSubmitSuccess = (id, email) => ({\r\n    type: SUBMIT_SUCCESS,\r\n    payload: {\r\n        id, email\r\n    }\r\n})\r\n\r\nexport const formSubmitFailure = (code) => ({\r\n    type: SUBMIT_FAILURE,\r\n    payload: {\r\n        code\r\n    }\r\n})\r\n\r\nexport function submitOrder(data) {\r\n    return (dispatch) => {\r\n        dispatch(initSubmitOrder());\r\n\r\n        // Validate Form\r\n\r\n        let error = false;\r\n\r\n        if (error){\r\n            dispatch(formValidationFailure());\r\n        }\r\n        else {\r\n            // console.log(data);\r\n            const fetch_option = {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(data)\r\n            }\r\n\r\n            // const url = 'http://192.168.99.100/api/catering/retail/catalyst/submit';\r\n            const url = '/api/catering/retail/catalyst/submit';\r\n\r\n            fetch(url, fetch_option)\r\n            .then((res) => {\r\n                // console.log(res);\r\n                if(res.ok) {\r\n                    return res.json();\r\n                } else {\r\n                    // console.log(res);\r\n                    throw new Error('An error occurred.');\r\n                }\r\n            })\r\n            .then(res => {\r\n                // console.log('return', res.return);\r\n                if (res.success){\r\n                    dispatch(formSubmitSuccess(res.return.order_id, res.return.email));\r\n                }\r\n                else {\r\n                    dispatch(formSubmitFailure(res.return.code));\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n                // dispatch(formSubmitFailure(err));\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport function getDeliveryMethod() {\r\n    return (dispatch) => {\r\n        const fetch_option = {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json'\r\n            }\r\n        }\r\n\r\n        // const url = 'http://192.168.99.100/catering/retail/customer_info/getDeliveryMethod';\r\n        const url = '/api/catering/retail/customer_info/getDeliveryMethod';\r\n\r\n        fetch(url, fetch_option)\r\n        .then((res) => {\r\n            if(res.ok) {\r\n                return res.json();\r\n            } else {\r\n                // console.log(res);\r\n                throw new Error('An error occurred.');\r\n            }\r\n        })\r\n        .then(res => {\r\n            // console.log('return', res.return);\r\n            dispatch(getDeliveryMethodSuccess(res.return.delivery_method));\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n            dispatch(getDeliveryMethodFailure(err));\r\n        })\r\n    }\r\n}\r\n\r\nexport const getDeliveryMethodSuccess = (delivery_method) => ({\r\n    type: GET_DELIVERY_METHOD,\r\n    payload: {\r\n        delivery_method\r\n    }\r\n})\r\n\r\nexport const getDeliveryMethodFailure = (err) => ({\r\n    type: GET_DELIVERY_METHOD_FAILURE,\r\n    payload: {\r\n        err\r\n    }\r\n})\r\n\r\nexport const handleTextarea = (text) => ({\r\n    type: ADDITIONAL_NOTE,\r\n    payload: text\r\n})","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from 'react-router-dom';\r\nimport { Row, Col, ButtonToolbar } from 'react-bootstrap';\r\n\r\nimport { updateCurrentNav } from '../redux/actions/main';\r\n\r\nconst roundTo = require('roundto');\r\n\r\nclass Bottom extends React.Component {\r\n\r\n    getTotal = () => {\r\n        return roundTo(\r\n                this.props.global.breakfast.total +\r\n                this.props.global.byo_breakfast.total +\r\n                this.props.global.lunch.total +\r\n                this.props.global.office_party.total +\r\n                this.props.global.beverage.total,\r\n                2\r\n            );\r\n    }\r\n\r\n    render() {\r\n\r\n        const navIndex = this.props.global.main.nav;\r\n        const routes = this.props.global.main.routes;\r\n\r\n        return(\r\n            <React.Fragment>\r\n                <Row>\r\n                    <Col>\r\n                        <p style={{fontSize: '22px', fontWeight: '600', textAlign: 'right', padding: '20px 15px'}}>Subtotal ${this.getTotal()}</p>\r\n                    </Col>\r\n                </Row>\r\n                <ButtonToolbar>\r\n\r\n                    {\r\n                        (navIndex !== 0 && navIndex !== 5) ?\r\n                        <Link\r\n                        className={\"btn add-btn\"}\r\n                        style={{marginRight: '10px', width: '200px'}}\r\n                        to={routes[navIndex-1]}\r\n                        >Prev</Link>\r\n                        :\r\n                        null\r\n                    }\r\n\r\n                    {\r\n                        navIndex !== 5 ? \r\n                        <Link\r\n                        className={\"btn add-btn\"}\r\n                        style={{marginLeft: 'auto', width:'200px'}}\r\n                        to={routes[navIndex+1]}\r\n                        >Next</Link>\r\n                        :\r\n                        <Link\r\n                        className={\"btn add-btn\"}\r\n                        style={{marginLeft: 'auto', width:'150px'}}\r\n                        to={routes[0]}\r\n                        >Add More Food</Link>\r\n                    }\r\n\r\n                </ButtonToolbar>\r\n\r\n                {/* <ButtonToolbar style={{marginTop: '15px'}}>\r\n                    {\r\n                        navIndex !== 5 ?\r\n                        <Link\r\n                        className={\"btn add-btn\"}\r\n                        style={{width:'100%'}}\r\n                        to={routes[5]}\r\n                        >Review Order</Link>\r\n                        :\r\n                        null\r\n                    }\r\n                </ButtonToolbar> */}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    global: state\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => (\r\n    {\r\n        updateCurrentNav: (index) => dispatch(updateCurrentNav(index))\r\n    }\r\n)\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Bottom)","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Row, Col, Card, ButtonToolbar, Button, ListGroup } from 'react-bootstrap';\r\nimport NumberInput from '../common/numberInput.js';\r\n\r\nimport { addExecutiveBeginning, closeExecutiveBeginning, updateExecutiveBeginning } from '../../redux/actions/breakfast';\r\n\r\nclass ExecutiveBreakfast extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        let list = {\r\n            ham_gruyere: 0,\r\n            egg_bacon: 0,\r\n            egg_chorizo: 0,\r\n            egg_white: 0\r\n        };\r\n        if (this.props.add === 'edit'){ \r\n            list = this.props.breakfast.ex_breakfast.list[this.props.id]; \r\n        }\r\n\r\n        this.state = {\r\n            qty: (this.props.add === 'edit' ? 6 : 0),\r\n            list: list,\r\n            error: false,\r\n            error_msg: '',\r\n            max_qty: 6\r\n        }\r\n    }\r\n\r\n    onChangeInput = (name, qty) => {\r\n        this.setState({error: false})\r\n\r\n        let list = this.state.list;\r\n        // list[name] = qty;\r\n        const max_qty = this.state.max_qty;\r\n        let tmp_qty = 0;\r\n        for (let key in list){\r\n            if (key !== name){\r\n                tmp_qty = tmp_qty + list[key];    \r\n            }\r\n            else{\r\n                tmp_qty = tmp_qty + qty;\r\n            }\r\n        }\r\n        \r\n        if (tmp_qty <= max_qty){\r\n            list[name] = qty;\r\n            this.setState({\r\n                list: list,\r\n                qty: tmp_qty\r\n            })\r\n        }\r\n        else {\r\n            this.setState({\r\n                error: true,\r\n                error_msg: 'qty max error'\r\n            })\r\n            return 'error';\r\n        }\r\n    }\r\n\r\n    closeExecutiveBeginning = () => {\r\n        this.props.closeExecutiveBeginning();\r\n    }\r\n\r\n    addExecutiveBeginning = () => {\r\n        if (this.validateSandwiches()){\r\n\r\n        }\r\n        else {\r\n            this.props.addExecutiveBeginning(this.state.list);\r\n        }\r\n    }\r\n\r\n    updateExecutiveBeginning = () => {\r\n        if (this.validateSandwiches()){\r\n\r\n        }\r\n        else {\r\n            this.props.updateExecutiveBeginning(this.props.id, this.state.list);\r\n        }\r\n    }\r\n\r\n    validateSandwiches = () => {\r\n        let error = false;\r\n        // let list = this.state.list;\r\n        // const max_qty = this.state.max_qty;\r\n        // let tmp_qty = 0;\r\n        // for (let key in list){\r\n        //     tmp_qty = tmp_qty + list[key];\r\n        // }\r\n        \r\n        if (this.state.qty !== this.state.max_qty){\r\n            this.setState({error: true});\r\n            error = true;\r\n        }\r\n        \r\n        return error;\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <Card className=\"col-md-12 p-0\">\r\n                <Card.Header>\r\n\r\n                </Card.Header>\r\n\r\n                <Card.Body>\r\n                    <Card.Title>Select Your Sandwiches\r\n                        <span style={{ textTransform: 'initial', marginLeft: '12px', fontSize: '17px', color: '#545454'}}>\r\n                            Select 6\r\n                        </span>\r\n                    </Card.Title>\r\n                </Card.Body>\r\n\r\n                <Card.Body className={this.state.error ? 'su-alert' : ''}>\r\n                    <Card.Text className=\"pl-3\">\r\n                        You selected <strong>{this.state.qty} of {this.state.max_qty}</strong> Sandwiches.\r\n                    </Card.Text>\r\n                </Card.Body>\r\n\r\n                <ListGroup variant=\"flush\">\r\n\r\n                    <ListGroup.Item className=\"menu-list\">\r\n                        <Row className=\"mb-3\">\r\n\r\n                            <Col className=\"wrap_qty col\">\r\n                                {this.props.breakfast.ex_breakfast_name.ham_gruyere}\r\n                                <NumberInput \r\n                                    readonly={true}\r\n                                    onChange={this.onChangeInput.bind(this)}\r\n                                    name=\"ham_gruyere\"\r\n                                    value={this.state.list.ham_gruyere}\r\n                                    style={{float: 'left'}}\r\n                                />\r\n                            </Col>\r\n\r\n                        </Row>\r\n                        <Row className=\"mb-3\">\r\n\r\n                            <Col className=\"wrap_qty\">\r\n                                {this.props.breakfast.ex_breakfast_name.egg_bacon}\r\n                                <NumberInput \r\n                                    readonly={true}\r\n                                    onChange={this.onChangeInput.bind(this)}\r\n                                    name=\"egg_bacon\"\r\n                                    value={this.state.list.egg_bacon}\r\n                                    style={{float: 'left'}}\r\n                                />\r\n                            </Col>\r\n\r\n                        </Row>\r\n\r\n                        <Row className=\"mb-3\">\r\n\r\n                            <Col className=\"wrap_qty\">\r\n                                {this.props.breakfast.ex_breakfast_name.egg_chorizo}\r\n                                <NumberInput \r\n                                    readonly={true}\r\n                                    onChange={this.onChangeInput.bind(this)}\r\n                                    name=\"egg_chorizo\"\r\n                                    value={this.state.list.egg_chorizo}\r\n                                    style={{float: 'left'}}\r\n                                />\r\n                            </Col>\r\n\r\n                        </Row>\r\n                        <Row className=\"mb-3\">\r\n\r\n                            <Col className=\"wrap_qty\">\r\n                                {this.props.breakfast.ex_breakfast_name.egg_white}\r\n                                <NumberInput \r\n                                    readonly={true}\r\n                                    onChange={this.onChangeInput.bind(this)}\r\n                                    name=\"egg_white\"\r\n                                    value={this.state.list.egg_white}\r\n                                    style={{float: 'left'}}\r\n                                />\r\n                            </Col>\r\n\r\n                        </Row>\r\n\r\n                        \r\n\r\n                        <Row>\r\n                            <Col>\r\n                                <ButtonToolbar className=\"mt-4\">\r\n                                    {\r\n                                        this.props.add === 'add' ?\r\n                                        <Button variant=\"primary\" size=\"md\" onClick={this.addExecutiveBeginning.bind(this)} className=\"add-btn\">\r\n                                            Add\r\n                                        </Button>\r\n                                        :\r\n                                        <Button variant=\"primary\" size=\"md\" onClick={this.updateExecutiveBeginning.bind(this)} className=\"add-btn\">\r\n                                            Update\r\n                                        </Button>\r\n                                    }\r\n                                    <Button variant=\"light\" size=\"md\" onClick={this.closeExecutiveBeginning.bind(this)} className=\"cancel-btn ml-2\">\r\n                                        Cancel\r\n                                    </Button>\r\n                                </ButtonToolbar>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                    </ListGroup.Item>\r\n\r\n                </ListGroup>\r\n\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    breakfast: state.breakfast\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => (\r\n    {\r\n        addExecutiveBeginning: (qty) => dispatch(addExecutiveBeginning(qty)),\r\n        closeExecutiveBeginning: () => dispatch(closeExecutiveBeginning()),\r\n        updateExecutiveBeginning: (id, list) => dispatch(updateExecutiveBeginning(id, list))\r\n    }\r\n)\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(ExecutiveBreakfast)","import { \r\n    UPDATE_BREAKFAST_QTY,\r\n    OPEN_BREAKFAST_EXECUTIVE_BEGINNING,\r\n    CLOSE_BREAKFAST_EXECUTIVE_BEGINNING,\r\n    ADD_BREAKFAST_EXECUTIVE_BEGINNING,\r\n    UPDATE_BREAKFAST_EXECUTIVE_BEGINNING,\r\n    EDIT_BREAKFAST_EXECUTIVE_BEGINNING,\r\n    REMOVE_BREAKFAST_EXECUTIVE_BEGINNING\r\n} from './actionTypes.js'\r\n\r\nexport const updateQty = (name, qty) => ({\r\n    type: UPDATE_BREAKFAST_QTY,\r\n    payload: {\r\n        name,\r\n        qty\r\n    }\r\n})\r\nexport const openExecutiveBeginning = (add, id) => ({\r\n    type: OPEN_BREAKFAST_EXECUTIVE_BEGINNING,\r\n    payload: {\r\n        add,\r\n        id\r\n    }\r\n})\r\nexport const closeExecutiveBeginning = () => ({\r\n    type: CLOSE_BREAKFAST_EXECUTIVE_BEGINNING\r\n})\r\n\r\nexport const addExecutiveBeginning = (list) => ({\r\n    type: ADD_BREAKFAST_EXECUTIVE_BEGINNING,\r\n    payload: {\r\n        list\r\n    }\r\n})\r\n\r\nexport const updateExecutiveBeginning = (id,list) => ({\r\n    type: UPDATE_BREAKFAST_EXECUTIVE_BEGINNING,\r\n    payload: {\r\n        id,\r\n        list\r\n    }\r\n})\r\n\r\nexport const editExBreakfast = (id) => ({\r\n    type: EDIT_BREAKFAST_EXECUTIVE_BEGINNING,\r\n    payload: {\r\n        id\r\n    }\r\n})\r\n\r\nexport const removeExBreakfast = (id) => ({\r\n    type: REMOVE_BREAKFAST_EXECUTIVE_BEGINNING,\r\n    payload: {\r\n        id\r\n    }\r\n})","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Row, Col, Card, ListGroup, ButtonToolbar, Button } from 'react-bootstrap';\r\nimport NumberInput from '../common/numberInput.js';\r\nimport TopNav from '../common/TopNav.js';\r\nimport Bottom from '../bottom';\r\nimport ExecutiveBeginning from './ExecutiveBreakfast.js';\r\n\r\nimport { updateQty, openExecutiveBeginning, editExBreakfast, removeExBreakfast } from '../../redux/actions/breakfast';\r\nimport { updateCurrentNav } from '../../redux/actions/main';\r\n\r\nclass Breakfast extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            total: this.props.breakfast.total\r\n        }\r\n\r\n        this.props.updateCurrentNav(0);\r\n    }\r\n\r\n    onChangeHandler = (name, value) => {\r\n        this.props.updateQty(name, value);\r\n        // console.log(result);\r\n        // console.result\r\n        // console.log(this.props.breakfast.bk_beginnings);\r\n    }\r\n\r\n    openExecutiveBeginning = () => {\r\n        this.props.openExecutiveBeginning('add', null);\r\n    }\r\n\r\n    printSelectedExBreakfast = (list, index, num) => {\r\n        const names = this.props.breakfast.ex_breakfast_name;\r\n        let print = [];\r\n        let count = 0;\r\n        let total_qty = 0;\r\n\r\n        for (let key in names) {\r\n            if (list[key] !== 0){\r\n                if (typeof list[key] === 'undefined'){ return null; }\r\n                print.push(<li className=\"\" key={'_child_' + count}> { names[key] + ' : ' + list[key] } </li>);\r\n                total_qty = total_qty + list[key];\r\n                count++;\r\n            }\r\n        }\r\n\r\n        if (total_qty === 0){return null;}\r\n        \r\n        return (\r\n            <Col md={6} style={{padding: '5px'}} key={'ex_box' + num}>\r\n                <div key={index} className=\"\" style={{padding: '5px', border: '1px solid #e1e1e1'}}>\r\n                    <h3 className=\"p-0\" style={{fontSize: '1rem'}}>#{num}\r\n                        <ButtonToolbar style={{float: 'right'}}>\r\n                            <Button onClick={() => {this.editExBreakfast(index)}} className=\"edit-btn\">Edit</Button>\r\n                            <Button onClick={() => {this.removeExBreakfast(index)}} className=\"remove-btn\">Remove</Button>\r\n                        </ButtonToolbar>\r\n                    </h3>\r\n                    <ul key={index} className=\"\" style={{height: '96px', paddingLeft: '10px', listStyle: 'none'}}> {print} </ul>\r\n                </div>\r\n            </Col>\r\n        )\r\n    }\r\n\r\n    editExBreakfast = (index) => {\r\n        this.props.editExBreakfast(index);\r\n    }\r\n\r\n    removeExBreakfast = (index) => {\r\n        this.props.removeExBreakfast(index);\r\n    }\r\n\r\n    render() {\r\n        let ex_count = 0;\r\n        return(\r\n            <React.Fragment>\r\n            {\r\n                this.props.breakfast.ex_breakfast.box_open ? \r\n                <ExecutiveBeginning\r\n                    add={this.props.breakfast.ex_breakfast.add}\r\n                    id={this.props.breakfast.ex_breakfast.id}\r\n                />\r\n                :\r\n                <Card className=\"col-md-12 p-0\">\r\n\r\n                <Card.Header>\r\n                    <TopNav />\r\n                </Card.Header>\r\n\r\n                <Card.Body>\r\n                    <Card.Title>Breakfast</Card.Title>\r\n                </Card.Body>\r\n\r\n                <ListGroup variant=\"flush\">\r\n\r\n                    <ListGroup.Item className=\"menu-list\">\r\n\r\n                        <Row>\r\n                            <Col className=\"wrap_name\">\r\n                                <p className=\"name\">{this.props.breakfast.bk_beginnings.name}</p>\r\n                                <p className=\"description\">{this.props.breakfast.bk_beginnings.description}</p>\r\n                            </Col>\r\n\r\n                            <Col className=\"wrap_price\">\r\n                                <p>${this.props.breakfast.bk_beginnings.price}</p>\r\n                            </Col>\r\n\r\n                            <Col className=\"wrap_qty\">\r\n\r\n                                <NumberInput \r\n                                    onChange={this.onChangeHandler.bind(this)}\r\n                                    name=\"bk_beginnings\"\r\n                                    value={this.props.breakfast.bk_beginnings.qty}\r\n                                />\r\n\r\n                            </Col>\r\n                        </Row>\r\n\r\n                    </ListGroup.Item>\r\n\r\n                    <ListGroup.Item className=\"menu-list\">\r\n\r\n                        <Row>\r\n                            <Col className=\"wrap_name\">\r\n                                <p className=\"name\">{this.props.breakfast.ex_breakfast.name}</p>\r\n                                <p className=\"description\">{this.props.breakfast.ex_breakfast.description}</p>\r\n                            </Col>\r\n\r\n                            <Col className=\"wrap_price\">\r\n                                <p>${this.props.breakfast.ex_breakfast.price}</p>\r\n                            </Col>\r\n\r\n                            <Col className=\"name\">\r\n                                <NumberInput \r\n                                    noleft={true}\r\n                                    readonly={true}\r\n                                    onChange={this.openExecutiveBeginning.bind(this)}\r\n                                    name=\"ex_breakfast\"\r\n                                    value={this.props.breakfast.ex_breakfast.qty}\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <Row style={{marginBottom: '1rem'}}>\r\n\r\n                                {\r\n                                    this.props.breakfast.ex_breakfast.list.map((row, index) => {\r\n                                        if (row === null){return null;}\r\n                                        else {\r\n                                            ex_count++;\r\n                                            return this.printSelectedExBreakfast(row, index, ex_count)\r\n                                        }\r\n                                    })\r\n                                }\r\n                        </Row>\r\n\r\n                    </ListGroup.Item>\r\n\r\n                    <ListGroup.Item className=\"menu-list\">\r\n\r\n                        <Row>\r\n                            <Col className=\"wrap_name\">\r\n                                <p className=\"name\">{this.props.breakfast.baker_dozen.name}</p>\r\n                                <p className=\"description\">{this.props.breakfast.baker_dozen.description}</p>\r\n                            </Col>\r\n\r\n                            <Col className=\"wrap_price\">\r\n                                <p>${this.props.breakfast.baker_dozen.price}</p>\r\n                            </Col>\r\n\r\n                            <Col className=\"name\">\r\n                                <NumberInput \r\n                                    onChange={this.onChangeHandler.bind(this)}\r\n                                    name=\"baker_dozen\"\r\n                                    value={this.props.breakfast.baker_dozen.qty}\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n\r\n                    </ListGroup.Item>\r\n\r\n                    <ListGroup.Item className=\"menu-list total\">\r\n                        <Row>\r\n                            <Col>\r\n                                ${this.props.breakfast.total}\r\n                            </Col>\r\n                        </Row>\r\n                    </ListGroup.Item>\r\n\r\n                </ListGroup>\r\n\r\n                <Row>\r\n                    <Col md={12}>\r\n                        <Bottom />\r\n                    </Col>\r\n                </Row>\r\n\r\n            </Card>\r\n            }\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    breakfast: state.breakfast\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => (\r\n    {\r\n        updateQty: (name, qty) => dispatch(updateQty(name, qty)),\r\n        openExecutiveBeginning: (add, id) => dispatch(openExecutiveBeginning(add, id)),\r\n        updateCurrentNav: (index) => dispatch(updateCurrentNav(index)),\r\n        editExBreakfast: (id) => dispatch(editExBreakfast(id)),\r\n        removeExBreakfast: (id) => dispatch(removeExBreakfast(id))\r\n\r\n    }\r\n)\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Breakfast)\r\n","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Row, Col, Card, ButtonToolbar, Button, ListGroup } from 'react-bootstrap';\r\nimport NumberInput from '../common/numberInput.js';\r\n\r\nimport { addSweetTreat, closeSweetTreat, updateSweetTreats } from '../../redux/actions/byo_breakfast';\r\n\r\nclass SweetTreat extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        let list = {\r\n            bear_claws: 0,\r\n            blueberry_muffins: 0,\r\n            brownies: 0,\r\n            chocolate_croissants: 0,\r\n            cinnamon_blondies: 0,\r\n            croissants: 0,\r\n            granookies: 0,\r\n            variety: 0\r\n        };\r\n        if (this.props.add === 'edit'){ \r\n            list = this.props.sweet_treats[this.props.type].list[this.props.id];\r\n        }\r\n\r\n        this.state = {\r\n            qty: (this.props.add === 'edit' ? (this.props.type === 'half_dozen' ? 6 : 12) : 0),\r\n            list: list,\r\n            error: false,\r\n            error_msg: '',\r\n            max_qty: (this.props.type === 'half_dozen' ? 6 : 12)\r\n        }\r\n        // console.log(this.state);\r\n    }\r\n\r\n    onChangeInput = (name, qty) => {\r\n        this.setState({error: false})\r\n\r\n        let list = this.state.list;\r\n        // list[name] = qty;\r\n        const max_qty = this.state.max_qty;\r\n        let tmp_qty = 0;\r\n        for (let key in list){\r\n            if (key !== name){\r\n                tmp_qty = tmp_qty + list[key];    \r\n            }\r\n            else{\r\n                tmp_qty = tmp_qty + qty;\r\n            }\r\n        }\r\n        \r\n        if (tmp_qty <= max_qty){\r\n            list[name] = qty;\r\n            this.setState({\r\n                list: list,\r\n                qty: tmp_qty\r\n            })\r\n        }\r\n        else {\r\n            this.setState({\r\n                error: true,\r\n                error_msg: 'qty max error'\r\n            })\r\n            return 'error';\r\n        }\r\n    }\r\n\r\n    closeSweetTreat = () => {\r\n        this.props.closeSweetTreat();\r\n    }\r\n\r\n    addSweetTreat = () => {\r\n        if (this.validateSweetTreat()){\r\n\r\n        }\r\n        else {\r\n            this.props.addSweetTreat(this.props.type, this.state.list);\r\n        }\r\n    }\r\n\r\n    updateSweetTreat = () => {\r\n        // console.log(this.props.type);\r\n        if (this.validateSweetTreat()){\r\n\r\n        }\r\n        else {\r\n            this.props.updateSweetTreats(this.props.type, this.props.id, this.state.list);\r\n        }\r\n    }\r\n\r\n    validateSweetTreat = () => {\r\n        let error = false;        \r\n        if (this.state.qty !== this.state.max_qty){\r\n            this.setState({error: true});\r\n            error = true;\r\n        }\r\n        return error;\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <Card className=\"col-md-12 p-0\">\r\n                <Card.Header>\r\n\r\n                </Card.Header>\r\n\r\n                <Card.Body>\r\n                    <Card.Title>\r\n                        Select Your Sweet Treats\r\n                        <span style={{ textTransform: 'initial', marginLeft: '12px', fontSize: '17px', color: '#545454'}}>\r\n                        \r\n                        {\r\n                            this.props.type === 'half_dozen' ?\r\n                            'Select 6'\r\n                            :\r\n                            'Select 12'\r\n                        }\r\n                        </span>\r\n                    </Card.Title>\r\n                </Card.Body>\r\n\r\n                <Card.Body className={this.state.error ? 'su-alert' : ''}>\r\n                    <Card.Text>You selected <strong>{this.state.qty} of {this.state.max_qty}</strong> Sweet Treats.</Card.Text>\r\n                </Card.Body>\r\n\r\n                <ListGroup variant=\"flush\">\r\n\r\n                    <ListGroup.Item className=\"menu-list\">\r\n                        <Row className=\"mb-3\">\r\n\r\n                            <Col className=\"wrap_qty\">\r\n                                Bear Claws\r\n                                <NumberInput \r\n                                    readonly={true}\r\n                                    onChange={this.onChangeInput.bind(this)}\r\n                                    name=\"bear_claws\"\r\n                                    value={this.state.list.bear_claws}\r\n                                    style={{float: 'left'}}\r\n                                />\r\n                            </Col>\r\n\r\n                            <Col className=\"wrap_qty\">\r\n                                Blueberry Muffins\r\n                                <NumberInput \r\n                                    readonly={true}\r\n                                    onChange={this.onChangeInput.bind(this)}\r\n                                    name=\"blueberry_muffins\"\r\n                                    value={this.state.list.blueberry_muffins}\r\n                                    style={{float: 'left'}}\r\n                                />\r\n                            </Col>\r\n\r\n                            <Col className=\"wrap_qty\">\r\n                                Brownies\r\n                                <NumberInput \r\n                                    readonly={true}\r\n                                    onChange={this.onChangeInput.bind(this)}\r\n                                    name=\"brownies\"\r\n                                    value={this.state.list.brownies}\r\n                                    style={{float: 'left'}}\r\n                                />\r\n                            </Col>\r\n\r\n                            <Col className=\"wrap_qty\">\r\n                                Chocolate Croissants\r\n                                <NumberInput \r\n                                    readonly={true}\r\n                                    onChange={this.onChangeInput.bind(this)}\r\n                                    name=\"chocolate_croissants\"\r\n                                    value={this.state.list.chocolate_croissants}\r\n                                    style={{float: 'left'}}\r\n                                />\r\n                            </Col>\r\n\r\n                        </Row>\r\n\r\n                        <Row className=\"mb-3\">\r\n\r\n                            {/* <Col className=\"wrap_qty\">\r\n                                Cinnamon Blondies\r\n                                <NumberInput \r\n                                    readonly={true}\r\n                                    onChange={this.onChangeInput.bind(this)}\r\n                                    name=\"cinnamon_blondies\"\r\n                                    value={this.state.list.cinnamon_blondies}\r\n                                    style={{float: 'left'}}\r\n                                />\r\n                            </Col> */}\r\n\r\n                            <Col className=\"wrap_qty\">\r\n                                Croissants\r\n                                <NumberInput \r\n                                    readonly={true}\r\n                                    onChange={this.onChangeInput.bind(this)}\r\n                                    name=\"croissants\"\r\n                                    value={this.state.list.croissants}\r\n                                    style={{float: 'left'}}\r\n                                />\r\n                            </Col>\r\n\r\n                            <Col className=\"wrap_qty\">\r\n                                Granookies\r\n                                <NumberInput \r\n                                    readonly={true}\r\n                                    onChange={this.onChangeInput.bind(this)}\r\n                                    name=\"granookies\"\r\n                                    value={this.state.list.granookies}\r\n                                    style={{float: 'left'}}\r\n                                />\r\n                            </Col>\r\n\r\n                            <Col className=\"wrap_qty\">\r\n                                Magic Bar\r\n                                <NumberInput \r\n                                    readonly={true}\r\n                                    onChange={this.onChangeInput.bind(this)}\r\n                                    name=\"variety\"\r\n                                    value={this.state.list.variety}\r\n                                    style={{float: 'left'}}\r\n                                />\r\n                            </Col>\r\n\r\n                            <Col></Col>                            \r\n\r\n                        </Row>\r\n\r\n                        <Row>\r\n                            <Col>\r\n                                <ButtonToolbar className=\"mt-4\">\r\n                                    {\r\n                                        this.props.add === 'add' ?\r\n                                        <Button variant=\"primary\" size=\"md\" onClick={this.addSweetTreat.bind(this)} className=\"add-btn\">\r\n                                            Add\r\n                                        </Button>\r\n                                        :\r\n                                        <Button variant=\"primary\" size=\"md\" onClick={this.updateSweetTreat.bind(this)} className=\"add-btn\">\r\n                                            Update\r\n                                        </Button>\r\n                                    }\r\n                                    <Button variant=\"light\" size=\"md\" onClick={this.closeSweetTreat.bind(this)} className=\"cancel-btn ml-2\">\r\n                                        Cancel\r\n                                    </Button>\r\n                                </ButtonToolbar>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                    </ListGroup.Item>\r\n\r\n                </ListGroup>\r\n\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    sweet_treats: state.byo_breakfast.sweet_treats\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => (\r\n    {\r\n        addSweetTreat: (name, qty) => dispatch(addSweetTreat(name, qty)),\r\n        closeSweetTreat: () => dispatch(closeSweetTreat()),\r\n        updateSweetTreats: (type, id, list) => dispatch(updateSweetTreats(type, id, list))\r\n    }\r\n)\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(SweetTreat)","import { \r\n    UPDATE_BYO_BREAKFAST_COFFEE,\r\n    UPDATE_BYO_BREAKFAST_FRUITSALAD,\r\n    OPEN_BYO_BREAKFAST_SWEETTREATS,\r\n    CLOSE_BYO_BREAKFAST_SWEETTREATS,\r\n    ADD_BYO_BREAKFAST_SWEETTREATS,\r\n    EDIT_BYO_BREAKFAST_SWEETTREATS,\r\n    UPDATE_BYO_BREAKFAST_SWEETTREATS,\r\n    REMOVE_BYO_BREAKFAST_SWEETTREATS,\r\n    UPDATE_BYO_BREAKFAST_SANDWICH\r\n} from './actionTypes.js'\r\n\r\nexport const updateCoffee = (name, qty) => ({\r\n    type: UPDATE_BYO_BREAKFAST_COFFEE,\r\n    payload: {\r\n        name,\r\n        qty\r\n    }\r\n})\r\n\r\nexport const updateFruitSalad = (name, qty) => ({\r\n    type: UPDATE_BYO_BREAKFAST_FRUITSALAD,\r\n    payload: {\r\n        name,\r\n        qty\r\n    }\r\n})\r\n\r\nexport const openSweetTreat = (type, add, id) => ({\r\n    type: OPEN_BYO_BREAKFAST_SWEETTREATS,\r\n    payload: {\r\n        type,\r\n        add,\r\n        id\r\n    }\r\n})\r\n\r\nexport const closeSweetTreat = () => ({\r\n    type: CLOSE_BYO_BREAKFAST_SWEETTREATS\r\n})\r\n\r\nexport const addSweetTreat = (name, list) => ({\r\n    type: ADD_BYO_BREAKFAST_SWEETTREATS,\r\n    payload: {\r\n        name,\r\n        list\r\n    }\r\n})\r\n\r\nexport const editSweetTreats = (type, id) => ({\r\n    type: EDIT_BYO_BREAKFAST_SWEETTREATS,\r\n    payload: {\r\n        type,\r\n        id\r\n    }\r\n})\r\n\r\nexport const updateSweetTreats = (type, id, list) => ({\r\n    type: UPDATE_BYO_BREAKFAST_SWEETTREATS,\r\n    payload: {\r\n        type,\r\n        id,\r\n        list\r\n    }\r\n})\r\n\r\nexport const removeSweetTreats = (type, id) => ({\r\n    type: REMOVE_BYO_BREAKFAST_SWEETTREATS,\r\n    payload: {\r\n        type,\r\n        id\r\n    }\r\n})\r\n\r\nexport const updateSandwich = (name, qty) => ({\r\n    type: UPDATE_BYO_BREAKFAST_SANDWICH,\r\n    payload: {\r\n        name,\r\n        qty\r\n    }\r\n})","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Row, Col, Card, ListGroup, ButtonToolbar, Button } from 'react-bootstrap';\r\nimport NumberInput from '../common/numberInput.js';\r\nimport TopNav from '../common/TopNav.js';\r\nimport SweetTreat from './SweetTreat';\r\n\r\nimport { updateCurrentNav } from '../../redux/actions/main';\r\nimport { \r\n    updateCoffee, \r\n    updateFruitSalad, \r\n    openSweetTreat, \r\n    editSweetTreats,\r\n    removeSweetTreats,\r\n    updateSandwich \r\n} from '../../redux/actions/byo_breakfast';\r\n\r\nimport Bottom from '../bottom';\r\n\r\nconst roundTo = require('roundto');\r\n\r\nclass ByoBreakfast extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            sweet_treats: {\r\n                selected: false,\r\n                names: this.props.byo_breakfast.sweet_treats_name\r\n            }\r\n        }\r\n        this.props.updateCurrentNav(1);\r\n    }\r\n\r\n    onChangeCoffee = (name, qty) => {\r\n        this.props.updateCoffee(name, qty);\r\n    }\r\n\r\n    onChangeFruitSalad = (name, qty) => {\r\n        this.props.updateFruitSalad(name, qty);\r\n    }\r\n\r\n    openSweetTreat = (type, add, id) => {\r\n        this.props.openSweetTreat(type, true, null);\r\n    }\r\n\r\n    printSelectedSweets = (type, list, index, num) => {\r\n        const names = this.state.sweet_treats.names;\r\n        let print = [];\r\n        let count = 0;\r\n        let height = '72px';\r\n        if (type === \"half_dozen\"){height = '48px';}\r\n        \r\n        for (let key in names) {\r\n            if (list[key] !== 0){\r\n                if (typeof list[key] === 'undefined'){ return null; }\r\n                print.push(<li className=\"list-inline-item\" key={type + '_child_' + count}> { names[key] + ' : ' + list[key] } </li>);\r\n                count++;\r\n            }\r\n        }\r\n        \r\n        return (\r\n            <Col md={6} key={type + num} style={{padding: '5px'}}>\r\n                <div className=\"\" style={{padding: '5px', border: '1px solid #e1e1e1'}}>\r\n                    <h3 className=\"p-0\" style={{fontSize: '1rem'}}>#{num}\r\n                        <ButtonToolbar style={{float: 'right'}}>\r\n                            <Button onClick={() => {this.editSweetTreats(type, index)}} className=\"edit-btn\">Edit</Button>\r\n                            <Button onClick={() => {this.removeSweetTreats(type,index)}} className=\"remove-btn\">Remove</Button>\r\n                        </ButtonToolbar>\r\n                    </h3>\r\n                    <ul key={index} className=\"\" style={{paddingLeft: '10px', listStyle: 'none', height: height}}> {print} </ul>\r\n                </div>\r\n            </Col>\r\n        )\r\n    }\r\n\r\n    editSweetTreats = (type, index) => {\r\n        this.props.editSweetTreats(type, index);\r\n    }\r\n\r\n    removeSweetTreats = (type, index) => {\r\n        this.props.removeSweetTreats(type, index);\r\n    }\r\n\r\n    onChangeSandwich = (name, qty) => {\r\n        this.props.updateSandwich(name, qty);\r\n    }\r\n\r\n    render() {\r\n        let st_half_count = 0;\r\n        let st_dozen_count = 0;\r\n        return (\r\n            <React.Fragment>\r\n            {\r\n                this.props.byo_breakfast.sweet_treats.box_open ?\r\n                <SweetTreat\r\n                    type={this.props.byo_breakfast.sweet_treats.type}\r\n                    add={this.props.byo_breakfast.sweet_treats.add}\r\n                    id={this.props.byo_breakfast.sweet_treats.id}\r\n                ></SweetTreat> :\r\n                <Card className=\"col-md-12 p-0\">\r\n\r\n                    <Card.Header>\r\n                        <TopNav />\r\n                    </Card.Header>\r\n\r\n                    <Card.Body>\r\n                        <Card.Title>Build Your Own Breakfast</Card.Title>\r\n                    </Card.Body>\r\n\r\n                    <ListGroup variant=\"flush\">\r\n\r\n                        <ListGroup.Item className=\"menu-list\">\r\n\r\n                            <Row>\r\n                                <Col className=\"wrap_name\">\r\n                                    <p className=\"name\">96oz Wildcat Coffee Carafe</p>\r\n                                </Col>\r\n\r\n                                <Col className=\"wrap_price\">\r\n                                    <p>${this.props.byo_breakfast.coffee_carafe.price}</p>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row>\r\n\r\n                                <Col className=\"wrap_qty\">\r\n                                    <p>Regular</p>\r\n                                    <NumberInput \r\n                                        onChange={this.onChangeCoffee.bind(this)}\r\n                                        name=\"regular\"\r\n                                        value={this.props.byo_breakfast.coffee_carafe.list.regular}\r\n                                        style={{float:'left'}}\r\n                                    />\r\n                                </Col>\r\n\r\n                                <Col className=\"wrap_qty\">\r\n                                    <p>Decaf</p>\r\n                                    <NumberInput \r\n                                        onChange={this.onChangeCoffee.bind(this)}\r\n                                        name=\"decaf\"\r\n                                        value={this.props.byo_breakfast.coffee_carafe.list.decaf}\r\n                                        style={{float:'left'}}\r\n                                    />\r\n                                </Col>\r\n\r\n                                <Col className=\"wrap_qty\">\r\n                                    <p>Iced</p>\r\n                                    <NumberInput \r\n                                        onChange={this.onChangeCoffee.bind(this)}\r\n                                        name=\"iced\"\r\n                                        value={this.props.byo_breakfast.coffee_carafe.list.iced}\r\n                                        style={{float:'left'}}\r\n                                    />\r\n                                </Col>\r\n\r\n                                <Col className=\"wrap_qty\">\r\n                                    <p>Iced Decaf</p>\r\n                                    <NumberInput \r\n                                        onChange={this.onChangeCoffee.bind(this)}\r\n                                        name=\"iced_decaf\"\r\n                                        value={this.props.byo_breakfast.coffee_carafe.list.iced_decaf}\r\n                                        style={{float:'left'}}\r\n                                    />\r\n                                </Col>\r\n\r\n                            </Row>\r\n\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item className=\"menu-list total\">\r\n                            <Row>\r\n                                <Col>\r\n                                    ${this.props.byo_breakfast.coffee_carafe.total}\r\n                                </Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n\r\n                            <Row>\r\n                                <Col className=\"wrap_name\" style={{marginBottom: '1rem'}}>\r\n                                    <p className=\"name\">Fresh Seasonal Fruit Salad</p>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                <Col>\r\n                                    $49.99 / Serves 20\r\n                                </Col>\r\n                                <Col className=\"wrap_qty\">\r\n                                    <NumberInput \r\n                                        onChange={this.onChangeFruitSalad.bind(this)}\r\n                                        name=\"serve_20\"\r\n                                        value={this.props.byo_breakfast.fruit_salad.serve_20.qty}\r\n                                        style={{float:'left'}}\r\n                                    />\r\n                                </Col>\r\n\r\n                                <Col>\r\n                                    $29.99 / Serves 8\r\n                                </Col>\r\n                                <Col className=\"wrap_qty\">\r\n                                    <NumberInput \r\n                                        onChange={this.onChangeFruitSalad.bind(this)}\r\n                                        name=\"serve_8\"\r\n                                        value={this.props.byo_breakfast.fruit_salad.serve_8.qty}\r\n                                        style={{float:'left'}}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item className=\"menu-list total\">\r\n                            <Row>\r\n                                <Col>\r\n                                    ${this.props.byo_breakfast.fruit_salad.total}\r\n                                </Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n\r\n                    </ListGroup>\r\n\r\n                    <ListGroup variant=\"flush\">\r\n\r\n                        <ListGroup.Item className=\"menu-list\">\r\n\r\n                            <Row>\r\n                                <Col className=\"wrap_name\" style={{marginBottom: '1rem'}}>\r\n                                    <p className=\"name\">Sweet Treats</p>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row style={{marginBottom: '1rem'}}>\r\n                                <Col>\r\n                                    ${this.props.byo_breakfast.sweet_treats.half_dozen.price} - 1/2 Dozen\r\n                                </Col>\r\n                                <Col className=\"wrap_price\">\r\n                                    <NumberInput \r\n                                        noleft={true}\r\n                                        readonly={true}\r\n                                        onChange={this.openSweetTreat.bind(this)}\r\n                                        name=\"half_dozen\"\r\n                                        value={this.props.byo_breakfast.sweet_treats.half_dozen.qty}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row style={{marginBottom: '1rem'}}>\r\n                                {\r\n                                    this.props.byo_breakfast.sweet_treats.half_dozen.list.map((row, index) => {\r\n                                        if (row === null){return null;}\r\n                                        st_half_count++;\r\n                                        return this.printSelectedSweets('half_dozen', row, index, st_half_count);\r\n                                    })\r\n                                }\r\n                            </Row>\r\n\r\n                            <Row style={{marginBottom: '1rem'}}>\r\n                                <Col>\r\n                                    ${this.props.byo_breakfast.sweet_treats.dozen.price} - Dozen\r\n                                </Col>\r\n                                <Col className=\"wrap_price\">\r\n                                    <NumberInput \r\n                                        noleft={true}\r\n                                        readonly={true}\r\n                                        onChange={this.openSweetTreat.bind(this)}\r\n                                        name=\"dozen\"\r\n                                        value={this.props.byo_breakfast.sweet_treats.dozen.qty}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row style={{marginBottom: '1rem'}}>\r\n                                {\r\n                                    this.props.byo_breakfast.sweet_treats.dozen.list.map((row, index) => {\r\n                                        if (row === null){return null;}\r\n                                        st_dozen_count++;\r\n                                        return this.printSelectedSweets('dozen', row, index, st_dozen_count);\r\n                                    })\r\n                                }\r\n                            </Row>\r\n\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item className=\"menu-list total\">\r\n                            <Row>\r\n                                <Col>\r\n                                    ${roundTo(this.props.byo_breakfast.sweet_treats.total,2)}\r\n                                </Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item className=\"menu-list\">\r\n\r\n                            <Row>\r\n                                <Col className=\"wrap_name\" style={{marginBottom: '1rem'}}>\r\n                                    <p className=\"name\">Savory Breakfast Sandwiches</p>\r\n                                    <p className=\"description mb-0\">sold by the 1/2 Dozen</p>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row style={{marginBottom: '.5rem'}}>\r\n\r\n                                <Col className=\"wrap_qty\">\r\n                                    ${this.props.byo_breakfast.sandwiches.list.zucchini.price} - {this.props.byo_breakfast.sandwiches.list.zucchini.name}\r\n                                    <NumberInput \r\n                                        onChange={this.onChangeSandwich.bind(this)}\r\n                                        name=\"zucchini\"\r\n                                        value={this.props.byo_breakfast.sandwiches.list.zucchini.qty}\r\n                                    />\r\n                                </Col>\r\n\r\n                            </Row>\r\n\r\n                            <Row style={{marginBottom: '.5rem'}}>\r\n\r\n                                <Col className=\"wrap_qty\">\r\n                                    ${this.props.byo_breakfast.sandwiches.list.sausage_waffle.price} - {this.props.byo_breakfast.sandwiches.list.sausage_waffle.name}\r\n                                    <NumberInput \r\n                                        onChange={this.onChangeSandwich.bind(this)}\r\n                                        name=\"sausage_waffle\"\r\n                                        value={this.props.byo_breakfast.sandwiches.list.sausage_waffle.qty}\r\n                                    />\r\n                                </Col>\r\n\r\n                            </Row>\r\n\r\n                            <Row style={{marginBottom: '.5rem'}}>\r\n\r\n                                <Col className=\"wrap_qty\">\r\n                                    ${this.props.byo_breakfast.sandwiches.list.sausage_bagel.price} - {this.props.byo_breakfast.sandwiches.list.sausage_bagel.name}\r\n                                    <NumberInput \r\n                                        onChange={this.onChangeSandwich.bind(this)}\r\n                                        name=\"sausage_bagel\"\r\n                                        value={this.props.byo_breakfast.sandwiches.list.sausage_bagel.qty}\r\n                                    />\r\n                                </Col>\r\n\r\n                            </Row>\r\n\r\n                            <Row style={{marginBottom: '.5rem'}}>\r\n\r\n                                <Col className=\"wrap_qty\">\r\n                                    ${this.props.byo_breakfast.sandwiches.list.pepper_bagel.price} - {this.props.byo_breakfast.sandwiches.list.pepper_bagel.name}\r\n                                    <NumberInput \r\n                                        onChange={this.onChangeSandwich.bind(this)}\r\n                                        name=\"pepper_bagel\"\r\n                                        value={this.props.byo_breakfast.sandwiches.list.pepper_bagel.qty}\r\n                                    />\r\n                                </Col>\r\n\r\n                            </Row>\r\n\r\n                            <Row style={{marginBottom: '.5rem'}}>\r\n\r\n                                <Col className=\"wrap_qty\">\r\n                                    ${this.props.byo_breakfast.sandwiches.list.red_pepper_bagel.price} - {this.props.byo_breakfast.sandwiches.list.red_pepper_bagel.name}\r\n                                    <NumberInput \r\n                                        onChange={this.onChangeSandwich.bind(this)}\r\n                                        name=\"red_pepper_bagel\"\r\n                                        value={this.props.byo_breakfast.sandwiches.list.red_pepper_bagel.qty}\r\n                                    />\r\n                                </Col>\r\n\r\n                            </Row>\r\n\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item className=\"menu-list total\">\r\n                            <Row>\r\n                                <Col>\r\n                                    ${roundTo(this.props.byo_breakfast.sandwiches.total,2)}\r\n                                </Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n\r\n                    </ListGroup>\r\n\r\n                    <Row>\r\n                        <Col md={12}>\r\n                            <Bottom />\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </Card>\r\n            }\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    byo_breakfast: state.byo_breakfast\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => (\r\n    {\r\n        updateCoffee: (name, qty) => dispatch(updateCoffee(name, qty)),\r\n        updateFruitSalad: (name, qty) => dispatch(updateFruitSalad(name, qty)),\r\n        openSweetTreat: (type, add, id) => dispatch(openSweetTreat(type, add, id)),\r\n        editSweetTreats: (type, id) => dispatch(editSweetTreats(type, id)),\r\n        removeSweetTreats: (type, id) => dispatch(removeSweetTreats(type, id)),\r\n        updateSandwich: (name, qty) => dispatch(updateSandwich(name, qty)),\r\n        updateCurrentNav: (index) => dispatch(updateCurrentNav(index))\r\n    }\r\n)\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(ByoBreakfast)","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Row, Col, Card, ListGroup, ButtonToolbar, Button, Form } from 'react-bootstrap';\r\nimport NumberInput from '../common/numberInput.js';\r\n\r\nimport { openLunchBox, addLunchBox, updateLunchBox, closeLunchBox } from '../../redux/actions/lunch';\r\n\r\nimport './lunchbox.css';\r\n\r\nclass LunchBox extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        // Create ref objects\r\n        this.first = React.createRef();\r\n\r\n        // let list = [];\r\n\r\n        if (this.props.lunch.actionType === 'add'){\r\n            // Initialize\r\n            this.state = {\r\n                choice_one: {\r\n                    list: {turk_philly_chess: 0,italian_job: 0,chicken_club: 0,bruschetta_panini: 0,hali_caesar: 0,kale_crunch: 0},\r\n                    qty: 0,\r\n                    error: false\r\n                },\r\n                choice_two: {\r\n                    list: {baked_lays: 0,pb_jalapeno: 0,pb_original: 0,sun_chips: 0,bbq_chips: 0, fruit: 0},\r\n                    qty: 0,\r\n                    error: false\r\n                },\r\n                choice_three: {\r\n                    list: {coke: 0,diet_coke: 0,dr_pepper: 0,diet_dr_pepper: 0,sprite: 0,dasani: 0,cherry_coke: 0,coke_zero: 0},\r\n                    qty: 0,\r\n                    error: false\r\n                },\r\n                extra: {\r\n                    list: [\r\n                        {one: 'None', two: 'None', three: 'None'},\r\n                        {one: 'None', two: 'None', three: 'None'}\r\n                    ],\r\n                    total: 0\r\n                },\r\n                error: false\r\n            }\r\n        }\r\n        else {\r\n            this.state = {\r\n                choice_one: {\r\n                    list: this.props.lunch.list[this.props.lunch.id].choice_one.list,\r\n                    qty: this.props.lunch.list[this.props.lunch.id].choice_one.qty,\r\n                    error: false\r\n                },\r\n                choice_two: {\r\n                    list: this.props.lunch.list[this.props.lunch.id].choice_two.list,\r\n                    qty: this.props.lunch.list[this.props.lunch.id].choice_two.qty,\r\n                    error: false\r\n                },\r\n                choice_three: {\r\n                    list: this.props.lunch.list[this.props.lunch.id].choice_three.list,\r\n                    qty: this.props.lunch.list[this.props.lunch.id].choice_three.qty,\r\n                    error: false\r\n                },\r\n                extra: this.props.lunch.list[this.props.lunch.id].extra,\r\n                error: false\r\n            }\r\n        }\r\n    }\r\n\r\n    checkQty = (list, name, qty) => {\r\n        let tmp_qty = 0;\r\n        for (let key in list){\r\n            if (key !== name){\r\n                tmp_qty = tmp_qty + list[key];    \r\n            }\r\n            else{\r\n                tmp_qty = tmp_qty + qty;\r\n            }\r\n        }\r\n\r\n        return tmp_qty;\r\n    }\r\n\r\n    updateInput = (name, qty, type, total_qty) => {\r\n        this.setState({\r\n            error: false,\r\n            [type]: {\r\n                ...this.state[type],\r\n                list: {\r\n                    ...this.state[type].list,\r\n                    [name]: qty\r\n                },\r\n                qty: total_qty\r\n            }\r\n        })\r\n    }\r\n\r\n    onChangeFirst = (name, qty) => {\r\n        const tmp_qty = this.checkQty(this.state.choice_one.list, name, qty);\r\n        if (tmp_qty > 8) {\r\n            return 'error';\r\n        }\r\n        else {\r\n            this.setState({choice_one:{...this.state.choice_one, error: false}}, function() {\r\n                this.updateInput(name, qty, 'choice_one', tmp_qty);\r\n            });\r\n        }\r\n    }\r\n\r\n    onChangeSecond = (name, qty) => {\r\n        const tmp_qty = this.checkQty(this.state.choice_two.list, name, qty);\r\n        if (tmp_qty > 8) {\r\n            return 'error';\r\n        }\r\n        else {\r\n            this.setState({choice_two:{...this.state.choice_two, error: false}}, function() {\r\n                this.updateInput(name, qty, 'choice_two', tmp_qty);\r\n            });\r\n        }\r\n    }\r\n\r\n    onChangeThree = (name, qty) => {\r\n        const tmp_qty = this.checkQty(this.state.choice_three.list, name, qty);\r\n        if (tmp_qty > 8) {\r\n            return 'error';\r\n        }\r\n        else {\r\n            this.setState({choice_three:{...this.state.choice_three, error: false}}, function() {\r\n                this.updateInput(name, qty, 'choice_three', tmp_qty);\r\n            });\r\n        }\r\n    }\r\n\r\n    addLunchBox = () => {\r\n        // const qty = this.state.choice_one.qty + this.state.choice_two.qty + this.state.choice_three.qty;\r\n\r\n        if (!this.validateForm()) {\r\n            const list = {\r\n                choice_one: this.state.choice_one,\r\n                choice_two: this.state.choice_two,\r\n                choice_three: this.state.choice_three,\r\n                extra: this.state.extra\r\n            }\r\n            this.props.addLunchBox(list);\r\n        }\r\n    }\r\n\r\n    updateLunchBox = () => {\r\n        if (!this.validateForm()){\r\n            const list = {\r\n                choice_one: this.state.choice_one,\r\n                choice_two: this.state.choice_two,\r\n                choice_three: this.state.choice_three,\r\n                extra: this.state.extra\r\n            }\r\n            this.props.updateLunchBox(this.props.lunch.id, list);\r\n        }\r\n    }\r\n\r\n    closeLunchBox = () => {\r\n        this.props.closeLunchBox();\r\n    }\r\n\r\n    validateForm = () => {\r\n        let error = false;\r\n        if (this.state.choice_one.qty !== 8) {\r\n            this.setState({choice_one:{...this.state.choice_one, error: true}}, function() {\r\n                window.scrollTo(0,400);\r\n            });\r\n            error = true;\r\n        }\r\n        else if (this.state.choice_two.qty !== 8) {\r\n            this.setState({choice_two:{...this.state.choice_two, error: true}}, function() {\r\n                window.scrollTo(0,900);\r\n            });\r\n            error = true;\r\n        }\r\n        else if (this.state.choice_three.qty !== 8) {\r\n            this.setState({choice_three:{...this.state.choice_three, error: true}}, function() {\r\n                window.scrollTo(0,1000);\r\n            });\r\n            error = true;\r\n        }\r\n        return error;\r\n    }\r\n\r\n    printSandwiches = (key) => {\r\n        return (\r\n            <Col className=\"wrap_name\" md={6}>\r\n                <p className=\"name\">\r\n                    {this.props.lunch.products.sandwiches[key].name}\r\n                </p>\r\n                <p className=\"description\">\r\n                    {this.props.lunch.products.sandwiches[key].description}\r\n                </p>\r\n                <NumberInput \r\n                    readonly={true}\r\n                    onChange={this.onChangeFirst.bind(this)}\r\n                    name={key}\r\n                    value={this.state.choice_one.list[key]}\r\n                    style={{float: 'right'}}\r\n                />\r\n            </Col>\r\n        );\r\n    }\r\n\r\n    printSalads = (key) => {\r\n        return (\r\n            <Col className=\"wrap_name\" md={6}>\r\n                <p className=\"name\">\r\n                    {this.props.lunch.products.salads[key].name}\r\n                </p>\r\n                <p className=\"description\">\r\n                    {this.props.lunch.products.salads[key].description}\r\n                </p>\r\n                <NumberInput \r\n                    readonly={true}\r\n                    onChange={this.onChangeFirst.bind(this)}\r\n                    name={key}\r\n                    value={this.state.choice_one.list[key]}\r\n                    style={{float: 'right'}}\r\n                />\r\n            </Col>\r\n        );\r\n    }\r\n\r\n    printChips = (key) => {\r\n        return (\r\n            <Col className=\"wrap_name\" md={6}>\r\n                <p className=\"name\" style={{display: 'inline', lineHeight: '32px'}}>\r\n                    {this.props.lunch.products.chips[key]}\r\n                </p>\r\n                <NumberInput \r\n                    readonly={true}\r\n                    onChange={this.onChangeSecond.bind(this)}\r\n                    name={key}\r\n                    value={this.state.choice_two.list[key]}\r\n                    style={{float: 'right'}}\r\n                />\r\n            </Col>\r\n        );\r\n    }\r\n\r\n    onChangeExtra = (id,order,event) => {\r\n        let list = this.state.extra.list;\r\n        list[id][order] = event.target.value;\r\n        this.setState({\r\n            extra: {\r\n                ...this.state.extra,\r\n                list: list\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Card className=\"col-md-12 p-0\">\r\n\r\n                <Card.Header>\r\n                    <p>\"Build Your Own\" Lunch Box</p>\r\n                    <p>Serves 8</p>\r\n                    <ul>\r\n                        <li>Select your salads or sandwiches</li>\r\n                        <li>Select your side (chips or fruit)</li>\r\n                        <li>Select your bottled beverage</li>\r\n                    </ul>\r\n                </Card.Header>\r\n\r\n                <Card.Body className={this.state.choice_one.error ? 'su-alert' : ''}>\r\n                    <h5 style={{fontWeight: '600', color: '#f48222'}}>1. Select your salads or sandwiches <span style={{color: 'rgb(84, 84, 84)'}}>- {this.state.choice_one.qty} of 8</span></h5>\r\n                    \r\n                    <ListGroup variant=\"flush\">\r\n                        <ListGroup.Item className=\"menu-list\" style={{borderWidth: '0px'}}>\r\n\r\n                            <p style={{fontWeight: '300', fontSize: '15px'}}>\r\n                                <span style={{fontWeight: '600', textDecoration: 'underline', fontSize: '17px'}}>Sandwiches</span> (served warm)\r\n                            </p>\r\n\r\n                            <Row className=\"pb-3\" style={{borderBottom: '1px solid #e1e1e1'}}>\r\n                                {this.printSandwiches('turk_philly_chess')}\r\n                                {this.printSandwiches('italian_job')}\r\n                            </Row>\r\n\r\n                            <Row className=\"pt-2 pb-3\" style={{borderBottom: '1px solid #e1e1e1'}}>\r\n                                {this.printSandwiches('chicken_club')}\r\n                                {this.printSandwiches('bruschetta_panini')}\r\n                            </Row>\r\n\r\n                            <p className=\"mt-3\"  style={{fontWeight: '600', textDecoration: 'underline', fontSize: '17px'}}>Cold Salads</p>\r\n\r\n                            <Row className=\"pt-2 pb-3\" style={{borderBottom: '1px solid #e1e1e1'}}>\r\n                                {this.printSalads('hali_caesar')}\r\n                                {this.printSalads('kale_crunch')}\r\n                            </Row>\r\n\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Card.Body>\r\n\r\n                <Card.Body className={this.state.choice_two.error ? 'su-alert' : ''}>\r\n                    <h5 style={{fontWeight: '600', color: '#f48222'}}>2. Select your side <span style={{color: 'rgb(84, 84, 84)'}}>- {this.state.choice_two.qty} of 8</span></h5>\r\n                    <ListGroup variant=\"flush\">\r\n                        <ListGroup.Item className=\"menu-list\" style={{borderWidth: '0px'}}>\r\n\r\n                            <Row className=\"pt-2 pb-2\" style={{borderBottom: '1px solid #e1e1e1'}}>\r\n                                {this.printChips('baked_lays')}\r\n                                {this.printChips('pb_jalapeno')}\r\n                            </Row>\r\n\r\n                            <Row className=\"pt-2 pb-2\" style={{borderBottom: '1px solid #e1e1e1'}}>\r\n                                {this.printChips('pb_original')}\r\n                                {this.printChips('sun_chips')}\r\n                            </Row>\r\n                            <Row className=\"pt-2 pb-2\" style={{borderBottom: '1px solid #e1e1e1'}}>\r\n                                {this.printChips('bbq_chips')}\r\n                                <Col className=\"wrap_name\" md={6}>\r\n                                    <p className=\"name\" style={{display: 'inline', lineHeight: '32px'}}>\r\n                                        Fruit\r\n                                    </p>\r\n                                    <NumberInput \r\n                                        readonly={true}\r\n                                        onChange={this.onChangeSecond.bind(this)}\r\n                                        name=\"fruit\"\r\n                                        value={this.state.choice_two.list.fruit}\r\n                                        style={{float: 'right'}}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Card.Body>\r\n\r\n                <Card.Body className={this.state.choice_three.error ? 'su-alert' : ''}>\r\n                    <h5 style={{fontWeight: '600', color: '#f48222'}}>3. Select your bottled beverage <span style={{color: 'rgb(84, 84, 84)'}}>- {this.state.choice_three.qty} of 8</span></h5>\r\n\r\n                    <ListGroup variant=\"flush\">\r\n                        <ListGroup.Item className=\"menu-list\" style={{borderWidth: '0px'}}>\r\n\r\n                            <Row className=\"pb-3\" style={{borderBottom: '1px solid #e1e1e1'}}>\r\n                                {\r\n                                    ['coke', 'diet_coke', 'dr_pepper', 'diet_dr_pepper'].map((key, index) => {\r\n                                        return (\r\n                                            <Col className=\"wrap_name\" md={3} key={'lunchbox_soda'+index}>\r\n                                                <p className=\"name\">\r\n                                                    {this.props.lunch.products.beverages[key]}\r\n                                                </p>\r\n                                                <NumberInput \r\n                                                    readonly={true}\r\n                                                    onChange={this.onChangeThree.bind(this)}\r\n                                                    name={key}\r\n                                                    value={this.state.choice_three.list[key]}\r\n                                                    style={{float: 'left'}}\r\n                                                />\r\n                                            </Col>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </Row>\r\n\r\n                            <Row className=\"pb-3\" style={{borderBottom: '1px solid #e1e1e1'}}>\r\n                                {\r\n                                    ['sprite', 'dasani', 'cherry_coke', 'coke_zero'].map((key, index) => {\r\n                                        return (\r\n                                            <Col className=\"wrap_name\" md={3} key={'print_soda_'+index}>\r\n                                                <p className=\"name\">\r\n                                                    {this.props.lunch.products.beverages[key]}\r\n                                                </p>\r\n                                                <NumberInput \r\n                                                    readonly={true}\r\n                                                    onChange={this.onChangeThree.bind(this)}\r\n                                                    name={key}\r\n                                                    value={this.state.choice_three.list[key]}\r\n                                                    style={{float: 'left'}}\r\n                                                />\r\n                                            </Col>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </Row>\r\n\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Card.Body>\r\n\r\n                <Card.Body>\r\n                    <h5 style={{fontWeight: '600', color: '#f48222'}}>- Add an Extra Sandwich or Salad</h5>\r\n                    <ListGroup variant=\"flush\">\r\n                        <ListGroup.Item className=\"menu-list\" style={{borderWidth: '0px'}}>\r\n                            \r\n                            <Form.Row>\r\n                            <h6 style={{width: '100%'}}>Extra #1</h6>\r\n                            <Form.Group as={Col} md=\"5\" className=\"pl-0 pr-0\">\r\n                                <Form.Label>Sandwich or Salad - $6.99</Form.Label>\r\n                                <Form.Control as=\"select\" style={{width: '400px'}} value={this.state.extra.list[0].one} onChange={this.onChangeExtra.bind(this,0,'one')}>\r\n                                    <option>None</option>\r\n                                    <option>Peppered Turkey Philly Cheese (1/2 Sandwich)</option>\r\n                                    <option>The Italian Job (1/2 Sandwich)</option>\r\n                                    <option>Chicken Club</option>\r\n                                    <option>Bruschetta Panini</option>\r\n                                    <option>Hali Caesar</option>\r\n                                    <option>Kale Crunch</option>\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                            {\r\n                                this.state.extra.list[0].one === 'None' ?\r\n                                null\r\n                                :\r\n                                <React.Fragment>\r\n                                    <Form.Group as={Col} md=\"3\" className=\"pl-0 pr-0\">\r\n                                        <Form.Label>Chip - $.89</Form.Label>\r\n                                        <Form.Control as=\"select\" style={{width: '200px'}} value={this.state.extra.list[0].two} onChange={this.onChangeExtra.bind(this,0,'two')}>\r\n                                            <option>None</option>\r\n                                            <option>Baked Lays</option>\r\n                                            <option>Poore Brother's - Jalapeno</option>\r\n                                            <option>Poore Brother's - Original</option>\r\n                                            <option>Sun Chips</option>\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n                                    <Form.Group as={Col} md=\"4\" className=\"pl-0 pr-0\">\r\n                                        <Form.Label>All Sodas - $2.09, Dasani Water - $1.99</Form.Label>\r\n                                        <Form.Control as=\"select\" style={{width: '200px'}} value={this.state.extra.list[0].three} onChange={this.onChangeExtra.bind(this,0,'three')}>\r\n                                            <option>None</option>\r\n                                            <option>Coke</option>\r\n                                            <option>Diet Coke</option>\r\n                                            <option>Dr.Pepper</option>\r\n                                            <option>Diet Dr.Pepper</option>\r\n                                            <option>Sprite</option>\r\n                                            <option>Dasani Water</option>\r\n                                            <option>Cherry Coke</option>\r\n                                            <option>Coke Zero</option>\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n                                </React.Fragment>\r\n                            }\r\n                            </Form.Row>\r\n                        </ListGroup.Item>\r\n                        {\r\n                            this.state.extra.list[0].one === 'None' ?\r\n                            null\r\n                            :\r\n                            <ListGroup.Item className=\"menu-list\" style={{borderWidth: '0px'}}>\r\n                                \r\n                                <Form.Row>\r\n                                <h6 style={{width: '100%'}}>Extra #2</h6>\r\n                                <Form.Group as={Col} md=\"5\" className=\"pl-0 pr-0\">\r\n                                    <Form.Label>Sandwich or Salad - $6.99</Form.Label>\r\n                                    <Form.Control as=\"select\" style={{width: '400px'}} value={this.state.extra.list[1].one} onChange={this.onChangeExtra.bind(this,1,'one')}>\r\n                                        <option>None</option>\r\n                                        <option>Peppered Turkey Philly Cheese (1/2 Sandwich)</option>\r\n                                        <option>The Italian Job (1/2 Sandwich)</option>\r\n                                        <option>Chicken Club</option>\r\n                                        <option>Bruschetta Panini</option>\r\n                                        <option>Hali Caesar</option>\r\n                                        <option>Kale Crunch</option>\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                                {\r\n                                    this.state.extra.list[1].one === 'None' ?\r\n                                    null\r\n                                    :\r\n                                    <React.Fragment>\r\n                                        <Form.Group as={Col} md=\"3\" className=\"pl-0 pr-0\">\r\n                                            <Form.Label>Chip - $.89</Form.Label>\r\n                                            <Form.Control as=\"select\" style={{width: '200px'}} value={this.state.extra.list[1].two} onChange={this.onChangeExtra.bind(this,1,'two')}>\r\n                                                <option>None</option>\r\n                                                <option>Baked Lays</option>\r\n                                                <option>Poore Brother's - Jalapeno</option>\r\n                                                <option>Poore Brother's - Original</option>\r\n                                                <option>Sun Chips</option>\r\n                                            </Form.Control>\r\n                                        </Form.Group>\r\n                                        <Form.Group as={Col} md=\"4\" className=\"pl-0 pr-0\">\r\n                                            <Form.Label>All Sodas - $2.09, Dasani Water - $1.99</Form.Label>\r\n                                            <Form.Control as=\"select\" style={{width: '200px'}} value={this.state.extra.list[1].three} onChange={this.onChangeExtra.bind(this,1,'three')}>\r\n                                                <option>None</option>\r\n                                                <option>Coke</option>\r\n                                                <option>Diet Coke</option>\r\n                                                <option>Dr.Pepper</option>\r\n                                                <option>Diet Dr.Pepper</option>\r\n                                                <option>Sprite</option>\r\n                                                <option>Dasani Water</option>\r\n                                                <option>Cherry Coke</option>\r\n                                                <option>Coke Zero</option>\r\n                                            </Form.Control>\r\n                                        </Form.Group>\r\n                                    </React.Fragment>\r\n                                }\r\n                                </Form.Row>\r\n                            </ListGroup.Item>\r\n                        }\r\n                    </ListGroup>\r\n                </Card.Body>\r\n\r\n                <Row>\r\n                    <Col>\r\n                        <ButtonToolbar className=\"mt-3\">\r\n                            {\r\n                                this.props.lunch.actionType === 'add' ?\r\n                                <Button variant=\"primary\" size=\"md\" onClick={this.addLunchBox.bind(this)} className=\"add-btn\">\r\n                                    Add\r\n                                </Button>\r\n                                :\r\n                                <Button variant=\"primary\" size=\"md\" onClick={this.updateLunchBox.bind(this)} className=\"add-btn\">\r\n                                    Update\r\n                                </Button>\r\n                            }\r\n                            <Button variant=\"light\" size=\"md\" onClick={this.closeLunchBox.bind(this)} className=\"cancel-btn ml-2\">\r\n                                Cancel\r\n                            </Button>\r\n                        </ButtonToolbar>\r\n                    </Col>\r\n                </Row>\r\n\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    lunch: state.lunch\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => (\r\n    {\r\n        openLunchBox: () => dispatch(openLunchBox()),\r\n        addLunchBox: (list) => dispatch(addLunchBox(list)),\r\n        updateLunchBox: (id, list) => dispatch(updateLunchBox(id, list)),\r\n        closeLunchBox: () => dispatch(closeLunchBox())\r\n    }\r\n)\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(LunchBox)","import { \r\n    OPEN_LUNCHBOX,\r\n    ADD_LUNCHBOX,\r\n    OPEN_LUNCHBOX_EDITOR,\r\n    UPDATE_LUNCHBOX,\r\n    REMOVE_LUNCHBOX,\r\n    CLOSE_LUNCHBOX \r\n} from './actionTypes.js'\r\n\r\nexport const openLunchBox = () => ({\r\n    type: OPEN_LUNCHBOX\r\n})\r\nexport const addLunchBox = (list) => ({\r\n    type: ADD_LUNCHBOX,\r\n    payload: {\r\n        list\r\n    }\r\n})\r\n\r\nexport const openLunchBoxEditor = (index) => ({\r\n    type: OPEN_LUNCHBOX_EDITOR,\r\n    payload: {\r\n        index\r\n    }\r\n})\r\n\r\nexport const updateLunchBox = (index, list) => ({\r\n    type: UPDATE_LUNCHBOX,\r\n    payload: {\r\n        index,\r\n        list\r\n    }\r\n})\r\n\r\nexport const removeLunchBox = (index) => ({\r\n    type: REMOVE_LUNCHBOX,\r\n    payload: {\r\n        index\r\n    }\r\n})\r\n\r\nexport const closeLunchBox = (name, qty) => ({\r\n    type: CLOSE_LUNCHBOX\r\n})","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Row, Col, Card, ListGroup, ButtonToolbar, Button } from 'react-bootstrap';\r\nimport NumberInput from '../common/numberInput.js';\r\nimport TopNav from '../common/TopNav.js';\r\n\r\nimport { updateCurrentNav } from '../../redux/actions/main';\r\nimport { openLunchBox, removeLunchBox, openLunchBoxEditor } from '../../redux/actions/lunch';\r\n\r\nimport LunchBox from './LunchBox';\r\nimport Bottom from '../bottom';\r\n\r\nclass Lunch extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.props.updateCurrentNav(2);\r\n    }\r\n\r\n    openLunchBox = () => {\r\n        this.props.openLunchBox();\r\n    }\r\n\r\n    openLunchBoxEditor = (id) => {\r\n        this.props.openLunchBoxEditor(id);\r\n    }\r\n\r\n    removeLunchBox = (id) => {\r\n        this.props.removeLunchBox(id);\r\n    }\r\n\r\n    printItems = (list) => {\r\n        let print = [];\r\n        for (let key in list){\r\n            if (list[key] !== 0){\r\n                print.push(<li>{this.props.lunch.names[key].name + ' : ' + list[key]}</li>);     \r\n            }                           \r\n        }\r\n        return (<ul style={{paddingLeft: '20px'}}>{print}</ul>);\r\n    }\r\n\r\n    printExtra = (extras) => {\r\n        let print = [];\r\n        for (let i = 0; i < 2; i++) {\r\n            const extra = extras.list[i];\r\n            if (extra.one !== 'None') {\r\n                const one = <span>{extra.one}</span>;\r\n                let two = null;\r\n                let three = null;\r\n                if (extra.two !== 'None'){ two = <span>, {extra.two}</span> }\r\n                if (extra.three !== 'None'){ three = <span>, {extra.three}</span> }\r\n                print.push(\r\n                    <div key={'extra' + i} style={{fontSize: '0.9rem'}}>Extra #{i+1} : {one} {two} {three}</div>\r\n                )   \r\n\r\n            }            \r\n        }\r\n\r\n        if (print.length === 0){return null;}\r\n        else {\r\n            return (\r\n                <React.Fragment>\r\n                    <hr style={{border: '1px solid #e1e1e1'}} />\r\n                    <h6 style={{width: '100%', fontWeight: '600'}}>Extra Sandwiches or Salads</h6>\r\n                    {print}\r\n                </React.Fragment>\r\n            );\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let count = 0;\r\n        return (\r\n            <React.Fragment>\r\n            {\r\n                this.props.lunch.open_box ?\r\n                <LunchBox></LunchBox>\r\n                :\r\n                <Card className=\"col-md-12 p-0\">\r\n\r\n                    <Card.Header>\r\n                        <TopNav />\r\n                    </Card.Header>\r\n\r\n                    <Card.Body>\r\n                        <Card.Title>Lunch</Card.Title>\r\n                    </Card.Body>\r\n\r\n                    <ListGroup variant=\"flush\">\r\n\r\n                        <ListGroup.Item className=\"menu-list\">\r\n\r\n                            <Row>\r\n                                <Col className=\"wrap_name\">\r\n                                    <p style={{fontWeight: '600'}}>\"Build Your Own\" Lunch Box - ${this.props.lunch.price}</p>\r\n                                    <p>\r\n                                        Serves 8<br />\r\n                                        Select your salads or sandwiches<br />\r\n                                        Select yor side (chips or fruit)<br />\r\n                                        Select your bottled beverage\r\n                                    </p>\r\n                                </Col>\r\n                                <Col>\r\n                                    <NumberInput \r\n                                        noleft={true}\r\n                                        readonly={true}\r\n                                        onChange={this.openLunchBox.bind(this)}\r\n                                        name=\"lunch\"\r\n                                        value={this.props.lunch.qty}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                        \r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item className=\"menu-list\">\r\n\r\n                            <Row>\r\n                                \r\n                                {\r\n                                    this.props.lunch.list.map((boxes, pindex) => {\r\n                                        if (boxes.length !== 0) {\r\n                                            count++;\r\n                                            return (\r\n                                            <Col md={6} className=\"wrap-lunch-box\">\r\n                                                <div key={'list-'+pindex} style={{padding: '10px', border: '1px solid #dadada'}}>\r\n                                                    <h3 className=\"p-0\" style={{fontSize: '1rem'}}>Box #{count}\r\n                                                        <ButtonToolbar style={{float: 'right'}}>\r\n                                                            <Button onClick={() => {this.openLunchBoxEditor(pindex)}} className=\"sweet-edit-btn edit-btn\">Edit</Button>\r\n                                                            <Button onClick={() => {this.removeLunchBox(pindex)}} className=\"sweet-remove-btn remove-btn\">Remove</Button>\r\n                                                        </ButtonToolbar>\r\n                                                    </h3>\r\n                                                    <div>\r\n                                                        <ul className=\"list-inline\">\r\n                                                            <li className=\"list-inline-item\"> \r\n                                                                {this.printItems(boxes.choice_one.list)}\r\n                                                            </li>\r\n                                                            <li className=\"list-inline-item\">\r\n                                                                {this.printItems(boxes.choice_two.list)} \r\n                                                            </li>\r\n                                                            <li className=\"list-inline-item\">\r\n                                                                {this.printItems(boxes.choice_three.list)} \r\n                                                            </li>\r\n                                                            <li className=\"list-inline-item\">\r\n                                                                {this.printExtra(boxes.extra)} \r\n                                                            </li>\r\n                                                        </ul>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </Col>\r\n                                            );\r\n                                        }\r\n                                        else {\r\n                                            return null;\r\n                                        }\r\n                                    }) \r\n                                }\r\n                            </Row>\r\n\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item className=\"menu-list total\">\r\n                            <Row>\r\n                                <Col>\r\n                                    ${this.props.lunch.total}\r\n                                </Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n\r\n                    </ListGroup>\r\n\r\n                    <Row>\r\n                        <Col md={12}>\r\n                            <Bottom />\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </Card>\r\n            }\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    lunch: state.lunch\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => (\r\n    {\r\n        openLunchBox: () => dispatch(openLunchBox()),\r\n        removeLunchBox: (index) => dispatch(removeLunchBox(index)),\r\n        updateCurrentNav: (index) => dispatch(updateCurrentNav(index)),\r\n        openLunchBoxEditor: (id) => dispatch(openLunchBoxEditor(id))\r\n    }\r\n)\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Lunch)","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Row, Col, Card, ListGroup } from 'react-bootstrap';\r\nimport NumberInput from '../common/numberInput.js';\r\nimport TopNav from '../common/TopNav.js';\r\n\r\nimport { updateCurrentNav } from '../../redux/actions/main';\r\nimport { updateQty } from '../../redux/actions/officeParty';\r\n\r\nimport Bottom from '../bottom';\r\n\r\nclass OfficeParty extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            total: this.props.op.total\r\n        }\r\n\r\n        this.props.updateCurrentNav(3);\r\n    }\r\n\r\n    onChangeHandler = (name, value) => {\r\n        this.props.updateQty(name, value);\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <Card className=\"col-md-12 p-0\">\r\n\r\n                <Card.Header>\r\n                    <TopNav />\r\n                </Card.Header>\r\n\r\n                <Card.Body>\r\n                    <Card.Title>Office Party</Card.Title>\r\n                </Card.Body>\r\n\r\n                <ListGroup variant=\"flush\">\r\n\r\n                    <ListGroup.Item className=\"menu-list\">\r\n\r\n                        <Row>\r\n                            <Col className=\"wrap_name\">\r\n                                <p>{this.props.op.serve_10.name}</p>\r\n                                <p>{this.props.op.serve_10.description}</p>\r\n                            </Col>\r\n\r\n                            <Col className=\"wrap_price\">\r\n                                <p>${this.props.op.serve_10.price}</p>\r\n                            </Col>\r\n\r\n                            <Col className=\"wrap_qty\">\r\n\r\n                                <NumberInput \r\n                                    onChange={this.onChangeHandler.bind(this)}\r\n                                    name=\"serve_10\"\r\n                                    value={this.props.op.serve_10.qty}\r\n                                />\r\n\r\n                            </Col>\r\n                        </Row>\r\n\r\n                    </ListGroup.Item>\r\n\r\n                    <ListGroup.Item className=\"menu-list total\">\r\n                        <Row>\r\n                            <Col>\r\n                                ${this.props.op.total}\r\n                            </Col>\r\n                        </Row>\r\n                    </ListGroup.Item>\r\n\r\n                </ListGroup>\r\n\r\n                <Row>\r\n                    <Col md={12}>\r\n                        <Bottom />\r\n                    </Col>\r\n                </Row>\r\n\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    op: state.office_party\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => (\r\n    {\r\n        updateQty: (name, qty) => dispatch(updateQty(name, qty)),\r\n        updateCurrentNav: (index) => dispatch(updateCurrentNav(index))\r\n    }\r\n)\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(OfficeParty)\r\n","import { UPDATE_OFFICEPARTY_QTY } from './actionTypes.js'\r\n\r\nexport const updateQty = (name, qty) => ({\r\n    type: UPDATE_OFFICEPARTY_QTY,\r\n    payload: {\r\n        name,\r\n        qty\r\n    }\r\n})","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Row, Col, Card, ListGroup } from 'react-bootstrap';\r\nimport NumberInput from '../common/numberInput.js';\r\nimport TopNav from '../common/TopNav.js';\r\n\r\nimport { updateCurrentNav } from '../../redux/actions/main';\r\nimport { \r\n    updateBeverage,\r\n} from '../../redux/actions/beverage';\r\n\r\nimport Bottom from '../bottom';\r\n\r\n// const roundTo = require('roundto');\r\n\r\nclass Beverage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.props.updateCurrentNav(4);\r\n    }\r\n\r\n    onChangeBeverage = (name, qty) => {\r\n        this.props.updateBeverage(name, qty);\r\n    }\r\n\r\n    printDrink = (name) => {\r\n        return (\r\n            <Col className=\"wrap_qty\">\r\n                <p style={{marginBottom: '5px', fontWeight: '600'}}>{this.props.beverage.list[name].name} - {this.props.beverage.list[name].price}</p>\r\n                <NumberInput \r\n                    onChange={this.onChangeBeverage.bind(this)}\r\n                    name={name}\r\n                    value={this.props.beverage.list[name].qty}\r\n                    style={{float:'left'}}\r\n                />\r\n            </Col>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Card className=\"col-md-12 p-0\">\r\n\r\n                <Card.Header>\r\n                    <TopNav />\r\n                </Card.Header>\r\n\r\n                <Card.Body>\r\n                    <Card.Title>Beverage <span style={{fontSize: '17px', textTransform: 'lowercase', color: '#4c4c4c'}}>(20oz)</span></Card.Title>\r\n                </Card.Body>\r\n\r\n                <ListGroup variant=\"flush\">\r\n\r\n                    <ListGroup.Item className=\"menu-list\">\r\n\r\n                        <Row>\r\n\r\n                            {this.printDrink('coke')}\r\n                            {this.printDrink('diet_coke')}\r\n                            {this.printDrink('dr_pepper')}\r\n                            {this.printDrink('diet_dr_pepper')}\r\n\r\n                        </Row>\r\n\r\n                        <Row className=\"mt-3\">\r\n\r\n                            {this.printDrink('sprite')}\r\n                            {this.printDrink('dasani')}\r\n                            {this.printDrink('cherry_coke')}\r\n                            {this.printDrink('coke_zero')}\r\n\r\n                        </Row>\r\n\r\n                    </ListGroup.Item>\r\n\r\n                    <ListGroup.Item className=\"menu-list total\">\r\n                        <Row>\r\n                            <Col>\r\n                                ${this.props.beverage.total}\r\n                            </Col>\r\n                        </Row>\r\n                    </ListGroup.Item>\r\n\r\n                </ListGroup>\r\n\r\n                <Row>\r\n                    <Col md={12}>\r\n                        <Bottom />\r\n                    </Col>\r\n                </Row>\r\n\r\n            </Card>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    beverage: state.beverage\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => (\r\n    {\r\n        updateBeverage: (name, qty) => dispatch(updateBeverage(name, qty)),\r\n        updateCurrentNav: (index) => dispatch(updateCurrentNav(index))\r\n    }\r\n)\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Beverage)","import { \r\n    UPDATE_BEVERAGE_QTY\r\n} from './actionTypes.js'\r\n\r\nexport const updateBeverage = (name, qty) => ({\r\n    type: UPDATE_BEVERAGE_QTY,\r\n    payload: {\r\n        name,\r\n        qty\r\n    }\r\n})","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { Row, Col, ListGroup } from 'react-bootstrap';\r\n\r\nclass Breakfast extends React.Component {    \r\n\r\n    render() {\r\n        let ex_count = 0;\r\n        return (\r\n\r\n            <ListGroup.Item style={{display: (this.props.state.total === 0 ? 'none' : null)}}>\r\n                <h3>Breakfast</h3>\r\n                <ul className=\"summary-list-group\">\r\n                    <li className=\"summary-list header\">\r\n                        <Row>\r\n                            <Col className=\"item\" md={5}>Item</Col>\r\n                            <Col className=\"qty\">Quantity</Col>\r\n                            <Col className=\"price\">Price</Col>\r\n                            <Col className=\"total\">Total</Col>\r\n                        </Row>\r\n                    </li>\r\n                    <li className=\"summary-list\" style={{display: (this.props.state.bk_beginnings.qty === 0 ? 'none' : null)}}>\r\n                        <Row>\r\n                            <Col className=\"item\" md={5}>{this.props.state.bk_beginnings.name}</Col>\r\n                            <Col className=\"qty\">{this.props.state.bk_beginnings.qty}</Col>\r\n                            <Col className=\"price\">${this.props.state.bk_beginnings.price}</Col>\r\n                            <Col className=\"total\">${this.props.state.bk_beginnings.total}</Col>\r\n                        </Row>\r\n                    </li>\r\n                    <li className=\"summary-list\" style={{display: (this.props.state.ex_breakfast.qty === 0 ? 'none' : null)}}>\r\n                        <Row>\r\n                            <Col className=\"item\" md={5}>{this.props.state.ex_breakfast.name}</Col>\r\n                            <Col className=\"qty\">{this.props.state.ex_breakfast.qty}</Col>\r\n                            <Col className=\"price\">${this.props.state.ex_breakfast.price}</Col>\r\n                            <Col className=\"total\">${this.props.state.ex_breakfast.total}</Col>\r\n                        </Row>\r\n                        <Row className=\"item sub\">\r\n                            {\r\n                                this.props.state.ex_breakfast.list.map((list, index) => {\r\n                                    const names = this.props.state.ex_breakfast_name;\r\n                                    let print = [];\r\n                                    let count = 0;\r\n                                    let total_qty = 0;\r\n\r\n                                    if (list === null){return null;}\r\n                                    ex_count++;\r\n                                    \r\n                                    for (let key in names) {\r\n                                        if (list[key] !== 0){\r\n                                            if (typeof list[key] === 'undefined'){ return null; }\r\n                                            print.push(<li className=\"\" key={'_child_' + count}> { names[key] + ' : ' + list[key] } </li>);\r\n                                            total_qty = total_qty + list[key];\r\n                                            count++;\r\n                                        }\r\n                                    }\r\n                                    \r\n                                    return (\r\n                                        <Col key={'ex_box' + index} md={6} style={{padding: '5px'}}>\r\n                                            <div style={{padding: '5px', border: '1px solid #e1e1e1'}}>\r\n                                                <h3 className=\"p-0\" style={{fontSize: '1rem'}}>#{ex_count}</h3>\r\n                                                <ul key={index} className=\"list-inline\" style={{height: '96px', paddingLeft: '10px', listStyle: 'none'}}> \r\n                                                    {print} \r\n                                                </ul>\r\n                                            </div>\r\n                                        </Col>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </Row>\r\n                    </li>\r\n                    <li className=\"summary-list\" style={{display: (this.props.state.baker_dozen.qty === 0 ? 'none' : null)}}>\r\n                        <Row>\r\n                            <Col className=\"item\" md={5}>{this.props.state.baker_dozen.name}</Col>\r\n                            <Col className=\"qty\">{this.props.state.baker_dozen.qty}</Col>\r\n                            <Col className=\"price\">${this.props.state.baker_dozen.price}</Col>\r\n                            <Col className=\"total\">${this.props.state.baker_dozen.total}</Col>\r\n                        </Row>\r\n                    </li>\r\n                    <li className=\"summary-list footer\">\r\n                        <Row>\r\n                            <Col className=\"item\" md={5}></Col>\r\n                            <Col className=\"qty\">{this.props.state.bk_beginnings.qty+this.props.state.ex_breakfast.qty+this.props.state.baker_dozen.qty}</Col>\r\n                            <Col className=\"price\"></Col>\r\n                            <Col className=\"total\">${this.props.state.total}</Col>\r\n                        </Row>\r\n                    </li>\r\n                </ul>\r\n            </ListGroup.Item>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    state: state.breakfast\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps\r\n)(Breakfast)","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { Row, Col, ListGroup } from 'react-bootstrap';\r\n\r\nconst roundTo = require('roundto');\r\n\r\nclass ByoBreakfast extends React.Component {\r\n\r\n    render() {\r\n        let half_count = 0;\r\n        let dozen_count = 0;\r\n\r\n        return (\r\n            <ListGroup.Item style={{display: (this.props.state.total === 0 ? 'none' : null)}}>\r\n                <h3>Build Your Own Breakfast</h3>\r\n                <ul className=\"summary-list-group\">\r\n                    <li className=\"summary-list header\">\r\n                        <Row>\r\n                            <Col className=\"item\" md={5}>Item</Col>\r\n                            <Col className=\"qty\">Quantity</Col>\r\n                            <Col className=\"price\">Price</Col>\r\n                            <Col className=\"total\">Total</Col>\r\n                        </Row>\r\n                    </li>\r\n\r\n                    <li className=\"summary-list\" style={{display: (this.props.state.coffee_carafe.total === 0 ? 'none' : null)}}>\r\n                        <Row>\r\n                            <Col>96oz Wildcat Coffee Carafe</Col>\r\n                        </Row>\r\n                        <Row style={{display: (this.props.state.coffee_carafe.list.regular === 0 ? 'none' : null)}}>\r\n                            <Col className=\"item sub\" md={5}> - Regular</Col>\r\n                            <Col className=\"qty\">{this.props.state.coffee_carafe.list.regular}</Col>\r\n                            <Col className=\"price\">${this.props.state.coffee_carafe.price}</Col>\r\n                            <Col className=\"total\">${roundTo(this.props.state.coffee_carafe.price*this.props.state.coffee_carafe.list.regular,2)}</Col>\r\n                        </Row>\r\n                        <Row style={{display: (this.props.state.coffee_carafe.list.decaf === 0 ? 'none' : null)}}>\r\n                            <Col className=\"item sub\" md={5}> - Decaf</Col>\r\n                            <Col className=\"qty\">{this.props.state.coffee_carafe.list.decaf}</Col>\r\n                            <Col className=\"price\">${this.props.state.coffee_carafe.price}</Col>\r\n                            <Col className=\"total\">${roundTo(this.props.state.coffee_carafe.price*this.props.state.coffee_carafe.list.decaf,2)}</Col>\r\n                        </Row>\r\n                        <Row style={{display: (this.props.state.coffee_carafe.list.iced === 0 ? 'none' : null)}}>\r\n                            <Col className=\"item sub\" md={5}> - Iced</Col>\r\n                            <Col className=\"qty\">{this.props.state.coffee_carafe.list.iced}</Col>\r\n                            <Col className=\"price\">${this.props.state.coffee_carafe.price}</Col>\r\n                            <Col className=\"total\">${roundTo(this.props.state.coffee_carafe.price*this.props.state.coffee_carafe.list.iced,2)}</Col>\r\n                        </Row>\r\n                        <Row style={{display: (this.props.state.coffee_carafe.list.iced_decaf === 0 ? 'none' : null)}}>\r\n                            <Col className=\"item sub\" md={5}> - Iced Decaf</Col>\r\n                            <Col className=\"qty\">{this.props.state.coffee_carafe.list.iced_decaf}</Col>\r\n                            <Col className=\"price\">${this.props.state.coffee_carafe.price}</Col>\r\n                            <Col className=\"total\">${roundTo(this.props.state.coffee_carafe.price*this.props.state.coffee_carafe.list.iced_decaf,2)}</Col>\r\n                        </Row>\r\n                    </li>\r\n\r\n                    <li className=\"summary-list\" style={{display: (this.props.state.fruit_salad.total === 0 ? 'none' : null)}}>\r\n                        <Row>\r\n                            <Col>Fresh Seasonal Fruit Salad</Col>\r\n                        </Row>\r\n                        <Row style={{display: (this.props.state.fruit_salad.serve_20.qty === 0 ? 'none' : null)}}>\r\n                            <Col className=\"item sub\" md={5}> - Serve 20</Col>\r\n                            <Col className=\"qty\">{this.props.state.fruit_salad.serve_20.qty}</Col>\r\n                            <Col className=\"price\">${this.props.state.fruit_salad.serve_20.price}</Col>\r\n                            <Col className=\"total\">${roundTo(this.props.state.fruit_salad.serve_20.qty*this.props.state.fruit_salad.serve_20.price,2)}</Col>\r\n                        </Row>\r\n                        <Row style={{display: (this.props.state.fruit_salad.serve_8.qty === 0 ? 'none' : null)}}>\r\n                            <Col className=\"item sub\" md={5}> - Serve 8</Col>\r\n                            <Col className=\"qty\">{this.props.state.fruit_salad.serve_8.qty}</Col>\r\n                            <Col className=\"price\">${this.props.state.fruit_salad.serve_8.price}</Col>\r\n                            <Col className=\"total\">${roundTo(this.props.state.fruit_salad.serve_8.qty*this.props.state.fruit_salad.serve_8.price,2)}</Col>\r\n                        </Row>\r\n                    </li>\r\n\r\n                    <li className=\"summary-list\" style={{display: (this.props.state.sweet_treats.total === 0 ? 'none' : null)}}>\r\n\r\n                        <Row>\r\n                            <Col>Sweet Treats</Col>\r\n                        </Row>\r\n\r\n                        <Row style={{display: (this.props.state.sweet_treats.half_dozen.qty === 0 ? 'none' : null)}}>\r\n                            <Col className=\"item sub\" md={5}> - 1/2 Dozen</Col>\r\n                            <Col className=\"qty\">{this.props.state.sweet_treats.half_dozen.qty}</Col>\r\n                            <Col className=\"price\">${this.props.state.sweet_treats.half_dozen.price}</Col>\r\n                            <Col className=\"total\">${roundTo(this.props.state.sweet_treats.half_dozen.qty*this.props.state.sweet_treats.half_dozen.price,2)}</Col>\r\n                        </Row>\r\n\r\n                        <Row className=\"item sub\">\r\n                            {\r\n                                this.props.state.sweet_treats.half_dozen.list.map((list, index) => {\r\n                                    const names = this.props.state.sweet_treats_name;\r\n                                    let print = [];\r\n                                    let count = 0;\r\n\r\n                                    if (list === null){return null;}\r\n                                    half_count++;\r\n                                    \r\n                                    for (let key in names) {\r\n                                        if (list[key] !== 0){\r\n                                            if (typeof list[key] === 'undefined'){ return null; }\r\n                                            print.push(<li className=\"list-inline-item\" key={'half_dozen_child_' + count}> { names[key] + ' : ' + list[key] } </li>);\r\n                                            count++;\r\n                                        }\r\n                                    }\r\n                                    \r\n                                    return (\r\n                                        <Col key={'half_dozen' + index} md={6} style={{padding: '5px'}}>\r\n                                            <div style={{padding: '5px', border: '1px solid #e1e1e1'}}>\r\n                                                <h3 className=\"p-0\" style={{fontSize: '1rem'}}>#{half_count}</h3>\r\n                                                <ul key={index} className=\"\" style={{height: '48px', paddingLeft: '10px', listStyle: 'none'}}> {print} </ul>\r\n                                            </div>\r\n                                        </Col>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </Row>\r\n\r\n                        <Row style={{display: (this.props.state.sweet_treats.dozen.qty === 0 ? 'none' : null)}}>\r\n                            <Col className=\"item sub\" md={5}> - Dozen</Col>\r\n                            <Col className=\"qty\">{this.props.state.sweet_treats.dozen.qty}</Col>\r\n                            <Col className=\"price\">${this.props.state.sweet_treats.dozen.price}</Col>\r\n                            <Col className=\"total\">${roundTo(this.props.state.sweet_treats.dozen.qty*this.props.state.sweet_treats.dozen.price,2)}</Col>\r\n                        </Row>\r\n\r\n                        <Row className=\"item sub\">\r\n                            {\r\n                                this.props.state.sweet_treats.dozen.list.map((list, index) => {\r\n                                    const names = this.props.state.sweet_treats_name;\r\n                                    let print = [];\r\n                                    let count = 0;\r\n\r\n                                    if (list === null){return null;}\r\n                                    dozen_count++;\r\n                                    \r\n                                    for (let key in names) {\r\n                                        if (list[key] !== 0){\r\n                                            if (typeof list[key] === 'undefined'){ return null; }\r\n                                            print.push(<li className=\"list-inline-item\" key={'dozen_child_' + count}> { names[key] + ' : ' + list[key] } </li>);\r\n                                            count++;\r\n                                        }\r\n                                    }\r\n                                    \r\n                                    return (\r\n                                        <Col key={'dozen' + index} md={6} style={{padding: '5px'}}>\r\n                                            <div style={{padding: '5px', border: '1px solid #e1e1e1'}}>\r\n                                                <h3 className=\"p-0\" style={{fontSize: '1rem'}}>#{dozen_count}</h3>\r\n                                                <ul key={index} className=\"list-inline\" style={{height: '72px', paddingLeft: '10px', listStyle: 'none'}}> \r\n                                                    {print} \r\n                                                </ul>\r\n                                            </div>\r\n                                        </Col>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </Row>\r\n                    </li>\r\n\r\n                    <li className=\"summary-list\" style={{display: (this.props.state.sandwiches.total === 0 ? 'none' : null)}}>\r\n                        <Row>\r\n                            <Col>Savory Breakfast Sandwiches</Col>\r\n                        </Row>\r\n                        <Row style={{display: (this.props.state.sandwiches.list.zucchini.qty === 0 ? 'none' : null)}}>\r\n                            <Col className=\"item sub\" md={5}> - {this.props.state.sandwiches.list.zucchini.name}</Col>\r\n                            <Col className=\"qty\">{this.props.state.sandwiches.list.zucchini.qty}</Col>\r\n                            <Col className=\"price\">${this.props.state.sandwiches.list.zucchini.price}</Col>\r\n                            <Col className=\"total\">${roundTo(this.props.state.sandwiches.list.zucchini.qty*this.props.state.sandwiches.list.zucchini.price,2)}</Col>\r\n                        </Row>\r\n                        <Row style={{display: (this.props.state.sandwiches.list.sausage_bagel.qty === 0 ? 'none' : null)}}>\r\n                            <Col className=\"item sub\" md={5}> - {this.props.state.sandwiches.list.sausage_bagel.name}</Col>\r\n                            <Col className=\"qty\">{this.props.state.sandwiches.list.sausage_bagel.qty}</Col>\r\n                            <Col className=\"price\">${this.props.state.sandwiches.list.sausage_bagel.price}</Col>\r\n                            <Col className=\"total\">${roundTo(this.props.state.sandwiches.list.sausage_bagel.qty*this.props.state.sandwiches.list.sausage_bagel.price,2)}</Col>\r\n                        </Row>\r\n                        <Row style={{display: (this.props.state.sandwiches.list.pepper_bagel.qty === 0 ? 'none' : null)}}>\r\n                            <Col className=\"item sub\" md={5}> - {this.props.state.sandwiches.list.pepper_bagel.name}</Col>\r\n                            <Col className=\"qty\">{this.props.state.sandwiches.list.pepper_bagel.qty}</Col>\r\n                            <Col className=\"price\">${this.props.state.sandwiches.list.pepper_bagel.price}</Col>\r\n                            <Col className=\"total\">${roundTo(this.props.state.sandwiches.list.pepper_bagel.qty*this.props.state.sandwiches.list.pepper_bagel.price,2)}</Col>\r\n                        </Row>\r\n                        <Row style={{display: (this.props.state.sandwiches.list.red_pepper_bagel.qty === 0 ? 'none' : null)}}>\r\n                            <Col className=\"item sub\" md={5}> - {this.props.state.sandwiches.list.red_pepper_bagel.name}</Col>\r\n                            <Col className=\"qty\">{this.props.state.sandwiches.list.red_pepper_bagel.qty}</Col>\r\n                            <Col className=\"price\">${this.props.state.sandwiches.list.red_pepper_bagel.price}</Col>\r\n                            <Col className=\"total\">${roundTo(this.props.state.sandwiches.list.red_pepper_bagel.qty*this.props.state.sandwiches.list.red_pepper_bagel.price,2)}</Col>\r\n                        </Row>\r\n                    </li>\r\n\r\n                    <li className=\"summary-list footer\">\r\n                        <Row>\r\n                            <Col className=\"item\" md={5}></Col>\r\n                            <Col className=\"qty\"></Col>\r\n                            <Col className=\"price\"></Col>\r\n                            <Col className=\"total\">${this.props.state.total}</Col>\r\n                        </Row>\r\n                    </li>\r\n                </ul>\r\n            </ListGroup.Item>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    state: state.byo_breakfast\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps\r\n)(ByoBreakfast)","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { Row, Col, ListGroup } from 'react-bootstrap';\r\n\r\nconst roundTo = require('roundto');\r\n\r\nclass Lunch extends React.Component {\r\n\r\n    printItems = (list) => {\r\n        let print = [];\r\n        for (let key in list){\r\n            if (list[key] !== 0){\r\n                print.push(<li>{this.props.state.names[key].name + ' : ' + list[key]}</li>);     \r\n            }                           \r\n        }\r\n        return (<ul style={{paddingLeft: '20px'}}>{print}</ul>);\r\n    }\r\n\r\n    printExtra = (extras) => {\r\n        let print = [];\r\n        for (let i = 0; i < 2; i++) {\r\n            const extra = extras.list[i];\r\n            if (extra.one !== 'None') {\r\n                const one = <span>{extra.one}</span>;\r\n                let two = null;\r\n                let three = null;\r\n                if (extra.two !== 'None'){ two = <span>, {extra.two}</span> }\r\n                if (extra.three !== 'None'){ three = <span>, {extra.three}</span> }\r\n                print.push(\r\n                    <div key={'extra' + i} style={{fontSize: '0.9rem'}}>Extra #{i+1} : {one} {two} {three}</div>\r\n                )   \r\n\r\n            }            \r\n        }\r\n\r\n        if (print.length === 0){return null;}\r\n        else {\r\n            return (\r\n                <React.Fragment>\r\n                    <hr style={{border: '1px solid #e1e1e1'}} />\r\n                    <h7 style={{width: '100%', fontWeight: '600'}}>Extra Sandwiches or Salads</h7>\r\n                    {print}\r\n                </React.Fragment>\r\n            );\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let count = 0;\r\n        return (\r\n            <ListGroup.Item style={{display: (this.props.state.total === 0 ? 'none' : null)}}>\r\n                <h3>Lunch</h3>\r\n                <ul className=\"summary-list-group\">\r\n                    <li className=\"summary-list header\">\r\n                        <Row>\r\n                            <Col className=\"item\" md={5}>Item</Col>\r\n                            <Col className=\"qty\">Quantity</Col>\r\n                            <Col className=\"price\">Price</Col>\r\n                            <Col className=\"total\">Total</Col>\r\n                        </Row>\r\n                    </li>\r\n\r\n                    <li className=\"summary-list\">\r\n\r\n                        <Row>\r\n                            <Col>Lunch</Col>\r\n                        </Row>\r\n\r\n\r\n                        <Row>\r\n                            <Col className=\"item sub\" md={5}> - \"Build Your Own\" Lunch Box</Col>\r\n                            <Col className=\"qty\">{this.props.state.qty}</Col>\r\n                            <Col className=\"price\">${this.props.state.price}</Col>\r\n                            <Col className=\"total\">${roundTo(this.props.state.qty*this.props.state.price,2)}</Col>\r\n                        </Row>\r\n\r\n                        <Row style={{paddingLeft: '80px', paddingTop: '10px', paddingBottom: '10px'}} className=\"wrap-lunch-box\">\r\n                            {\r\n                                this.props.state.list.map((boxes, pindex) => {\r\n                                    if (boxes.length !== 0) {\r\n                                        count++;\r\n                                        return (\r\n                                        <Col md={6} className=\"wrap-lunch-box\">\r\n                                            <div key={'list-'+pindex} style={{padding: '10px', border: '1px solid #dadada'}}>\r\n                                                <h3 className=\"p-0\" style={{fontSize: '1rem'}}>Box #{count}</h3>\r\n                                                <div>\r\n                                                    <ul className=\"list-inline\">\r\n                                                        <li className=\"list-inline-item\"> \r\n                                                            {this.printItems(boxes.choice_one.list)}\r\n                                                        </li>\r\n                                                        <li className=\"list-inline-item\">\r\n                                                            {this.printItems(boxes.choice_two.list)} \r\n                                                        </li>\r\n                                                        <li className=\"list-inline-item\">\r\n                                                            {this.printItems(boxes.choice_three.list)} \r\n                                                        </li>\r\n                                                        <li className=\"list-inline-item\">\r\n                                                            {this.printExtra(boxes.extra)} \r\n                                                        </li>\r\n                                                    </ul>\r\n                                                </div>\r\n                                            </div>\r\n                                        </Col>\r\n                                        );\r\n                                    }\r\n                                    else {\r\n                                        return null;\r\n                                    }\r\n                                }) \r\n                            }\r\n                        </Row>\r\n                    </li>\r\n\r\n                    <li className=\"summary-list footer\">\r\n                        <Row>\r\n                            <Col className=\"item\" md={5}></Col>\r\n                            <Col className=\"qty\"></Col>\r\n                            <Col className=\"price\"></Col>\r\n                            <Col className=\"total\">${this.props.state.total}</Col>\r\n                        </Row>\r\n                    </li>\r\n                </ul>\r\n            </ListGroup.Item>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    state: state.lunch\r\n});\r\n\r\n\r\nexport default connect(\r\n    mapStateToProps\r\n)(Lunch)","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { Row, Col, ListGroup } from 'react-bootstrap';\r\n\r\nclass OfficeParty extends React.Component {\r\n    \r\n    render() {\r\n        return (\r\n            <ListGroup.Item style={{display: (this.props.state.total === 0 ? 'none' : null)}}>\r\n                <h3>Office Party</h3>\r\n                <ul className=\"summary-list-group\">\r\n                    <li className=\"summary-list header\">\r\n                        <Row>\r\n                            <Col className=\"item\" md={5}>Item</Col>\r\n                            <Col className=\"qty\">Quantity</Col>\r\n                            <Col className=\"price\">Price</Col>\r\n                            <Col className=\"total\">Total</Col>\r\n                        </Row>\r\n                    </li>\r\n                    <li className=\"summary-list\">\r\n                        <Row>\r\n                            <Col className=\"item\" md={5}>{this.props.state.serve_10.name}</Col>\r\n                            <Col className=\"qty\">{this.props.state.serve_10.qty}</Col>\r\n                            <Col className=\"price\">${this.props.state.serve_10.price}</Col>\r\n                            <Col className=\"total\">${this.props.state.serve_10.total}</Col>\r\n                        </Row>\r\n                    </li>\r\n                    <li className=\"summary-list footer\">\r\n                        <Row>\r\n                            <Col className=\"item\" md={5}></Col>\r\n                            <Col className=\"qty\">{this.props.state.serve_10.qty}</Col>\r\n                            <Col className=\"price\"></Col>\r\n                            <Col className=\"total\">${this.props.state.total}</Col>\r\n                        </Row>\r\n                    </li>\r\n                </ul>\r\n            </ListGroup.Item>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    state: state.office_party\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps\r\n)(OfficeParty)","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { Row, Col, ListGroup } from 'react-bootstrap';\r\n\r\nconst roundTo = require('roundto');\r\n\r\nclass Beverage extends React.Component {  \r\n    \r\n    printItem = (name) => {\r\n        return (\r\n            <li className=\"summary-list\" style={{display: (this.props.state.list[name].qty === 0 ? 'none' : null)}}>\r\n                <Row>\r\n                    <Col className=\"item\" md={5}>{this.props.state.list[name].name}</Col>\r\n                    <Col className=\"qty\">{this.props.state.list[name].qty}</Col>\r\n                    <Col className=\"price\">${this.props.state.list[name].price}</Col>\r\n                    <Col className=\"total\">${roundTo(this.props.state.list[name].qty*this.props.state.list[name].price, 2)}</Col>\r\n                </Row>\r\n            </li>\r\n        )\r\n    }\r\n\r\n    totalQty = () => {\r\n        let qty = 0;\r\n        const list = this.props.state.list;\r\n        for (let key in list){\r\n            const tmp_qty = list[key].qty;\r\n            qty = qty + tmp_qty;\r\n        }\r\n        \r\n        return qty;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <ListGroup.Item style={{display: (this.props.state.total === 0 ? 'none' : null)}}>\r\n                <h3>Beverage</h3>\r\n                <ul className=\"summary-list-group\">\r\n                    <li className=\"summary-list header\">\r\n                        <Row>\r\n                            <Col className=\"item\" md={5}>Item</Col>\r\n                            <Col className=\"qty\">Quantity</Col>\r\n                            <Col className=\"price\">Price</Col>\r\n                            <Col className=\"total\">Total</Col>\r\n                        </Row>\r\n                    </li>\r\n                    {this.printItem('coke')}\r\n                    {this.printItem('diet_coke')}\r\n                    {this.printItem('dr_pepper')}\r\n                    {this.printItem('diet_dr_pepper')}\r\n                    {this.printItem('sprite')}\r\n                    {this.printItem('dasani')}\r\n                    {this.printItem('cherry_coke')}\r\n                    {this.printItem('coke_zero')}\r\n                    <li className=\"summary-list footer\">\r\n                        <Row>\r\n                            <Col className=\"item\" md={5}></Col>\r\n                            <Col className=\"qty\">{this.totalQty()}</Col>\r\n                            <Col className=\"price\"></Col>\r\n                            <Col className=\"total\">${this.props.state.total}</Col>\r\n                        </Row>\r\n                    </li>\r\n                </ul>\r\n            </ListGroup.Item>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    state: state.beverage\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps\r\n)(Beverage)","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from 'react-router-dom';\r\nimport { updateCurrentNav, calculateSubtotal, submitOrder, getDeliveryMethod, handleTextarea } from '../../redux/actions/main';\r\nimport { Row, Col, Card, ListGroup, ButtonToolbar, Button, Spinner } from 'react-bootstrap';\r\n\r\nimport TopNav from '../common/TopNav.js';\r\n// import Bottom from '../bottom';\r\n\r\nimport Breakfast from './Breakfast';\r\nimport ByoBreakfast from './ByoBreakfast';\r\nimport Lunch from './Lunch';\r\nimport OfficeParty from './OfficeParty';\r\nimport Beverage from './Beverage';\r\n\r\nimport './style.css';\r\n\r\nconst roundTo = require('roundto');\r\n\r\nclass Summary extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.props.updateCurrentNav(5);\r\n        \r\n        const subtotal = roundTo(\r\n            this.props.globalState.breakfast.total +\r\n            this.props.globalState.byo_breakfast.total +\r\n            this.props.globalState.lunch.total +\r\n            this.props.globalState.office_party.total +\r\n            this.props.globalState.beverage.total,\r\n            2);\r\n        const tax = roundTo(subtotal*0.061, 2);\r\n        const total = roundTo(subtotal + tax, 2);\r\n\r\n        this.props.calculateSubtotal(subtotal, tax, total);\r\n\r\n        this.state = {\r\n            subtotal: subtotal,\r\n            tax: tax,\r\n            total: total,\r\n            additional_comment: ''\r\n        }\r\n        // console.log(this.props.globalState.byo_breakfast);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.getDeliveryMethod();\r\n    }\r\n\r\n    handleTextarea = (event) => {\r\n        this.setState({\r\n            additional_comment: event.target.value\r\n        });\r\n        // this.props.handleTextarea(event.target.value);\r\n    }\r\n    \r\n    submitOrder = () => {\r\n        const data = {\r\n            breakfast: this.props.globalState.breakfast,\r\n            byo_breakfast: this.props.globalState.byo_breakfast,\r\n            lunch: this.props.globalState.lunch,\r\n            office_party: this.props.globalState.office_party,\r\n            beverage: this.props.globalState.beverage,\r\n            subtotal: this.state.subtotal,\r\n            tax: this.state.tax,\r\n            total: this.state.total,\r\n            additional_comment: this.state.additional_comment\r\n        };\r\n        this.props.submitOrder(data);\r\n        this.props.history.push('/Confirmation');\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n            {\r\n                this.props.globalState.main.delivery_method === null ?\r\n                <div style={{textAlign: 'center', padding: '100px 0px'}}>\r\n                    <Spinner animation=\"grow\" style={{backgroundColor: '#f58220'}} />\r\n                </div>\r\n                :\r\n                <React.Fragment>\r\n                    {\r\n                        this.props.globalState.main.error.msg === '' ?\r\n                        <Card className=\"wrap-summary\">\r\n                \r\n                            <Card.Header>\r\n                                <TopNav />\r\n                            </Card.Header>\r\n\r\n                            <Card.Body>\r\n                                <Card.Title>Order Summary</Card.Title>\r\n                            </Card.Body>\r\n\r\n                            {\r\n                                this.state.total === 0 ?\r\n                                <Card.Body className=\"text-center\" style={{marginBottom: '20px'}}>\r\n                                    <Card.Text md={12} style={{paddingTop: '15px', paddingBottom: '15px'}}>\r\n                                        <strong>There are no items in your shopping cart.</strong>\r\n                                    </Card.Text>\r\n                                </Card.Body>\r\n                                :\r\n                                <React.Fragment>\r\n\r\n                                    <ListGroup>\r\n                                        <Breakfast />\r\n                                        <ByoBreakfast />\r\n                                        <Lunch />\r\n                                        <OfficeParty />\r\n                                        <Beverage />\r\n                                    </ListGroup>\r\n\r\n                                    <Row className=\"wrap-total\" style={{marginTop: '20px'}}>\r\n                                        <Col className=\"total-names\">Subtotal : </Col><Col className=\"total-numbers\"><span className=\"number\">${this.state.subtotal}</span></Col>\r\n                                    </Row>\r\n\r\n                                    <Row className=\"wrap-total\">\r\n                                        <Col className=\"total-names\">Tax : </Col><Col className=\"total-numbers\"><span className=\"number\">${this.state.tax}</span></Col>\r\n                                    </Row>\r\n\r\n                                    {\r\n                                        this.props.globalState.main.delivery_method === 'Delivery' ?\r\n                                        <Row className=\"wrap-total\">\r\n                                            <Col className=\"total-names\">Delivery Fee : </Col><Col className=\"total-numbers\"><span className=\"number\">$10</span></Col>\r\n                                        </Row>\r\n                                        :\r\n                                        null\r\n                                    }\r\n\r\n                                    <Row className=\"wrap-total\">\r\n                                        <Col className=\"total-names\">Total : </Col><Col className=\"total-numbers\">\r\n                                            <span className=\"number\">\r\n                                                ${\r\n                                                    this.props.globalState.main.delivery_method === 'Delivery' ?\r\n                                                    roundTo(this.state.total+10,2)\r\n                                                    :\r\n                                                    this.state.total\r\n                                                }\r\n                                            </span>\r\n                                        </Col>\r\n                                    </Row>\r\n\r\n                                    <ListGroup style={{marginBottom: '40px'}}>\r\n                                        <ListGroup.Item>\r\n                                            <h3 style={{paddingLeft: '0px'}}>Additional Notes (Please provide any dietary restrictions/allergies, etc)</h3>\r\n                                            <textarea style={{width: '100%'}} rows=\"5\" onChange={this.handleTextarea} value={this.state.additional_comment} />\r\n                                        </ListGroup.Item>\r\n                                    </ListGroup>\r\n\r\n                                </React.Fragment>\r\n                            }\r\n\r\n                            <Row>\r\n                                <Col md={6}>\r\n                                    <ButtonToolbar>\r\n                                        <Link\r\n                                        className={\"btn add-btn\"}\r\n                                        style={{marginRight: '10px', width:'200px'}}\r\n                                        to=\"/breakfast\"\r\n                                        >\r\n                                        {\r\n                                            this.state.total === 0 ?\r\n                                            'Add Food'\r\n                                            :\r\n                                            'Add More Food'\r\n                                        }\r\n                                        </Link>\r\n                                    </ButtonToolbar>\r\n                                </Col>\r\n                                {\r\n                                    this.state.total === 0 ?\r\n                                    null\r\n                                    :\r\n                                    <Col md={6}>\r\n                                        <ButtonToolbar>\r\n                                            <Button \r\n                                            className={\"btn add-btn\"}\r\n                                            style={{marginLeft: 'auto', width:'200px'}} onClick={this.submitOrder}>Submit Order</Button>\r\n                                        </ButtonToolbar>\r\n                                    </Col>\r\n                                }\r\n                            </Row>\r\n\r\n                        </Card>\r\n                        :\r\n                        <Card>\r\n                            <Card.Body style={{borderBottomWidth: '0px'}}>\r\n                                <Card.Text>\r\n                                    Your session has expired. Please try again later.\r\n                                </Card.Text>\r\n                            </Card.Body>\r\n\r\n                            <Row>\r\n                                <Col md={12}>\r\n                                    <ButtonToolbar>\r\n                                        <a href=\"/catering/online/agreement.php?r=catalyst\" className=\"btn add-btn btn-lg btn-block\" style={{width: '100%'}}>Try Again</a>\r\n                                    </ButtonToolbar>\r\n                                </Col>\r\n                            </Row>\r\n                        </Card>\r\n                    }                    \r\n                </React.Fragment>\r\n                \r\n            }\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    globalState: state\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => (\r\n    {\r\n        // updateQty: (name, qty) => dispatch(updateQty(name, qty))\r\n        updateCurrentNav: (index) => dispatch(updateCurrentNav(index)),\r\n        calculateSubtotal: (subtotal, tax, total) => dispatch(calculateSubtotal(subtotal, tax, total)),\r\n        submitOrder: (data) => dispatch(submitOrder(data)),\r\n        getDeliveryMethod: () => dispatch(getDeliveryMethod()),\r\n        handleTextarea: (text) => dispatch(handleTextarea(text))\r\n    }\r\n)\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Summary)","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\n// import { Link } from 'react-router-dom';\r\n// import { updateCurrentNav, calculateSubtotal, submitOrder } from '../redux/actions/main';\r\nimport { Card, Spinner } from 'react-bootstrap';\r\n\r\n// import TopNav from './common/TopNav.js';\r\n\r\nclass Confirmation extends React.Component {\r\n\r\n    // constructor(props) {\r\n    //     super(props);\r\n    // }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n            {\r\n                this.props.state.main.confirmation.loading ?\r\n                <div style={{textAlign: 'center', padding: '100px 0px'}}>\r\n                    <Spinner animation=\"grow\" style={{backgroundColor: '#f58220'}} />\r\n                </div>\r\n                :\r\n                <Card className=\"\">\r\n\r\n                    {\r\n                        this.props.state.main.confirmation.orderID === null ?\r\n                        <React.Fragment>\r\n                            <Card.Body>\r\n                                <Card.Text>\r\n                                    We're sorry. An error occurred while processing your order. Please try again later.\r\n                                </Card.Text>\r\n                            </Card.Body>\r\n\r\n                            <div className=\"card-body\">\r\n                                        \r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-4\">\r\n                                        <a href=\"/catering/online/agreement.php?r=catalyst\" className=\"btn add-btn btn-lg btn-block\" style={{width: '100%'}}>Try Again</a>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </React.Fragment>\r\n                        :\r\n                        <React.Fragment>\r\n                            <Card.Body>\r\n                                <Card.Text>\r\n                                    <span style={{fontWeight: '500', lineHeight: '2.2', fontSize: '1.7rem'}}>Thank You</span><br style={{lineHeight: '2.2'}} />\r\n                                    Your order is confirmed. For your convenience, an email has been sent to {this.props.state.main.confirmation.email}. <br />\r\n                                    Your Order ID is {this.props.state.main.confirmation.orderID}.\r\n                                </Card.Text>\r\n                            </Card.Body>\r\n\r\n                            <div className=\"card-body\">\r\n                                        \r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-4\">\r\n                                        <a href=\"/catering/online/agreement.php?r=catalyst\" className=\"btn add-btn btn-lg btn-block\" style={{width: '100%'}}>Order Again</a>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-md-4\">\r\n                                        <a href=\"/dining/other/catalyst\" className=\"btn add-btn btn-lg btn-block\" style={{width: '100%'}}>Go to Catalyst Cafe</a>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-md-4\">\r\n                                        <a href=\"/\" className=\"btn add-btn btn-lg btn-block\" style={{width: '100%'}}>Go to Union</a>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </React.Fragment>\r\n                    }\r\n\r\n                </Card>\r\n            }\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    state: state\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => (\r\n    {\r\n    }\r\n)\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Confirmation)","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'react-app-polyfill/ie9';\nimport 'react-app-polyfill/ie11';   \nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\n\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>, \n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route\r\n} from 'react-router-dom'\r\nimport './App.css';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport Banner from './img/Catalyst_Banner.jpg';\r\n// import Menu from './components/Menu';\r\nimport Breakfast from './components/Breakfast';\r\nimport ByoBreakfast from './components/ByoBreakfast';\r\nimport Lunch from './components/Lunch';\r\nimport OfficeParty from './components/OfficeParty';\r\nimport Beverage from './components/Beverage';\r\nimport Summary from './components/Summary';\r\nimport Confirmation from './components/Confirmation';\r\n// import Bottom from './components/bottom';\r\n\r\nexport default function App() {\r\n  return (\r\n    <Container style={{marginTop: '0rem', marginBottom: '2rem', border: '1px solid #c8942b'}}>\r\n\r\n      <Row>\r\n        <img src={Banner} style={{width: '100%'}} alt=\"Banner\" />\r\n      </Row>\r\n\r\n      <Row style={{backgroundColor: '#fff'}}>\r\n        <Col md={12} className=\"wrap-main\">\r\n          <Router basename={'/catering/online/catalyst'}>\r\n            <Route exact path=\"/\" component={Breakfast} />\r\n            <Route exact path=\"/breakfast\" component={Breakfast} />\r\n            <Route exact path=\"/byobreakfast\" component={ByoBreakfast} />\r\n            <Route exact path=\"/lunch\" component={Lunch} />\r\n            <Route exact path=\"/officeparty\" component={OfficeParty} />\r\n            <Route exact path=\"/beverage\" component={Beverage} />\r\n            <Route exact path=\"/summary\" component={Summary} />\r\n            <Route exact path=\"/confirmation\" component={Confirmation} />\r\n          </Router>\r\n        </Col>\r\n      </Row>\r\n\r\n    </Container>\r\n  );\r\n}\r\n"],"sourceRoot":""}