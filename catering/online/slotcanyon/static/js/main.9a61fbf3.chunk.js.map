{"version":3,"sources":["img/Catalyst_Cafe_Catering_Banner.jpg","redux/reducers/main.js","redux/reducers/breakfast.js","redux/reducers/byo_breakfast.js","redux/reducers/lunch.js","redux/reducers/officeParty.js","redux/reducers/beverage.js","redux/reducers/index.js","redux/actions/actionTypes.js","redux/store.js","components/common/numberInput.js","components/common/TopNav.js","redux/actions/main.js","components/bottom.js","components/Breakfast/ExecutiveBreakfast.js","redux/actions/breakfast.js","components/Breakfast/SweetTreat.js","components/Breakfast/index.js","components/ByoBreakfast/index.js","redux/actions/byo_breakfast.js","components/Lunch/LunchBox.js","redux/actions/lunch.js","components/Lunch/index.js","components/OfficeParty/index.js","redux/actions/officeParty.js","components/Beverage/index.js","redux/actions/beverage.js","components/Summary/Breakfast.js","components/Summary/ByoBreakfast.js","components/Summary/Lunch.js","components/Summary/OfficeParty.js","components/Summary/Beverage.js","components/Summary/index.js","components/Confirmation.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","initialState","delivery_method","loading","breakfast","byo_breakfast","byo_lunch","office_party","beverage","subtotal","tax","total","additional_comment","nav","routes","confirmation","success","email","orderID","error","code","msg","bk_beginnings","qty","price","name","description","ex_breakfast","box_open","add","id","list","ex_breakfast_name","western_egg_bagel","egg_white","ham_sau_bacon","baker_dozen","sweet_treats","type","half_dozen","selected","dozen","names","banana_bread","banana_chocolate_chip_bread","blue_berry_scone","chocolate_chip_cookie","chocolate_croissant","cinnamon_scone_croissant","lemon_pound_cake","poppy_seed_bread","pumpkin_bread","bars_cookie","sweet_treats_name","assorted_muffins","roundTo","require","updateBreakfastTotal","state","coffee_carafe","regular","decaf","iced","iced_decaf","fruit_salad","serve_20","serve_8","sandwiches","zucchini","sausage_bagel","pepper_bagel","red_pepper_bagel","west_egg_bagel","ewms_whole","hsb_bagel","updateByoTotal","actionType","open_box","products","little_piggy","italian_job","turk_philly_chess","bruschetta_panini","salads","hali_caesar","kale_crunch","chips","baked_lays","pb_jalapeno","pb_original","sun_chips","bbq_chips","beverages","coke","diet_coke","dr_pepper","diet_dr_pepper","sprite","dasani","cherry_coke","coke_zero","fruit","serve_10","updateOfficePartyTotal","updateTotal","combineReducers","main","action","index","payload","err","text","push","coffee_list","total_qty","i","length","coffee_name","coffee_total","fruit_total","lunch","extras","extra","extra_total","one","two","three","createStore","rootReducer","applyMiddleware","thunkMiddleware","NumberInput","props","increase","setState","value","this","onChange","decrease","onChangeHandler","event","target","parseInt","className","style","noleft","onClick","readonly","min","bind","readOnly","React","Component","TopNav","Fragment","Row","to","global","connect","updateCurrentNav","getDeliveryMethodSuccess","getDeliveryMethodFailure","Bottom","getTotal","navIndex","Col","fontSize","fontWeight","textAlign","padding","ButtonToolbar","marginRight","width","marginLeft","dispatch","ExecutiveBreakfast","onChangeInput","max_qty","tmp_qty","key","error_msg","closeExecutiveBeginning","addExecutiveBeginning","validateSandwiches","updateExecutiveBeginning","Card","Header","Body","Title","textTransform","color","Text","ListGroup","variant","Item","lineHeight","float","Button","size","SweetTreat","closeSweetTreat","addSweetTreat","validateSweetTreat","updateSweetTreat","updateSweetTreats","printSweetTreats","print","md","Breakfast","updateQty","openExecutiveBeginning","printSelectedExBreakfast","num","count","border","editExBreakfast","removeExBreakfast","height","paddingLeft","listStyle","openSweetTreat","printSelectedSweets","editSweetTreats","removeSweetTreats","ex_count","st_half_count","st_dozen_count","marginBottom","map","row","ByoBreakfast","onChangeCoffee","updateCoffee","onChangeFruitSalad","updateFruitSalad","onChangeSandwich","updateSandwich","LunchBox","checkQty","updateInput","onChangeFirst","choice_one","onChangeSecond","choice_two","onChangeThree","choice_three","addLunchBox","validateForm","updateLunchBox","closeLunchBox","window","scrollTo","printSandwiches","printSalads","printChips","display","onChangeExtra","order","first","createRef","borderWidth","textDecoration","borderBottom","Form","Group","as","Label","Control","openLunchBox","Lunch","openLunchBoxEditor","removeLunchBox","printItems","printExtra","boxes","pindex","OfficeParty","op","Beverage","onChangeBeverage","updateBeverage","printDrink","half_count","dozen_count","paddingTop","paddingBottom","printItem","totalQty","Summary","handleTextarea","submitOrder","data","globalState","history","calculateSubtotal","getDeliveryMethod","Spinner","animation","backgroundColor","marginTop","rows","borderBottomWidth","href","fetch_option","method","headers","body","JSON","stringify","fetch","then","res","ok","json","Error","return","order_id","catch","console","log","Confirmation","App","Container","src","Banner","alt","basename","exact","path","component","Boolean","location","hostname","match","ReactDOM","render","store","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9a61fbf3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Catalyst_Cafe_Catering_Banner.1616f9de.jpg\";","import { \r\n    UPDATE_CURRENT_NAV, \r\n    CALCULATE_SUBTOTAL,\r\n    SUBMIT_SUCCESS,\r\n    SUBMIT_FAILURE,\r\n    GET_DELIVERY_METHOD,\r\n    GET_DELIVERY_METHOD_FAILURE,\r\n    ADDITIONAL_NOTE\r\n} from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n    delivery_method: null,\r\n    loading: true,\r\n    breakfast: 0,\r\n    byo_breakfast: 0,\r\n    byo_lunch: 0,\r\n    office_party: 0,\r\n    beverage: 0,\r\n    subtotal: 0,\r\n    tax: 0,\r\n    total: 0,\r\n    additional_comment: '',\r\n    nav: 0,\r\n    routes: [\r\n        '/breakfast',\r\n        '/byobreakfast',\r\n        '/lunch',\r\n        '/officeparty',\r\n        '/beverage',\r\n        '/summary'\r\n    ],\r\n    confirmation: {\r\n        loading: true,\r\n        success: false,\r\n        email: null,\r\n        orderID: null,\r\n        error: {\r\n            code: null\r\n        }\r\n    },\r\n    error: {\r\n        msg: ''\r\n    }\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n    switch (action.type) {\r\n        case UPDATE_CURRENT_NAV: {\r\n            const {index} = action.payload;\r\n            state.nav = index;\r\n            return {...state};\r\n        }\r\n        case CALCULATE_SUBTOTAL: {\r\n            const {subtotal, tax, total} = action.payload;\r\n            state.subtotal = subtotal;\r\n            state.tax = tax;\r\n            state.total = total;\r\n            return {...state};\r\n        }\r\n        case SUBMIT_SUCCESS: {\r\n            const {id, email} = action.payload;\r\n            initialState.confirmation = {\r\n                loading: false,\r\n                orderID: id,\r\n                email: email,\r\n                success: true\r\n            }\r\n            return {...initialState};\r\n        }\r\n        case SUBMIT_FAILURE: {\r\n            const {code} = action.payload;\r\n            state.confirmation = {\r\n                loading: false,\r\n                orderID: null\r\n            }\r\n            state.error.code = code;\r\n            return {...state}\r\n        }\r\n        case GET_DELIVERY_METHOD: {\r\n            const {delivery_method} = action.payload;\r\n            state.delivery_method = delivery_method;\r\n            return {...state};\r\n        }\r\n        case GET_DELIVERY_METHOD_FAILURE: {\r\n            const {err} = action.payload;\r\n            state.delivery_method = 'Failed';\r\n            state.error.msg = err;\r\n            return {...state}\r\n        }\r\n        case ADDITIONAL_NOTE: {\r\n            const text = action.payload;\r\n            state.additional_comment = text;\r\n            return {...state}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};","import { \r\n    UPDATE_BREAKFAST_QTY,\r\n    OPEN_BREAKFAST_EXECUTIVE_BEGINNING,\r\n    CLOSE_BREAKFAST_EXECUTIVE_BEGINNING,\r\n    ADD_BREAKFAST_EXECUTIVE_BEGINNING,\r\n    UPDATE_BREAKFAST_EXECUTIVE_BEGINNING,\r\n    EDIT_BREAKFAST_EXECUTIVE_BEGINNING,\r\n    REMOVE_BREAKFAST_EXECUTIVE_BEGINNING,\r\n    OPEN_BREAKFAST_SWEETTREATS,\r\n    CLOSE_BREAKFAST_SWEETTREATS,\r\n    ADD_BREAKFAST_SWEETTREATS,\r\n    EDIT_BREAKFAST_SWEETTREATS,\r\n    UPDATE_BREAKFAST_SWEETTREATS,\r\n    REMOVE_BREAKFAST_SWEETTREATS,\r\n} from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n    bk_beginnings : { qty : 0, price : 27.99, name: 'Breakfast Beginnings', description: '96oz Coffee Carafe and 6 Pastries', total : 0 },\r\n    ex_breakfast : { \r\n        qty : 0, \r\n        price : 52.99, \r\n        name: 'Executive Breakfast', \r\n        description: '96oz Coffee Carafe, 6 Pastries, and 6 Breakfast Sandwiches', \r\n        total : 0,\r\n        box_open: false,\r\n        add: 'add',\r\n        id: null,\r\n        list: [] \r\n    },\r\n    ex_breakfast_name: {\r\n        western_egg_bagel: \"Western Egg Bagel\",\r\n        egg_white: \"Egg White, Mushroom and Spinach on Whole Grain\",\r\n        ham_sau_bacon: \"Ham, Sausage and Bacon on Bagel\"\r\n    },\r\n    baker_dozen : { qty : 0, price : 15.99, name: 'Baker\\'s Dozen', description: 'Assorted Bagels and Cream Cheese (13 ea.)', total : 0 },\r\n    sweet_treats: {\r\n        box_open: false,\r\n        type: null,\r\n        add: 'add',\r\n        id: null,\r\n        half_dozen: {\r\n            price: 10.99,\r\n            qty: 0,\r\n            selected: true,\r\n            list: [],\r\n            total: 0\r\n        }, \r\n        dozen: {\r\n            price: 21.99,\r\n            qty: 0,\r\n            selected: true,\r\n            list: [],\r\n            total: 0\r\n        },\r\n        total: 0,\r\n        names: {\r\n            banana_bread: 'Banana Bread',\r\n            banana_chocolate_chip_bread: 'Banana Chocolate Chip Bread',\r\n            blue_berry_scone: 'Blueberry Scone',\r\n            chocolate_chip_cookie: 'Chocolate Chip Cookie',\r\n            chocolate_croissant: 'Chocolate Croissant',\r\n            cinnamon_scone_croissant: 'Cinnamon Scone Croissant',\r\n            lemon_pound_cake: 'Lemon Pound Cake',\r\n            poppy_seed_bread: 'Poppy Seed Bread',\r\n            pumpkin_bread: 'Pumpkin Bread',\r\n            bars_cookie: 'Bars and Cookies'\r\n        }\r\n    },\r\n    sweet_treats_name: {\r\n        banana_bread: 'Banana Bread',\r\n        banana_chocolate_chip_bread: 'Banana Chocolate Chip Bread',\r\n        blue_berry_scone: 'Blueberry Scone',\r\n        chocolate_chip_cookie: 'Chocolate Chip Cookie',\r\n        chocolate_croissant: 'Chocolate Croissant',\r\n        cinnamon_scone_croissant: 'Cinnamon Scone Croissant',\r\n        lemon_pound_cake: 'Lemon Pound Cake',\r\n        poppy_seed_bread: 'Poppy Seed Bread',\r\n        pumpkin_bread: 'Pumpkin Bread',\r\n        bars_cookie: 'Bars and Cookies'\r\n    },\r\n    assorted_muffins: { qty : 0, price : 12.99, name: 'Assorted Muffins by the 1/2 Dozen', description: '', total : 0 },\r\n    total : 0\r\n};\r\n\r\nconst roundTo = require('roundto');\r\n\r\nexport default function(state = initialState, action) {\r\n    switch (action.type) {\r\n        case UPDATE_BREAKFAST_QTY: {\r\n\r\n            const {name, qty} = action.payload;\r\n\r\n            state[name].qty = qty;\r\n            state[name].total = roundTo(state[name].price * qty, 2);\r\n            state.total = updateBreakfastTotal(state, name, qty);\r\n\r\n            return {...state};\r\n        }\r\n        case OPEN_BREAKFAST_EXECUTIVE_BEGINNING: {\r\n            const {add, id} = action.payload;\r\n            state.ex_breakfast.box_open = true;\r\n            state.ex_breakfast.add = add;\r\n            state.ex_breakfast.id = id;\r\n\r\n            return {...state};\r\n        }\r\n        case CLOSE_BREAKFAST_EXECUTIVE_BEGINNING: {\r\n            state.ex_breakfast.box_open = false;\r\n            return {...state}\r\n        }\r\n        case ADD_BREAKFAST_EXECUTIVE_BEGINNING: {\r\n            const {list} = action.payload;\r\n\r\n            state.ex_breakfast.box_open = false;\r\n\r\n            state.ex_breakfast.list.push(list);\r\n            state.ex_breakfast.qty = state.ex_breakfast.qty + 1;\r\n\r\n            state.ex_breakfast.total = roundTo(state.ex_breakfast.qty * state.ex_breakfast.price, 2);\r\n\r\n            state.total = updateBreakfastTotal(state, 'ex_breakfast', state.ex_breakfast.qty);\r\n\r\n            return {...state};\r\n        }\r\n        case UPDATE_BREAKFAST_EXECUTIVE_BEGINNING: {\r\n            const {id, list} = action.payload;\r\n            state.ex_breakfast.list[id] = list;\r\n            state.ex_breakfast.box_open = false;\r\n            state.ex_breakfast.id = null;\r\n\r\n            return {...state};\r\n        }\r\n        case EDIT_BREAKFAST_EXECUTIVE_BEGINNING: {\r\n            const {id} = action.payload;\r\n            state.ex_breakfast.id = id;\r\n            state.ex_breakfast.box_open = true;\r\n            state.ex_breakfast.add = 'edit';\r\n            return {...state};\r\n        }\r\n        case REMOVE_BREAKFAST_EXECUTIVE_BEGINNING: {\r\n            const {id} = action.payload;\r\n            state.ex_breakfast.list[id] = null;\r\n            state.ex_breakfast.qty = state.ex_breakfast.qty - 1;\r\n\r\n            state.ex_breakfast.id = null;\r\n\r\n            state.ex_breakfast.total = roundTo(state.ex_breakfast.qty * state.ex_breakfast.price, 2);\r\n\r\n            state.total = updateBreakfastTotal(state, 'ex_breakfast', state.ex_breakfast.qty);\r\n\r\n            return {...state};\r\n        }\r\n        case OPEN_BREAKFAST_SWEETTREATS: {\r\n            const {type, add, id} = action.payload;\r\n            \r\n            return {\r\n                ...state,\r\n                sweet_treats:{\r\n                    ...state.sweet_treats,\r\n                    box_open: true,\r\n                    type: type,\r\n                    add: 'add',\r\n                    id: id,\r\n                }\r\n            }\r\n        }\r\n        case CLOSE_BREAKFAST_SWEETTREATS: {\r\n            return {\r\n                ...state,\r\n                sweet_treats: {\r\n                    ...state.sweet_treats,\r\n                    box_open: false\r\n                }\r\n            }\r\n        }\r\n        case ADD_BREAKFAST_SWEETTREATS: {\r\n            const {name, list} = action.payload;\r\n            state.sweet_treats[name].list.push(list);\r\n            state.sweet_treats[name].qty = state.sweet_treats[name].qty + 1;\r\n\r\n            // Get total of sweet treats\r\n            state.sweet_treats[name].total = roundTo(state.sweet_treats[name].qty * state.sweet_treats[name].price, 2) + roundTo(state.sweet_treats[name].qty * state.sweet_treats[name].price, 2);\r\n            state.sweet_treats.total = roundTo(state.sweet_treats.half_dozen.qty * state.sweet_treats.half_dozen.price, 2) + roundTo(state.sweet_treats.dozen.qty * state.sweet_treats.dozen.price, 2);\r\n        \r\n            // BYO Breakfast Total\r\n            state.total = updateBreakfastTotal(state, 'sweet_treats', state.sweet_treats.total);\r\n            state.sweet_treats.box_open = false;\r\n            \r\n            return {...state}\r\n        }\r\n        case EDIT_BREAKFAST_SWEETTREATS: {\r\n            const {type, id} = action.payload;\r\n            \r\n            return {\r\n                ...state,\r\n                sweet_treats: {\r\n                    ...state.sweet_treats,\r\n                    box_open: true,\r\n                    type: type,\r\n                    add: 'edit',\r\n                    id: id\r\n                }\r\n            }\r\n        }\r\n        case UPDATE_BREAKFAST_SWEETTREATS: {\r\n            const {type, id, list} = action.payload;\r\n            state.sweet_treats[type].list[id] = list;\r\n\r\n            return {\r\n                ...state,\r\n                sweet_treats: {\r\n                    ...state.sweet_treats,\r\n                    box_open: false,\r\n                    id: null\r\n                }\r\n            }\r\n        }\r\n        case REMOVE_BREAKFAST_SWEETTREATS: {\r\n            const {type, id} = action.payload;\r\n            state.sweet_treats[type].list[id] = null;\r\n            state.sweet_treats[type].qty = state.sweet_treats[type].qty - 1;\r\n\r\n            // Get total of sweet treats\r\n            state.sweet_treats[type].total = roundTo(state.sweet_treats[type].qty * state.sweet_treats[type].price, 2) + roundTo(state.sweet_treats[type].qty * state.sweet_treats[type].price, 2);\r\n            state.sweet_treats.total = roundTo(state.sweet_treats.half_dozen.qty * state.sweet_treats.half_dozen.price, 2) + roundTo(state.sweet_treats.dozen.qty * state.sweet_treats.dozen.price, 2);\r\n\r\n            // BYO Breakfast Total\r\n            state.total = updateBreakfastTotal(state, 'sweet_treats', state.sweet_treats.total);\r\n\r\n            return {\r\n                ...state\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nfunction updateBreakfastTotal(state, name, qty) {\r\n    // state[name].total = state[name].price * qty;\r\n    return roundTo(state.bk_beginnings.total + state.ex_breakfast.total + state.baker_dozen.total + state.sweet_treats.total + state.assorted_muffins.total, 2);\r\n}","import { \r\n    UPDATE_BYO_BREAKFAST,\r\n    UPDATE_BYO_BREAKFAST_COFFEE,\r\n    UPDATE_BYO_BREAKFAST_FRUITSALAD,\r\n    UPDATE_BYO_BREAKFAST_SANDWICH\r\n} from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n    coffee_carafe: {\r\n        price: 16.99,\r\n        list: {\r\n            regular: 0,\r\n            decaf: 0,\r\n            iced: 0,\r\n            iced_decaf: 0\r\n        },\r\n        total: 0\r\n    },\r\n    fruit_salad: {\r\n        serve_20: {price: 49.99, qty: 0},\r\n        serve_8: {price: 29.99, qty: 0},\r\n        total: 0\r\n    },\r\n    sandwiches: {\r\n        list: {\r\n            zucchini: {price: 21.99, qty: 0, name: 'Ham and Gruyere on Zucchini Bread', description: ''},\r\n            sausage_bagel: {price: 17.99, qty: 0, name: 'Egg, Cheese, Bacon and Sausage on a Bagel', description: ''},\r\n            pepper_bagel: {price: 17.99, qty: 0, name: 'Egg, Cheese, Chorizo, and Roasted Poblano Peppers on a Bagel', description: ''},\r\n            red_pepper_bagel: {price: 17.99, qty: 0, name: 'Egg Whites, Goat Cheese, Mushrooms, Spinach and Red Peppers on a Bagel', description: ''}\r\n        },\r\n        total: 0\r\n    },\r\n    west_egg_bagel: { qty : 0, price : 20.99, name: 'Western Egg Bagel', description: 'sold by the 1/2 Dozen', total : 0 },\r\n    ewms_whole: { qty : 0, price : 22.99, name: 'Egg White, Mushroom and Spinach on Whole Grain', description: 'sold by the 1/2 Dozen', total : 0 },\r\n    hsb_bagel: { qty : 0, price : 20.99, name: 'Ham, Sausage and Bacon on Bagel', description: 'sold by the 1/2 Dozen', total : 0 },\r\n    total : 0\r\n};\r\n\r\nconst roundTo = require('roundto');\r\n\r\nexport default function(state = initialState, action) {\r\n    switch (action.type) {\r\n        case UPDATE_BYO_BREAKFAST: {\r\n            const {name, qty} = action.payload;\r\n\r\n            state[name].qty = qty;\r\n            state[name].total = roundTo(state[name].price * qty, 2);\r\n            state.total = updateByoTotal(state, name, state[name].total);\r\n\r\n            return {...state}\r\n        }\r\n        case UPDATE_BYO_BREAKFAST_COFFEE: {\r\n            const {name, qty} = action.payload;\r\n\r\n            let coffee_list = ['regular', 'decaf', 'iced', 'iced_decaf'];\r\n            let total_qty = 0;\r\n            for (let i = 0; i < coffee_list.length; i++) {\r\n                const coffee_name = coffee_list[i];\r\n                if (coffee_name !== name) {\r\n                    total_qty = total_qty + state.coffee_carafe.list[coffee_list[i]];\r\n                }\r\n                else {\r\n                    total_qty = total_qty + qty;\r\n                }\r\n            }\r\n            \r\n            const coffee_total = roundTo(state.coffee_carafe.price * total_qty, 2); \r\n\r\n\r\n            const total = updateByoTotal(state, 'coffee_carafe', coffee_total);\r\n\r\n            return {\r\n                ...state,\r\n                coffee_carafe: {\r\n                    ...state.coffee_carafe,\r\n                    list: {\r\n                        ...state.coffee_carafe.list,\r\n                        [name]: qty\r\n                    },\r\n                    total: coffee_total\r\n                },\r\n                total: total\r\n            };\r\n        }\r\n        case UPDATE_BYO_BREAKFAST_FRUITSALAD: {\r\n            const {name, qty} = action.payload;\r\n\r\n            state.fruit_salad[name].qty = qty;\r\n\r\n            const fruit_total = (state.fruit_salad.serve_20.price * state.fruit_salad.serve_20.qty) + \r\n                                (state.fruit_salad.serve_8.price * state.fruit_salad.serve_8.qty);\r\n\r\n            const total = updateByoTotal(state, 'fruit_salad', fruit_total);\r\n\r\n            return {\r\n                ...state,\r\n                fruit_salad: {\r\n                    ...state.fruit_salad,\r\n                    [name]: {\r\n                        ...state.fruit_salad[name],\r\n                        qty: qty\r\n                    },\r\n                    total: roundTo(fruit_total, 2)\r\n                },\r\n                total: total\r\n            }\r\n        }\r\n        case UPDATE_BYO_BREAKFAST_SANDWICH: {\r\n            const {name, qty} = action.payload;\r\n\r\n            let subtotal = 0;\r\n            state.sandwiches.list[name].qty = qty;\r\n            \r\n            for (const name in state.sandwiches.list){\r\n                subtotal = subtotal + roundTo(state.sandwiches.list[name].qty * state.sandwiches.list[name].price, 2);\r\n            }\r\n\r\n            state.sandwiches.total = subtotal;\r\n\r\n            const total = updateByoTotal(state, 'sandwiches', subtotal);\r\n\r\n            return {\r\n                ...state,\r\n                sandwiches: {\r\n                    ...state.sandwiches,\r\n                    total: subtotal\r\n                },\r\n                total: total\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nfunction updateByoTotal(state, name, subtotal) {\r\n    state[name].total = subtotal;\r\n    const total = roundTo(\r\n                            state.coffee_carafe.total + \r\n                            state.fruit_salad.total + \r\n                            state.sandwiches.total +\r\n                            state.west_egg_bagel.total +\r\n                            state.ewms_whole.total +\r\n                            state.hsb_bagel.total, \r\n                        2);\r\n    return total;\r\n}","import { \r\n    OPEN_LUNCHBOX,\r\n    ADD_LUNCHBOX,\r\n    OPEN_LUNCHBOX_EDITOR,\r\n    UPDATE_LUNCHBOX,\r\n    REMOVE_LUNCHBOX,\r\n    CLOSE_LUNCHBOX\r\n} from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n    actionType: 'add',\r\n    id: null,\r\n    open_box: false,\r\n    price: 54.99,\r\n    qty: 0,\r\n    products: {\r\n        sandwiches : {\r\n            little_piggy: {name: 'Three Little Piggy\\'s', description: 'Smoked Ham, Pecan Smoked Shoulder Bacon, BBQ Pulled Pork, and Slaw'},\r\n            italian_job: {name: 'The Italian Job (1/2 Sandwich)', description: 'Ham, Peppered Turkey, Salami, Provolone, Cured Tomato, and Sport Peppers'},\r\n            turk_philly_chess: {name: 'Peppered Turkey Philly Cheese (1/2 Sandwich)', description: 'Peppered Turkey, Sport Peppers, and White Cheddar Cheese'},\r\n            bruschetta_panini : {name: 'Bruschetta Panini', description: 'Tomato, Pesto, and Mozzarella'}\r\n        },\r\n        salads: {\r\n            hali_caesar: {name: 'Hail Caesar', description: 'Chopped Romaine, Juicy Chicken, Parmesan, and Caesar Dressing'},\r\n            kale_crunch: {name: 'Kale Crunch', description: 'Kale, Cabbage, Radish, Almond, Cranberry, Peppered Turkey, and Citrus Vinaigrette'}\r\n        },\r\n        chips: {\r\n            baked_lays: 'Baked Lays',\r\n            pb_jalapeno: 'Poore Brother\\'s - Jalapeno',\r\n            pb_original: 'Poore Brother\\'s - Original',\r\n            sun_chips: 'Sun Chips',\r\n            bbq_chips: 'BBQ Chips'\r\n        },\r\n        beverages: {\r\n            coke: 'Coke',\r\n            diet_coke: 'Diet Coke',\r\n            dr_pepper: 'Dr.Pepper',\r\n            diet_dr_pepper: 'Diet Dr.Pepper',\r\n            sprite: 'Sprite',\r\n            dasani: 'Dasani Water',\r\n            cherry_coke: 'Cherry Coke',\r\n            coke_zero: 'Coke Zero'\r\n        }\r\n    },\r\n    names: {\r\n        little_piggy: {name: 'Three Little Piggy\\'s', description: 'Smoked Ham, Pecan Smoked Shoulder Bacon, BBQ Pulled Pork, and Slaw'},\r\n        italian_job: {name: 'The Italian Job (1/2 Sandwich)', description: 'Ham, Peppered Turkey, Salami, Provolone, Cured Tomato, and Sport Peppers'},\r\n        turk_philly_chess: {name: 'Peppered Turkey Philly Cheese (1/2 Sandwich)', description: 'Peppered Turkey, Sport Peppers, and White Cheddar Cheese'},\r\n        bruschetta_panini : {name: 'Bruschetta Panini', description: 'Tomato, Pesto, and Mozzarella'},\r\n        hali_caesar: {name: 'Hail Caesar', description: 'Chopped Romaine, Juicy Chicken, Parmesan, and Caesar Dressing'},\r\n        kale_crunch: {name: 'Kale Crunch', description: 'Kale, Cabbage, Radish, Almond, Cranberry, Peppered Turkey, and Citrus Vinaigrette'},\r\n        baked_lays: {name:'Baked Lays'},\r\n        pb_jalapeno: {name:'Poore Brother\\'s - Jalapeno'},\r\n        pb_original: {name:'Poore Brother\\'s - Original'},\r\n        sun_chips: {name:'Sun Chips'},\r\n        bbq_chips: {name:'BBQ Chips'},\r\n        fruit: {name: 'Fruit'},\r\n        coke: {name:'Coke'},\r\n        diet_coke: {name:'Diet Coke'},\r\n        dr_pepper: {name:'Dr.Pepper'},\r\n        diet_dr_pepper: {name:'Diet Dr.Pepper'},\r\n        sprite: {name:'Sprite'},\r\n        dasani: {name:'Dasani Water'},\r\n        cherry_coke: {name:'Cherry Coke'},\r\n        coke_zero: {name:'Coke Zero'}\r\n    },\r\n    list: [],\r\n    total: 0\r\n};\r\n\r\nconst roundTo = require('roundto');\r\n\r\nexport default function(state = initialState, action) {\r\n    switch (action.type) {\r\n        case OPEN_LUNCHBOX: {\r\n            state.actionType = 'add';\r\n            state.open_box = true;\r\n            return {\r\n                ...state\r\n            };\r\n        }\r\n        case ADD_LUNCHBOX: {\r\n            const {list} = action.payload;\r\n            state.open_box = false;\r\n            state.qty = state.qty + 1;\r\n\r\n            // Check Extra\r\n            const extras = list.extra.list;\r\n            let extra_total = 0;\r\n            for (let i = 0; i < extras.length; i++) {\r\n                if (extras[i].one !== 'None'){extra_total = extra_total + 6.99;} //price extra sandwich or salad = 6.99\r\n                if (extras[i].two !== 'None'){extra_total = extra_total + 0.99;} //price extra chips = 0.99\r\n                if (extras[i].three !== 'None'){\r\n                    if (extras[i].three === 'Dasani Water'){\r\n                        extra_total = extra_total + 1.99; //price dasani = 1.99\r\n                    }\r\n                    else {\r\n                        extra_total = extra_total + 2.09; //price soda = 2.09\r\n                    }\r\n                }\r\n            }\r\n\r\n            list.extra.total = extra_total;\r\n            state.list.push(list);\r\n            state.total = roundTo((state.qty * state.price) + extra_total,2);\r\n            return {\r\n                ...state\r\n            };\r\n        }\r\n        case OPEN_LUNCHBOX_EDITOR: {\r\n            const {index} = action.payload;\r\n            state.id = index;\r\n            state.actionType = 'edit';\r\n            state.open_box = true;\r\n            return {\r\n                ...state\r\n            };\r\n        }\r\n        case UPDATE_LUNCHBOX: {\r\n            const {index, list} = action.payload;\r\n            state.list[index] = list;\r\n\r\n            // Check Extra\r\n            const extras = state.list[index].extra.list;\r\n            let extra_total = 0;\r\n            for (let i = 0; i < extras.length; i++) {\r\n                if (extras[i].one !== 'None'){extra_total = extra_total + 6.99;} //price extra sandwich or salad = 6.99\r\n                if (extras[i].two !== 'None'){extra_total = extra_total + 0.99;} //price extra chips = 0.99\r\n                if (extras[i].three !== 'None'){\r\n                    if (extras[i].three === 'Dasani Water'){\r\n                        extra_total = extra_total + 1.99; //price dasani = 1.99\r\n                    }\r\n                    else {\r\n                        extra_total = extra_total + 2.09; //price soda = 2.09\r\n                    }\r\n                }\r\n            }\r\n            state.list[index].extra.total = extra_total;\r\n            state.total = roundTo((state.qty * state.price) + extra_total,2);\r\n\r\n            state.open_box = false;\r\n            return {\r\n                ...state\r\n            };\r\n        }\r\n        case CLOSE_LUNCHBOX: {\r\n            state.open_box = false;\r\n            return {\r\n                ...state\r\n            };\r\n        }\r\n        case REMOVE_LUNCHBOX: {\r\n            const {index} = action.payload;\r\n            state.qty = state.qty - 1;\r\n            state.list[index] = [];\r\n            state.total = roundTo((state.qty * state.price),2);\r\n            return {\r\n                ...state\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { UPDATE_OFFICEPARTY_QTY } from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n    serve_10 : { qty : 0, price : 34.99, name: 'Serve 10', description: 'Snack sized assorted meats, cheeses, veggies, hummus and pita chips', total : 0 },\r\n    total : 0\r\n};\r\n\r\nconst roundTo = require('roundto');\r\n\r\nexport default function(state = initialState, action) {\r\n    switch (action.type) {\r\n        case UPDATE_OFFICEPARTY_QTY: {\r\n\r\n            const {name, qty} = action.payload;\r\n            const subtotal = roundTo(state[name].price * qty, 2); \r\n            const total = updateOfficePartyTotal(state, name, qty);\r\n\r\n            return {\r\n                ...state,\r\n                [name]: {\r\n                    ...state[name],\r\n                    qty: qty,\r\n                    total: subtotal\r\n                },\r\n                total: total\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nfunction updateOfficePartyTotal(state, name, qty) {\r\n    state[name].total = state[name].price * qty;\r\n    return roundTo(state.serve_10.total, 2);\r\n}","import { \r\n    UPDATE_BEVERAGE_QTY\r\n} from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n    list: {\r\n        coke: {name: 'Coke', price: 2.09, qty: 0},\r\n        diet_coke: {name: 'Diet Coke', price: 2.09, qty: 0},\r\n        dr_pepper: {name: 'Dr.Pepper', price: 2.09, qty: 0},\r\n        diet_dr_pepper: {name: 'Diet Dr.Pepper', price: 2.09, qty: 0},\r\n        sprite: {name: 'Sprite', price: 2.09, qty:0},\r\n        dasani: {name: 'Dasani Water', price: 1.99, qty: 0},\r\n        cherry_coke: {name: 'Cherry Coke', price: 2.09, qty: 0},\r\n        coke_zero: {name: 'Coke Zero', price: 2.09, qty: 0}\r\n    },\r\n    total : 0\r\n};\r\n\r\nconst roundTo = require('roundto');\r\n\r\nexport default function(state = initialState, action) {\r\n    switch (action.type) {\r\n        case UPDATE_BEVERAGE_QTY: {\r\n            const {name, qty} = action.payload;\r\n\r\n            state.list[name].qty = qty;\r\n            state.total = updateTotal(state, name);\r\n\r\n            return {...state};\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nfunction updateTotal(state, name) {\r\n    const total = roundTo(\r\n                            state.list.coke.qty*state.list.coke.price + \r\n                            state.list.diet_coke.qty*state.list.diet_coke.price +\r\n                            state.list.dr_pepper.qty*state.list.dr_pepper.price +\r\n                            state.list.diet_dr_pepper.qty*state.list.diet_dr_pepper.price +\r\n                            state.list.sprite.qty*state.list.sprite.price +\r\n                            state.list.dasani.qty*state.list.dasani.price +\r\n                            state.list.cherry_coke.qty*state.list.cherry_coke.price +\r\n                            state.list.coke_zero.qty*state.list.coke_zero.price, \r\n                        2);\r\n    return total;\r\n}","import { combineReducers } from \"redux\";\r\nimport main from \"./main\";\r\nimport breakfast from \"./breakfast\";\r\nimport byo_breakfast from \"./byo_breakfast\";\r\nimport lunch from \"./lunch\";\r\nimport office_party from \"./officeParty\";\r\nimport beverage from \"./beverage\";\r\n\r\nexport default combineReducers({ main, breakfast, byo_breakfast, lunch, office_party, beverage });","export const UPDATE_CURRENT_NAV = \"UPDATE_CURRENT_NAV\";\r\nexport const CALCULATE_SUBTOTAL = \"CALCULATE_SUBTOTAL\";\r\nexport const SUBMIT_ORDER = \"SUBMIT_ORDER\";\r\nexport const SUBMIT_SUCCESS = \"SUBMIT_SUCCESS\";\r\nexport const SUBMIT_FAILURE = \"SUBMIT_FAILURE\";\r\nexport const GET_DELIVERY_METHOD = \"GET_DELIVERY_METHOD\";\r\nexport const GET_DELIVERY_METHOD_FAILURE = \"GET_DELIVERY_METHOD_FAILURE\";\r\nexport const ADDITIONAL_NOTE = \"ADDITIONAL_NOTE\";\r\n\r\n// Breakfast\r\nexport const UPDATE_QTY = \"UPDATE_QTY\";\r\nexport const UPDATE_BREAKFAST_QTY = \"UPDATE_BREAKFAST_QTY\";\r\nexport const OPEN_BREAKFAST_EXECUTIVE_BEGINNING = \"OPEN_BREAKFAST_EXECUTIVE_BEGINNING\";\r\nexport const CLOSE_BREAKFAST_EXECUTIVE_BEGINNING = \"CLOSE_BREAKFAST_EXECUTIVE_BEGINNING\";\r\nexport const ADD_BREAKFAST_EXECUTIVE_BEGINNING = \"ADD_BREAKFAST_EXECUTIVE_BEGINNING\";\r\nexport const UPDATE_BREAKFAST_EXECUTIVE_BEGINNING = \"UPDATE_BREAKFAST_EXECUTIVE_BEGINNING\";\r\nexport const EDIT_BREAKFAST_EXECUTIVE_BEGINNING = \"EDIT_BREAKFAST_EXECUTIVE_BEGINNING\";\r\nexport const REMOVE_BREAKFAST_EXECUTIVE_BEGINNING = \"REMOVE_BREAKFAST_EXECUTIVE_BEGINNING\";\r\nexport const OPEN_BREAKFAST_SWEETTREATS = \"OPEN_BREAKFAST_SWEETTREATS\";\r\nexport const ADD_BREAKFAST_SWEETTREATS = \"ADD_BREAKFAST_SWEETTREATS\";\r\nexport const CLOSE_BREAKFAST_SWEETTREATS = \"CLOSE_BREAKFAST_SWEETTREATS\";\r\nexport const EDIT_BREAKFAST_SWEETTREATS = \"EDIT_BREAKFAST_SWEETTREATS\";\r\nexport const UPDATE_BREAKFAST_SWEETTREATS = \"UPDATE_BREAKFAST_SWEETTREATS\";\r\nexport const REMOVE_BREAKFAST_SWEETTREATS = \"REMOVE_BREAKFAST_SWEETTREATS\";\r\n\r\n// Build Your Own Breakfast\r\nexport const UPDATE_BYO_BREAKFAST = \"UPDATE_BYO_BREAKFAST\";\r\nexport const UPDATE_BYO_BREAKFAST_COFFEE = \"UPDATE_BYO_BREAKFAST_COFFEE\";\r\nexport const UPDATE_BYO_BREAKFAST_FRUITSALAD = \"UPDATE_BYO_BREAKFAST_FRUITSALAD\";\r\nexport const UPDATE_BYO_BREAKFAST_SANDWICH = \"UPDATE_BYO_BREAKFAST_SANDWICH\";\r\n\r\n// Lunch\r\nexport const OPEN_LUNCHBOX = \"OPEN_LUNCHBOX\";\r\nexport const ADD_LUNCHBOX = \"ADD_LUNCHBOX\";\r\nexport const OPEN_LUNCHBOX_EDITOR = \"OPEN_LUNCHBOX_EDITOR\";\r\nexport const UPDATE_LUNCHBOX = \"UPDATE_LUNCHBOX\";\r\nexport const REMOVE_LUNCHBOX = \"REMOVE_LUNCHBOX\";\r\nexport const CLOSE_LUNCHBOX = \"CLOSE_LUNCHBOX\";\r\n\r\n// Office Party\r\nexport const UPDATE_OFFICEPARTY_QTY = \"UPDATE_OFFICEPARTY_QTY\";\r\n\r\n// Beverage\r\nexport const UPDATE_BEVERAGE_QTY = \"UPDATE_BEVERAGE_QTY\";","import { createStore, applyMiddleware } from 'redux';\r\nimport thunkMiddleware  from 'redux-thunk';\r\nimport rootReducer from \"./reducers\";\r\n\r\nexport default createStore( rootReducer, applyMiddleware( thunkMiddleware ));","import React from 'react';\r\n\r\nclass NumberInput extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            value: parseInt(this.props.value)\r\n        }\r\n    }\r\n\r\n    increase = () => {\r\n        this.setState({\r\n            value: this.state.value + 1\r\n        }, function() {\r\n            const result = this.props.onChange(this.props.name, this.state.value);\r\n            if (result === 'error'){\r\n                this.setState({\r\n                    value: this.state.value - 1\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    decrease = () => {\r\n        if (this.state.value-1 >= 0) {\r\n            this.setState({\r\n                value: this.state.value - 1\r\n            }, function() {\r\n                this.props.onChange(this.props.name, this.state.value)\r\n            })\r\n        }\r\n    }\r\n\r\n    onChangeHandler = (event) => {\r\n        const target = event.target;\r\n        const value = target.value;\r\n        this.setState({\r\n            value: parseInt(value)\r\n        }, function() {\r\n            this.props.onChange(this.props.name, this.state.value)\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"def-number-input number-input\" style={this.props.style}>\r\n                {\r\n                    !this.props.noleft ?\r\n                    <button className=\"minus\" onClick={this.decrease}></button> :\r\n                    null\r\n                }\r\n                <input className={'quantity ' + (this.props.readonly ? 'input-readonly' : '')} name={this.props.name}\r\n                min={0}\r\n                value={this.props.value}\r\n                onChange={this.onChangeHandler.bind(this)}\r\n                type=\"number\"\r\n                readOnly={this.props.readonly ? true : false} />\r\n                <button className=\"plus\" onClick={this.increase}></button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NumberInput;","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n    Link\r\n} from 'react-router-dom';\r\n\r\nimport { Row } from 'react-bootstrap';\r\n\r\n// import ArrowLeft from '../../img/arrow_left.png';\r\n\r\nclass TopNav extends React.Component {\r\n\r\n    render() {\r\n        return(\r\n            <React.Fragment>\r\n                <Row className=\"m-0\">\r\n                    <Link\r\n                    to=\"/breakfast\"\r\n                    className={'topnav col ' + (this.props.global.main.nav === 0 ? 'active' : '')}\r\n                    >\r\n                        <p><u>Breakfast</u></p>\r\n                    </Link>\r\n                    <Link\r\n                    to=\"/byobreakfast\"\r\n                    className={'topnav col ' + (this.props.global.main.nav === 1 ? 'active' : '')}\r\n                    >\r\n                        <p><u>Build Your Own Breakfast</u></p>\r\n                    </Link>\r\n                    <Link\r\n                    to=\"/lunch\"\r\n                    className={'topnav col ' + (this.props.global.main.nav === 2 ? 'active' : '')}\r\n                    >\r\n                        <p><u>Lunch</u></p>\r\n                    </Link>\r\n                    <Link\r\n                    to=\"/officeparty\"\r\n                    className={'topnav col ' + (this.props.global.main.nav === 3 ? 'active' : '')}\r\n                    >\r\n                        <p><u>Office Party</u></p>\r\n                    </Link>\r\n                    <Link\r\n                    to=\"/beverage\"\r\n                    className={'topnav col ' + (this.props.global.main.nav === 4 ? 'active' : '')}\r\n                    >\r\n                        <p><u>Beverage</u></p>\r\n                    </Link>\r\n                    <Link\r\n                    to=\"/summary\"\r\n                    className={'topnav col ' + (this.props.global.main.nav === 5 ? 'active' : '')}\r\n                    >\r\n                        <p><u>Order Summary</u></p>\r\n                    </Link>\r\n                </Row>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    global: state\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps\r\n)(TopNav)","import { \r\n    UPDATE_CURRENT_NAV, \r\n    SUBMIT_ORDER, \r\n    CALCULATE_SUBTOTAL,\r\n    SUBMIT_SUCCESS,\r\n    SUBMIT_FAILURE,\r\n    GET_DELIVERY_METHOD,\r\n    GET_DELIVERY_METHOD_FAILURE,\r\n    ADDITIONAL_NOTE\r\n} from './actionTypes.js'\r\n\r\nexport const updateCurrentNav = (index) => ({\r\n    type: UPDATE_CURRENT_NAV,\r\n    payload: {\r\n        index\r\n    }\r\n})\r\n\r\nexport const calculateSubtotal = (subtotal, tax, total) => ({\r\n    type: CALCULATE_SUBTOTAL,\r\n    payload: {\r\n        subtotal, tax, total\r\n    }\r\n})\r\n\r\nexport const initSubmitOrder = () => ({\r\n    type: SUBMIT_ORDER\r\n})\r\n\r\nexport const formValidationFailure = () => ({\r\n\r\n})\r\n\r\nexport const formSubmitSuccess = (id, email) => ({\r\n    type: SUBMIT_SUCCESS,\r\n    payload: {\r\n        id, email\r\n    }\r\n})\r\n\r\nexport const formSubmitFailure = (code) => ({\r\n    type: SUBMIT_FAILURE,\r\n    payload: {\r\n        code\r\n    }\r\n})\r\n\r\nexport function submitOrder(data) {\r\n    return (dispatch) => {\r\n        dispatch(initSubmitOrder());\r\n\r\n        // Validate Form\r\n\r\n        let error = false;\r\n\r\n        if (error){\r\n            dispatch(formValidationFailure());\r\n        }\r\n        else {\r\n            // console.log(data);\r\n            const fetch_option = {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(data)\r\n            }\r\n\r\n            // const url = 'http://192.168.99.100/api/catering/retail/catalyst/submit';\r\n            const url = '/api/catering/retail/slotcanyon/submit';\r\n\r\n            fetch(url, fetch_option)\r\n            .then((res) => {\r\n                // console.log(res);\r\n                if(res.ok) {\r\n                    return res.json();\r\n                } else {\r\n                    // console.log(res);\r\n                    throw new Error('An error occurred.');\r\n                }\r\n            })\r\n            .then(res => {\r\n                // console.log('return', res.return);\r\n                if (res.success){\r\n                    dispatch(formSubmitSuccess(res.return.order_id, res.return.email));\r\n                }\r\n                else {\r\n                    dispatch(formSubmitFailure(res.return.code));\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n                // dispatch(formSubmitFailure(err));\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport function getDeliveryMethod() {\r\n    return (dispatch) => {\r\n        const fetch_option = {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json'\r\n            }\r\n        }\r\n\r\n        // const url = 'http://192.168.99.100/catering/retail/customer_info/getDeliveryMethod';\r\n        const url = '/api/catering/retail/customer_info/getDeliveryMethod';\r\n\r\n        fetch(url, fetch_option)\r\n        .then((res) => {\r\n            if(res.ok) {\r\n                return res.json();\r\n            } else {\r\n                // console.log(res);\r\n                throw new Error('An error occurred.');\r\n            }\r\n        })\r\n        .then(res => {\r\n            // console.log('return', res.return);\r\n            dispatch(getDeliveryMethodSuccess(res.return.delivery_method));\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n            dispatch(getDeliveryMethodFailure(err));\r\n        })\r\n    }\r\n}\r\n\r\nexport const getDeliveryMethodSuccess = (delivery_method) => ({\r\n    type: GET_DELIVERY_METHOD,\r\n    payload: {\r\n        delivery_method\r\n    }\r\n})\r\n\r\nexport const getDeliveryMethodFailure = (err) => ({\r\n    type: GET_DELIVERY_METHOD_FAILURE,\r\n    payload: {\r\n        err\r\n    }\r\n})\r\n\r\nexport const handleTextarea = (text) => ({\r\n    type: ADDITIONAL_NOTE,\r\n    payload: text\r\n})","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from 'react-router-dom';\r\nimport { Row, Col, ButtonToolbar } from 'react-bootstrap';\r\n\r\nimport { updateCurrentNav } from '../redux/actions/main';\r\n\r\nconst roundTo = require('roundto');\r\n\r\nclass Bottom extends React.Component {\r\n\r\n    getTotal = () => {\r\n        return roundTo(\r\n                this.props.global.breakfast.total +\r\n                this.props.global.byo_breakfast.total +\r\n                this.props.global.lunch.total +\r\n                this.props.global.office_party.total +\r\n                this.props.global.beverage.total,\r\n                2\r\n            );\r\n    }\r\n\r\n    render() {\r\n\r\n        const navIndex = this.props.global.main.nav;\r\n        const routes = this.props.global.main.routes;\r\n\r\n        return(\r\n            <React.Fragment>\r\n                <Row>\r\n                    <Col>\r\n                        <p style={{fontSize: '22px', fontWeight: '600', textAlign: 'right', padding: '20px 15px'}}>Subtotal ${this.getTotal()}</p>\r\n                    </Col>\r\n                </Row>\r\n                <ButtonToolbar>\r\n\r\n                    {\r\n                        (navIndex !== 0 && navIndex !== 5) ?\r\n                        <Link\r\n                        className={\"btn add-btn\"}\r\n                        style={{marginRight: '10px', width: '200px'}}\r\n                        to={routes[navIndex-1]}\r\n                        >Prev</Link>\r\n                        :\r\n                        null\r\n                    }\r\n\r\n                    {\r\n                        navIndex !== 5 ? \r\n                        <Link\r\n                        className={\"btn add-btn\"}\r\n                        style={{marginLeft: 'auto', width:'200px'}}\r\n                        to={routes[navIndex+1]}\r\n                        >Next</Link>\r\n                        :\r\n                        <Link\r\n                        className={\"btn add-btn\"}\r\n                        style={{marginLeft: 'auto', width:'150px'}}\r\n                        to={routes[0]}\r\n                        >Add More Food</Link>\r\n                    }\r\n\r\n                </ButtonToolbar>\r\n\r\n                {/* <ButtonToolbar style={{marginTop: '15px'}}>\r\n                    {\r\n                        navIndex !== 5 ?\r\n                        <Link\r\n                        className={\"btn add-btn\"}\r\n                        style={{width:'100%'}}\r\n                        to={routes[5]}\r\n                        >Review Order</Link>\r\n                        :\r\n                        null\r\n                    }\r\n                </ButtonToolbar> */}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    global: state\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => (\r\n    {\r\n        updateCurrentNav: (index) => dispatch(updateCurrentNav(index))\r\n    }\r\n)\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Bottom)","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Row, Col, Card, ButtonToolbar, Button, ListGroup } from 'react-bootstrap';\r\nimport NumberInput from '../common/numberInput.js';\r\n\r\nimport { addExecutiveBeginning, closeExecutiveBeginning, updateExecutiveBeginning } from '../../redux/actions/breakfast';\r\n\r\nclass ExecutiveBreakfast extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        let list = {\r\n            western_egg_bagel: 0,\r\n            egg_white: 0,\r\n            ham_sau_bacon: 0\r\n        };\r\n        if (this.props.add === 'edit'){ \r\n            list = this.props.breakfast.ex_breakfast.list[this.props.id]; \r\n        }\r\n\r\n        this.state = {\r\n            //qty: 0,\r\n            qty: this.props.add === 'edit' ? 6 : 0, //if in edit mode qty is at 6, not 0 or else rendered page will display 0/6 selected when 6/6 are selected on edit screen\r\n            list: list,\r\n            error: false,\r\n            error_msg: '',\r\n            max_qty: 6\r\n        }\r\n    }\r\n\r\n    onChangeInput = (name, qty) => {\r\n        this.setState({error: false})\r\n\r\n        let list = this.state.list;\r\n        // list[name] = qty;\r\n        const max_qty = this.state.max_qty;\r\n        let tmp_qty = 0;\r\n        for (let key in list){\r\n            if (key !== name){\r\n                tmp_qty = tmp_qty + list[key];    \r\n            }\r\n            else{\r\n                tmp_qty = tmp_qty + qty;\r\n            }\r\n        }\r\n        \r\n        if (tmp_qty <= max_qty){\r\n            list[name] = qty;\r\n            this.setState({\r\n                list: list,\r\n                qty: tmp_qty\r\n            })\r\n        }\r\n        else {\r\n            this.setState({\r\n                error: true,\r\n                error_msg: 'qty max error'\r\n            })\r\n            return 'error';\r\n        }\r\n    }\r\n\r\n    closeExecutiveBeginning = () => {\r\n        this.props.closeExecutiveBeginning();\r\n    }\r\n\r\n    addExecutiveBeginning = () => {\r\n        if (this.validateSandwiches()){\r\n\r\n        }\r\n        else {\r\n            this.props.addExecutiveBeginning(this.state.list);\r\n        }\r\n    }\r\n\r\n    updateExecutiveBeginning = () => {\r\n        if (this.validateSandwiches()){\r\n\r\n        }\r\n        else {\r\n            this.props.updateExecutiveBeginning(this.props.id, this.state.list);\r\n        }\r\n    }\r\n\r\n    validateSandwiches = () => {\r\n        let error = false;\r\n        // let list = this.state.list;\r\n        // const max_qty = this.state.max_qty;\r\n        // let tmp_qty = 0;\r\n        // for (let key in list){\r\n        //     tmp_qty = tmp_qty + list[key];\r\n        // }\r\n        \r\n        if (this.state.qty !== this.state.max_qty){\r\n            this.setState({error: true});\r\n            error = true;\r\n        }\r\n        \r\n        return error;\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <Card className=\"col-md-12 p-0\">\r\n                <Card.Header>\r\n\r\n                </Card.Header>\r\n\r\n                <Card.Body>\r\n                    <Card.Title>Select Your Sandwiches\r\n                        <span style={{ textTransform: 'initial', marginLeft: '12px', fontSize: '17px', color: '#545454'}}>\r\n                            Select 6\r\n                        </span>\r\n                    </Card.Title>\r\n                </Card.Body>\r\n\r\n                <Card.Body className={this.state.error ? 'su-alert' : ''}>\r\n                    <Card.Text className=\"pl-3\">\r\n                        You selected <strong>{this.state.qty} of {this.state.max_qty}</strong> Sandwiches.\r\n                    </Card.Text>\r\n                </Card.Body>\r\n\r\n                <ListGroup variant=\"flush\">\r\n\r\n                    <ListGroup.Item className=\"menu-list\">\r\n                        <Row className=\"mb-3\">\r\n\r\n                            <Col className=\"wrap_qty\" style={{lineHeight: '32px'}}>\r\n                                {this.props.breakfast.ex_breakfast_name.western_egg_bagel}\r\n                                <NumberInput \r\n                                    readonly={true}\r\n                                    onChange={this.onChangeInput.bind(this)}\r\n                                    name=\"western_egg_bagel\"\r\n                                    value={this.state.list.western_egg_bagel}\r\n                                    style={{textAlign: 'left', float: 'left'}}\r\n                                />\r\n                            </Col>\r\n\r\n                        </Row>\r\n                        <Row className=\"mb-3\">\r\n\r\n                            <Col className=\"wrap_qty\" style={{lineHeight: '32px'}}>\r\n                                {this.props.breakfast.ex_breakfast_name.egg_white}\r\n                                <NumberInput \r\n                                    readonly={true}\r\n                                    onChange={this.onChangeInput.bind(this)}\r\n                                    name=\"egg_white\"\r\n                                    value={this.state.list.egg_white}\r\n                                    style={{textAlign: 'left', float: 'left'}}\r\n                                />\r\n                            </Col>\r\n\r\n                        </Row>\r\n\r\n                        <Row className=\"mb-3\">\r\n\r\n                            <Col className=\"wrap_qty\" style={{lineHeight: '32px'}}>\r\n                                {this.props.breakfast.ex_breakfast_name.ham_sau_bacon}\r\n                                <NumberInput \r\n                                    readonly={true}\r\n                                    onChange={this.onChangeInput.bind(this)}\r\n                                    name=\"ham_sau_bacon\"\r\n                                    value={this.state.list.ham_sau_bacon}\r\n                                    style={{textAlign: 'left', float: 'left'}}\r\n                                />\r\n                            </Col>\r\n\r\n                        </Row>\r\n                        \r\n\r\n                        <Row>\r\n                            <Col>\r\n                                <ButtonToolbar className=\"mt-4\">\r\n                                    {\r\n                                        this.props.add === 'add' ?\r\n                                        <Button variant=\"primary\" size=\"md\" onClick={this.addExecutiveBeginning.bind(this)} className=\"add-btn\">\r\n                                            Add\r\n                                        </Button>\r\n                                        :\r\n                                        <Button variant=\"primary\" size=\"md\" onClick={this.updateExecutiveBeginning.bind(this)} className=\"add-btn\">\r\n                                            Update\r\n                                        </Button>\r\n                                    }\r\n                                    <Button variant=\"light\" size=\"md\" onClick={this.closeExecutiveBeginning.bind(this)} className=\"cancel-btn ml-2\">\r\n                                        Cancel\r\n                                    </Button>\r\n                                </ButtonToolbar>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                    </ListGroup.Item>\r\n\r\n                </ListGroup>\r\n\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    breakfast: state.breakfast\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => (\r\n    {\r\n        addExecutiveBeginning: (qty) => dispatch(addExecutiveBeginning(qty)),\r\n        closeExecutiveBeginning: () => dispatch(closeExecutiveBeginning()),\r\n        updateExecutiveBeginning: (id, list) => dispatch(updateExecutiveBeginning(id, list))\r\n    }\r\n)\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(ExecutiveBreakfast)","import { \r\n    UPDATE_BREAKFAST_QTY,\r\n    OPEN_BREAKFAST_EXECUTIVE_BEGINNING,\r\n    CLOSE_BREAKFAST_EXECUTIVE_BEGINNING,\r\n    ADD_BREAKFAST_EXECUTIVE_BEGINNING,\r\n    UPDATE_BREAKFAST_EXECUTIVE_BEGINNING,\r\n    EDIT_BREAKFAST_EXECUTIVE_BEGINNING,\r\n    REMOVE_BREAKFAST_EXECUTIVE_BEGINNING,\r\n    OPEN_BREAKFAST_SWEETTREATS,\r\n    CLOSE_BREAKFAST_SWEETTREATS,\r\n    ADD_BREAKFAST_SWEETTREATS,\r\n    EDIT_BREAKFAST_SWEETTREATS,\r\n    UPDATE_BREAKFAST_SWEETTREATS,\r\n    REMOVE_BREAKFAST_SWEETTREATS,\r\n} from './actionTypes.js'\r\n\r\nexport const updateQty = (name, qty) => ({\r\n    type: UPDATE_BREAKFAST_QTY,\r\n    payload: {\r\n        name,\r\n        qty\r\n    }\r\n})\r\nexport const openExecutiveBeginning = (add, id) => ({\r\n    type: OPEN_BREAKFAST_EXECUTIVE_BEGINNING,\r\n    payload: {\r\n        add,\r\n        id\r\n    }\r\n})\r\nexport const closeExecutiveBeginning = () => ({\r\n    type: CLOSE_BREAKFAST_EXECUTIVE_BEGINNING\r\n})\r\n\r\nexport const addExecutiveBeginning = (list) => ({\r\n    type: ADD_BREAKFAST_EXECUTIVE_BEGINNING,\r\n    payload: {\r\n        list\r\n    }\r\n})\r\n\r\nexport const updateExecutiveBeginning = (id,list) => ({\r\n    type: UPDATE_BREAKFAST_EXECUTIVE_BEGINNING,\r\n    payload: {\r\n        id,\r\n        list\r\n    }\r\n})\r\n\r\nexport const editExBreakfast = (id) => ({\r\n    type: EDIT_BREAKFAST_EXECUTIVE_BEGINNING,\r\n    payload: {\r\n        id\r\n    }\r\n})\r\n\r\nexport const removeExBreakfast = (id) => ({\r\n    type: REMOVE_BREAKFAST_EXECUTIVE_BEGINNING,\r\n    payload: {\r\n        id\r\n    }\r\n})\r\n\r\nexport const openSweetTreat = (type, add, id) => ({\r\n    type: OPEN_BREAKFAST_SWEETTREATS,\r\n    payload: {\r\n        type,\r\n        add,\r\n        id\r\n    }\r\n})\r\n\r\nexport const closeSweetTreat = () => ({\r\n    type: CLOSE_BREAKFAST_SWEETTREATS\r\n})\r\n\r\nexport const addSweetTreat = (name, list) => ({\r\n    type: ADD_BREAKFAST_SWEETTREATS,\r\n    payload: {\r\n        name,\r\n        list\r\n    }\r\n})\r\n\r\nexport const editSweetTreats = (type, id) => ({\r\n    type: EDIT_BREAKFAST_SWEETTREATS,\r\n    payload: {\r\n        type,\r\n        id\r\n    }\r\n})\r\n\r\nexport const updateSweetTreats = (type, id, list) => ({\r\n    type: UPDATE_BREAKFAST_SWEETTREATS,\r\n    payload: {\r\n        type,\r\n        id,\r\n        list\r\n    }\r\n})\r\n\r\nexport const removeSweetTreats = (type, id) => ({\r\n    type: REMOVE_BREAKFAST_SWEETTREATS,\r\n    payload: {\r\n        type,\r\n        id\r\n    }\r\n})","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Row, Col, Card, ButtonToolbar, Button, ListGroup } from 'react-bootstrap';\r\nimport NumberInput from '../common/numberInput.js';\r\n\r\nimport { addSweetTreat, closeSweetTreat, updateSweetTreats } from '../../redux/actions/breakfast';\r\n\r\nclass SweetTreat extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        let list = {\r\n            banana_bread: 0,\r\n            banana_chocolate_chip_bread: 0,\r\n            blue_berry_scone: 0,\r\n            chocolate_chip_cookie: 0,\r\n            chocolate_croissant: 0,\r\n            cinnamon_scone_croissant: 0,\r\n            lemon_pound_cake: 0,\r\n            poppy_seed_bread: 0,\r\n            pumpkin_bread: 0,\r\n            bars_cookie: 0\r\n        };\r\n        if (this.props.add === 'edit'){ \r\n            list = this.props.sweet_treats[this.props.type].list[this.props.id]; \r\n        }\r\n\r\n        this.state = {\r\n            //qty: 0,\r\n            qty: this.props.add === 'edit' ? (this.props.type === 'half_dozen' ? 6 : 12) : 0,//if in edit mode qty is at 6 or 12 depending on half_dozen, not 0 or else rendered page will display 0/6 selected when 6/6 are selected on edit screen\r\n            list: list,\r\n            error: false,\r\n            error_msg: '',\r\n            max_qty: (this.props.type === 'half_dozen' ? 6 : 12)\r\n        }\r\n        // console.log(this.state);\r\n    }\r\n\r\n    onChangeInput = (name, qty) => {\r\n        this.setState({error: false})\r\n\r\n        let list = this.state.list;\r\n        // list[name] = qty;\r\n        const max_qty = this.state.max_qty;\r\n        let tmp_qty = 0;\r\n        for (let key in list){\r\n            if (key !== name){\r\n                tmp_qty = tmp_qty + list[key];    \r\n            }\r\n            else{\r\n                tmp_qty = tmp_qty + qty;\r\n            }\r\n        }\r\n        \r\n        if (tmp_qty <= max_qty){\r\n            list[name] = qty;\r\n            this.setState({\r\n                list: list,\r\n                qty: tmp_qty\r\n            })\r\n        }\r\n        else {\r\n            this.setState({\r\n                error: true,\r\n                error_msg: 'qty max error'\r\n            })\r\n            return 'error';\r\n        }\r\n    }\r\n\r\n    closeSweetTreat = () => {\r\n        this.props.closeSweetTreat();\r\n    }\r\n\r\n    addSweetTreat = () => {\r\n        if (this.validateSweetTreat()){\r\n\r\n        }\r\n        else {\r\n            this.props.addSweetTreat(this.props.type, this.state.list);\r\n        }\r\n    }\r\n\r\n    updateSweetTreat = () => {\r\n        // console.log(this.props.type);\r\n        if (this.validateSweetTreat()){\r\n\r\n        }\r\n        else {\r\n            this.props.updateSweetTreats(this.props.type, this.props.id, this.state.list);\r\n        }\r\n    }\r\n\r\n    validateSweetTreat = () => {\r\n        let error = false;        \r\n        if (this.state.qty !== this.state.max_qty){\r\n            this.setState({error: true});\r\n            error = true;\r\n        }\r\n        return error;\r\n    }\r\n\r\n    printSweetTreats = () => {\r\n        let print = [];\r\n        let index = 0;\r\n        const names = this.props.sweet_treats.names;\r\n        for (let key in names) {\r\n            print.push(\r\n                <Col md={3} className=\"wrap_qty mb-3\" key={'sweet_treat_input'+index}>\r\n                    {names[key]}\r\n                    <NumberInput \r\n                        readonly={true}\r\n                        onChange={this.onChangeInput.bind(this)}\r\n                        name={key}\r\n                        value={this.state.list[key]}\r\n                        style={{float: 'left'}}\r\n                    />\r\n                </Col>\r\n            )\r\n            index++;\r\n        }\r\n\r\n        return print;\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <Card className=\"col-md-12 p-0\">\r\n                <Card.Header>\r\n\r\n                </Card.Header>\r\n\r\n                <Card.Body>\r\n                    <Card.Title>\r\n                        Select Your Sweet Treats\r\n                        <span style={{ textTransform: 'initial', marginLeft: '12px', fontSize: '17px', color: '#545454'}}>\r\n                        \r\n                        {\r\n                            this.props.type === 'half_dozen' ?\r\n                            'Select 6'\r\n                            :\r\n                            'Select 12'\r\n                        }\r\n                        </span>\r\n                    </Card.Title>\r\n                </Card.Body>\r\n\r\n                <Card.Body className={this.state.error ? 'su-alert' : ''}>\r\n                    <Card.Text>You selected <strong>{this.state.qty} of {this.state.max_qty}</strong> Sweet Treats.</Card.Text>\r\n                </Card.Body>\r\n\r\n                <ListGroup variant=\"flush\">\r\n\r\n                    <ListGroup.Item className=\"menu-list\">\r\n                        <Row className=\"mb-3\">\r\n\r\n                            { this.printSweetTreats() }\r\n\r\n                            {/* <Col className=\"wrap_qty\">\r\n                                Bear Claws\r\n                                <NumberInput \r\n                                    readonly={true}\r\n                                    onChange={this.onChangeInput.bind(this)}\r\n                                    name=\"bear_claws\"\r\n                                    value={this.state.list.bear_claws}\r\n                                    style={{float: 'left'}}\r\n                                />\r\n                            </Col>\r\n\r\n                            <Col className=\"wrap_qty\">\r\n                                Blueberry Muffins\r\n                                <NumberInput \r\n                                    readonly={true}\r\n                                    onChange={this.onChangeInput.bind(this)}\r\n                                    name=\"blueberry_muffins\"\r\n                                    value={this.state.list.blueberry_muffins}\r\n                                    style={{float: 'left'}}\r\n                                />\r\n                            </Col>\r\n\r\n                            <Col className=\"wrap_qty\">\r\n                                Brownies\r\n                                <NumberInput \r\n                                    readonly={true}\r\n                                    onChange={this.onChangeInput.bind(this)}\r\n                                    name=\"brownies\"\r\n                                    value={this.state.list.brownies}\r\n                                    style={{float: 'left'}}\r\n                                />\r\n                            </Col>\r\n\r\n                            <Col className=\"wrap_qty\">\r\n                                Chocolate Croissants\r\n                                <NumberInput \r\n                                    readonly={true}\r\n                                    onChange={this.onChangeInput.bind(this)}\r\n                                    name=\"chocolate_croissants\"\r\n                                    value={this.state.list.chocolate_croissants}\r\n                                    style={{float: 'left'}}\r\n                                />\r\n                            </Col> */}\r\n\r\n                        </Row>\r\n\r\n                        {/* <Row className=\"mb-3\">\r\n\r\n                            <Col className=\"wrap_qty\">\r\n                                Croissants\r\n                                <NumberInput \r\n                                    readonly={true}\r\n                                    onChange={this.onChangeInput.bind(this)}\r\n                                    name=\"croissants\"\r\n                                    value={this.state.list.croissants}\r\n                                    style={{float: 'left'}}\r\n                                />\r\n                            </Col>\r\n\r\n                            <Col className=\"wrap_qty\">\r\n                                Granookies\r\n                                <NumberInput \r\n                                    readonly={true}\r\n                                    onChange={this.onChangeInput.bind(this)}\r\n                                    name=\"granookies\"\r\n                                    value={this.state.list.granookies}\r\n                                    style={{float: 'left'}}\r\n                                />\r\n                            </Col>\r\n\r\n                            <Col className=\"wrap_qty\">\r\n                                Magic Bar\r\n                                <NumberInput \r\n                                    readonly={true}\r\n                                    onChange={this.onChangeInput.bind(this)}\r\n                                    name=\"variety\"\r\n                                    value={this.state.list.variety}\r\n                                    style={{float: 'left'}}\r\n                                />\r\n                            </Col>\r\n\r\n                            <Col></Col>                            \r\n\r\n                        </Row> */}\r\n\r\n                        <Row>\r\n                            <Col>\r\n                                <ButtonToolbar className=\"mt-4\">\r\n                                    {\r\n                                        this.props.add === 'add' ?\r\n                                        <Button variant=\"primary\" size=\"md\" onClick={this.addSweetTreat.bind(this)} className=\"add-btn\">\r\n                                            Add\r\n                                        </Button>\r\n                                        :\r\n                                        <Button variant=\"primary\" size=\"md\" onClick={this.updateSweetTreat.bind(this)} className=\"add-btn\">\r\n                                            Update\r\n                                        </Button>\r\n                                    }\r\n                                    <Button variant=\"light\" size=\"md\" onClick={this.closeSweetTreat.bind(this)} className=\"cancel-btn ml-2\">\r\n                                        Cancel\r\n                                    </Button>\r\n                                </ButtonToolbar>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                    </ListGroup.Item>\r\n\r\n                </ListGroup>\r\n\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    sweet_treats: state.breakfast.sweet_treats\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => (\r\n    {\r\n        addSweetTreat: (name, qty) => dispatch(addSweetTreat(name, qty)),\r\n        closeSweetTreat: () => dispatch(closeSweetTreat()),\r\n        updateSweetTreats: (type, id, list) => dispatch(updateSweetTreats(type, id, list))\r\n    }\r\n)\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(SweetTreat)","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Row, Col, Card, ListGroup, ButtonToolbar, Button } from 'react-bootstrap';\r\nimport NumberInput from '../common/numberInput.js';\r\nimport TopNav from '../common/TopNav.js';\r\nimport Bottom from '../bottom';\r\nimport ExecutiveBeginning from './ExecutiveBreakfast.js';\r\nimport SweetTreat from './SweetTreat';\r\n\r\nimport { updateQty, openExecutiveBeginning, editExBreakfast, removeExBreakfast,\r\n    openSweetTreat, \r\n    editSweetTreats,\r\n    removeSweetTreats \r\n} from '../../redux/actions/breakfast';\r\nimport { updateCurrentNav } from '../../redux/actions/main';\r\n\r\n// const roundTo = require('roundto');\r\n\r\nclass Breakfast extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            total: this.props.breakfast.total\r\n        }\r\n\r\n        this.props.updateCurrentNav(0);\r\n    }\r\n\r\n    onChangeHandler = (name, value) => {\r\n        this.props.updateQty(name, value);\r\n        // console.log(result);\r\n        // console.result\r\n        // console.log(this.props.breakfast.bk_beginnings);\r\n    }\r\n\r\n    openExecutiveBeginning = () => {\r\n        this.props.openExecutiveBeginning('add', null);\r\n    }\r\n\r\n    printSelectedExBreakfast = (list, index, num) => {\r\n        const names = this.props.breakfast.ex_breakfast_name;\r\n        let print = [];\r\n        let count = 0;\r\n        let total_qty = 0;\r\n\r\n        for (let key in names) {\r\n            if (list[key] !== 0){\r\n                if (typeof list[key] === 'undefined'){ return null; }\r\n                print.push(<li className=\"\" key={'_child_' + count}> { names[key] + ' : ' + list[key] } </li>);\r\n                total_qty = total_qty + list[key];\r\n                count++;\r\n            }\r\n        }\r\n\r\n        if (total_qty === 0){return null;}\r\n        \r\n        return (\r\n            <Col md={6} style={{padding: '5px'}} key={'ex_box' + num}>\r\n                <div key={index} className=\"\" style={{padding: '5px', border: '1px solid #e1e1e1'}}>\r\n                    <h3 className=\"p-0\" style={{fontSize: '1rem'}}>#{num}\r\n                        <ButtonToolbar style={{float: 'right'}}>\r\n                            <Button onClick={() => {this.editExBreakfast(index)}} className=\"edit-btn\">Edit</Button>\r\n                            <Button onClick={() => {this.removeExBreakfast(index)}} className=\"remove-btn\">Remove</Button>\r\n                        </ButtonToolbar>\r\n                    </h3>\r\n                    <ul key={index} className=\"\" style={{height: '96px', paddingLeft: '10px', listStyle: 'none'}}> {print} </ul>\r\n                </div>\r\n            </Col>\r\n        )\r\n    }\r\n\r\n    editExBreakfast = (index) => {\r\n        this.props.editExBreakfast(index);\r\n    }\r\n\r\n    removeExBreakfast = (index) => {\r\n        this.props.removeExBreakfast(index);\r\n    }\r\n\r\n    openSweetTreat = (type, add, id) => {\r\n        this.props.openSweetTreat(type, true, null);\r\n    }\r\n\r\n    printSelectedSweets = (type, list, index, num) => {\r\n        const names = this.props.breakfast.sweet_treats_name;\r\n        let print = [];\r\n        let count = 0;\r\n        let height = '72px';\r\n        if (type === \"half_dozen\"){height = '48px';}\r\n        \r\n        for (let key in names) {\r\n            if (list[key] !== 0){\r\n                if (typeof list[key] === 'undefined'){ return null; }\r\n                print.push(<li className=\"list-inline-item\" key={type + '_child_' + count}> { names[key] + ' : ' + list[key] } </li>);\r\n                count++;\r\n            }\r\n        }\r\n        \r\n        return (\r\n            <Col md={6} key={type + num} style={{padding: '5px'}}>\r\n                <div className=\"\" style={{padding: '5px', border: '1px solid #e1e1e1'}}>\r\n                    <h3 className=\"p-0\" style={{fontSize: '1rem'}}>#{num}\r\n                        <ButtonToolbar style={{float: 'right'}}>\r\n                            <Button onClick={() => {this.editSweetTreats(type, index)}} className=\"edit-btn\">Edit</Button>\r\n                            <Button onClick={() => {this.removeSweetTreats(type,index)}} className=\"remove-btn\">Remove</Button>\r\n                        </ButtonToolbar>\r\n                    </h3>\r\n                    <ul key={index} className=\"\" style={{paddingLeft: '10px', listStyle: 'none', height: height}}> {print} </ul>\r\n                </div>\r\n            </Col>\r\n        )\r\n    }\r\n\r\n    editSweetTreats = (type, index) => {\r\n        this.props.editSweetTreats(type, index);\r\n    }\r\n\r\n    removeSweetTreats = (type, index) => {\r\n        this.props.removeSweetTreats(type, index);\r\n    }\r\n\r\n    render() {\r\n        let ex_count = 0;\r\n        let st_half_count = 0;\r\n        let st_dozen_count = 0;\r\n\r\n        if (this.props.breakfast.ex_breakfast.box_open)\r\n        {\r\n            return (\r\n                <ExecutiveBeginning\r\n                    add={this.props.breakfast.ex_breakfast.add}\r\n                    id={this.props.breakfast.ex_breakfast.id}\r\n                />\r\n            )\r\n        }\r\n        else if (this.props.breakfast.sweet_treats.box_open)\r\n        {\r\n            return(\r\n                <SweetTreat\r\n                    type={this.props.breakfast.sweet_treats.type}\r\n                    add={this.props.breakfast.sweet_treats.add}\r\n                    id={this.props.breakfast.sweet_treats.id}\r\n                ></SweetTreat>\r\n            )\r\n        }\r\n\r\n        return(\r\n            <Card className=\"col-md-12 p-0\">\r\n\r\n                <Card.Header>\r\n                    <TopNav />\r\n                </Card.Header>\r\n\r\n                <Card.Body>\r\n                    <Card.Title>Breakfast</Card.Title>\r\n                </Card.Body>\r\n\r\n                <ListGroup variant=\"flush\">\r\n\r\n                    <ListGroup.Item className=\"menu-list\">\r\n\r\n                        <Row>\r\n                            <Col className=\"wrap_name\">\r\n                                <p className=\"name\">{this.props.breakfast.bk_beginnings.name}</p>\r\n                                <p className=\"description\">{this.props.breakfast.bk_beginnings.description}</p>\r\n                            </Col>\r\n\r\n                            <Col className=\"wrap_price\">\r\n                                <p>${this.props.breakfast.bk_beginnings.price}</p>\r\n                            </Col>\r\n\r\n                            <Col className=\"wrap_qty\">\r\n\r\n                                <NumberInput \r\n                                    onChange={this.onChangeHandler.bind(this)}\r\n                                    name=\"bk_beginnings\"\r\n                                    value={this.props.breakfast.bk_beginnings.qty}\r\n                                />\r\n\r\n                            </Col>\r\n                        </Row>\r\n\r\n                    </ListGroup.Item>\r\n\r\n                    <ListGroup.Item className=\"menu-list\">\r\n\r\n                        <Row>\r\n                            <Col className=\"wrap_name\">\r\n                                <p className=\"name\">{this.props.breakfast.ex_breakfast.name}</p>\r\n                                <p className=\"description\">{this.props.breakfast.ex_breakfast.description}</p>\r\n                            </Col>\r\n\r\n                            <Col className=\"wrap_price\">\r\n                                <p>${this.props.breakfast.ex_breakfast.price}</p>\r\n                            </Col>\r\n\r\n                            <Col className=\"name\">\r\n                                <NumberInput \r\n                                    noleft={true}\r\n                                    readonly={true}\r\n                                    onChange={this.openExecutiveBeginning.bind(this)}\r\n                                    name=\"ex_breakfast\"\r\n                                    value={this.props.breakfast.ex_breakfast.qty}\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        {\r\n                            this.props.breakfast.ex_breakfast.total === 0 ?\r\n                            null\r\n                            :\r\n                            <Row style={{marginBottom: '1rem'}}>\r\n\r\n                                    {\r\n                                        this.props.breakfast.ex_breakfast.list.map((row, index) => {\r\n                                            if (row === null){return null;}\r\n                                            else {\r\n                                                ex_count++;\r\n                                                return this.printSelectedExBreakfast(row, index, ex_count)\r\n                                            }\r\n                                        })\r\n                                    }\r\n                            </Row>\r\n                        }\r\n\r\n                    </ListGroup.Item>\r\n\r\n                    <ListGroup.Item className=\"menu-list\">\r\n\r\n                        <Row>\r\n                            <Col className=\"wrap_name\">\r\n                                <p className=\"name\">{this.props.breakfast.baker_dozen.name}</p>\r\n                                <p className=\"description\">{this.props.breakfast.baker_dozen.description}</p>\r\n                            </Col>\r\n\r\n                            <Col className=\"wrap_price\">\r\n                                <p>${this.props.breakfast.baker_dozen.price}</p>\r\n                            </Col>\r\n\r\n                            <Col className=\"name\">\r\n                                <NumberInput \r\n                                    onChange={this.onChangeHandler.bind(this)}\r\n                                    name=\"baker_dozen\"\r\n                                    value={this.props.breakfast.baker_dozen.qty}\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n\r\n                    </ListGroup.Item>\r\n\r\n                    <ListGroup.Item className=\"menu-list\">\r\n\r\n                        <Row>\r\n                            <Col className=\"wrap_name\" style={{marginBottom: '1rem'}}>\r\n                                <p className=\"name\">Sweet Treats</p>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <Row style={{marginBottom: '1rem'}}>\r\n                            <Col>\r\n                                $10.99 - 1/2 Dozen\r\n                            </Col>\r\n                            <Col className=\"wrap_price\">\r\n                                <NumberInput \r\n                                    noleft={true}\r\n                                    readonly={true}\r\n                                    onChange={this.openSweetTreat.bind(this)}\r\n                                    name=\"half_dozen\"\r\n                                    value={this.props.breakfast.sweet_treats.half_dozen.qty}\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        {\r\n                            this.props.breakfast.sweet_treats.half_dozen === 0 ?\r\n                            null\r\n                            :\r\n                            <Row style={{marginBottom: '1rem'}}>\r\n                                {\r\n                                    this.props.breakfast.sweet_treats.half_dozen.list.map((row, index) => {\r\n                                        if (row === null){return null;}\r\n                                        st_half_count++;\r\n                                        return this.printSelectedSweets('half_dozen', row, index, st_half_count);\r\n                                    })\r\n                                }\r\n                            </Row>\r\n                        }\r\n                        \r\n\r\n                        <Row style={{marginBottom: '1rem'}}>\r\n                            <Col>\r\n                                $21.99 - Dozen\r\n                            </Col>\r\n                            <Col className=\"wrap_price\">\r\n                                <NumberInput \r\n                                    noleft={true}\r\n                                    readonly={true}\r\n                                    onChange={this.openSweetTreat.bind(this)}\r\n                                    name=\"dozen\"\r\n                                    value={this.props.breakfast.sweet_treats.dozen.qty}\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        {\r\n                            this.props.breakfast.sweet_treats.dozen.total === 0 ?\r\n                            null\r\n                            :\r\n                            <Row style={{marginBottom: '1rem'}}>\r\n                                {\r\n                                    this.props.breakfast.sweet_treats.dozen.list.map((row, index) => {\r\n                                        if (row === null){return null;}\r\n                                        st_dozen_count++;\r\n                                        return this.printSelectedSweets('dozen', row, index, st_dozen_count);\r\n                                    })\r\n                                }\r\n                            </Row>\r\n                        }\r\n\r\n                    </ListGroup.Item>\r\n\r\n                    <ListGroup.Item className=\"menu-list\">\r\n\r\n                        <Row>\r\n                            <Col className=\"wrap_name\">\r\n                                <p className=\"name\">{this.props.breakfast.assorted_muffins.name}</p>\r\n                                <p className=\"description\">{this.props.breakfast.assorted_muffins.description}</p>\r\n                            </Col>\r\n\r\n                            <Col className=\"wrap_price\">\r\n                                <p>${this.props.breakfast.assorted_muffins.price}</p>\r\n                            </Col>\r\n\r\n                            <Col className=\"wrap_qty\">\r\n\r\n                                <NumberInput \r\n                                    onChange={this.onChangeHandler.bind(this)}\r\n                                    name=\"assorted_muffins\"\r\n                                    value={this.props.breakfast.assorted_muffins.qty}\r\n                                />\r\n\r\n                            </Col>\r\n                        </Row>\r\n\r\n                    </ListGroup.Item>\r\n\r\n                    <ListGroup.Item className=\"menu-list total\">\r\n                        <Row>\r\n                            <Col>\r\n                                ${this.props.breakfast.total}\r\n                            </Col>\r\n                        </Row>\r\n                    </ListGroup.Item>\r\n\r\n                </ListGroup>\r\n\r\n                <Row>\r\n                    <Col md={12}>\r\n                        <Bottom />\r\n                    </Col>\r\n                </Row>\r\n\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    breakfast: state.breakfast\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => (\r\n    {\r\n        updateQty: (name, qty) => dispatch(updateQty(name, qty)),\r\n        openExecutiveBeginning: (add, id) => dispatch(openExecutiveBeginning(add, id)),\r\n        updateCurrentNav: (index) => dispatch(updateCurrentNav(index)),\r\n        editExBreakfast: (id) => dispatch(editExBreakfast(id)),\r\n        removeExBreakfast: (id) => dispatch(removeExBreakfast(id)),\r\n        openSweetTreat: (type, add, id) => dispatch(openSweetTreat(type, add, id)),\r\n        editSweetTreats: (type, id) => dispatch(editSweetTreats(type, id)),\r\n        removeSweetTreats: (type, id) => dispatch(removeSweetTreats(type, id))\r\n    }\r\n)\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Breakfast)\r\n","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Row, Col, Card, ListGroup } from 'react-bootstrap';\r\nimport NumberInput from '../common/numberInput.js';\r\nimport TopNav from '../common/TopNav.js';\r\n\r\nimport { updateCurrentNav } from '../../redux/actions/main';\r\nimport { \r\n    updateQty,\r\n    updateCoffee, \r\n    updateFruitSalad, \r\n    updateSandwich \r\n} from '../../redux/actions/byo_breakfast';\r\n\r\nimport Bottom from '../bottom';\r\n\r\nconst roundTo = require('roundto');\r\n\r\nclass ByoBreakfast extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            sweet_treats: {\r\n                selected: false,\r\n                names: this.props.byo_breakfast.sweet_treats_name\r\n            }\r\n        }\r\n        this.props.updateCurrentNav(1);\r\n    }\r\n\r\n    onChangeHandler = (name, qty) => {\r\n        this.props.updateQty(name, qty);\r\n    }\r\n\r\n    onChangeCoffee = (name, qty) => {\r\n        this.props.updateCoffee(name, qty);\r\n    }\r\n\r\n    onChangeFruitSalad = (name, qty) => {\r\n        this.props.updateFruitSalad(name, qty);\r\n    }\r\n\r\n    onChangeSandwich = (name, qty) => {\r\n        this.props.updateSandwich(name, qty);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n                <Card className=\"col-md-12 p-0\">\r\n\r\n                    <Card.Header>\r\n                        <TopNav />\r\n                    </Card.Header>\r\n\r\n                    <Card.Body>\r\n                        <Card.Title>Build Your Own Breakfast</Card.Title>\r\n                    </Card.Body>\r\n\r\n                    <ListGroup variant=\"flush\">\r\n\r\n                        <ListGroup.Item className=\"menu-list\">\r\n\r\n                            <Row>\r\n                                <Col className=\"wrap_name\">\r\n                                    <p className=\"name\">96oz Wildcat Coffee Carafe</p>\r\n                                </Col>\r\n\r\n                                <Col className=\"wrap_price\">\r\n                                    <p>${this.props.byo_breakfast.coffee_carafe.price}</p>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row>\r\n\r\n                                <Col className=\"wrap_qty\">\r\n                                    <p>Regular</p>\r\n                                    <NumberInput \r\n                                        onChange={this.onChangeCoffee.bind(this)}\r\n                                        name=\"regular\"\r\n                                        value={this.props.byo_breakfast.coffee_carafe.list.regular}\r\n                                        style={{float:'left'}}\r\n                                    />\r\n                                </Col>\r\n\r\n                                <Col className=\"wrap_qty\">\r\n                                    <p>Decaf</p>\r\n                                    <NumberInput \r\n                                        onChange={this.onChangeCoffee.bind(this)}\r\n                                        name=\"decaf\"\r\n                                        value={this.props.byo_breakfast.coffee_carafe.list.decaf}\r\n                                        style={{float:'left'}}\r\n                                    />\r\n                                </Col>\r\n\r\n                                <Col className=\"wrap_qty\">\r\n                                    <p>Iced</p>\r\n                                    <NumberInput \r\n                                        onChange={this.onChangeCoffee.bind(this)}\r\n                                        name=\"iced\"\r\n                                        value={this.props.byo_breakfast.coffee_carafe.list.iced}\r\n                                        style={{float:'left'}}\r\n                                    />\r\n                                </Col>\r\n\r\n                                <Col className=\"wrap_qty\">\r\n                                    <p>Iced Decaf</p>\r\n                                    <NumberInput \r\n                                        onChange={this.onChangeCoffee.bind(this)}\r\n                                        name=\"iced_decaf\"\r\n                                        value={this.props.byo_breakfast.coffee_carafe.list.iced_decaf}\r\n                                        style={{float:'left'}}\r\n                                    />\r\n                                </Col>\r\n\r\n                            </Row>\r\n\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item className=\"menu-list total\">\r\n                            <Row>\r\n                                <Col>\r\n                                    ${this.props.byo_breakfast.coffee_carafe.total}\r\n                                </Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n\r\n                            <Row>\r\n                                <Col className=\"wrap_name\" style={{marginBottom: '1rem'}}>\r\n                                    <p className=\"name\">Fresh Seasonal Fruit Salad</p>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                <Col>\r\n                                    $49.99 / Serves 20\r\n                                </Col>\r\n                                <Col className=\"wrap_qty\">\r\n                                    <NumberInput \r\n                                        onChange={this.onChangeFruitSalad.bind(this)}\r\n                                        name=\"serve_20\"\r\n                                        value={this.props.byo_breakfast.fruit_salad.serve_20.qty}\r\n                                        style={{float:'left'}}\r\n                                    />\r\n                                </Col>\r\n\r\n                                <Col>\r\n                                    $29.99 / Serves 8\r\n                                </Col>\r\n                                <Col className=\"wrap_qty\">\r\n                                    <NumberInput \r\n                                        onChange={this.onChangeFruitSalad.bind(this)}\r\n                                        name=\"serve_8\"\r\n                                        value={this.props.byo_breakfast.fruit_salad.serve_8.qty}\r\n                                        style={{float:'left'}}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item className=\"menu-list total\">\r\n                            <Row>\r\n                                <Col>\r\n                                    ${this.props.byo_breakfast.fruit_salad.total}\r\n                                </Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n\r\n                    </ListGroup>\r\n\r\n                    <ListGroup variant=\"flush\">\r\n\r\n                        {/* <ListGroup.Item className=\"menu-list\">\r\n\r\n                            <Row>\r\n                                <Col className=\"wrap_name\" style={{marginBottom: '1rem'}}>\r\n                                    <p className=\"name\">Savory Breakfast Sandwiches</p>\r\n                                    <p className=\"description mb-0\">sold by the 1/2 Dozen</p>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row style={{marginBottom: '.5rem'}}>\r\n\r\n                                <Col className=\"wrap_qty\">\r\n                                    ${this.props.byo_breakfast.sandwiches.list.zucchini.price} - {this.props.byo_breakfast.sandwiches.list.zucchini.name}\r\n                                    <NumberInput \r\n                                        onChange={this.onChangeSandwich.bind(this)}\r\n                                        name=\"zucchini\"\r\n                                        value={this.props.byo_breakfast.sandwiches.list.zucchini.qty}\r\n                                    />\r\n                                </Col>\r\n\r\n                            </Row>\r\n\r\n                            <Row style={{marginBottom: '.5rem'}}>\r\n\r\n                                <Col className=\"wrap_qty\">\r\n                                    ${this.props.byo_breakfast.sandwiches.list.sausage_bagel.price} - {this.props.byo_breakfast.sandwiches.list.sausage_bagel.name}\r\n                                    <NumberInput \r\n                                        onChange={this.onChangeSandwich.bind(this)}\r\n                                        name=\"sausage_bagel\"\r\n                                        value={this.props.byo_breakfast.sandwiches.list.sausage_bagel.qty}\r\n                                    />\r\n                                </Col>\r\n\r\n                            </Row>\r\n\r\n                            <Row style={{marginBottom: '.5rem'}}>\r\n\r\n                                <Col className=\"wrap_qty\">\r\n                                    ${this.props.byo_breakfast.sandwiches.list.pepper_bagel.price} - {this.props.byo_breakfast.sandwiches.list.pepper_bagel.name}\r\n                                    <NumberInput \r\n                                        onChange={this.onChangeSandwich.bind(this)}\r\n                                        name=\"pepper_bagel\"\r\n                                        value={this.props.byo_breakfast.sandwiches.list.pepper_bagel.qty}\r\n                                    />\r\n                                </Col>\r\n\r\n                            </Row>\r\n\r\n                            <Row style={{marginBottom: '.5rem'}}>\r\n\r\n                                <Col className=\"wrap_qty\">\r\n                                    ${this.props.byo_breakfast.sandwiches.list.red_pepper_bagel.price} - {this.props.byo_breakfast.sandwiches.list.red_pepper_bagel.name}\r\n                                    <NumberInput \r\n                                        onChange={this.onChangeSandwich.bind(this)}\r\n                                        name=\"red_pepper_bagel\"\r\n                                        value={this.props.byo_breakfast.sandwiches.list.red_pepper_bagel.qty}\r\n                                    />\r\n                                </Col>\r\n\r\n                            </Row>\r\n\r\n                        </ListGroup.Item> */}\r\n\r\n                        <ListGroup.Item className=\"menu-list\">\r\n\r\n                            <Row>\r\n                                <Col className=\"wrap_name\">\r\n                                    <p className=\"name\">{this.props.byo_breakfast.west_egg_bagel.name}</p>\r\n                                    <p className=\"description\">{this.props.byo_breakfast.west_egg_bagel.description}</p>\r\n                                </Col>\r\n\r\n                                <Col className=\"wrap_price\">\r\n                                    <p>${this.props.byo_breakfast.west_egg_bagel.price}</p>\r\n                                </Col>\r\n\r\n                                <Col className=\"wrap_qty\">\r\n\r\n                                    <NumberInput \r\n                                        onChange={this.onChangeHandler.bind(this)}\r\n                                        name=\"west_egg_bagel\"\r\n                                        value={this.props.byo_breakfast.west_egg_bagel.qty}\r\n                                    />\r\n\r\n                                </Col>\r\n                            </Row>\r\n\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item className=\"menu-list\">\r\n\r\n                            <Row>\r\n                                <Col className=\"wrap_name\">\r\n                                    <p className=\"name\">{this.props.byo_breakfast.ewms_whole.name}</p>\r\n                                    <p className=\"description\">{this.props.byo_breakfast.ewms_whole.description}</p>\r\n                                </Col>\r\n\r\n                                <Col className=\"wrap_price\">\r\n                                    <p>${this.props.byo_breakfast.ewms_whole.price}</p>\r\n                                </Col>\r\n\r\n                                <Col className=\"wrap_qty\">\r\n\r\n                                    <NumberInput \r\n                                        onChange={this.onChangeHandler.bind(this)}\r\n                                        name=\"ewms_whole\"\r\n                                        value={this.props.byo_breakfast.ewms_whole.qty}\r\n                                    />\r\n\r\n                                </Col>\r\n                            </Row>\r\n\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item className=\"menu-list\">\r\n\r\n                            <Row>\r\n                                <Col className=\"wrap_name\">\r\n                                    <p className=\"name\">{this.props.byo_breakfast.hsb_bagel.name}</p>\r\n                                    <p className=\"description\">{this.props.byo_breakfast.hsb_bagel.description}</p>\r\n                                </Col>\r\n\r\n                                <Col className=\"wrap_price\">\r\n                                    <p>${this.props.byo_breakfast.hsb_bagel.price}</p>\r\n                                </Col>\r\n\r\n                                <Col className=\"wrap_qty\">\r\n\r\n                                    <NumberInput \r\n                                        onChange={this.onChangeHandler.bind(this)}\r\n                                        name=\"hsb_bagel\"\r\n                                        value={this.props.byo_breakfast.hsb_bagel.qty}\r\n                                    />\r\n\r\n                                </Col>\r\n                            </Row>\r\n\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item className=\"menu-list total\">\r\n                            <Row>\r\n                                <Col>\r\n                                    ${roundTo(this.props.byo_breakfast.west_egg_bagel.total +\r\n                                              this.props.byo_breakfast.ewms_whole.total +\r\n                                              this.props.byo_breakfast.hsb_bagel.total,2)}\r\n                                </Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n\r\n                    </ListGroup>\r\n\r\n                    <Row>\r\n                        <Col md={12}>\r\n                            <Bottom />\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </Card>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    byo_breakfast: state.byo_breakfast\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => (\r\n    {\r\n        updateQty: (name, qty) => dispatch(updateQty(name, qty)),\r\n        updateCoffee: (name, qty) => dispatch(updateCoffee(name, qty)),\r\n        updateFruitSalad: (name, qty) => dispatch(updateFruitSalad(name, qty)),\r\n        updateSandwich: (name, qty) => dispatch(updateSandwich(name, qty)),\r\n        updateCurrentNav: (index) => dispatch(updateCurrentNav(index))\r\n    }\r\n)\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(ByoBreakfast)","import { \r\n    UPDATE_BYO_BREAKFAST,\r\n    UPDATE_BYO_BREAKFAST_COFFEE,\r\n    UPDATE_BYO_BREAKFAST_FRUITSALAD,\r\n    UPDATE_BYO_BREAKFAST_SANDWICH\r\n} from './actionTypes.js'\r\n\r\nexport const updateQty = (name, qty) => ({\r\n    type: UPDATE_BYO_BREAKFAST,\r\n    payload: {\r\n        name,\r\n        qty\r\n    }\r\n})\r\n\r\nexport const updateCoffee = (name, qty) => ({\r\n    type: UPDATE_BYO_BREAKFAST_COFFEE,\r\n    payload: {\r\n        name,\r\n        qty\r\n    }\r\n})\r\n\r\nexport const updateFruitSalad = (name, qty) => ({\r\n    type: UPDATE_BYO_BREAKFAST_FRUITSALAD,\r\n    payload: {\r\n        name,\r\n        qty\r\n    }\r\n})\r\n\r\nexport const updateSandwich = (name, qty) => ({\r\n    type: UPDATE_BYO_BREAKFAST_SANDWICH,\r\n    payload: {\r\n        name,\r\n        qty\r\n    }\r\n})","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Row, Col, Card, ListGroup, ButtonToolbar, Button, Form } from 'react-bootstrap';\r\nimport NumberInput from '../common/numberInput.js';\r\n\r\nimport { openLunchBox, addLunchBox, updateLunchBox, closeLunchBox } from '../../redux/actions/lunch';\r\n\r\nimport './lunchbox.css';\r\n\r\nclass LunchBox extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        // Create ref objects\r\n        this.first = React.createRef();\r\n\r\n        // let list = [];\r\n\r\n        if (this.props.lunch.actionType === 'add'){\r\n            // Initialize\r\n            this.state = {\r\n                choice_one: {\r\n                    list: {turk_philly_chess: 0,italian_job: 0,little_piggy: 0,bruschetta_panini: 0,hali_caesar: 0,kale_crunch: 0},\r\n                    qty: 0,\r\n                    error: false\r\n                },\r\n                choice_two: {\r\n                    list: {baked_lays: 0,pb_jalapeno: 0,pb_original: 0,sun_chips: 0,bbq_chips: 0, fruit: 0},\r\n                    qty: 0,\r\n                    error: false\r\n                },\r\n                choice_three: {\r\n                    list: {coke: 0,diet_coke: 0,dr_pepper: 0,diet_dr_pepper: 0,sprite: 0,dasani: 0,cherry_coke: 0,coke_zero: 0},\r\n                    qty: 0,\r\n                    error: false\r\n                },\r\n                extra: {\r\n                    list: [\r\n                        {one: 'None', two: 'None', three: 'None'},\r\n                        {one: 'None', two: 'None', three: 'None'}\r\n                    ],\r\n                    total: 0\r\n                },\r\n                error: false\r\n            }\r\n        }\r\n        else {\r\n            this.state = {\r\n                choice_one: {\r\n                    list: this.props.lunch.list[this.props.lunch.id].choice_one.list,\r\n                    qty: this.props.lunch.list[this.props.lunch.id].choice_one.qty,\r\n                    error: false\r\n                },\r\n                choice_two: {\r\n                    list: this.props.lunch.list[this.props.lunch.id].choice_two.list,\r\n                    qty: this.props.lunch.list[this.props.lunch.id].choice_two.qty,\r\n                    error: false\r\n                },\r\n                choice_three: {\r\n                    list: this.props.lunch.list[this.props.lunch.id].choice_three.list,\r\n                    qty: this.props.lunch.list[this.props.lunch.id].choice_three.qty,\r\n                    error: false\r\n                },\r\n                extra: this.props.lunch.list[this.props.lunch.id].extra,\r\n                error: false\r\n            }\r\n        }\r\n    }\r\n\r\n    checkQty = (list, name, qty) => {\r\n        let tmp_qty = 0;\r\n        for (let key in list){\r\n            if (key !== name){\r\n                tmp_qty = tmp_qty + list[key];    \r\n            }\r\n            else{\r\n                tmp_qty = tmp_qty + qty;\r\n            }\r\n        }\r\n\r\n        return tmp_qty;\r\n    }\r\n\r\n    updateInput = (name, qty, type, total_qty) => {\r\n        this.setState({\r\n            error: false,\r\n            [type]: {\r\n                ...this.state[type],\r\n                list: {\r\n                    ...this.state[type].list,\r\n                    [name]: qty\r\n                },\r\n                qty: total_qty\r\n            }\r\n        })\r\n    }\r\n\r\n    onChangeFirst = (name, qty) => {\r\n        const tmp_qty = this.checkQty(this.state.choice_one.list, name, qty);\r\n        if (tmp_qty > 8) {\r\n            return 'error';\r\n        }\r\n        else {\r\n            this.setState({choice_one:{...this.state.choice_one, error: false}}, function() {\r\n                this.updateInput(name, qty, 'choice_one', tmp_qty);\r\n            });\r\n        }\r\n    }\r\n\r\n    onChangeSecond = (name, qty) => {\r\n        const tmp_qty = this.checkQty(this.state.choice_two.list, name, qty);\r\n        if (tmp_qty > 8) {\r\n            return 'error';\r\n        }\r\n        else {\r\n            this.setState({choice_two:{...this.state.choice_two, error: false}}, function() {\r\n                this.updateInput(name, qty, 'choice_two', tmp_qty);\r\n            });\r\n        }\r\n    }\r\n\r\n    onChangeThree = (name, qty) => {\r\n        const tmp_qty = this.checkQty(this.state.choice_three.list, name, qty);\r\n        if (tmp_qty > 8) {\r\n            return 'error';\r\n        }\r\n        else {\r\n            this.setState({choice_three:{...this.state.choice_three, error: false}}, function() {\r\n                this.updateInput(name, qty, 'choice_three', tmp_qty);\r\n            });\r\n        }\r\n    }\r\n\r\n    addLunchBox = () => {\r\n        // const qty = this.state.choice_one.qty + this.state.choice_two.qty + this.state.choice_three.qty;\r\n\r\n        if (!this.validateForm()) {\r\n            const list = {\r\n                choice_one: this.state.choice_one,\r\n                choice_two: this.state.choice_two,\r\n                choice_three: this.state.choice_three,\r\n                extra: this.state.extra\r\n            }\r\n            this.props.addLunchBox(list);\r\n        }\r\n    }\r\n\r\n    updateLunchBox = () => {\r\n        if (!this.validateForm()){\r\n            const list = {\r\n                choice_one: this.state.choice_one,\r\n                choice_two: this.state.choice_two,\r\n                choice_three: this.state.choice_three,\r\n                extra: this.state.extra\r\n            }\r\n            this.props.updateLunchBox(this.props.lunch.id, list);\r\n        }\r\n    }\r\n\r\n    closeLunchBox = () => {\r\n        this.props.closeLunchBox();\r\n    }\r\n\r\n    validateForm = () => {\r\n        let error = false;\r\n        if (this.state.choice_one.qty !== 8) {\r\n            this.setState({choice_one:{...this.state.choice_one, error: true}}, function() {\r\n                window.scrollTo(0,400);\r\n            });\r\n            error = true;\r\n        }\r\n        else if (this.state.choice_two.qty !== 8) {\r\n            this.setState({choice_two:{...this.state.choice_two, error: true}}, function() {\r\n                window.scrollTo(0,900);\r\n            });\r\n            error = true;\r\n        }\r\n        else if (this.state.choice_three.qty !== 8) {\r\n            this.setState({choice_three:{...this.state.choice_three, error: true}}, function() {\r\n                window.scrollTo(0,1000);\r\n            });\r\n            error = true;\r\n        }\r\n        return error;\r\n    }\r\n\r\n    printSandwiches = (key) => {\r\n        return (\r\n            <Col className=\"wrap_name\" md={6}>\r\n                <p className=\"name\">\r\n                    {this.props.lunch.products.sandwiches[key].name}\r\n                </p>\r\n                <p className=\"description\">\r\n                    {this.props.lunch.products.sandwiches[key].description}\r\n                </p>\r\n                <NumberInput \r\n                    readonly={true}\r\n                    onChange={this.onChangeFirst.bind(this)}\r\n                    name={key}\r\n                    value={this.state.choice_one.list[key]}\r\n                    style={{float: 'right'}}\r\n                />\r\n            </Col>\r\n        );\r\n    }\r\n\r\n    printSalads = (key) => {\r\n        return (\r\n            <Col className=\"wrap_name\" md={6}>\r\n                <p className=\"name\">\r\n                    {this.props.lunch.products.salads[key].name}\r\n                </p>\r\n                <p className=\"description\">\r\n                    {this.props.lunch.products.salads[key].description}\r\n                </p>\r\n                <NumberInput \r\n                    readonly={true}\r\n                    onChange={this.onChangeFirst.bind(this)}\r\n                    name={key}\r\n                    value={this.state.choice_one.list[key]}\r\n                    style={{float: 'right'}}\r\n                />\r\n            </Col>\r\n        );\r\n    }\r\n\r\n    printChips = (key) => {\r\n        return (\r\n            <Col className=\"wrap_name\" md={6}>\r\n                <p className=\"name\" style={{display: 'inline', lineHeight: '32px'}}>\r\n                    {this.props.lunch.products.chips[key]}\r\n                </p>\r\n                <NumberInput \r\n                    readonly={true}\r\n                    onChange={this.onChangeSecond.bind(this)}\r\n                    name={key}\r\n                    value={this.state.choice_two.list[key]}\r\n                    style={{float: 'right'}}\r\n                />\r\n            </Col>\r\n        );\r\n    }\r\n\r\n    onChangeExtra = (id,order,event) => {\r\n        let list = this.state.extra.list;\r\n        list[id][order] = event.target.value;\r\n        this.setState({\r\n            extra: {\r\n                ...this.state.extra,\r\n                list: list\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Card className=\"col-md-12 p-0\">\r\n\r\n                <Card.Header>\r\n                    <p>\"Build Your Own\" Lunch Box</p>\r\n                    <p>Serves 8</p>\r\n                    <ul>\r\n                        <li>Select your salads or sandwiches</li>\r\n                        <li>Select your side</li>\r\n                        <li>Select your bottled beverage</li>\r\n                    </ul>\r\n                </Card.Header>\r\n\r\n                <Card.Body className={this.state.choice_one.error ? 'su-alert' : ''}>\r\n                    <h5 style={{fontWeight: '600', color: '#f48222'}}>1. Select your salads or sandwiches <span style={{color: 'rgb(84, 84, 84)'}}>- {this.state.choice_one.qty} of 8</span></h5>\r\n                    \r\n                    <ListGroup variant=\"flush\">\r\n                        <ListGroup.Item className=\"menu-list\" style={{borderWidth: '0px'}}>\r\n\r\n                            <p style={{fontWeight: '600', textDecoration: 'underline', fontSize: '17px'}}>Sandwiches</p>\r\n                            \r\n                            <Row className=\"pb-3\" style={{borderBottom: '1px solid #e1e1e1'}}>\r\n                                {this.printSandwiches('little_piggy')}\r\n                                {this.printSandwiches('italian_job')}\r\n                            </Row>\r\n\r\n                            <Row className=\"pt-2 pb-3\" style={{borderBottom: '1px solid #e1e1e1'}}>\r\n                                {this.printSandwiches('turk_philly_chess')}\r\n                                {this.printSandwiches('bruschetta_panini')}\r\n                            </Row>\r\n\r\n                            <p className=\"mt-3\"  style={{fontWeight: '600', textDecoration: 'underline', fontSize: '17px'}}>Salads</p>\r\n\r\n                            <Row className=\"pt-2 pb-3\" style={{borderBottom: '1px solid #e1e1e1'}}>\r\n                                {this.printSalads('hali_caesar')}\r\n                                {this.printSalads('kale_crunch')}\r\n                            </Row>\r\n\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Card.Body>\r\n\r\n                <Card.Body className={this.state.choice_two.error ? 'su-alert' : ''}>\r\n                    <h5 style={{fontWeight: '600', color: '#f48222'}}>2. Select your side <span style={{color: 'rgb(84, 84, 84)'}}>- {this.state.choice_two.qty} of 8</span></h5>\r\n                    <ListGroup variant=\"flush\">\r\n                        <ListGroup.Item className=\"menu-list\" style={{borderWidth: '0px'}}>\r\n\r\n                            <Row className=\"pt-2 pb-2\" style={{borderBottom: '1px solid #e1e1e1'}}>\r\n                                {this.printChips('baked_lays')}\r\n                                {this.printChips('pb_jalapeno')}\r\n                            </Row>\r\n\r\n                            <Row className=\"pt-2 pb-2\" style={{borderBottom: '1px solid #e1e1e1'}}>\r\n                                {this.printChips('pb_original')}\r\n                                {this.printChips('sun_chips')}\r\n                            </Row>\r\n                            <Row className=\"pt-2 pb-2\" style={{borderBottom: '1px solid #e1e1e1'}}>\r\n                                {this.printChips('bbq_chips')}\r\n                                <Col className=\"wrap_name\" md={6}>\r\n                                    <p className=\"name\" style={{display: 'inline', lineHeight: '32px'}}>\r\n                                        Fruit\r\n                                    </p>\r\n                                    <NumberInput \r\n                                        readonly={true}\r\n                                        onChange={this.onChangeSecond.bind(this)}\r\n                                        name=\"fruit\"\r\n                                        value={this.state.choice_two.list.fruit}\r\n                                        style={{float: 'right'}}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Card.Body>\r\n\r\n                <Card.Body className={this.state.choice_three.error ? 'su-alert' : ''}>\r\n                    <h5 style={{fontWeight: '600', color: '#f48222'}}>3. Select your bottled beverage <span style={{color: 'rgb(84, 84, 84)'}}>- {this.state.choice_three.qty} of 8</span></h5>\r\n\r\n                    <ListGroup variant=\"flush\">\r\n                        <ListGroup.Item className=\"menu-list\" style={{borderWidth: '0px'}}>\r\n\r\n                            <Row className=\"pb-3\" style={{borderBottom: '1px solid #e1e1e1'}}>\r\n                                {\r\n                                    ['coke', 'diet_coke', 'dr_pepper', 'diet_dr_pepper'].map((key, index) => {\r\n                                        return (\r\n                                            <Col className=\"wrap_name\" md={3} key={'lunchbox_soda'+index}>\r\n                                                <p className=\"name\">\r\n                                                    {this.props.lunch.products.beverages[key]}\r\n                                                </p>\r\n                                                <NumberInput \r\n                                                    readonly={true}\r\n                                                    onChange={this.onChangeThree.bind(this)}\r\n                                                    name={key}\r\n                                                    value={this.state.choice_three.list[key]}\r\n                                                    style={{float: 'left'}}\r\n                                                />\r\n                                            </Col>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </Row>\r\n\r\n                            <Row className=\"pb-3\" style={{borderBottom: '1px solid #e1e1e1'}}>\r\n                                {\r\n                                    ['sprite', 'dasani', 'cherry_coke', 'coke_zero'].map((key, index) => {\r\n                                        return (\r\n                                            <Col className=\"wrap_name\" md={3} key={'print_soda_'+index}>\r\n                                                <p className=\"name\">\r\n                                                    {this.props.lunch.products.beverages[key]}\r\n                                                </p>\r\n                                                <NumberInput \r\n                                                    readonly={true}\r\n                                                    onChange={this.onChangeThree.bind(this)}\r\n                                                    name={key}\r\n                                                    value={this.state.choice_three.list[key]}\r\n                                                    style={{float: 'left'}}\r\n                                                />\r\n                                            </Col>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </Row>\r\n\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Card.Body>\r\n\r\n                <Card.Body>\r\n                    <h5 style={{fontWeight: '600', color: '#f48222'}}>- Add an Extra Sandwich or Salad</h5>\r\n                    <ListGroup variant=\"flush\">\r\n                        <ListGroup.Item className=\"menu-list\" style={{borderWidth: '0px'}}>\r\n                            \r\n                            <Form.Row>\r\n                            <h6 style={{width: '100%'}}>Extra #1</h6>\r\n                            <Form.Group as={Col} md=\"5\" className=\"pl-0 pr-0\">\r\n                                <Form.Label>Sandwich or Salad - $6.99</Form.Label>\r\n                                <Form.Control as=\"select\" style={{width: '400px'}} value={this.state.extra.list[0].one} onChange={this.onChangeExtra.bind(this,0,'one')}>\r\n                                    <option>None</option>\r\n                                    <option>Peppered Turkey Philly Cheese (1/2 Sandwich)</option>\r\n                                    <option>The Italian Job (1/2 Sandwich)</option>\r\n                                    <option>Chicken Club</option>\r\n                                    <option>Bruschetta Panini</option>\r\n                                    <option>Hali Caesar</option>\r\n                                    <option>Kale Crunch</option>\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                            {\r\n                                this.state.extra.list[0].one === 'None' ?\r\n                                null\r\n                                :\r\n                                <React.Fragment>\r\n                                    <Form.Group as={Col} md=\"3\" className=\"pl-0 pr-0\">\r\n                                        <Form.Label>Chip - $.99</Form.Label>\r\n                                        <Form.Control as=\"select\" style={{width: '200px'}} value={this.state.extra.list[0].two} onChange={this.onChangeExtra.bind(this,0,'two')}>\r\n                                            <option>None</option>\r\n                                            <option>Baked Lays</option>\r\n                                            <option>Poore Brother's - Jalapeno</option>\r\n                                            <option>Poore Brother's - Original</option>\r\n                                            <option>Sun Chips</option>\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n                                    <Form.Group as={Col} md=\"4\" className=\"pl-0 pr-0\">\r\n                                        <Form.Label>All Sodas - $2.09, Dasani Water - $1.99</Form.Label>\r\n                                        <Form.Control as=\"select\" style={{width: '200px'}} value={this.state.extra.list[0].three} onChange={this.onChangeExtra.bind(this,0,'three')}>\r\n                                            <option>None</option>\r\n                                            <option>Coke</option>\r\n                                            <option>Diet Coke</option>\r\n                                            <option>Dr.Pepper</option>\r\n                                            <option>Diet Dr.Pepper</option>\r\n                                            <option>Sprite</option>\r\n                                            <option>Dasani Water</option>\r\n                                            <option>Cherry Coke</option>\r\n                                            <option>Coke Zero</option>\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n                                </React.Fragment>\r\n                            }\r\n                            </Form.Row>\r\n                        </ListGroup.Item>\r\n                        {\r\n                            this.state.extra.list[0].one === 'None' ?\r\n                            null\r\n                            :\r\n                            <ListGroup.Item className=\"menu-list\" style={{borderWidth: '0px'}}>\r\n                                \r\n                                <Form.Row>\r\n                                <h6 style={{width: '100%'}}>Extra #2</h6>\r\n                                <Form.Group as={Col} md=\"5\" className=\"pl-0 pr-0\">\r\n                                    <Form.Label>Sandwich or Salad - $6.99</Form.Label>\r\n                                    <Form.Control as=\"select\" style={{width: '400px'}} value={this.state.extra.list[1].one} onChange={this.onChangeExtra.bind(this,1,'one')}>\r\n                                        <option>None</option>\r\n                                        <option>Three Little Piggy's</option>\r\n                                        <option>The Italian Job (1/2 Sandwich)</option>\r\n                                        <option>Peppered Turkey Philly Cheese (1/2 Sandwich)</option>\r\n                                        <option>Bruschetta Panini</option>\r\n                                        <option>Hali Caesar</option>\r\n                                        <option>Kale Crunch</option>\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                                {\r\n                                    this.state.extra.list[1].one === 'None' ?\r\n                                    null\r\n                                    :\r\n                                    <React.Fragment>\r\n                                        <Form.Group as={Col} md=\"3\" className=\"pl-0 pr-0\">\r\n                                            <Form.Label>Chip - $.99</Form.Label>\r\n                                            <Form.Control as=\"select\" style={{width: '200px'}} value={this.state.extra.list[1].two} onChange={this.onChangeExtra.bind(this,1,'two')}>\r\n                                                <option>None</option>\r\n                                                <option>Baked Lays</option>\r\n                                                <option>Poore Brother's - Jalapeno</option>\r\n                                                <option>Poore Brother's - Original</option>\r\n                                                <option>Sun Chips</option>\r\n                                            </Form.Control>\r\n                                        </Form.Group>\r\n                                        <Form.Group as={Col} md=\"4\" className=\"pl-0 pr-0\">\r\n                                            <Form.Label>All Sodas - $2.09, Dasani Water - $1.99</Form.Label>\r\n                                            <Form.Control as=\"select\" style={{width: '200px'}} value={this.state.extra.list[1].three} onChange={this.onChangeExtra.bind(this,1,'three')}>\r\n                                                <option>None</option>\r\n                                                <option>Coke</option>\r\n                                                <option>Diet Coke</option>\r\n                                                <option>Dr.Pepper</option>\r\n                                                <option>Diet Dr.Pepper</option>\r\n                                                <option>Sprite</option>\r\n                                                <option>Dasani Water</option>\r\n                                                <option>Cherry Coke</option>\r\n                                                <option>Coke Zero</option>\r\n                                            </Form.Control>\r\n                                        </Form.Group>\r\n                                    </React.Fragment>\r\n                                }\r\n                                </Form.Row>\r\n                            </ListGroup.Item>\r\n                        }\r\n                    </ListGroup>\r\n                </Card.Body>\r\n\r\n                <Row>\r\n                    <Col>\r\n                        <ButtonToolbar className=\"mt-3\">\r\n                            {\r\n                                this.props.lunch.actionType === 'add' ?\r\n                                <Button variant=\"primary\" size=\"md\" onClick={this.addLunchBox.bind(this)} className=\"add-btn\">\r\n                                    Add\r\n                                </Button>\r\n                                :\r\n                                <Button variant=\"primary\" size=\"md\" onClick={this.updateLunchBox.bind(this)} className=\"add-btn\">\r\n                                    Update\r\n                                </Button>\r\n                            }\r\n                            <Button variant=\"light\" size=\"md\" onClick={this.closeLunchBox.bind(this)} className=\"cancel-btn ml-2\">\r\n                                Cancel\r\n                            </Button>\r\n                        </ButtonToolbar>\r\n                    </Col>\r\n                </Row>\r\n\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    lunch: state.lunch\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => (\r\n    {\r\n        openLunchBox: () => dispatch(openLunchBox()),\r\n        addLunchBox: (list) => dispatch(addLunchBox(list)),\r\n        updateLunchBox: (id, list) => dispatch(updateLunchBox(id, list)),\r\n        closeLunchBox: () => dispatch(closeLunchBox())\r\n    }\r\n)\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(LunchBox)","import { \r\n    OPEN_LUNCHBOX,\r\n    ADD_LUNCHBOX,\r\n    OPEN_LUNCHBOX_EDITOR,\r\n    UPDATE_LUNCHBOX,\r\n    REMOVE_LUNCHBOX,\r\n    CLOSE_LUNCHBOX \r\n} from './actionTypes.js'\r\n\r\nexport const openLunchBox = () => ({\r\n    type: OPEN_LUNCHBOX\r\n})\r\nexport const addLunchBox = (list) => ({\r\n    type: ADD_LUNCHBOX,\r\n    payload: {\r\n        list\r\n    }\r\n})\r\n\r\nexport const openLunchBoxEditor = (index) => ({\r\n    type: OPEN_LUNCHBOX_EDITOR,\r\n    payload: {\r\n        index\r\n    }\r\n})\r\n\r\nexport const updateLunchBox = (index, list) => ({\r\n    type: UPDATE_LUNCHBOX,\r\n    payload: {\r\n        index,\r\n        list\r\n    }\r\n})\r\n\r\nexport const removeLunchBox = (index) => ({\r\n    type: REMOVE_LUNCHBOX,\r\n    payload: {\r\n        index\r\n    }\r\n})\r\n\r\nexport const closeLunchBox = (name, qty) => ({\r\n    type: CLOSE_LUNCHBOX\r\n})","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Row, Col, Card, ListGroup, ButtonToolbar, Button } from 'react-bootstrap';\r\nimport NumberInput from '../common/numberInput.js';\r\nimport TopNav from '../common/TopNav.js';\r\n\r\nimport { updateCurrentNav } from '../../redux/actions/main';\r\nimport { openLunchBox, removeLunchBox, openLunchBoxEditor } from '../../redux/actions/lunch';\r\n\r\nimport LunchBox from './LunchBox';\r\nimport Bottom from '../bottom';\r\n\r\nclass Lunch extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.props.updateCurrentNav(2);\r\n    }\r\n\r\n    openLunchBox = () => {\r\n        this.props.openLunchBox();\r\n    }\r\n\r\n    openLunchBoxEditor = (id) => {\r\n        this.props.openLunchBoxEditor(id);\r\n    }\r\n\r\n    removeLunchBox = (id) => {\r\n        this.props.removeLunchBox(id);\r\n    }\r\n\r\n    printItems = (list) => {\r\n        let print = [];\r\n        for (let key in list){\r\n            if (list[key] !== 0){\r\n                print.push(<li>{this.props.lunch.names[key].name + ' : ' + list[key]}</li>);     \r\n            }                           \r\n        }\r\n        return (<ul style={{paddingLeft: '20px'}}>{print}</ul>);\r\n    }\r\n\r\n    printExtra = (extras) => {\r\n        let print = [];\r\n        for (let i = 0; i < 2; i++) {\r\n            const extra = extras.list[i];\r\n            if (extra.one !== 'None') {\r\n                const one = <span>{extra.one}</span>;\r\n                let two = null;\r\n                let three = null;\r\n                if (extra.two !== 'None'){ two = <span>, {extra.two}</span> }\r\n                if (extra.three !== 'None'){ three = <span>, {extra.three}</span> }\r\n                print.push(\r\n                    <div key={'extra' + i} style={{fontSize: '0.9rem'}}>Extra #{i+1} : {one} {two} {three}</div>\r\n                )   \r\n\r\n            }            \r\n        }\r\n\r\n        if (print.length === 0){return null;}\r\n        else {\r\n            return (\r\n                <React.Fragment>\r\n                    <hr style={{border: '1px solid #e1e1e1'}} />\r\n                    <h6 style={{width: '100%', fontWeight: '600'}}>Extra Sandwiches or Salads</h6>\r\n                    {print}\r\n                </React.Fragment>\r\n            );\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let count = 0;\r\n        return (\r\n            <React.Fragment>\r\n            {\r\n                this.props.lunch.open_box ?\r\n                <LunchBox></LunchBox>\r\n                :\r\n                <Card className=\"col-md-12 p-0\">\r\n\r\n                    <Card.Header>\r\n                        <TopNav />\r\n                    </Card.Header>\r\n\r\n                    <Card.Body>\r\n                        <Card.Title>Lunch</Card.Title>\r\n                    </Card.Body>\r\n\r\n                    <ListGroup variant=\"flush\">\r\n\r\n                        <ListGroup.Item className=\"menu-list\">\r\n\r\n                            <Row>\r\n                                <Col className=\"wrap_name\">\r\n                                    <p style={{fontWeight: '600'}}>\"Build Your Own\" Lunch Box - $54.99</p>\r\n                                    <p>\r\n                                        Serves 8<br />\r\n                                        Select your salads or sandwiches<br />\r\n                                        Select yor side (chips or fruit)<br />\r\n                                        Select your bottled beverage\r\n                                    </p>\r\n                                </Col>\r\n                                <Col>\r\n                                    <NumberInput \r\n                                        noleft={true}\r\n                                        readonly={true}\r\n                                        onChange={this.openLunchBox.bind(this)}\r\n                                        name=\"lunch\"\r\n                                        value={this.props.lunch.qty}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                        \r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item className=\"menu-list\">\r\n\r\n                            <Row>\r\n                                \r\n                                {\r\n                                    this.props.lunch.list.map((boxes, pindex) => {\r\n                                        if (boxes.length !== 0) {\r\n                                            count++;\r\n                                            return (\r\n                                            <Col md={6} className=\"wrap-lunch-box\">\r\n                                                <div key={'list-'+pindex} style={{padding: '10px', border: '1px solid #dadada'}}>\r\n                                                    <h3 className=\"p-0\" style={{fontSize: '1rem'}}>Box #{count}\r\n                                                        <ButtonToolbar style={{float: 'right'}}>\r\n                                                            <Button onClick={() => {this.openLunchBoxEditor(pindex)}} className=\"sweet-edit-btn edit-btn\">Edit</Button>\r\n                                                            <Button onClick={() => {this.removeLunchBox(pindex)}} className=\"sweet-remove-btn remove-btn\">Remove</Button>\r\n                                                        </ButtonToolbar>\r\n                                                    </h3>\r\n                                                    <div>\r\n                                                        <ul className=\"list-inline\">\r\n                                                            <li className=\"list-inline-item\"> \r\n                                                                {this.printItems(boxes.choice_one.list)}\r\n                                                            </li>\r\n                                                            <li className=\"list-inline-item\">\r\n                                                                {this.printItems(boxes.choice_two.list)} \r\n                                                            </li>\r\n                                                            <li className=\"list-inline-item\">\r\n                                                                {this.printItems(boxes.choice_three.list)} \r\n                                                            </li>\r\n                                                            <li className=\"list-inline-item\">\r\n                                                                {this.printExtra(boxes.extra)} \r\n                                                            </li>\r\n                                                        </ul>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </Col>\r\n                                            );\r\n                                        }\r\n                                        else {\r\n                                            return null;\r\n                                        }\r\n                                    }) \r\n                                }\r\n                            </Row>\r\n\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item className=\"menu-list total\">\r\n                            <Row>\r\n                                <Col>\r\n                                    ${this.props.lunch.total}\r\n                                </Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n\r\n                    </ListGroup>\r\n\r\n                    <Row>\r\n                        <Col md={12}>\r\n                            <Bottom />\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </Card>\r\n            }\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    lunch: state.lunch\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => (\r\n    {\r\n        openLunchBox: () => dispatch(openLunchBox()),\r\n        removeLunchBox: (index) => dispatch(removeLunchBox(index)),\r\n        updateCurrentNav: (index) => dispatch(updateCurrentNav(index)),\r\n        openLunchBoxEditor: (id) => dispatch(openLunchBoxEditor(id))\r\n    }\r\n)\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Lunch)","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Row, Col, Card, ListGroup } from 'react-bootstrap';\r\nimport NumberInput from '../common/numberInput.js';\r\nimport TopNav from '../common/TopNav.js';\r\n\r\nimport { updateCurrentNav } from '../../redux/actions/main';\r\nimport { updateQty } from '../../redux/actions/officeParty';\r\n\r\nimport Bottom from '../bottom';\r\n\r\nclass OfficeParty extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            total: this.props.op.total\r\n        }\r\n\r\n        this.props.updateCurrentNav(3);\r\n    }\r\n\r\n    onChangeHandler = (name, value) => {\r\n        this.props.updateQty(name, value);\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <Card className=\"col-md-12 p-0\">\r\n\r\n                <Card.Header>\r\n                    <TopNav />\r\n                </Card.Header>\r\n\r\n                <Card.Body>\r\n                    <Card.Title>Office Party</Card.Title>\r\n                </Card.Body>\r\n\r\n                <ListGroup variant=\"flush\">\r\n\r\n                    <ListGroup.Item className=\"menu-list\">\r\n\r\n                        <Row>\r\n                            <Col className=\"wrap_name\">\r\n                                <p>{this.props.op.serve_10.name}</p>\r\n                                <p>{this.props.op.serve_10.description}</p>\r\n                            </Col>\r\n\r\n                            <Col className=\"wrap_price\">\r\n                                <p>${this.props.op.serve_10.price}</p>\r\n                            </Col>\r\n\r\n                            <Col className=\"wrap_qty\">\r\n\r\n                                <NumberInput \r\n                                    onChange={this.onChangeHandler.bind(this)}\r\n                                    name=\"serve_10\"\r\n                                    value={this.props.op.serve_10.qty}\r\n                                />\r\n\r\n                            </Col>\r\n                        </Row>\r\n\r\n                    </ListGroup.Item>\r\n\r\n                    <ListGroup.Item className=\"menu-list total\">\r\n                        <Row>\r\n                            <Col>\r\n                                ${this.props.op.total}\r\n                            </Col>\r\n                        </Row>\r\n                    </ListGroup.Item>\r\n\r\n                </ListGroup>\r\n\r\n                <Row>\r\n                    <Col md={12}>\r\n                        <Bottom />\r\n                    </Col>\r\n                </Row>\r\n\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    op: state.office_party\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => (\r\n    {\r\n        updateQty: (name, qty) => dispatch(updateQty(name, qty)),\r\n        updateCurrentNav: (index) => dispatch(updateCurrentNav(index))\r\n    }\r\n)\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(OfficeParty)\r\n","import { UPDATE_OFFICEPARTY_QTY } from './actionTypes.js'\r\n\r\nexport const updateQty = (name, qty) => ({\r\n    type: UPDATE_OFFICEPARTY_QTY,\r\n    payload: {\r\n        name,\r\n        qty\r\n    }\r\n})","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Row, Col, Card, ListGroup } from 'react-bootstrap';\r\nimport NumberInput from '../common/numberInput.js';\r\nimport TopNav from '../common/TopNav.js';\r\n\r\nimport { updateCurrentNav } from '../../redux/actions/main';\r\nimport { \r\n    updateBeverage,\r\n} from '../../redux/actions/beverage';\r\n\r\nimport Bottom from '../bottom';\r\n\r\n// const roundTo = require('roundto');\r\n\r\nclass Beverage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.props.updateCurrentNav(4);\r\n    }\r\n\r\n    onChangeBeverage = (name, qty) => {\r\n        this.props.updateBeverage(name, qty);\r\n    }\r\n\r\n    printDrink = (name) => {\r\n        return (\r\n            <Col className=\"wrap_qty\">\r\n                <p style={{marginBottom: '5px', fontWeight: '600'}}>{this.props.beverage.list[name].name} - {this.props.beverage.list[name].price}</p>\r\n                <NumberInput \r\n                    onChange={this.onChangeBeverage.bind(this)}\r\n                    name={name}\r\n                    value={this.props.beverage.list[name].qty}\r\n                    style={{float:'left'}}\r\n                />\r\n            </Col>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Card className=\"col-md-12 p-0\">\r\n\r\n                <Card.Header>\r\n                    <TopNav />\r\n                </Card.Header>\r\n\r\n                <Card.Body>\r\n                    <Card.Title>Beverage <span style={{fontSize: '17px', textTransform: 'lowercase', color: '#4c4c4c'}}>(20oz)</span></Card.Title>\r\n                </Card.Body>\r\n\r\n                <ListGroup variant=\"flush\">\r\n\r\n                    <ListGroup.Item className=\"menu-list\">\r\n\r\n                        <Row>\r\n\r\n                            {this.printDrink('coke')}\r\n                            {this.printDrink('diet_coke')}\r\n                            {this.printDrink('dr_pepper')}\r\n                            {this.printDrink('diet_dr_pepper')}\r\n\r\n                        </Row>\r\n\r\n                        <Row className=\"mt-3\">\r\n\r\n                            {this.printDrink('sprite')}\r\n                            {this.printDrink('dasani')}\r\n                            {this.printDrink('cherry_coke')}\r\n                            {this.printDrink('coke_zero')}\r\n\r\n                        </Row>\r\n\r\n                    </ListGroup.Item>\r\n\r\n                    <ListGroup.Item className=\"menu-list total\">\r\n                        <Row>\r\n                            <Col>\r\n                                ${this.props.beverage.total}\r\n                            </Col>\r\n                        </Row>\r\n                    </ListGroup.Item>\r\n\r\n                </ListGroup>\r\n\r\n                <Row>\r\n                    <Col md={12}>\r\n                        <Bottom />\r\n                    </Col>\r\n                </Row>\r\n\r\n            </Card>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    beverage: state.beverage\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => (\r\n    {\r\n        updateBeverage: (name, qty) => dispatch(updateBeverage(name, qty)),\r\n        updateCurrentNav: (index) => dispatch(updateCurrentNav(index))\r\n    }\r\n)\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Beverage)","import { \r\n    UPDATE_BEVERAGE_QTY\r\n} from './actionTypes.js'\r\n\r\nexport const updateBeverage = (name, qty) => ({\r\n    type: UPDATE_BEVERAGE_QTY,\r\n    payload: {\r\n        name,\r\n        qty\r\n    }\r\n})","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { Row, Col, ListGroup } from 'react-bootstrap';\r\n\r\nconst roundTo = require('roundto');\r\n\r\nclass Breakfast extends React.Component {    \r\n\r\n    render() {\r\n        let ex_count = 0;\r\n        let half_count = 0;\r\n        let dozen_count = 0;\r\n\r\n        return (\r\n\r\n            <ListGroup.Item style={{display: (this.props.state.total === 0 ? 'none' : null)}}>\r\n                <h3>Breakfast</h3>\r\n                <ul className=\"summary-list-group\">\r\n                    <li className=\"summary-list header\">\r\n                        <Row>\r\n                            <Col className=\"item\" md={5}>Item</Col>\r\n                            <Col className=\"qty\">Quantity</Col>\r\n                            <Col className=\"price\">Price</Col>\r\n                            <Col className=\"total\">Total</Col>\r\n                        </Row>\r\n                    </li>\r\n                    <li className=\"summary-list\" style={{display: (this.props.state.bk_beginnings.qty === 0 ? 'none' : null)}}>\r\n                        <Row>\r\n                            <Col className=\"item\" md={5}>{this.props.state.bk_beginnings.name}</Col>\r\n                            <Col className=\"qty\">{this.props.state.bk_beginnings.qty}</Col>\r\n                            <Col className=\"price\">${this.props.state.bk_beginnings.price}</Col>\r\n                            <Col className=\"total\">${this.props.state.bk_beginnings.total}</Col>\r\n                        </Row>\r\n                    </li>\r\n                    <li className=\"summary-list\" style={{display: (this.props.state.ex_breakfast.qty === 0 ? 'none' : null)}}>\r\n                        <Row>\r\n                            <Col className=\"item\" md={5}>{this.props.state.ex_breakfast.name}</Col>\r\n                            <Col className=\"qty\">{this.props.state.ex_breakfast.qty}</Col>\r\n                            <Col className=\"price\">${this.props.state.ex_breakfast.price}</Col>\r\n                            <Col className=\"total\">${this.props.state.ex_breakfast.total}</Col>\r\n                        </Row>\r\n                        <Row className=\"item sub\">\r\n                            {\r\n                                this.props.state.ex_breakfast.list.map((list, index) => {\r\n                                    const names = this.props.state.ex_breakfast_name;\r\n                                    let print = [];\r\n                                    let count = 0;\r\n                                    let total_qty = 0;\r\n\r\n                                    if (list === null){return null;}\r\n                                    ex_count++;\r\n                                    \r\n                                    for (let key in names) {\r\n                                        if (list[key] !== 0){\r\n                                            if (typeof list[key] === 'undefined'){ return null; }\r\n                                            print.push(<li className=\"\" key={'_child_' + count}> { names[key] + ' : ' + list[key] } </li>);\r\n                                            total_qty = total_qty + list[key];\r\n                                            count++;\r\n                                        }\r\n                                    }\r\n                                    \r\n                                    return (\r\n                                        <Col key={'ex_box' + index} md={6} style={{padding: '5px'}}>\r\n                                            <div style={{padding: '5px', border: '1px solid #e1e1e1'}}>\r\n                                                <h3 className=\"p-0\" style={{fontSize: '1rem'}}>#{ex_count}</h3>\r\n                                                <ul key={index} className=\"list-inline\" style={{height: '96px', paddingLeft: '10px', listStyle: 'none'}}> \r\n                                                    {print} \r\n                                                </ul>\r\n                                            </div>\r\n                                        </Col>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </Row>\r\n                    </li>\r\n                    \r\n                    <li className=\"summary-list\" style={{display: (this.props.state.baker_dozen.qty === 0 ? 'none' : null)}}>\r\n                        <Row>\r\n                            <Col className=\"item\" md={5}>{this.props.state.baker_dozen.name}</Col>\r\n                            <Col className=\"qty\">{this.props.state.baker_dozen.qty}</Col>\r\n                            <Col className=\"price\">${this.props.state.baker_dozen.price}</Col>\r\n                            <Col className=\"total\">${this.props.state.baker_dozen.total}</Col>\r\n                        </Row>\r\n                    </li>\r\n\r\n                    <li className=\"summary-list\" style={{display: (this.props.state.sweet_treats.total === 0 ? 'none' : null)}}>\r\n\r\n                        <Row>\r\n                            <Col>Sweet Treats</Col>\r\n                        </Row>\r\n\r\n                        <Row style={{display: (this.props.state.sweet_treats.half_dozen.qty === 0 ? 'none' : null)}}>\r\n                            <Col className=\"item sub\" md={5}> - 1/2 Dozen</Col>\r\n                            <Col className=\"qty\">{this.props.state.sweet_treats.half_dozen.qty}</Col>\r\n                            <Col className=\"price\">${this.props.state.sweet_treats.half_dozen.price}</Col>\r\n                            <Col className=\"total\">${roundTo(this.props.state.sweet_treats.half_dozen.qty*this.props.state.sweet_treats.half_dozen.price,2)}</Col>\r\n                        </Row>\r\n\r\n                        <Row className=\"item sub\">\r\n                            {\r\n                                this.props.state.sweet_treats.half_dozen.list.map((list, index) => {\r\n                                    const names = this.props.state.sweet_treats_name;\r\n                                    let print = [];\r\n                                    let count = 0;\r\n\r\n                                    if (list === null){return null;}\r\n                                    half_count++;\r\n                                    \r\n                                    for (let key in names) {\r\n                                        if (list[key] !== 0){\r\n                                            if (typeof list[key] === 'undefined'){ return null; }\r\n                                            print.push(<li className=\"list-inline-item\" key={'half_dozen_child_' + count}> { names[key] + ' : ' + list[key] } </li>);\r\n                                            count++;\r\n                                        }\r\n                                    }\r\n                                    \r\n                                    return (\r\n                                        <Col key={'half_dozen' + index} md={6} style={{padding: '5px'}}>\r\n                                            <div style={{padding: '5px', border: '1px solid #e1e1e1'}}>\r\n                                                <h3 className=\"p-0\" style={{fontSize: '1rem'}}>#{half_count}</h3>\r\n                                                <ul key={index} className=\"\" style={{height: '48px', paddingLeft: '10px', listStyle: 'none'}}> {print} </ul><br/><br/><br/>\r\n                                            </div>\r\n                                        </Col>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </Row>\r\n\r\n                        <Row style={{display: (this.props.state.sweet_treats.dozen.qty === 0 ? 'none' : null)}}>\r\n                            <Col className=\"item sub\" md={5}> - Dozen</Col>\r\n                            <Col className=\"qty\">{this.props.state.sweet_treats.dozen.qty}</Col>\r\n                            <Col className=\"price\">${this.props.state.sweet_treats.dozen.price}</Col>\r\n                            <Col className=\"total\">${roundTo(this.props.state.sweet_treats.dozen.qty*this.props.state.sweet_treats.dozen.price,2)}</Col>\r\n                        </Row>\r\n\r\n                        <Row className=\"item sub\">\r\n                            {\r\n                                this.props.state.sweet_treats.dozen.list.map((list, index) => {\r\n                                    const names = this.props.state.sweet_treats_name;\r\n                                    let print = [];\r\n                                    let count = 0;\r\n\r\n                                    if (list === null){return null;}\r\n                                    dozen_count++;\r\n                                    \r\n                                    for (let key in names) {\r\n                                        if (list[key] !== 0){\r\n                                            if (typeof list[key] === 'undefined'){ return null; }\r\n                                            print.push(<li className=\"list-inline-item\" key={'dozen_child_' + count}> { names[key] + ' : ' + list[key] } </li>);\r\n                                            count++;\r\n                                        }\r\n                                    }\r\n                                    \r\n                                    return (\r\n                                        <Col key={'dozen' + index} md={6} style={{padding: '5px'}}>\r\n                                            <div style={{padding: '5px', border: '1px solid #e1e1e1'}}>\r\n                                                <h3 className=\"p-0\" style={{fontSize: '1rem'}}>#{dozen_count}</h3>\r\n                                                <ul key={index} className=\"list-inline\" style={{height: '72px', paddingLeft: '10px', listStyle: 'none'}}> \r\n                                                    {print} \r\n                                                </ul><br/><br/><br/>\r\n                                            </div>\r\n                                        </Col>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </Row>\r\n                    </li>\r\n\r\n                    <li className=\"summary-list\" style={{display: (this.props.state.assorted_muffins.qty === 0 ? 'none' : null)}}>\r\n                        <Row>\r\n                            <Col className=\"item\" md={5}>{this.props.state.assorted_muffins.name}</Col>\r\n                            <Col className=\"qty\">{this.props.state.assorted_muffins.qty}</Col>\r\n                            <Col className=\"price\">${this.props.state.assorted_muffins.price}</Col>\r\n                            <Col className=\"total\">${this.props.state.assorted_muffins.total}</Col>\r\n                        </Row>\r\n                    </li>\r\n\r\n                    <li className=\"summary-list footer\">\r\n                        <Row>\r\n                            <Col className=\"item\" md={5}></Col>\r\n                            <Col className=\"qty\"></Col>\r\n                            <Col className=\"price\"></Col>\r\n                            <Col className=\"total\">${this.props.state.total}</Col>\r\n                        </Row>\r\n                    </li>\r\n                </ul>\r\n            </ListGroup.Item>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    state: state.breakfast\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps\r\n)(Breakfast)","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { Row, Col, ListGroup } from 'react-bootstrap';\r\n\r\nconst roundTo = require('roundto');\r\n\r\nclass ByoBreakfast extends React.Component {\r\n\r\n    render() {\r\n\r\n        return (\r\n            <ListGroup.Item style={{display: (this.props.state.total === 0 ? 'none' : null)}}>\r\n                <h3>Build Your Own Breakfast</h3>\r\n                <ul className=\"summary-list-group\">\r\n                    <li className=\"summary-list header\">\r\n                        <Row>\r\n                            <Col className=\"item\" md={5}>Item</Col>\r\n                            <Col className=\"qty\">Quantity</Col>\r\n                            <Col className=\"price\">Price</Col>\r\n                            <Col className=\"total\">Total</Col>\r\n                        </Row>\r\n                    </li>\r\n\r\n                    <li className=\"summary-list\" style={{display: (this.props.state.coffee_carafe.total === 0 ? 'none' : null)}}>\r\n                        <Row>\r\n                            <Col>96oz Wildcat Coffee Carafe</Col>\r\n                        </Row>\r\n                        <Row style={{display: (this.props.state.coffee_carafe.list.regular === 0 ? 'none' : null)}}>\r\n                            <Col className=\"item sub\" md={5}> - Regular</Col>\r\n                            <Col className=\"qty\">{this.props.state.coffee_carafe.list.regular}</Col>\r\n                            <Col className=\"price\">${this.props.state.coffee_carafe.price}</Col>\r\n                            <Col className=\"total\">${roundTo(this.props.state.coffee_carafe.price*this.props.state.coffee_carafe.list.regular,2)}</Col>\r\n                        </Row>\r\n                        <Row style={{display: (this.props.state.coffee_carafe.list.decaf === 0 ? 'none' : null)}}>\r\n                            <Col className=\"item sub\" md={5}> - Decaf</Col>\r\n                            <Col className=\"qty\">{this.props.state.coffee_carafe.list.decaf}</Col>\r\n                            <Col className=\"price\">${this.props.state.coffee_carafe.price}</Col>\r\n                            <Col className=\"total\">${roundTo(this.props.state.coffee_carafe.price*this.props.state.coffee_carafe.list.decaf,2)}</Col>\r\n                        </Row>\r\n                        <Row style={{display: (this.props.state.coffee_carafe.list.iced === 0 ? 'none' : null)}}>\r\n                            <Col className=\"item sub\" md={5}> - Iced</Col>\r\n                            <Col className=\"qty\">{this.props.state.coffee_carafe.list.iced}</Col>\r\n                            <Col className=\"price\">${this.props.state.coffee_carafe.price}</Col>\r\n                            <Col className=\"total\">${roundTo(this.props.state.coffee_carafe.price*this.props.state.coffee_carafe.list.iced,2)}</Col>\r\n                        </Row>\r\n                        <Row style={{display: (this.props.state.coffee_carafe.list.iced_decaf === 0 ? 'none' : null)}}>\r\n                            <Col className=\"item sub\" md={5}> - Iced Decaf</Col>\r\n                            <Col className=\"qty\">{this.props.state.coffee_carafe.list.iced_decaf}</Col>\r\n                            <Col className=\"price\">${this.props.state.coffee_carafe.price}</Col>\r\n                            <Col className=\"total\">${roundTo(this.props.state.coffee_carafe.price*this.props.state.coffee_carafe.list.iced_decaf,2)}</Col>\r\n                        </Row>\r\n                    </li>\r\n\r\n                    <li className=\"summary-list\" style={{display: (this.props.state.fruit_salad.total === 0 ? 'none' : null)}}>\r\n                        <Row>\r\n                            <Col>Fresh Seasonal Fruit Salad</Col>\r\n                        </Row>\r\n                        <Row style={{display: (this.props.state.fruit_salad.serve_20.qty === 0 ? 'none' : null)}}>\r\n                            <Col className=\"item sub\" md={5}> - Serve 20</Col>\r\n                            <Col className=\"qty\">{this.props.state.fruit_salad.serve_20.qty}</Col>\r\n                            <Col className=\"price\">${this.props.state.fruit_salad.serve_20.price}</Col>\r\n                            <Col className=\"total\">${roundTo(this.props.state.fruit_salad.serve_20.qty*this.props.state.fruit_salad.serve_20.price,2)}</Col>\r\n                        </Row>\r\n                        <Row style={{display: (this.props.state.fruit_salad.serve_8.qty === 0 ? 'none' : null)}}>\r\n                            <Col className=\"item sub\" md={5}> - Serve 8</Col>\r\n                            <Col className=\"qty\">{this.props.state.fruit_salad.serve_8.qty}</Col>\r\n                            <Col className=\"price\">${this.props.state.fruit_salad.serve_8.price}</Col>\r\n                            <Col className=\"total\">${roundTo(this.props.state.fruit_salad.serve_8.qty*this.props.state.fruit_salad.serve_8.price,2)}</Col>\r\n                        </Row>\r\n                    </li>\r\n\r\n                    \r\n\r\n                    {/* <li className=\"summary-list\" style={{display: (this.props.state.sandwiches.total === 0 ? 'none' : null)}}>\r\n                        <Row>\r\n                            <Col>Savory Breakfast Sandwiches</Col>\r\n                        </Row>\r\n                        <Row style={{display: (this.props.state.sandwiches.list.zucchini.qty === 0 ? 'none' : null)}}>\r\n                            <Col className=\"item sub\" md={5}> - {this.props.state.sandwiches.list.zucchini.name}</Col>\r\n                            <Col className=\"qty\">{this.props.state.sandwiches.list.zucchini.qty}</Col>\r\n                            <Col className=\"price\">${this.props.state.sandwiches.list.zucchini.price}</Col>\r\n                            <Col className=\"total\">${roundTo(this.props.state.sandwiches.list.zucchini.qty*this.props.state.sandwiches.list.zucchini.price,2)}</Col>\r\n                        </Row>\r\n                        <Row style={{display: (this.props.state.sandwiches.list.sausage_bagel.qty === 0 ? 'none' : null)}}>\r\n                            <Col className=\"item sub\" md={5}> - {this.props.state.sandwiches.list.sausage_bagel.name}</Col>\r\n                            <Col className=\"qty\">{this.props.state.sandwiches.list.sausage_bagel.qty}</Col>\r\n                            <Col className=\"price\">${this.props.state.sandwiches.list.sausage_bagel.price}</Col>\r\n                            <Col className=\"total\">${roundTo(this.props.state.sandwiches.list.sausage_bagel.qty*this.props.state.sandwiches.list.sausage_bagel.price,2)}</Col>\r\n                        </Row>\r\n                        <Row style={{display: (this.props.state.sandwiches.list.pepper_bagel.qty === 0 ? 'none' : null)}}>\r\n                            <Col className=\"item sub\" md={5}> - {this.props.state.sandwiches.list.pepper_bagel.name}</Col>\r\n                            <Col className=\"qty\">{this.props.state.sandwiches.list.pepper_bagel.qty}</Col>\r\n                            <Col className=\"price\">${this.props.state.sandwiches.list.pepper_bagel.price}</Col>\r\n                            <Col className=\"total\">${roundTo(this.props.state.sandwiches.list.pepper_bagel.qty*this.props.state.sandwiches.list.pepper_bagel.price,2)}</Col>\r\n                        </Row>\r\n                        <Row style={{display: (this.props.state.sandwiches.list.red_pepper_bagel.qty === 0 ? 'none' : null)}}>\r\n                            <Col className=\"item sub\" md={5}> - {this.props.state.sandwiches.list.red_pepper_bagel.name}</Col>\r\n                            <Col className=\"qty\">{this.props.state.sandwiches.list.red_pepper_bagel.qty}</Col>\r\n                            <Col className=\"price\">${this.props.state.sandwiches.list.red_pepper_bagel.price}</Col>\r\n                            <Col className=\"total\">${roundTo(this.props.state.sandwiches.list.red_pepper_bagel.qty*this.props.state.sandwiches.list.red_pepper_bagel.price,2)}</Col>\r\n                        </Row>\r\n                    </li> */}\r\n\r\n                    <li className=\"summary-list\" style={{display: (this.props.state.west_egg_bagel.total === 0 ? 'none' : null)}}>\r\n                        <Row style={{display: (this.props.state.west_egg_bagel.qty === 0 ? 'none' : null)}}>\r\n                            <Col className=\"item sub\" md={5}>Western Egg Bagel</Col>\r\n                            <Col className=\"qty\">{this.props.state.west_egg_bagel.qty}</Col>\r\n                            <Col className=\"price\">${this.props.state.west_egg_bagel.price}</Col>\r\n                            <Col className=\"total\">${roundTo(this.props.state.west_egg_bagel.qty*this.props.state.west_egg_bagel.price,2)}</Col>\r\n                        </Row>\r\n                    </li>\r\n\r\n                    <li className=\"summary-list\" style={{display: (this.props.state.ewms_whole.total === 0 ? 'none' : null)}}>\r\n                        <Row style={{display: (this.props.state.ewms_whole.qty === 0 ? 'none' : null)}}>\r\n                            <Col className=\"item sub\" md={5}>Egg White Mushroom and Spinach on Whole Grain</Col>\r\n                            <Col className=\"qty\">{this.props.state.ewms_whole.qty}</Col>\r\n                            <Col className=\"price\">${this.props.state.ewms_whole.price}</Col>\r\n                            <Col className=\"total\">${roundTo(this.props.state.ewms_whole.qty*this.props.state.ewms_whole.price,2)}</Col>\r\n                        </Row>\r\n                    </li>\r\n\r\n                    <li className=\"summary-list\" style={{display: (this.props.state.hsb_bagel.total === 0 ? 'none' : null)}}>\r\n                        <Row style={{display: (this.props.state.hsb_bagel.qty === 0 ? 'none' : null)}}>\r\n                            <Col className=\"item sub\" md={5}>Ham, Sausage and Bacon on Bagel</Col>\r\n                            <Col className=\"qty\">{this.props.state.hsb_bagel.qty}</Col>\r\n                            <Col className=\"price\">${this.props.state.hsb_bagel.price}</Col>\r\n                            <Col className=\"total\">${roundTo(this.props.state.hsb_bagel.qty*this.props.state.hsb_bagel.price,2)}</Col>\r\n                        </Row>\r\n                    </li>\r\n\r\n                    <li className=\"summary-list footer\">\r\n                        <Row>\r\n                            <Col className=\"item\" md={5}></Col>\r\n                            <Col className=\"qty\"></Col>\r\n                            <Col className=\"price\"></Col>\r\n                            <Col className=\"total\">${this.props.state.total}</Col>\r\n                        </Row>\r\n                    </li>\r\n                </ul>\r\n            </ListGroup.Item>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    state: state.byo_breakfast\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps\r\n)(ByoBreakfast)","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { Row, Col, ListGroup } from 'react-bootstrap';\r\n\r\nconst roundTo = require('roundto');\r\n\r\nclass Lunch extends React.Component {\r\n\r\n    printItems = (list) => {\r\n        let print = [];\r\n        for (let key in list){\r\n            if (list[key] !== 0){\r\n                print.push(<li>{this.props.state.names[key].name + ' : ' + list[key]}</li>);     \r\n            }                           \r\n        }\r\n        return (<ul style={{paddingLeft: '20px'}}>{print}</ul>);\r\n    }\r\n\r\n    printExtra = (extras) => {\r\n        let print = [];\r\n        for (let i = 0; i < 2; i++) {\r\n            const extra = extras.list[i];\r\n            if (extra.one !== 'None') {\r\n                const one = <span>{extra.one}</span>;\r\n                let two = null;\r\n                let three = null;\r\n                if (extra.two !== 'None'){ two = <span>, {extra.two}</span> }\r\n                if (extra.three !== 'None'){ three = <span>, {extra.three}</span> }\r\n                print.push(\r\n                    <div key={'extra' + i} style={{fontSize: '0.9rem'}}>Extra #{i+1} : {one} {two} {three}</div>\r\n                )   \r\n\r\n            }            \r\n        }\r\n\r\n        if (print.length === 0){return null;}\r\n        else {\r\n            return (\r\n                <React.Fragment>\r\n                    <hr style={{border: '1px solid #e1e1e1'}} />\r\n                    <h7 style={{width: '100%', fontWeight: '600'}}>Extra Sandwiches or Salads</h7><br/>\r\n                    <h7 style={{width: '100%', fontWeight: '500', fontSize:12 }}><em>$6.99/each for Extra Sandwich or Salad, $0.99/each for Extra Chips, $2.09/each for Extra Sodas, $1.99/each for Extra Dasani</em></h7>\r\n                    {print}\r\n                </React.Fragment>\r\n            );\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let count = 0;\r\n        return (\r\n            <ListGroup.Item style={{display: (this.props.state.total === 0 ? 'none' : null)}}>\r\n                <h3>Lunch</h3>\r\n                <ul className=\"summary-list-group\">\r\n                    <li className=\"summary-list header\">\r\n                        <Row>\r\n                            <Col className=\"item\" md={5}>Item</Col>\r\n                            <Col className=\"qty\">Quantity</Col>\r\n                            <Col className=\"price\">Price</Col>\r\n                            <Col className=\"total\">Total</Col>\r\n                        </Row>\r\n                    </li>\r\n\r\n                    <li className=\"summary-list\">\r\n\r\n                        <Row>\r\n                            <Col>Lunch</Col>\r\n                        </Row>\r\n\r\n\r\n                        <Row>\r\n                            <Col className=\"item sub\" md={5}> - \"Build Your Own\" Lunch Box</Col>\r\n                            <Col className=\"qty\">{this.props.state.qty}</Col>\r\n                            <Col className=\"price\">${this.props.state.price}</Col>\r\n                            <Col className=\"total\">${roundTo(this.props.state.qty*this.props.state.price,2)}</Col>\r\n                        </Row>\r\n\r\n                        <Row style={{paddingLeft: '80px', paddingTop: '10px', paddingBottom: '10px'}} className=\"wrap-lunch-box\">\r\n                            {\r\n                                this.props.state.list.map((boxes, pindex) => {\r\n                                    if (boxes.length !== 0) {\r\n                                        count++;\r\n                                        return (\r\n                                        <Col md={6} className=\"wrap-lunch-box\">\r\n                                            <div key={'list-'+pindex} style={{padding: '10px', border: '1px solid #dadada'}}>\r\n                                                <h3 className=\"p-0\" style={{fontSize: '1rem'}}>Box #{count}</h3>\r\n                                                <div>\r\n                                                    <ul className=\"list-inline\">\r\n                                                        <li className=\"list-inline-item\"> \r\n                                                            {this.printItems(boxes.choice_one.list)}\r\n                                                        </li>\r\n                                                        <li className=\"list-inline-item\">\r\n                                                            {this.printItems(boxes.choice_two.list)} \r\n                                                        </li>\r\n                                                        <li className=\"list-inline-item\">\r\n                                                            {this.printItems(boxes.choice_three.list)} \r\n                                                        </li>\r\n                                                        <li className=\"list-inline-item\">\r\n                                                            {this.printExtra(boxes.extra)} \r\n                                                        </li>\r\n                                                    </ul>\r\n                                                </div>\r\n                                            </div>\r\n                                        </Col>\r\n                                        );\r\n                                    }\r\n                                    else {\r\n                                        return null;\r\n                                    }\r\n                                }) \r\n                            }\r\n                        </Row>\r\n                    </li>\r\n\r\n                    <li className=\"summary-list footer\">\r\n                        <Row>\r\n                            <Col className=\"item\" md={5}></Col>\r\n                            <Col className=\"qty\"></Col>\r\n                            <Col className=\"price\"></Col>\r\n                            <Col className=\"total\">${this.props.state.total}</Col>\r\n                        </Row>\r\n                    </li>\r\n                </ul>\r\n            </ListGroup.Item>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    state: state.lunch\r\n});\r\n\r\n\r\nexport default connect(\r\n    mapStateToProps\r\n)(Lunch)","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { Row, Col, ListGroup } from 'react-bootstrap';\r\n\r\nclass OfficeParty extends React.Component {\r\n    \r\n    render() {\r\n        return (\r\n            <ListGroup.Item style={{display: (this.props.state.total === 0 ? 'none' : null)}}>\r\n                <h3>Office Party</h3>\r\n                <ul className=\"summary-list-group\">\r\n                    <li className=\"summary-list header\">\r\n                        <Row>\r\n                            <Col className=\"item\" md={5}>Item</Col>\r\n                            <Col className=\"qty\">Quantity</Col>\r\n                            <Col className=\"price\">Price</Col>\r\n                            <Col className=\"total\">Total</Col>\r\n                        </Row>\r\n                    </li>\r\n                    <li className=\"summary-list\">\r\n                        <Row>\r\n                            <Col className=\"item\" md={5}>{this.props.state.serve_10.name}</Col>\r\n                            <Col className=\"qty\">{this.props.state.serve_10.qty}</Col>\r\n                            <Col className=\"price\">${this.props.state.serve_10.price}</Col>\r\n                            <Col className=\"total\">${this.props.state.serve_10.total}</Col>\r\n                        </Row>\r\n                    </li>\r\n                    <li className=\"summary-list footer\">\r\n                        <Row>\r\n                            <Col className=\"item\" md={5}></Col>\r\n                            <Col className=\"qty\">{this.props.state.serve_10.qty}</Col>\r\n                            <Col className=\"price\"></Col>\r\n                            <Col className=\"total\">${this.props.state.total}</Col>\r\n                        </Row>\r\n                    </li>\r\n                </ul>\r\n            </ListGroup.Item>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    state: state.office_party\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps\r\n)(OfficeParty)","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { Row, Col, ListGroup } from 'react-bootstrap';\r\n\r\nconst roundTo = require('roundto');\r\n\r\nclass Beverage extends React.Component {  \r\n    \r\n    printItem = (name) => {\r\n        return (\r\n            <li className=\"summary-list\" style={{display: (this.props.state.list[name].qty === 0 ? 'none' : null)}}>\r\n                <Row>\r\n                    <Col className=\"item\" md={5}>{this.props.state.list[name].name}</Col>\r\n                    <Col className=\"qty\">{this.props.state.list[name].qty}</Col>\r\n                    <Col className=\"price\">${this.props.state.list[name].price}</Col>\r\n                    <Col className=\"total\">${roundTo(this.props.state.list[name].qty*this.props.state.list[name].price, 2)}</Col>\r\n                </Row>\r\n            </li>\r\n        )\r\n    }\r\n\r\n    totalQty = () => {\r\n        let qty = 0;\r\n        const list = this.props.state.list;\r\n        for (let key in list){\r\n            const tmp_qty = list[key].qty;\r\n            qty = qty + tmp_qty;\r\n        }\r\n        \r\n        return qty;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <ListGroup.Item style={{display: (this.props.state.total === 0 ? 'none' : null)}}>\r\n                <h3>Beverage</h3>\r\n                <ul className=\"summary-list-group\">\r\n                    <li className=\"summary-list header\">\r\n                        <Row>\r\n                            <Col className=\"item\" md={5}>Item</Col>\r\n                            <Col className=\"qty\">Quantity</Col>\r\n                            <Col className=\"price\">Price</Col>\r\n                            <Col className=\"total\">Total</Col>\r\n                        </Row>\r\n                    </li>\r\n                    {this.printItem('coke')}\r\n                    {this.printItem('diet_coke')}\r\n                    {this.printItem('dr_pepper')}\r\n                    {this.printItem('diet_dr_pepper')}\r\n                    {this.printItem('sprite')}\r\n                    {this.printItem('dasani')}\r\n                    {this.printItem('cherry_coke')}\r\n                    {this.printItem('coke_zero')}\r\n                    <li className=\"summary-list footer\">\r\n                        <Row>\r\n                            <Col className=\"item\" md={5}></Col>\r\n                            <Col className=\"qty\">{this.totalQty()}</Col>\r\n                            <Col className=\"price\"></Col>\r\n                            <Col className=\"total\">${this.props.state.total}</Col>\r\n                        </Row>\r\n                    </li>\r\n                </ul>\r\n            </ListGroup.Item>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    state: state.beverage\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps\r\n)(Beverage)","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from 'react-router-dom';\r\nimport { updateCurrentNav, calculateSubtotal, submitOrder, getDeliveryMethod, handleTextarea } from '../../redux/actions/main';\r\nimport { Row, Col, Card, ListGroup, ButtonToolbar, Button, Spinner } from 'react-bootstrap';\r\n\r\nimport TopNav from '../common/TopNav.js';\r\n// import Bottom from '../bottom';\r\n\r\nimport Breakfast from './Breakfast';\r\nimport ByoBreakfast from './ByoBreakfast';\r\nimport Lunch from './Lunch';\r\nimport OfficeParty from './OfficeParty';\r\nimport Beverage from './Beverage';\r\n\r\nimport './style.css';\r\n\r\nconst roundTo = require('roundto');\r\n\r\nclass Summary extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.props.updateCurrentNav(5);\r\n        \r\n        const subtotal = roundTo(\r\n            this.props.globalState.breakfast.total +\r\n            this.props.globalState.byo_breakfast.total +\r\n            this.props.globalState.lunch.total +\r\n            this.props.globalState.office_party.total +\r\n            this.props.globalState.beverage.total,\r\n            2);\r\n        const tax = roundTo(subtotal*0.061, 2);\r\n        const total = roundTo(subtotal + tax, 2);\r\n\r\n        this.props.calculateSubtotal(subtotal, tax, total);\r\n\r\n        this.state = {\r\n            subtotal: subtotal,\r\n            tax: tax,\r\n            total: total,\r\n            additional_comment: ''\r\n        }\r\n        // console.log(this.props.globalState.byo_breakfast);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.getDeliveryMethod();\r\n    }\r\n\r\n    handleTextarea = (event) => {\r\n        this.setState({\r\n            additional_comment: event.target.value\r\n        });\r\n        // this.props.handleTextarea(event.target.value);\r\n    }\r\n    \r\n    submitOrder = () => {\r\n        const data = {\r\n            breakfast: this.props.globalState.breakfast,\r\n            byo_breakfast: this.props.globalState.byo_breakfast,\r\n            lunch: this.props.globalState.lunch,\r\n            office_party: this.props.globalState.office_party,\r\n            beverage: this.props.globalState.beverage,\r\n            subtotal: this.state.subtotal,\r\n            tax: this.state.tax,\r\n            total: this.state.total,\r\n            additional_comment: this.state.additional_comment\r\n        };\r\n        this.props.submitOrder(data);\r\n        this.props.history.push('/Confirmation');\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n            {\r\n                this.props.globalState.main.delivery_method === null ?\r\n                <div style={{textAlign: 'center', padding: '100px 0px'}}>\r\n                    <Spinner animation=\"grow\" style={{backgroundColor: '#f58220'}} />\r\n                </div>\r\n                :\r\n                <React.Fragment>\r\n                    {\r\n                        this.props.globalState.main.error.msg === '' ?\r\n                        <Card className=\"wrap-summary\">\r\n                \r\n                            <Card.Header>\r\n                                <TopNav />\r\n                            </Card.Header>\r\n\r\n                            <Card.Body>\r\n                                <Card.Title>Order Summary</Card.Title>\r\n                            </Card.Body>\r\n\r\n                            {\r\n                                this.state.total === 0 ?\r\n                                <Card.Body className=\"text-center\" style={{marginBottom: '20px'}}>\r\n                                    <Card.Text md={12} style={{paddingTop: '15px', paddingBottom: '15px'}}>\r\n                                        <strong>There are no items in your shopping cart.</strong>\r\n                                    </Card.Text>\r\n                                </Card.Body>\r\n                                :\r\n                                <React.Fragment>\r\n\r\n                                    <ListGroup>\r\n                                        <Breakfast />\r\n                                        <ByoBreakfast />\r\n                                        <Lunch />\r\n                                        <OfficeParty />\r\n                                        <Beverage />\r\n                                    </ListGroup>\r\n\r\n                                    <Row className=\"wrap-total\" style={{marginTop: '20px'}}>\r\n                                        <Col className=\"total-names\">Subtotal : </Col><Col className=\"total-numbers\"><span className=\"number\">${this.state.subtotal}</span></Col>\r\n                                    </Row>\r\n\r\n                                    <Row className=\"wrap-total\">\r\n                                        <Col className=\"total-names\">Tax : </Col><Col className=\"total-numbers\"><span className=\"number\">${this.state.tax}</span></Col>\r\n                                    </Row>\r\n\r\n                                    {/*\r\n                                        this.props.globalState.main.delivery_method === 'Delivery' ?\r\n                                        <Row className=\"wrap-total\">\r\n                                            <Col className=\"total-names\">Delivery Fee : </Col><Col className=\"total-numbers\"><span className=\"number\">$10</span></Col>\r\n                                        </Row>\r\n                                        :\r\n                                        null\r\n                                    */}\r\n\r\n                                    <Row className=\"wrap-total\">\r\n                                        <Col className=\"total-names\">Total : </Col><Col className=\"total-numbers\">\r\n                                            <span className=\"number\">\r\n                                                ${\r\n                                                    this.props.globalState.main.delivery_method === 'Delivery' ?\r\n                                                    roundTo(this.state.total,2) /* add this.state.total + int, to add a delivery fee*/\r\n                                                    :\r\n                                                    this.state.total\r\n                                                }\r\n                                            </span>\r\n                                        </Col>\r\n                                    </Row>\r\n\r\n                                    <ListGroup style={{marginBottom: '40px'}}>\r\n                                        <ListGroup.Item>\r\n                                            <h3 style={{paddingLeft: '0px'}}>Additional Notes (Please provide any dietary restrictions/allergies, etc)</h3>\r\n                                            <textarea style={{width: '100%'}} rows=\"5\" onChange={this.handleTextarea} value={this.state.additional_comment} />\r\n                                        </ListGroup.Item>\r\n                                    </ListGroup>\r\n\r\n                                </React.Fragment>\r\n                            }\r\n\r\n                            <Row>\r\n                                <Col md={6}>\r\n                                    <ButtonToolbar>\r\n                                        <Link\r\n                                        className={\"btn add-btn\"}\r\n                                        style={{marginRight: '10px', width:'200px'}}\r\n                                        to=\"/breakfast\"\r\n                                        >\r\n                                        {\r\n                                            this.state.total === 0 ?\r\n                                            'Add Food'\r\n                                            :\r\n                                            'Add More Food'\r\n                                        }\r\n                                        </Link>\r\n                                    </ButtonToolbar>\r\n                                </Col>\r\n                                {\r\n                                    this.state.total === 0 ?\r\n                                    null\r\n                                    :\r\n                                    <Col md={6}>\r\n                                        <ButtonToolbar>\r\n                                            <Button \r\n                                            className={\"btn add-btn\"}\r\n                                            style={{marginLeft: 'auto', width:'200px'}} onClick={this.submitOrder}>Submit Order</Button>\r\n                                        </ButtonToolbar>\r\n                                    </Col>\r\n                                }\r\n                            </Row>\r\n\r\n                        </Card>\r\n                        :\r\n                        <Card>\r\n                            <Card.Body style={{borderBottomWidth: '0px'}}>\r\n                                <Card.Text>\r\n                                    Your session has expired. Please try again later.\r\n                                </Card.Text>\r\n                            </Card.Body>\r\n\r\n                            <Row>\r\n                                <Col md={12}>\r\n                                    <ButtonToolbar>\r\n                                        <a href=\"/catering/online/agreement.php?r=catalyst\" className=\"btn add-btn btn-lg btn-block\" style={{width: '100%'}}>Try Again</a>\r\n                                    </ButtonToolbar>\r\n                                </Col>\r\n                            </Row>\r\n                        </Card>\r\n                    }                    \r\n                </React.Fragment>\r\n                \r\n            }\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    globalState: state\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => (\r\n    {\r\n        // updateQty: (name, qty) => dispatch(updateQty(name, qty))\r\n        updateCurrentNav: (index) => dispatch(updateCurrentNav(index)),\r\n        calculateSubtotal: (subtotal, tax, total) => dispatch(calculateSubtotal(subtotal, tax, total)),\r\n        submitOrder: (data) => dispatch(submitOrder(data)),\r\n        getDeliveryMethod: () => dispatch(getDeliveryMethod()),\r\n        handleTextarea: (text) => dispatch(handleTextarea(text))\r\n    }\r\n)\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Summary)","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\n// import { Link } from 'react-router-dom';\r\n// import { updateCurrentNav, calculateSubtotal, submitOrder } from '../redux/actions/main';\r\nimport { Card, Spinner } from 'react-bootstrap';\r\n\r\n// import TopNav from './common/TopNav.js';\r\n\r\nclass Confirmation extends React.Component {\r\n\r\n    // constructor(props) {\r\n    //     super(props);\r\n    // }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n            {\r\n                this.props.state.main.confirmation.loading ?\r\n                <div style={{textAlign: 'center', padding: '100px 0px'}}>\r\n                    <Spinner animation=\"grow\" style={{backgroundColor: '#f58220'}} />\r\n                </div>\r\n                :\r\n                <Card className=\"\">\r\n\r\n                    {\r\n                        this.props.state.main.confirmation.orderID === null ?\r\n                        <React.Fragment>\r\n                            <Card.Body>\r\n                                <Card.Text>\r\n                                    We're sorry. An error occurred while processing your order. Please try again later.\r\n                                </Card.Text>\r\n                            </Card.Body>\r\n\r\n                            <div className=\"card-body\">\r\n                                        \r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-4\">\r\n                                        <a href=\"/catering/online/agreement.php?r=slotcanyon\" className=\"btn add-btn btn-lg btn-block\" style={{width: '100%'}}>Try Again</a>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </React.Fragment>\r\n                        :\r\n                        <React.Fragment>\r\n                            <Card.Body>\r\n                                <Card.Text>\r\n                                    <span style={{fontWeight: '500', lineHeight: '2.2', fontSize: '1.7rem'}}>Thank You</span><br style={{lineHeight: '2.2'}} />\r\n                                    Your order is confirmed. For your convenience, an email has been sent to {this.props.state.main.confirmation.email}. <br />\r\n                                    Your Order ID is {this.props.state.main.confirmation.orderID}.\r\n                                </Card.Text>\r\n                            </Card.Body>\r\n\r\n                            <div className=\"card-body\">\r\n                                        \r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-4\">\r\n                                        <a href=\"/catering/online/agreement.php?r=slotcanyon\" className=\"btn add-btn btn-lg btn-block\" style={{width: '100%'}}>Order Again</a>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-md-4\">\r\n                                        <a href=\"/dining/other/slotcanyon\" className=\"btn add-btn btn-lg btn-block\" style={{width: '100%'}}>Go to Slot Canyon Cafe</a>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-md-4\">\r\n                                        <a href=\"/\" className=\"btn add-btn btn-lg btn-block\" style={{width: '100%'}}>Go to Union</a>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </React.Fragment>\r\n                    }\r\n\r\n                </Card>\r\n            }\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    state: state\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => (\r\n    {\r\n    }\r\n)\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Confirmation)","import React from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route\r\n} from 'react-router-dom'\r\nimport './App.css';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport Banner from './img/Catalyst_Cafe_Catering_Banner.jpg';\r\n// import Menu from './components/Menu';\r\nimport Breakfast from './components/Breakfast';\r\nimport ByoBreakfast from './components/ByoBreakfast';\r\nimport Lunch from './components/Lunch';\r\nimport OfficeParty from './components/OfficeParty';\r\nimport Beverage from './components/Beverage';\r\nimport Summary from './components/Summary';\r\nimport Confirmation from './components/Confirmation';\r\n// import Bottom from './components/bottom';\r\n\r\nexport default function App() {\r\n  return (\r\n    <Container style={{marginTop: '0rem', marginBottom: '2rem', border: '1px solid #c8942b'}}>\r\n\r\n      <Row>\r\n        <img src={Banner} style={{width: '100%'}} alt=\"Banner\" />\r\n      </Row>\r\n\r\n      <Row style={{backgroundColor: '#fff'}}>\r\n        <Col md={12} className=\"wrap-main\">\r\n          <Router basename={'/catering/online/slotcanyon'}>\r\n            <Route exact path=\"/\" component={Breakfast} />\r\n            <Route exact path=\"/breakfast\" component={Breakfast} />\r\n            <Route exact path=\"/byobreakfast\" component={ByoBreakfast} />\r\n            <Route exact path=\"/lunch\" component={Lunch} />\r\n            <Route exact path=\"/officeparty\" component={OfficeParty} />\r\n            <Route exact path=\"/beverage\" component={Beverage} />\r\n            <Route exact path=\"/summary\" component={Summary} />\r\n            <Route exact path=\"/confirmation\" component={Confirmation} />\r\n          </Router>\r\n        </Col>\r\n      </Row>\r\n\r\n    </Container>\r\n  );\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'react-app-polyfill/ie9';\nimport 'react-app-polyfill/ie11';   \nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\n\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>, \n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}