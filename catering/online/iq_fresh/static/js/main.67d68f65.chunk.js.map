{"version":3,"sources":["img/iq_fresh_banner.jpg","redux/reducers/main.js","redux/reducers/breakfast.js","redux/reducers/byo_breakfast.js","redux/reducers/lunch.js","redux/reducers/teamlunch.js","redux/reducers/officeParty.js","redux/reducers/beverage.js","redux/reducers/index.js","redux/actions/actionTypes.js","redux/store.js","components/common/numberInput.js","components/common/TopNav.js","redux/actions/main.js","components/Lunch/LunchBox.js","redux/actions/lunch.js","components/bottom.js","components/Lunch/index.js","components/TeamLunch/LunchBox.js","redux/actions/teamlunch.js","components/TeamLunch/index.js","components/Summary/Lunch.js","components/Summary/TeamLunch.js","components/Summary/index.js","components/Confirmation.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","initialState","delivery_method","loading","byo_lunch","teamlunch","subtotal","tax","total","additional_comment","nav","routes","confirmation","success","email","orderID","error","code","msg","require","actionType","id","open_box","price","qty","products","sandwiches","italian_job","name","description","hail_caesar","gyro_wrapture","wrapzilla","crunch_roll","wedge_quesadilla","garden_ofeden","salads","kale_crunch","chicken_egg","whats_updoc","to_thaifor","chips","pita","baked_lays","bbq_lays","fruit","banana","red_apple","green_apple","orange","beverages","coke","diet_coke","dr_pepper","sprite","dasani","fruit_punch","mountain_blast","names","list","roundTo","dozen","price_half","qty_half","combineReducers","main","state","action","type","index","payload","err","text","lunch","push","createStore","rootReducer","applyMiddleware","thunkMiddleware","NumberInput","props","increase","setState","value","this","onChange","decrease","onChangeHandler","event","target","parseInt","className","style","noleft","onClick","readonly","min","bind","readOnly","React","Component","TopNav","document","title","Fragment","Row","to","global","connect","updateCurrentNav","getDeliveryMethodSuccess","getDeliveryMethodFailure","LunchBox","checkQty","tmp_qty","key","updateInput","total_qty","onChangeFirst","choice_one","onChangeSecond","choice_two","onChangeThree","choice_three","addLunchBox","validateForm","extra","updateLunchBox","closeLunchBox","window","scrollTo","printSandwiches","Col","md","float","printSalads","printChips","display","lineHeight","printFruit","onChangeExtra","order","first","createRef","Card","Header","Body","fontWeight","color","ListGroup","variant","Item","borderWidth","textDecoration","fontSize","borderBottom","map","ButtonToolbar","Button","size","dispatch","openLunchBox","Bottom","getTotal","navIndex","textAlign","padding","marginRight","width","marginLeft","Lunch","openLunchBoxEditor","removeLunchBox","printItems","print","paddingLeft","count","Title","boxes","pindex","length","border","TeamLunchBox","max_qty","addTEAMLUNCH_DOZEN","updateTEAMLUNCH_DOZEN","closeTEAMLUNCH_DOZEN","addTEAMLUNCH_HALF","updateTEAMLUNCH_HALF","closeTEAMLUNCH_HALF","openTEAMLUNCH_DOZEN","openTEAMLUNCH_HALF","TeamLunch","openTEAMLUNCH_DOZENEditor","removeTEAMLUNCH_DOZEN","openTEAMLUNCH_HALFEditor","removeTEAMLUNCH_HALF","printExtra","extras","i","one","two","three","paddingTop","paddingBottom","Summary","handleTextarea","submitOrder","data","globalState","history","calculateSubtotal","getDeliveryMethod","Spinner","animation","backgroundColor","marginBottom","Text","marginTop","rows","borderBottomWidth","href","console","log","fetch_option","method","headers","body","JSON","stringify","fetch","then","res","ok","status","json","Error","return","order_id","catch","Confirmation","App","Container","src","Banner","alt","basename","exact","path","component","Boolean","location","hostname","match","ReactDOM","render","store","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"+GAAAA,EAAOC,QAAU,IAA0B,6C,+RCUrCC,EAAe,CACjBC,gBAAiB,KACjBC,SAAS,EACTC,UAAW,EACXC,UAAW,EACXC,SAAU,EACVC,IAAK,EACLC,MAAO,EACPC,mBAAoB,GACpBC,IAAK,EACLC,OAAQ,CACJ,SACA,aACA,YAEJC,aAAc,CACVT,SAAS,EACTU,SAAS,EACTC,MAAO,KACPC,QAAS,KACTC,MAAO,CACHC,KAAM,OAGdD,MAAO,CACHE,IAAK,KCiDGC,EAAQ,I,YC9CRA,EAAQ,IC7BxB,IAAMlB,EAAe,CACjBmB,WAAY,MACZC,GAAI,KACJC,UAAU,EACVC,MAAO,KACPC,IAAK,EACLC,SAAU,CACNC,WAAa,CACTC,YAAa,CAACC,KAAM,kBAAmBC,YAAa,+FACpDC,YAAa,CAACF,KAAM,cAAeC,YAAa,iGAChDE,cAAgB,CAACH,KAAM,gBAAiBC,YAAa,uFACrDG,UAAY,CAACJ,KAAM,YAAaC,YAAa,2FAC7CI,YAAc,CAACL,KAAM,cAAeC,YAAa,kGACjDK,iBAAmB,CAACN,KAAM,mBAAoBC,YAAa,2DAC3DM,cAAgB,CAACP,KAAM,iBAAkBC,YAAa,0EAE1DO,OAAQ,CACJC,YAAa,CAACT,KAAM,cAAeC,YAAa,0EAChDS,YAAa,CAACV,KAAM,kBAAmBC,YAAa,iGACpDU,YAAa,CAACX,KAAM,gBAAkBC,YAAa,sFACnDW,WAAY,CAACZ,KAAM,cAAeC,YAAa,uFAEnDY,MAAO,CACHC,KAAM,aACNC,WAAY,aACZC,SAAU,kBAMdC,MAAO,CACHC,OAAQ,SACRC,UAAW,YACXC,YAAa,cACbC,OAAQ,UAEZC,UAAW,CACPC,KAAM,OACNC,UAAW,YACXC,UAAW,YAEXC,OAAQ,SACRC,OAAQ,eACRC,YAAa,uBACbC,eAAgB,4BAKxBC,MAAO,CACH/B,YAAa,CAACC,KAAM,kBAAmBC,YAAa,+FACpDC,YAAa,CAACF,KAAM,cAAeC,YAAa,iGAChDE,cAAgB,CAACH,KAAM,gBAAiBC,YAAa,uFACrDG,UAAY,CAACJ,KAAM,YAAaC,YAAa,2FAC7CI,YAAc,CAACL,KAAM,cAAeC,YAAa,kGACjDK,iBAAmB,CAACN,KAAM,mBAAoBC,YAAa,2DAC3DM,cAAgB,CAACP,KAAM,iBAAkBC,YAAa,yEACtDQ,YAAa,CAACT,KAAM,cAAeC,YAAa,0EAChDS,YAAa,CAACV,KAAM,kBAAmBC,YAAa,iGACpDU,YAAa,CAACX,KAAM,gBAAkBC,YAAa,sFACnDW,WAAY,CAACZ,KAAM,cAAeC,YAAa,sFAC/Ca,KAAM,CAACd,KAAK,cACZe,WAAY,CAACf,KAAK,cAClBgB,SAAU,CAAChB,KAAK,kBAChBiB,MAAO,CAACjB,KAAM,SACdkB,OAAQ,CAAClB,KAAM,UACfmB,UAAW,CAACnB,KAAM,aAClBoB,YAAa,CAACpB,KAAM,eACpBqB,OAAQ,CAACrB,KAAM,UACfuB,KAAM,CAACvB,KAAK,QACZwB,UAAW,CAACxB,KAAK,aACjByB,UAAW,CAACzB,KAAK,aAEjB0B,OAAQ,CAAC1B,KAAK,UACd2B,OAAQ,CAAC3B,KAAK,gBACd4B,YAAa,CAAC5B,KAAM,wBACpB6B,eAAgB,CAAC7B,KAAM,4BAI3B+B,KAAM,GACNnD,MAAO,GAGLoD,EAAUzC,EAAQ,IC/ElBlB,EAAe,CACjBmB,WAAY,MACZC,GAAI,KACJC,UAAU,EACVuC,OAAO,EACPtC,MAAO,MACPC,IAAK,EACLsC,WAAY,MACZC,SAAU,EACVtC,SAAU,CACNC,WAAa,CACTC,YAAa,CAACC,KAAM,kBAAmBC,YAAa,+FACpDC,YAAa,CAACF,KAAM,cAAeC,YAAa,iGAChDE,cAAgB,CAACH,KAAM,gBAAiBC,YAAa,uFACrDG,UAAY,CAACJ,KAAM,YAAaC,YAAa,2FAC7CI,YAAc,CAACL,KAAM,cAAeC,YAAa,kGACjDK,iBAAmB,CAACN,KAAM,mBAAoBC,YAAa,2DAC3DM,cAAgB,CAACP,KAAM,iBAAkBC,YAAa,0EAE1DO,OAAQ,CACJC,YAAa,CAACT,KAAM,cAAeC,YAAa,0EAChDS,YAAa,CAACV,KAAM,kBAAmBC,YAAa,iGACpDU,YAAa,CAACX,KAAM,gBAAkBC,YAAa,sFACnDW,WAAY,CAACZ,KAAM,cAAeC,YAAa,uFAEnDY,MAAO,CACHC,KAAM,aACNC,WAAY,aACZC,SAAU,kBAMdC,MAAO,CACHC,OAAQ,SACRC,UAAW,YACXC,YAAa,cACbC,OAAQ,UAEZC,UAAW,CACPC,KAAM,OACNC,UAAW,YACXC,UAAW,YAEXC,OAAQ,SACRC,OAAQ,eACRC,YAAa,uBACbC,eAAgB,4BAKxBC,MAAO,CACH/B,YAAa,CAACC,KAAM,kBAAmBC,YAAa,+FACpDC,YAAa,CAACF,KAAM,cAAeC,YAAa,iGAChDE,cAAgB,CAACH,KAAM,gBAAiBC,YAAa,uFACrDG,UAAY,CAACJ,KAAM,YAAaC,YAAa,2FAC7CI,YAAc,CAACL,KAAM,cAAeC,YAAa,kGACjDK,iBAAmB,CAACN,KAAM,mBAAoBC,YAAa,2DAC3DM,cAAgB,CAACP,KAAM,iBAAkBC,YAAa,yEACtDQ,YAAa,CAACT,KAAM,cAAeC,YAAa,0EAChDS,YAAa,CAACV,KAAM,kBAAmBC,YAAa,iGACpDU,YAAa,CAACX,KAAM,gBAAkBC,YAAa,sFACnDW,WAAY,CAACZ,KAAM,cAAeC,YAAa,sFAC/Ca,KAAM,CAACd,KAAK,cACZe,WAAY,CAACf,KAAK,cAClBgB,SAAU,CAAChB,KAAK,kBAChBiB,MAAO,CAACjB,KAAM,SACdkB,OAAQ,CAAClB,KAAM,UACfmB,UAAW,CAACnB,KAAM,aAClBoB,YAAa,CAACpB,KAAM,eACpBqB,OAAQ,CAACrB,KAAM,UACfuB,KAAM,CAACvB,KAAK,QACZwB,UAAW,CAACxB,KAAK,aACjByB,UAAW,CAACzB,KAAK,aAEjB0B,OAAQ,CAAC1B,KAAK,UACd2B,OAAQ,CAAC3B,KAAK,gBACd4B,YAAa,CAAC5B,KAAM,wBACpB6B,eAAgB,CAAC7B,KAAM,4BAI3B+B,KAAM,GACNnD,MAAO,GAGLoD,EAAUzC,EAAQ,IChGRA,EAAQ,ICWRA,EAAQ,ICTT6C,kBAAgB,CAAEC,KP8BlB,WAAwC,IAA/BC,EAA8B,uDAAtBjE,EAAckE,EAAQ,uCAClD,OAAQA,EAAOC,MACX,IQzC0B,qBR0CtB,IAAOC,EAASF,EAAOG,QAAhBD,MAEP,OADAH,EAAMxD,IAAM2D,EACL,eAAIH,GAEf,IQ7C0B,qBR8CtB,MAA+BC,EAAOG,QAA/BhE,EAAP,EAAOA,SAAUC,EAAjB,EAAiBA,IAAKC,EAAtB,EAAsBA,MAItB,OAHA0D,EAAM5D,SAAWA,EACjB4D,EAAM3D,IAAMA,EACZ2D,EAAM1D,MAAQA,EACP,eAAI0D,GAEf,IQlDsB,iBRmDlB,MAAoBC,EAAOG,QAApBjD,EAAP,EAAOA,GAAIP,EAAX,EAAWA,MAOX,OANAb,EAAaW,aAAe,CACxBT,SAAS,EACTY,QAASM,EACTP,MAAOA,EACPD,SAAS,GAEN,eAAIZ,GAEf,IQ3DsB,iBR4DlB,IAAOgB,EAAQkD,EAAOG,QAAfrD,KAMP,OALAiD,EAAMtD,aAAe,CACjBT,SAAS,EACTY,QAAS,MAEbmD,EAAMlD,MAAMC,KAAOA,EACZ,eAAIiD,GAEf,IQnE2B,sBRoEvB,IAAOhE,EAAmBiE,EAAOG,QAA1BpE,gBAEP,OADAgE,EAAMhE,gBAAkBA,EACjB,eAAIgE,GAEf,IQvEmC,8BRwE/B,IAAOK,EAAOJ,EAAOG,QAAdC,IAGP,OAFAL,EAAMhE,gBAAkB,SACxBgE,EAAMlD,MAAME,IAAMqD,EACX,eAAIL,GAEf,IQ5EuB,kBR6EnB,IAAMM,EAAOL,EAAOG,QAEpB,OADAJ,EAAMzD,mBAAqB+D,EACpB,eAAIN,GAEf,QACI,OAAOA,IOhFoBO,MJuFxB,WAAwC,IAA/BP,EAA8B,uDAAtBjE,EAAckE,EAAQ,uCAClD,OAAQA,EAAOC,MACX,IKxFqB,gBL2FjB,OAFAF,EAAM9C,WAAa,MACnB8C,EAAM5C,UAAW,EACV,eACA4C,GAGX,IK9FoB,eL+FhB,IAAOP,EAAQQ,EAAOG,QAAfX,KA0BP,OAzBAO,EAAM5C,UAAW,EACjB4C,EAAM1C,IAAM0C,EAAM1C,IAAM,EAoBxB0C,EAAMP,KAAKe,KAAKf,GAEhBO,EAAM1D,MAAQoD,EAASM,EAAM1C,IAAM0C,EAAM3C,MAAO,GAEzC,eACA2C,GAGX,IK5H4B,uBL6HxB,IAAOG,EAASF,EAAOG,QAAhBD,MAIP,OAHAH,EAAM7C,GAAKgD,EACXH,EAAM9C,WAAa,OACnB8C,EAAM5C,UAAW,EACV,eACA4C,GAGX,IKpIuB,kBLqInB,MAAsBC,EAAOG,QAAtBD,EAAP,EAAOA,MAAOV,EAAd,EAAcA,KAuBd,OAtBAO,EAAMP,KAAKU,GAASV,EAmBpBO,EAAM1D,MAAQoD,EAASM,EAAM1C,IAAM0C,EAAM3C,MAAO,GAEhD2C,EAAM5C,UAAW,EACV,eACA4C,GAGX,IK9JsB,iBLgKlB,OADAA,EAAM5C,UAAW,EACV,eACA4C,GAGX,IKrKuB,kBLsKnB,IAAOG,EAASF,EAAOG,QAAhBD,MAIP,OAHAH,EAAM1C,IAAM0C,EAAM1C,IAAM,EACxB0C,EAAMP,KAAKU,GAAS,GACpBH,EAAM1D,MAAQoD,EAASM,EAAM1C,IAAM0C,EAAM3C,MAAO,GACzC,eACA2C,GAGX,QACI,OAAOA,IIpL2B7D,UHgG/B,WAAwC,IAA/B6D,EAA8B,uDAAtBjE,EAAckE,EAAQ,uCAClD,OAAQA,EAAOC,MAEX,II1F4B,uBJ8FxB,OAHAF,EAAM9C,WAAa,MACnB8C,EAAM5C,UAAW,EACjB4C,EAAML,OAAQ,EACP,eACAK,GAGX,IIjG2B,sBJkGvB,IAAOP,EAAQQ,EAAOG,QAAfX,KA2BP,OA1BAO,EAAM5C,UAAW,EACjB4C,EAAM1C,IAAM0C,EAAM1C,IAAM,EAuBxB0C,EAAMP,KAAKe,KAAKf,GAChBO,EAAM1D,MAAQoD,EAASM,EAAM1C,IAAM0C,EAAM3C,MAAO,GAAKqC,EAASM,EAAMH,SAAWG,EAAMJ,WAAY,GAC1F,eACAI,GAGX,IIhImC,8BJiI/B,IAAOG,EAASF,EAAOG,QAAhBD,MAKP,OAJAH,EAAM7C,GAAKgD,EACXH,EAAM9C,WAAa,OACnB8C,EAAM5C,UAAW,EACjB4C,EAAML,OAAM,EACL,eACAK,GAGX,IIzI8B,yBJ0I1B,MAAsBC,EAAOG,QAAtBD,EAAP,EAAOA,MAAOV,EAAd,EAAcA,KAuBd,OAtBAO,EAAMP,KAAKU,GAASV,EAoBpBO,EAAM1D,MAAQoD,EAASM,EAAM1C,IAAM0C,EAAM3C,MAAO,GAAKqC,EAASM,EAAMH,SAAWG,EAAMJ,WAAY,GACjGI,EAAM5C,UAAW,EACV,eACA4C,GAGX,IInK6B,wBJqKzB,OADAA,EAAM5C,UAAW,EACV,eACA4C,GAGX,II1K8B,yBJ2K1B,IAAOG,EAASF,EAAOG,QAAhBD,MAIP,OAHAH,EAAM1C,IAAM0C,EAAM1C,IAAM,EACxB0C,EAAMP,KAAKU,GAAS,GACpBH,EAAM1D,MAAQoD,EAASM,EAAM1C,IAAM0C,EAAM3C,MAAO,GAAKqC,EAASM,EAAMH,SAAWG,EAAMJ,WAAY,GAC1F,eACAI,GAIX,IIjL2B,sBJqLvB,OAHAA,EAAM9C,WAAa,MACnB8C,EAAM5C,UAAW,EACjB4C,EAAML,OAAO,EACN,eACAK,GAGX,IIxL0B,qBJyLtB,IAAOP,EAAQQ,EAAOG,QAAfX,KA2BP,OA1BAO,EAAM5C,UAAW,EACjB4C,EAAMH,SAAWG,EAAMH,SAAW,EAuBlCG,EAAMP,KAAKe,KAAKf,GAChBO,EAAM1D,MAAQoD,EAASM,EAAM1C,IAAM0C,EAAM3C,MAAO,GAAKqC,EAASM,EAAMH,SAAWG,EAAMJ,WAAY,GAC1F,eACAI,GAGX,IIvNkC,6BJwN9B,IAAOG,EAASF,EAAOG,QAAhBD,MAKP,OAJAH,EAAM7C,GAAKgD,EACXH,EAAM9C,WAAa,OACnB8C,EAAM5C,UAAW,EACjB4C,EAAML,OAAQ,EACP,eACAK,GAGX,IIhO6B,wBJiOzB,MAAsBC,EAAOG,QAAtBD,EAAP,EAAOA,MAAOV,EAAd,EAAcA,KAuBd,OAtBAO,EAAMP,KAAKU,GAASV,EAoBpBO,EAAM1D,MAAQoD,EAASM,EAAM1C,IAAM0C,EAAM3C,MAAO,GAAKqC,EAASM,EAAMH,SAAWG,EAAMJ,WAAY,GACjGI,EAAM5C,UAAW,EACV,eACA4C,GAGX,II1P4B,uBJ4PxB,OADAA,EAAM5C,UAAW,EACV,eACA4C,GAGX,IIjQ6B,wBJkQzB,IAAOG,EAASF,EAAOG,QAAhBD,MAIP,OAHAH,EAAMH,SAAWG,EAAMH,SAAW,EAClCG,EAAMP,KAAKU,GAAS,GACpBH,EAAM1D,MAAQoD,EAASM,EAAM1C,IAAM0C,EAAM3C,MAAO,GAAKqC,EAASM,EAAMH,SAAWG,EAAMJ,WAAY,GAC1F,eACAI,GAGX,QACI,OAAOA,MKpSJS,cAAaC,EAAaC,YAAiBC,M,0IC4D3CC,E,kDA7DX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAOVC,SAAW,WACP,EAAKC,SAAS,CACVC,MAAO,EAAKjB,MAAMiB,MAAQ,IAC3B,WAEgB,UADAC,KAAKJ,MAAMK,SAASD,KAAKJ,MAAMpD,KAAMwD,KAAKlB,MAAMiB,QAE3DC,KAAKF,SAAS,CACVC,MAAOC,KAAKlB,MAAMiB,MAAQ,QAfvB,EAqBnBG,SAAW,WACH,EAAKpB,MAAMiB,MAAM,GAAK,GACtB,EAAKD,SAAS,CACVC,MAAO,EAAKjB,MAAMiB,MAAQ,IAC3B,WACCC,KAAKJ,MAAMK,SAASD,KAAKJ,MAAMpD,KAAMwD,KAAKlB,MAAMiB,WA1BzC,EA+BnBI,gBAAkB,SAACC,GACf,IACML,EADSK,EAAMC,OACAN,MACrB,EAAKD,SAAS,CACVC,MAAOO,SAASP,KACjB,WACCC,KAAKJ,MAAMK,SAASD,KAAKJ,MAAMpD,KAAMwD,KAAKlB,MAAMiB,WAlCpD,EAAKjB,MAAQ,CACTiB,MAAOO,SAAS,EAAKV,MAAMG,QAJhB,E,0CAyCnB,WACI,OACI,yBAAKQ,UAAU,gCAAgCC,MAAOR,KAAKJ,MAAMY,OAExDR,KAAKJ,MAAMa,OAEZ,KADA,4BAAQF,UAAU,QAAQG,QAASV,KAAKE,WAG5C,2BAAOK,UAAW,aAAeP,KAAKJ,MAAMe,SAAW,iBAAmB,IAAKnE,KAAMwD,KAAKJ,MAAMpD,KAChGoE,IAAK,EACLb,MAAOC,KAAKJ,MAAMG,MAClBE,SAAUD,KAAKG,gBAAgBU,KAAKb,MACpChB,KAAK,SACL8B,WAAUd,KAAKJ,MAAMe,WACrB,4BAAQJ,UAAU,OAAOG,QAASV,KAAKH,gB,GAxD7BkB,IAAMC,WCQ1BC,E,uKACF,WACIC,SAASC,MAAM,4B,oBAEnB,WACI,OACI,kBAAC,IAAMC,SAAP,KACI,kBAACC,EAAA,EAAD,CAAKd,UAAU,OACX,kBAAC,IAAD,CACAe,GAAG,SACHf,UAAW,eAAgD,IAA/BP,KAAKJ,MAAM2B,OAAO1C,KAAKvD,IAAY,SAAW,KAEtE,2BAAG,0CAGP,kBAAC,IAAD,CACAgG,GAAG,aACHf,UAAW,eAAgD,IAA/BP,KAAKJ,MAAM2B,OAAO1C,KAAKvD,IAAY,SAAW,KAEtE,2BAAG,yDAGP,kBAAC,IAAD,CACAgG,GAAG,WACHf,UAAW,eAAgD,IAA/BP,KAAKJ,MAAM2B,OAAO1C,KAAKvD,IAAY,SAAW,KAEtE,2BAAG,oD,GA1BNyF,IAAMC,WAsCZQ,eAJS,SAAC1C,GAAD,MAAY,CAChCyC,OAAQzC,KAGG0C,CAEbP,GCvCWQ,EAAmB,SAACxC,GAAD,MAAY,CACxCD,KJZ8B,qBIa9BE,QAAS,CACLD,WAyHD,IAAMyC,EAA2B,SAAC5G,GAAD,MAAsB,CAC1DkE,KJnI+B,sBIoI/BE,QAAS,CACLpE,qBAIK6G,EAA2B,SAACxC,GAAD,MAAU,CAC9CH,KJzIuC,8BI0IvCE,QAAS,CACLC,S,QCvIFyC,G,yDACF,WAAYhC,GAAQ,IAAD,8BACf,cAAMA,IA0DViC,SAAW,SAACtD,EAAM/B,EAAMJ,GACpB,IAAI0F,EAAU,EACd,IAAK,IAAIC,KAAOxD,EAERuD,GADAC,IAAQvF,EACY+B,EAAKwD,GAGL3F,EAI5B,OAAO0F,GAtEQ,EAyEnBE,YAAc,SAACxF,EAAMJ,EAAK4C,EAAMiD,GAC5B,EAAKnC,SAAL,aACIlE,OAAO,GACNoD,EAFL,2BAGW,EAAKF,MAAME,IAHtB,IAIQT,KAAK,2BACE,EAAKO,MAAME,GAAMT,MADpB,kBAEC/B,EAAOJ,IAEZA,IAAK6F,OAlFE,EAuFnBC,cAAgB,SAAC1F,EAAMJ,GACnB,IAAM0F,EAAU,EAAKD,SAAS,EAAK/C,MAAMqD,WAAW5D,KAAM/B,EAAMJ,GAChE,GAAI0F,EAAU,EACV,MAAO,QAGP,EAAKhC,SAAS,CAACqC,WAAW,2BAAI,EAAKrD,MAAMqD,YAAhB,IAA4BvG,OAAO,MAAS,WACjEoE,KAAKgC,YAAYxF,EAAMJ,EAAK,aAAc0F,OA9FnC,EAmGnBM,eAAiB,SAAC5F,EAAMJ,GACpB,IAAM0F,EAAU,EAAKD,SAAS,EAAK/C,MAAMuD,WAAW9D,KAAM/B,EAAMJ,GAChE,GAAI0F,EAAU,EACV,MAAO,QAGP,EAAKhC,SAAS,CAACuC,WAAW,2BAAI,EAAKvD,MAAMuD,YAAhB,IAA4BzG,OAAO,MAAS,WACjEoE,KAAKgC,YAAYxF,EAAMJ,EAAK,aAAc0F,OA1GnC,EA+GnBQ,cAAgB,SAAC9F,EAAMJ,GACnB,IAAM0F,EAAU,EAAKD,SAAS,EAAK/C,MAAMyD,aAAahE,KAAM/B,EAAMJ,GAClE,GAAI0F,EAAU,EACV,MAAO,QAGP,EAAKhC,SAAS,CAACyC,aAAa,2BAAI,EAAKzD,MAAMyD,cAAhB,IAA8B3G,OAAO,MAAS,WACrEoE,KAAKgC,YAAYxF,EAAMJ,EAAK,eAAgB0F,OAtHrC,EA2HnBU,YAAc,WAGV,IAAK,EAAKC,eAAgB,CACtB,IAAMlE,EAAO,CACT4D,WAAY,EAAKrD,MAAMqD,WACvBE,WAAY,EAAKvD,MAAMuD,WACvBE,aAAc,EAAKzD,MAAMyD,aACzBG,MAAO,EAAK5D,MAAM4D,OAEtB,EAAK9C,MAAM4C,YAAYjE,KArIZ,EAyInBoE,eAAiB,WACb,IAAK,EAAKF,eAAe,CACrB,IAAMlE,EAAO,CACT4D,WAAY,EAAKrD,MAAMqD,WACvBE,WAAY,EAAKvD,MAAMuD,WACvBE,aAAc,EAAKzD,MAAMyD,aACzBG,MAAO,EAAK5D,MAAM4D,OAEtB,EAAK9C,MAAM+C,eAAe,EAAK/C,MAAMP,MAAMpD,GAAIsC,KAjJpC,EAqJnBqE,cAAgB,WACZ,EAAKhD,MAAMgD,iBAtJI,EAyJnBH,aAAe,WACX,IAAI7G,GAAQ,EAmBZ,OAlBkC,IAA9B,EAAKkD,MAAMqD,WAAW/F,KACtB,EAAK0D,SAAS,CAACqC,WAAW,2BAAI,EAAKrD,MAAMqD,YAAhB,IAA4BvG,OAAO,MAAQ,WAChEiH,OAAOC,SAAS,EAAE,QAEtBlH,GAAQ,GAE2B,IAA9B,EAAKkD,MAAMuD,WAAWjG,KAC3B,EAAK0D,SAAS,CAACuC,WAAW,2BAAI,EAAKvD,MAAMuD,YAAhB,IAA4BzG,OAAO,MAAQ,WAChEiH,OAAOC,SAAS,EAAE,QAEtBlH,GAAQ,GAE6B,IAAhC,EAAKkD,MAAMyD,aAAanG,MAC7B,EAAK0D,SAAS,CAACyC,aAAa,2BAAI,EAAKzD,MAAMyD,cAAhB,IAA8B3G,OAAO,MAAQ,WACpEiH,OAAOC,SAAS,EAAE,QAEtBlH,GAAQ,GAELA,GA7KQ,EAgLnBmH,gBAAkB,SAAChB,GACf,OACI,kBAACiB,EAAA,EAAD,CAAKzC,UAAU,YAAY0C,GAAI,GAC3B,uBAAG1C,UAAU,QACR,EAAKX,MAAMP,MAAMhD,SAASC,WAAWyF,GAAKvF,MAE/C,uBAAG+D,UAAU,eACR,EAAKX,MAAMP,MAAMhD,SAASC,WAAWyF,GAAKtF,aAE/C,kBAAC,EAAD,CACIkE,UAAU,EACVV,SAAU,EAAKiC,cAAcrB,KAAnB,gBACVrE,KAAMuF,EACNhC,MAAO,EAAKjB,MAAMqD,WAAW5D,KAAKwD,GAClCvB,MAAO,CAAC0C,MAAO,aA9LZ,EAoMnBC,YAAc,SAACpB,GACX,OACI,kBAACiB,EAAA,EAAD,CAAKzC,UAAU,YAAY0C,GAAI,GAC3B,uBAAG1C,UAAU,QACR,EAAKX,MAAMP,MAAMhD,SAASW,OAAO+E,GAAKvF,MAE3C,uBAAG+D,UAAU,eACR,EAAKX,MAAMP,MAAMhD,SAASW,OAAO+E,GAAKtF,aAE3C,kBAAC,EAAD,CACIkE,UAAU,EACVV,SAAU,EAAKiC,cAAcrB,KAAnB,gBACVrE,KAAMuF,EACNhC,MAAO,EAAKjB,MAAMqD,WAAW5D,KAAKwD,GAClCvB,MAAO,CAAC0C,MAAO,aAlNZ,EAwNnBE,WAAa,SAACrB,GACV,OACI,kBAACiB,EAAA,EAAD,CAAKzC,UAAU,YAAY0C,GAAI,GAC3B,uBAAG1C,UAAU,OAAOC,MAAO,CAAC6C,QAAS,SAAUC,WAAY,SACtD,EAAK1D,MAAMP,MAAMhD,SAASgB,MAAM0E,IAErC,kBAAC,EAAD,CACIpB,UAAU,EACVV,SAAU,EAAKmC,eAAevB,KAApB,gBACVrE,KAAMuF,EACNhC,MAAO,EAAKjB,MAAMuD,WAAW9D,KAAKwD,GAClCvB,MAAO,CAAC0C,MAAO,aAnOZ,EAyOnBK,WAAa,SAACxB,GACV,OACI,kBAACiB,EAAA,EAAD,CAAKzC,UAAU,YAAY0C,GAAI,GAC3B,uBAAG1C,UAAU,OAAOC,MAAO,CAAC6C,QAAS,SAAUC,WAAY,SACtD,EAAK1D,MAAMP,MAAMhD,SAASoB,MAAMsE,IAErC,kBAAC,EAAD,CACIpB,UAAU,EACVV,SAAU,EAAKmC,eAAevB,KAApB,gBACVrE,KAAMuF,EACNhC,MAAO,EAAKjB,MAAMuD,WAAW9D,KAAKwD,GAClCvB,MAAO,CAAC0C,MAAO,aApPZ,EA0PnBM,cAAgB,SAACvH,EAAGwH,EAAMrD,GACtB,IAAI7B,EAAO,EAAKO,MAAM4D,MAAMnE,KAC5BA,EAAKtC,GAAIwH,GAASrD,EAAMC,OAAON,MAC/B,EAAKD,SAAS,CACV4C,MAAM,2BACC,EAAK5D,MAAM4D,OADb,IAEDnE,KAAMA,OA5Pd,EAAKmF,MAAQ3C,IAAM4C,YAIiB,QAAhC,EAAK/D,MAAMP,MAAMrD,WAEjB,EAAK8C,MAAQ,CACTqD,WAAY,CACR5D,KAAM,CAAChC,YAAa,EAAEG,YAAa,EAAEC,cAAe,EAAEC,UAAW,EAAEC,YAAa,EAAGC,iBAAkB,EAAEC,cAAe,EAAEE,YAAa,EAAEC,YAAa,EAAGC,YAAa,EAAEC,WAAY,GAClLhB,IAAK,EACLR,OAAO,GAEXyG,WAAY,CACR9D,KAAM,CAACjB,KAAM,EAAGC,WAAY,EAAGC,SAAU,EAAGC,MAAO,EAAEC,OAAQ,EAAEC,UAAW,EAAEC,YAAa,EAAEC,OAAQ,GACnGzB,IAAK,EACLR,OAAO,GAEX2G,aAAc,CACVhE,KAAM,CAACR,KAAM,EAAEC,UAAW,EAAEC,UAAW,EAAEC,OAAQ,EAAEC,OAAQ,EAAEC,YAAa,EAAEC,eAAgB,GAC5FjC,IAAK,EACLR,OAAO,GASXA,OAAO,GAIX,EAAKkD,MAAQ,CACTqD,WAAY,CACR5D,KAAM,EAAKqB,MAAMP,MAAMd,KAAK,EAAKqB,MAAMP,MAAMpD,IAAIkG,WAAW5D,KAC5DnC,IAAK,EAAKwD,MAAMP,MAAMd,KAAK,EAAKqB,MAAMP,MAAMpD,IAAIkG,WAAW/F,IAC3DR,OAAO,GAEXyG,WAAY,CACR9D,KAAM,EAAKqB,MAAMP,MAAMd,KAAK,EAAKqB,MAAMP,MAAMpD,IAAIoG,WAAW9D,KAC5DnC,IAAK,EAAKwD,MAAMP,MAAMd,KAAK,EAAKqB,MAAMP,MAAMpD,IAAIoG,WAAWjG,IAC3DR,OAAO,GAEX2G,aAAc,CACVhE,KAAM,EAAKqB,MAAMP,MAAMd,KAAK,EAAKqB,MAAMP,MAAMpD,IAAIsG,aAAahE,KAC9DnC,IAAK,EAAKwD,MAAMP,MAAMd,KAAK,EAAKqB,MAAMP,MAAMpD,IAAIsG,aAAanG,IAC7DR,OAAO,GAEX8G,MAAO,EAAK9C,MAAMP,MAAMd,KAAK,EAAKqB,MAAMP,MAAMpD,IAAIyG,MAClD9G,OAAO,GAtDA,E,0CAsQnB,WAAU,IAAD,OACL,OACI,kBAACgI,EAAA,EAAD,CAAMrD,UAAU,iBAEZ,kBAACqD,EAAA,EAAKC,OAAN,KACI,iDACA,4BACI,yDACA,gDACA,2DAIR,kBAACD,EAAA,EAAKE,KAAN,CAAWvD,UAAWP,KAAKlB,MAAMqD,WAAWvG,MAAQ,WAAa,IAC7D,wBAAI4E,MAAO,CAACuD,WAAY,MAAOC,MAAO,YAAtC,gCAA+E,0BAAMxD,MAAO,CAACwD,MAAO,oBAArB,KAA4ChE,KAAKlB,MAAMqD,WAAW/F,IAAlE,UAE/E,kBAAC6H,EAAA,EAAD,CAAWC,QAAQ,SACf,kBAACD,EAAA,EAAUE,KAAX,CAAgB5D,UAAU,YAAYC,MAAO,CAAC4D,YAAa,QAEvD,uBAAG5D,MAAO,CAACuD,WAAY,MAAOM,eAAgB,YAAaC,SAAU,SAArE,SAEA,kBAACjD,EAAA,EAAD,CAAKd,UAAU,OAAOC,MAAO,CAAC+D,aAAc,sBACvCvE,KAAK+C,gBAAgB,eACrB/C,KAAK+C,gBAAgB,gBAG1B,kBAAC1B,EAAA,EAAD,CAAKd,UAAU,YAAYC,MAAO,CAAC+D,aAAc,sBAC5CvE,KAAK+C,gBAAgB,iBACrB/C,KAAK+C,gBAAgB,cAG1B,kBAAC1B,EAAA,EAAD,CAAKd,UAAU,YAAYC,MAAO,CAAC+D,aAAc,sBAC5CvE,KAAK+C,gBAAgB,eACrB/C,KAAK+C,gBAAgB,qBAG1B,kBAAC1B,EAAA,EAAD,CAAKd,UAAU,YAAYC,MAAO,CAAC+D,aAAc,sBAC5CvE,KAAK+C,gBAAgB,kBAG1B,uBAAGxC,UAAU,OAAQC,MAAO,CAACuD,WAAY,MAAOM,eAAgB,YAAaC,SAAU,SAAvF,UAEA,kBAACjD,EAAA,EAAD,CAAKd,UAAU,YAAYC,MAAO,CAAC+D,aAAc,sBAC5CvE,KAAKmD,YAAY,eACjBnD,KAAKmD,YAAY,gBAGtB,kBAAC9B,EAAA,EAAD,CAAKd,UAAU,YAAYC,MAAO,CAAC+D,aAAc,sBAC5CvE,KAAKmD,YAAY,eACjBnD,KAAKmD,YAAY,kBAOlC,kBAACS,EAAA,EAAKE,KAAN,CAAWvD,UAAWP,KAAKlB,MAAMuD,WAAWzG,MAAQ,WAAa,IAC7D,wBAAI4E,MAAO,CAACuD,WAAY,MAAOC,MAAO,YAAtC,uBAAsE,0BAAMxD,MAAO,CAACwD,MAAO,oBAArB,KAA4ChE,KAAKlB,MAAMuD,WAAWjG,IAAlE,UACtE,kBAAC6H,EAAA,EAAD,CAAWC,QAAQ,SACf,kBAACD,EAAA,EAAUE,KAAX,CAAgB5D,UAAU,YAAYC,MAAO,CAAC4D,YAAa,QACvD,uBAAG7D,UAAU,OAAQC,MAAO,CAACuD,WAAY,MAAOM,eAAgB,YAAaC,SAAU,SAAvF,SACA,kBAACjD,EAAA,EAAD,CAAKd,UAAU,YAAYC,MAAO,CAAC+D,aAAc,sBAC5CvE,KAAKoD,WAAW,QAChBpD,KAAKoD,WAAW,cAFrB,IAEoC,6BAAK,6BACpCpD,KAAKoD,WAAW,aAGrB,uBAAG7C,UAAU,OAAQC,MAAO,CAACuD,WAAY,MAAOM,eAAgB,YAAaC,SAAU,SAAvF,eACA,kBAACjD,EAAA,EAAD,CAAKd,UAAU,YAAYC,MAAO,CAAC+D,aAAc,sBAC5CvE,KAAKuD,WAAW,UAChBvD,KAAKuD,WAAW,aAFrB,IAEmC,6BAAK,6BACnCvD,KAAKuD,WAAW,eAChBvD,KAAKuD,WAAW,cAsBjC,kBAACK,EAAA,EAAKE,KAAN,CAAWvD,UAAWP,KAAKlB,MAAMyD,aAAa3G,MAAQ,WAAa,IAC/D,wBAAI4E,MAAO,CAACuD,WAAY,MAAOC,MAAO,YAAtC,mCAAkF,0BAAMxD,MAAO,CAACwD,MAAO,oBAArB,KAA4ChE,KAAKlB,MAAMyD,aAAanG,IAApE,UAElF,kBAAC6H,EAAA,EAAD,CAAWC,QAAQ,SACf,kBAACD,EAAA,EAAUE,KAAX,CAAgB5D,UAAU,YAAYC,MAAO,CAAC4D,YAAa,QAEvD,kBAAC/C,EAAA,EAAD,CAAKd,UAAU,OAAOC,MAAO,CAAC+D,aAAc,sBAEpC,CAAC,OAAQ,YAAa,YAAa,UAAUC,KAAI,SAACzC,EAAK9C,GACnD,OACI,kBAAC+D,EAAA,EAAD,CAAKzC,UAAU,YAAY0C,GAAI,EAAGlB,IAAK,gBAAgB9C,GACnD,uBAAGsB,UAAU,QACR,EAAKX,MAAMP,MAAMhD,SAASyB,UAAUiE,IAEzC,kBAAC,EAAD,CACIpB,UAAU,EACVV,SAAU,EAAKqC,cAAczB,KAAK,GAClCrE,KAAMuF,EACNhC,MAAO,EAAKjB,MAAMyD,aAAahE,KAAKwD,GACpCvB,MAAO,CAAC0C,MAAO,eAQvC,kBAAC7B,EAAA,EAAD,CAAKd,UAAU,OAAOC,MAAO,CAAC+D,aAAc,sBAEpC,CAAC,SAAU,cAAe,kBAAkBC,KAAI,SAACzC,EAAK9C,GAClD,OACI,kBAAC+D,EAAA,EAAD,CAAKzC,UAAU,YAAY0C,GAAI,EAAGlB,IAAK,cAAc9C,GACjD,uBAAGsB,UAAU,QACR,EAAKX,MAAMP,MAAMhD,SAASyB,UAAUiE,IAEzC,kBAAC,EAAD,CACIpB,UAAU,EACVV,SAAU,EAAKqC,cAAczB,KAAK,GAClCrE,KAAMuF,EACNhC,MAAO,EAAKjB,MAAMyD,aAAahE,KAAKwD,GACpCvB,MAAO,CAAC0C,MAAO,kBAcnD,kBAAC7B,EAAA,EAAD,KACI,kBAAC2B,EAAA,EAAD,KACI,kBAACyB,EAAA,EAAD,CAAelE,UAAU,QAEe,QAAhCP,KAAKJ,MAAMP,MAAMrD,WACjB,kBAAC0I,EAAA,EAAD,CAAQR,QAAQ,UAAUS,KAAK,KAAKjE,QAASV,KAAKwC,YAAY3B,KAAKb,MAAOO,UAAU,WAApF,OAIA,kBAACmE,EAAA,EAAD,CAAQR,QAAQ,UAAUS,KAAK,KAAKjE,QAASV,KAAK2C,eAAe9B,KAAKb,MAAOO,UAAU,WAAvF,UAIJ,kBAACmE,EAAA,EAAD,CAAQR,QAAQ,QAAQS,KAAK,KAAKjE,QAASV,KAAK4C,cAAc/B,KAAKb,MAAOO,UAAU,mBAApF,kB,GAxaLQ,IAAMC,YAicdQ,eAbS,SAAC1C,GAAD,MAAY,CAChCO,MAAOP,EAAMO,UAGU,SAAAuF,GAAQ,MAC/B,CACIC,aAAc,kBAAMD,EC3bO,CAC/B5F,KNAyB,mBK2brBwD,YAAa,SAACjE,GAAD,OAAUqG,ECzbJ,SAACrG,GAAD,MAAW,CAClCS,KNFwB,eMGxBE,QAAS,CACLX,SDsbgCiE,CAAYjE,KAC5CoE,eAAgB,SAAC1G,EAAIsC,GAAL,OAAcqG,EC5aR,SAAC3F,EAAOV,GAAR,MAAkB,CAC5CS,KNd2B,kBMe3BE,QAAS,CACLD,QACAV,SDwauCoE,CAAe1G,EAAIsC,KAC1DqE,cAAe,kBAAMgC,EC9ZgB,CACzC5F,KN3B0B,uBK4bfwC,CAGbI,GEvcIpD,EAAUzC,EAAQ,IAElB+I,E,4MAEFC,SAAW,WACP,OAAOvG,EACC,EAAKoB,MAAM2B,OAAOlC,MAAMjE,MACxB,EAAKwE,MAAM2B,OAAOtG,UAAUG,MAC5B,I,4CAIZ,WAEI,IAAM4J,EAAWhF,KAAKJ,MAAM2B,OAAO1C,KAAKvD,IAClCC,EAASyE,KAAKJ,MAAM2B,OAAO1C,KAAKtD,OAEtC,OACI,kBAAC,IAAM6F,SAAP,KACI,kBAACC,EAAA,EAAD,KACI,kBAAC2B,EAAA,EAAD,KACI,uBAAGxC,MAAO,CAAC8D,SAAU,OAAQP,WAAY,MAAOkB,UAAW,QAASC,QAAS,cAA7E,aAAsGlF,KAAK+E,cAGnH,kBAACN,EAAA,EAAD,KAGsB,IAAbO,GAA+B,IAAbA,EACnB,kBAAC,IAAD,CACAzE,UAAW,cACXC,MAAO,CAAC2E,YAAa,OAAQC,MAAO,SACpC9D,GAAI/F,EAAOyJ,EAAS,IAHpB,QAMA,KAIa,IAAbA,EACA,kBAAC,IAAD,CACAzE,UAAW,cACXC,MAAO,CAAC6E,WAAY,OAAQD,MAAM,SAClC9D,GAAI/F,EAAOyJ,EAAS,IAHpB,QAMA,kBAAC,IAAD,CACAzE,UAAW,cACXC,MAAO,CAAC6E,WAAY,OAAQD,MAAM,SAClC9D,GAAI/F,EAAO,IAHX,uB,GA3CHwF,IAAMC,WA+EZQ,eAVS,SAAC1C,GAAD,MAAY,CAChCyC,OAAQzC,MAGe,SAAA8F,GAAQ,MAC/B,CACInD,iBAAkB,SAACxC,GAAD,OAAW2F,EAASnD,EAAiBxC,QAIhDuC,CAGbsD,GC9EIQ,E,kDACF,WAAY1F,GAAQ,IAAD,8BACf,cAAMA,IAIViF,aAAe,WACX,EAAKjF,MAAMiF,gBANI,EASnBU,mBAAqB,SAACtJ,GAClB,EAAK2D,MAAM2F,mBAAmBtJ,IAVf,EAanBuJ,eAAiB,SAACvJ,GACd,EAAK2D,MAAM4F,eAAevJ,IAdX,EAiBnBwJ,WAAa,SAAClH,GACV,IAAImH,EAAQ,GACZ,IAAK,IAAI3D,KAAOxD,EACM,IAAdA,EAAKwD,IACL2D,EAAMpG,KAAK,wBAAIyC,IAAKA,GAAM,EAAKnC,MAAMP,MAAMf,MAAMyD,GAAKvF,KAAO,MAAQ+B,EAAKwD,KAGlF,OAAQ,wBAAIvB,MAAO,CAACmF,YAAa,SAAUD,IAtB3C,EAAK9F,MAAM6B,iBAAiB,GAFb,E,0CAwDnB,WAAU,IAAD,OACDmE,EAAQ,EACZ,OACI,kBAAC,IAAMxE,SAAP,KAEIpB,KAAKJ,MAAMP,MAAMnD,SACjB,kBAAC,EAAD,MAEA,kBAAC0H,EAAA,EAAD,CAAMrD,UAAU,iBAEZ,kBAACqD,EAAA,EAAKC,OAAN,KACI,kBAAC,EAAD,OAGJ,kBAACD,EAAA,EAAKE,KAAN,KACI,kBAACF,EAAA,EAAKiC,MAAN,mBAGJ,kBAAC5B,EAAA,EAAD,CAAWC,QAAQ,SAEf,kBAACD,EAAA,EAAUE,KAAX,CAAgB5D,UAAU,aAEtB,kBAACc,EAAA,EAAD,KACI,kBAAC2B,EAAA,EAAD,CAAKzC,UAAU,aACX,uBAAGC,MAAO,CAACuD,WAAY,QAAvB,kBACA,sDAC4B,6BAD5B,yCAE0C,6BAF1C,6BAMJ,kBAACf,EAAA,EAAD,KACI,kBAAC,EAAD,CACIvC,QAAQ,EACRE,UAAU,EACVV,SAAUD,KAAK6E,aAAahE,KAAKb,MACjCxD,KAAK,QACLuD,MAAOC,KAAKJ,MAAMP,MAAMjD,SAOxC,kBAAC6H,EAAA,EAAUE,KAAX,CAAgB5D,UAAU,aAEtB,kBAACc,EAAA,EAAD,KAGQrB,KAAKJ,MAAMP,MAAMd,KAAKiG,KAAI,SAACsB,EAAOC,GAC9B,OAAqB,IAAjBD,EAAME,QACNJ,IAEA,kBAAC5C,EAAA,EAAD,CAAKjB,IAAK,OAAOgE,EAAQ9C,GAAI,EAAG1C,UAAU,kBACtC,yBAAKwB,IAAK,QAAQgE,EAAQvF,MAAO,CAAC0E,QAAS,OAAQe,OAAQ,sBACvD,wBAAI1F,UAAU,MAAMC,MAAO,CAAC8D,SAAU,SAAtC,QAAqDsB,EACjD,kBAACnB,EAAA,EAAD,CAAejE,MAAO,CAAC0C,MAAO,UAC1B,kBAACwB,EAAA,EAAD,CAAQhE,QAAS,WAAO,EAAK6E,mBAAmBQ,IAAUxF,UAAU,2BAApE,QACA,kBAACmE,EAAA,EAAD,CAAQhE,QAAS,WAAO,EAAK8E,eAAeO,IAAUxF,UAAU,+BAAhE,YAGR,6BACI,wBAAIA,UAAU,eACV,wBAAIA,UAAU,oBACT,EAAKkF,WAAWK,EAAM3D,WAAW5D,OAEtC,wBAAIgC,UAAU,oBACT,EAAKkF,WAAWK,EAAMzD,WAAW9D,OAEtC,wBAAIgC,UAAU,oBACT,EAAKkF,WAAWK,EAAMvD,aAAahE,YAYjD,UAQ3B,kBAAC0F,EAAA,EAAUE,KAAX,CAAgB5D,UAAU,mBACtB,kBAACc,EAAA,EAAD,KACI,kBAAC2B,EAAA,EAAD,SACMhD,KAAKJ,MAAMP,MAAMjE,UAOnC,kBAACiG,EAAA,EAAD,KACI,kBAAC2B,EAAA,EAAD,CAAKC,GAAI,IACL,kBAAC,EAAD,c,GA/JRlC,IAAMC,WAuLXQ,eAbS,SAAC1C,GAAD,MAAY,CAChCO,MAAOP,EAAMO,UAGU,SAAAuF,GAAQ,MAC/B,CACIC,aAAc,kBAAMD,EFpLO,CAC/B5F,KNAyB,mBQoLrBwG,eAAgB,SAACvG,GAAD,OAAW2F,EF5JL,SAAC3F,GAAD,MAAY,CACtCD,KNrB2B,kBMsB3BE,QAAS,CACLD,UEyJoCuG,CAAevG,KACnDwC,iBAAkB,SAACxC,GAAD,OAAW2F,EAASnD,EAAiBxC,KACvDsG,mBAAoB,SAACtJ,GAAD,OAAQ2I,EF7KU,CAC1C5F,KNRgC,uBMShCE,QAAS,CACLD,ME0KwDhD,SAIjDuF,CAGb8D,GC7LIY,G,yDACF,WAAYtG,GAAQ,IAAD,8BACf,cAAMA,IAiEViC,SAAW,SAACtD,EAAM/B,EAAMJ,GACpB,IAAI0F,EAAU,EACd,IAAK,IAAIC,KAAOxD,EAERuD,GADAC,IAAQvF,EACY+B,EAAKwD,GAGL3F,EAI5B,OAAO0F,GA7EQ,EAgFnBE,YAAc,SAACxF,EAAMJ,EAAK4C,EAAMiD,GAC5B,EAAKnC,SAAL,aACIlE,OAAO,GACNoD,EAFL,2BAGW,EAAKF,MAAME,IAHtB,IAIQT,KAAK,2BACE,EAAKO,MAAME,GAAMT,MADpB,kBAEC/B,EAAOJ,IAEZA,IAAK6F,OAzFE,EA8FnBC,cAAgB,SAAC1F,EAAMJ,GACnB,IAAM0F,EAAU,EAAKD,SAAS,EAAK/C,MAAMqD,WAAW5D,KAAM/B,EAAMJ,GAChE,GAAI0F,EAAU,EAAKhD,MAAMqH,QACrB,MAAO,QAGP,EAAKrG,SAAS,CAACqC,WAAW,2BAAI,EAAKrD,MAAMqD,YAAhB,IAA4BvG,OAAO,MAAS,WACjEoE,KAAKgC,YAAYxF,EAAMJ,EAAK,aAAc0F,OArGnC,EA0GnBM,eAAiB,SAAC5F,EAAMJ,GACpB,IAAM0F,EAAU,EAAKD,SAAS,EAAK/C,MAAMuD,WAAW9D,KAAM/B,EAAMJ,GAChE,GAAI0F,EAAU,EAAKhD,MAAMqH,QACrB,MAAO,QAGP,EAAKrG,SAAS,CAACuC,WAAW,2BAAI,EAAKvD,MAAMuD,YAAhB,IAA4BzG,OAAO,MAAS,WACjEoE,KAAKgC,YAAYxF,EAAMJ,EAAK,aAAc0F,OAjHnC,EAsHnBQ,cAAgB,SAAC9F,EAAMJ,GACnB,IAAM0F,EAAU,EAAKD,SAAS,EAAK/C,MAAMyD,aAAahE,KAAM/B,EAAMJ,GAClE,GAAI0F,EAAU,EAAKhD,MAAMqH,QACrB,MAAO,QAGP,EAAKrG,SAAS,CAACyC,aAAa,2BAAI,EAAKzD,MAAMyD,cAAhB,IAA8B3G,OAAO,MAAS,WACrEoE,KAAKgC,YAAYxF,EAAMJ,EAAK,eAAgB0F,OA7HrC,EAkInBsE,mBAAqB,WAGjB,IAAK,EAAK3D,eAAgB,CACtB,IAAMlE,EAAO,CACT4D,WAAY,EAAKrD,MAAMqD,WACvBE,WAAY,EAAKvD,MAAMuD,WACvBE,aAAc,EAAKzD,MAAMyD,aACzBG,MAAO,EAAK5D,MAAM4D,OAEtB,EAAK9C,MAAMwG,mBAAmB7H,KA5InB,EAgJnB8H,sBAAwB,WACpB,IAAK,EAAK5D,eAAe,CACrB,IAAMlE,EAAO,CACT4D,WAAY,EAAKrD,MAAMqD,WACvBE,WAAY,EAAKvD,MAAMuD,WACvBE,aAAc,EAAKzD,MAAMyD,aACzBG,MAAO,EAAK5D,MAAM4D,OAEtB,EAAK9C,MAAMyG,sBAAsB,EAAKzG,MAAM3E,UAAUgB,GAAIsC,KAxJ/C,EA4JnB+H,qBAAuB,WACnB,EAAK1G,MAAM0G,wBA7JI,EAgKnBC,kBAAoB,WAGhB,IAAK,EAAK9D,eAAgB,CACtB,IAAMlE,EAAO,CACT4D,WAAY,EAAKrD,MAAMqD,WACvBE,WAAY,EAAKvD,MAAMuD,WACvBE,aAAc,EAAKzD,MAAMyD,aACzBG,MAAO,EAAK5D,MAAM4D,OAEtB,EAAK9C,MAAM2G,kBAAkBhI,KA1KlB,EA8KnBiI,qBAAuB,WACnB,IAAK,EAAK/D,eAAe,CACrB,IAAMlE,EAAO,CACT4D,WAAY,EAAKrD,MAAMqD,WACvBE,WAAY,EAAKvD,MAAMuD,WACvBE,aAAc,EAAKzD,MAAMyD,aACzBG,MAAO,EAAK5D,MAAM4D,OAEtB,EAAK9C,MAAM4G,qBAAqB,EAAK5G,MAAM3E,UAAUgB,GAAIsC,KAtL9C,EA0LnBkI,oBAAsB,WAClB,EAAK7G,MAAM6G,uBA3LI,EA8LnBhE,aAAe,WACX,IAAI7G,GAAQ,EAmBZ,OAlBI,EAAKkD,MAAMqD,WAAW/F,MAAQ,EAAK0C,MAAMqH,SACzC,EAAKrG,SAAS,CAACqC,WAAW,2BAAI,EAAKrD,MAAMqD,YAAhB,IAA4BvG,OAAO,MAAQ,WAChEiH,OAAOC,SAAS,EAAE,QAEtBlH,GAAQ,GAEH,EAAKkD,MAAMuD,WAAWjG,MAAQ,EAAK0C,MAAMqH,SAC9C,EAAKrG,SAAS,CAACuC,WAAW,2BAAI,EAAKvD,MAAMuD,YAAhB,IAA4BzG,OAAO,MAAQ,WAChEiH,OAAOC,SAAS,EAAE,QAEtBlH,GAAQ,GAEH,EAAKkD,MAAMyD,aAAanG,MAAQ,EAAK0C,MAAMqH,UAChD,EAAKrG,SAAS,CAACyC,aAAa,2BAAI,EAAKzD,MAAMyD,cAAhB,IAA8B3G,OAAO,MAAQ,WACpEiH,OAAOC,SAAS,EAAE,QAEtBlH,GAAQ,GAELA,GAlNQ,EAqNnBmH,gBAAkB,SAAChB,GACf,OACI,kBAACiB,EAAA,EAAD,CAAKzC,UAAU,YAAY0C,GAAI,GAC3B,uBAAG1C,UAAU,QACR,EAAKX,MAAM3E,UAAUoB,SAASC,WAAWyF,GAAKvF,MAEnD,uBAAG+D,UAAU,eACR,EAAKX,MAAM3E,UAAUoB,SAASC,WAAWyF,GAAKtF,aAEnD,kBAAC,EAAD,CACIkE,UAAU,EACVV,SAAU,EAAKiC,cAAcrB,KAAnB,gBACVrE,KAAMuF,EACNhC,MAAO,EAAKjB,MAAMqD,WAAW5D,KAAKwD,GAClCvB,MAAO,CAAC0C,MAAO,aAnOZ,EAyOnBC,YAAc,SAACpB,GACX,OACI,kBAACiB,EAAA,EAAD,CAAKzC,UAAU,YAAY0C,GAAI,GAC3B,uBAAG1C,UAAU,QACR,EAAKX,MAAM3E,UAAUoB,SAASW,OAAO+E,GAAKvF,MAE/C,uBAAG+D,UAAU,eACR,EAAKX,MAAM3E,UAAUoB,SAASW,OAAO+E,GAAKtF,aAE/C,kBAAC,EAAD,CACIkE,UAAU,EACVV,SAAU,EAAKiC,cAAcrB,KAAnB,gBACVrE,KAAMuF,EACNhC,MAAO,EAAKjB,MAAMqD,WAAW5D,KAAKwD,GAClCvB,MAAO,CAAC0C,MAAO,aAvPZ,EA6PnBE,WAAa,SAACrB,GACV,OACI,kBAACiB,EAAA,EAAD,CAAKzC,UAAU,YAAY0C,GAAI,GAC3B,uBAAG1C,UAAU,OAAOC,MAAO,CAAC6C,QAAS,SAAUC,WAAY,SACtD,EAAK1D,MAAM3E,UAAUoB,SAASgB,MAAM0E,IAEzC,kBAAC,EAAD,CACIpB,UAAU,EACVV,SAAU,EAAKmC,eAAevB,KAApB,gBACVrE,KAAMuF,EACNhC,MAAO,EAAKjB,MAAMuD,WAAW9D,KAAKwD,GAClCvB,MAAO,CAAC0C,MAAO,aAxQZ,EA8QnBK,WAAa,SAACxB,GACV,OACI,kBAACiB,EAAA,EAAD,CAAKzC,UAAU,YAAY0C,GAAI,GAC3B,uBAAG1C,UAAU,OAAOC,MAAO,CAAC6C,QAAS,SAAUC,WAAY,SACtD,EAAK1D,MAAM3E,UAAUoB,SAASoB,MAAMsE,IAEzC,kBAAC,EAAD,CACIpB,UAAU,EACVV,SAAU,EAAKmC,eAAevB,KAApB,gBACVrE,KAAMuF,EACNhC,MAAO,EAAKjB,MAAMuD,WAAW9D,KAAKwD,GAClCvB,MAAO,CAAC0C,MAAO,aAzRZ,EA+RnBM,cAAgB,SAACvH,EAAGwH,EAAMrD,GACtB,IAAI7B,EAAO,EAAKO,MAAM4D,MAAMnE,KAC5BA,EAAKtC,GAAIwH,GAASrD,EAAMC,OAAON,MAC/B,EAAKD,SAAS,CACV4C,MAAM,2BACC,EAAK5D,MAAM4D,OADb,IAEDnE,KAAMA,OAjSd,EAAKmF,MAAQ3C,IAAM4C,YAIqB,QAApC,EAAK/D,MAAM3E,UAAUe,WAErB,EAAK8C,MAAQ,CACTqD,WAAY,CACR5D,KAAM,CAAChC,YAAa,EAAEG,YAAa,EAAEC,cAAe,EAAEC,UAAW,EAAEC,YAAa,EAAGC,iBAAkB,EAAEC,cAAe,EAAEE,YAAa,EAAEC,YAAa,EAAGC,YAAa,EAAEC,WAAY,GAClLhB,IAAK,EACLR,OAAO,GAEXyG,WAAY,CACR9D,KAAM,CAACjB,KAAM,EAAGC,WAAY,EAAGC,SAAU,EAAGC,MAAO,EAAEC,OAAQ,EAAEC,UAAW,EAAEC,YAAa,EAAEC,OAAQ,GACnGzB,IAAK,EACLR,OAAO,GAEX2G,aAAc,CACVhE,KAAM,CAACR,KAAM,EAAEC,UAAW,EAAEC,UAAW,EAAEC,OAAQ,EAAEC,OAAQ,EAAEC,YAAa,EAAEC,eAAgB,GAC5FjC,IAAK,EACLR,OAAO,GASXA,OAAO,GAIX,EAAKkD,MAAQ,CAETqD,WAAY,CACR5D,KAAM,EAAKqB,MAAM3E,UAAUsD,KAAK,EAAKqB,MAAM3E,UAAUgB,IAAIkG,WAAW5D,KACpEnC,IAAK,EAAKwD,MAAM3E,UAAUsD,KAAK,EAAKqB,MAAM3E,UAAUgB,IAAIkG,WAAW/F,IACnER,OAAO,GAEXyG,WAAY,CACR9D,KAAM,EAAKqB,MAAM3E,UAAUsD,KAAK,EAAKqB,MAAM3E,UAAUgB,IAAIoG,WAAW9D,KACpEnC,IAAK,EAAKwD,MAAM3E,UAAUsD,KAAK,EAAKqB,MAAM3E,UAAUgB,IAAIoG,WAAWjG,IACnER,OAAO,GAEX2G,aAAc,CACVhE,KAAM,EAAKqB,MAAM3E,UAAUsD,KAAK,EAAKqB,MAAM3E,UAAUgB,IAAIsG,aAAahE,KACtEnC,IAAK,EAAKwD,MAAM3E,UAAUsD,KAAK,EAAKqB,MAAM3E,UAAUgB,IAAIsG,aAAanG,IACrER,OAAO,GAEX8G,MAAO,EAAK9C,MAAM3E,UAAUsD,KAAK,EAAKqB,MAAM3E,UAAUgB,IAAIyG,MAC1D9G,OAAO,IAIoB,IAA/B,EAAKgE,MAAM3E,UAAUwD,MACrB,EAAKK,MAAMqH,QAAQ,GAEnB,EAAKrH,MAAMqH,QAAQ,EA9DR,E,0CA2SnB,WAAU,IAAD,OACL,OACI,kBAACvC,EAAA,EAAD,CAAMrD,UAAU,iBAEZ,kBAACqD,EAAA,EAAKC,OAAN,KACI,uDACA,4BACI,2DACA,iDACA,4DAIR,kBAACD,EAAA,EAAKE,KAAN,CAAWvD,UAAWP,KAAKlB,MAAMqD,WAAWvG,MAAQ,WAAa,IAC7D,wBAAI4E,MAAO,CAACuD,WAAY,MAAOC,MAAO,YAAtC,kCAAiF,0BAAMxD,MAAO,CAACwD,MAAO,oBAArB,KAA4ChE,KAAKlB,MAAMqD,WAAW/F,IAAlE,OAA2E4D,KAAKlB,MAAMqH,UAEvK,kBAAClC,EAAA,EAAD,CAAWC,QAAQ,SACf,kBAACD,EAAA,EAAUE,KAAX,CAAgB5D,UAAU,YAAYC,MAAO,CAAC4D,YAAa,QAEvD,uBAAG5D,MAAO,CAACuD,WAAY,MAAOM,eAAgB,YAAaC,SAAU,SAArE,SAEA,kBAACjD,EAAA,EAAD,CAAKd,UAAU,OAAOC,MAAO,CAAC+D,aAAc,sBACvCvE,KAAK+C,gBAAgB,eACrB/C,KAAK+C,gBAAgB,gBAG1B,kBAAC1B,EAAA,EAAD,CAAKd,UAAU,YAAYC,MAAO,CAAC+D,aAAc,sBAC5CvE,KAAK+C,gBAAgB,iBACrB/C,KAAK+C,gBAAgB,cAG1B,kBAAC1B,EAAA,EAAD,CAAKd,UAAU,YAAYC,MAAO,CAAC+D,aAAc,sBAC5CvE,KAAK+C,gBAAgB,eACrB/C,KAAK+C,gBAAgB,qBAG1B,kBAAC1B,EAAA,EAAD,CAAKd,UAAU,YAAYC,MAAO,CAAC+D,aAAc,sBAC5CvE,KAAK+C,gBAAgB,kBAG1B,uBAAGxC,UAAU,OAAQC,MAAO,CAACuD,WAAY,MAAOM,eAAgB,YAAaC,SAAU,SAAvF,UAEA,kBAACjD,EAAA,EAAD,CAAKd,UAAU,YAAYC,MAAO,CAAC+D,aAAc,sBAC5CvE,KAAKmD,YAAY,eACjBnD,KAAKmD,YAAY,gBAGtB,kBAAC9B,EAAA,EAAD,CAAKd,UAAU,YAAYC,MAAO,CAAC+D,aAAc,sBAC5CvE,KAAKmD,YAAY,eACjBnD,KAAKmD,YAAY,kBAOlC,kBAACS,EAAA,EAAKE,KAAN,CAAWvD,UAAWP,KAAKlB,MAAMuD,WAAWzG,MAAQ,WAAa,IAC7D,wBAAI4E,MAAO,CAACuD,WAAY,MAAOC,MAAO,YAAtC,wBAAuE,0BAAMxD,MAAO,CAACwD,MAAO,oBAArB,KAA4ChE,KAAKlB,MAAMuD,WAAWjG,IAAlE,OAA2E4D,KAAKlB,MAAMqH,UAC7J,kBAAClC,EAAA,EAAD,CAAWC,QAAQ,SACf,kBAACD,EAAA,EAAUE,KAAX,CAAgB5D,UAAU,YAAYC,MAAO,CAAC4D,YAAa,QACnF,uBAAG7D,UAAU,OAAQC,MAAO,CAACuD,WAAY,MAAOM,eAAgB,YAAaC,SAAU,SAAvF,SAC4B,kBAACjD,EAAA,EAAD,CAAKd,UAAU,YAAYC,MAAO,CAAC+D,aAAc,sBAC5CvE,KAAKoD,WAAW,QAChBpD,KAAKoD,WAAW,cAFrB,IAEoC,6BAAK,6BACpCpD,KAAKoD,WAAW,aAGrB,uBAAG7C,UAAU,OAAQC,MAAO,CAACuD,WAAY,MAAOM,eAAgB,YAAaC,SAAU,SAAvF,eACA,kBAACjD,EAAA,EAAD,CAAKd,UAAU,YAAYC,MAAO,CAAC+D,aAAc,sBAC5CvE,KAAKuD,WAAW,UAChBvD,KAAKuD,WAAW,aAFrB,IAEmC,6BAAK,6BACnCvD,KAAKuD,WAAW,eAChBvD,KAAKuD,WAAW,cAsBjC,kBAACK,EAAA,EAAKE,KAAN,CAAWvD,UAAWP,KAAKlB,MAAMyD,aAAa3G,MAAQ,WAAa,IAC/D,wBAAI4E,MAAO,CAACuD,WAAY,MAAOC,MAAO,YAAtC,iCAAgF,0BAAMxD,MAAO,CAACwD,MAAO,oBAArB,KAA4ChE,KAAKlB,MAAMyD,aAAanG,IAApE,OAA6E4D,KAAKlB,MAAMqH,UAExK,kBAAClC,EAAA,EAAD,CAAWC,QAAQ,SACf,kBAACD,EAAA,EAAUE,KAAX,CAAgB5D,UAAU,YAAYC,MAAO,CAAC4D,YAAa,QAEvD,kBAAC/C,EAAA,EAAD,CAAKd,UAAU,OAAOC,MAAO,CAAC+D,aAAc,sBAEpC,CAAC,OAAQ,YAAa,YAAa,UAAUC,KAAI,SAACzC,EAAK9C,GACnD,OACI,kBAAC+D,EAAA,EAAD,CAAKzC,UAAU,YAAY0C,GAAI,EAAGlB,IAAK,gBAAgB9C,GACnD,uBAAGsB,UAAU,QACR,EAAKX,MAAM3E,UAAUoB,SAASyB,UAAUiE,IAE7C,kBAAC,EAAD,CACIpB,UAAU,EACVV,SAAU,EAAKqC,cAAczB,KAAK,GAClCrE,KAAMuF,EACNhC,MAAO,EAAKjB,MAAMyD,aAAahE,KAAKwD,GACpCvB,MAAO,CAAC0C,MAAO,eAQvC,kBAAC7B,EAAA,EAAD,CAAKd,UAAU,OAAOC,MAAO,CAAC+D,aAAc,sBAEpC,CAAC,SAAU,cAAe,kBAAkBC,KAAI,SAACzC,EAAK9C,GAClD,OACI,kBAAC+D,EAAA,EAAD,CAAKzC,UAAU,YAAY0C,GAAI,EAAGlB,IAAK,cAAc9C,GACjD,uBAAGsB,UAAU,QACR,EAAKX,MAAM3E,UAAUoB,SAASyB,UAAUiE,IAE7C,kBAAC,EAAD,CACIpB,UAAU,EACVV,SAAU,EAAKqC,cAAczB,KAAK,GAClCrE,KAAMuF,EACNhC,MAAO,EAAKjB,MAAMyD,aAAahE,KAAKwD,GACpCvB,MAAO,CAAC0C,MAAO,kBAcnD,kBAAC7B,EAAA,EAAD,KACI,kBAAC2B,EAAA,EAAD,KACI,kBAACyB,EAAA,EAAD,CAAelE,UAAU,QAEmB,QAApCP,KAAKJ,MAAM3E,UAAUe,WACrB,kBAAC0I,EAAA,EAAD,CAAQR,QAAQ,UAAUS,KAAK,KAAKjE,QAASV,KAAKJ,MAAM3E,UAAUwD,MAAQuB,KAAKoG,mBAAmBvF,KAAKb,MAAQA,KAAKuG,kBAAkB1F,KAAKb,MAAOO,UAAU,WAA5J,OAIA,kBAACmE,EAAA,EAAD,CAAQR,QAAQ,UAAUS,KAAK,KAAKjE,QAASV,KAAKJ,MAAM3E,UAAUwD,MAAQuB,KAAKqG,sBAAsBxF,KAAKb,MAAQA,KAAKwG,qBAAqB3F,KAAKb,MAAOO,UAAU,WAAlK,UAIJ,kBAACmE,EAAA,EAAD,CAAQR,QAAQ,QAAQS,KAAK,KAAKjE,QAASV,KAAKJ,MAAM3E,UAAUwD,MAAQuB,KAAKsG,qBAAqBzF,KAAKb,MAAQA,KAAKyG,oBAAoB5F,KAAKb,MAAOO,UAAU,mBAA9J,kB,GA7cDQ,IAAMC,YA0elBQ,eAjBS,SAAC1C,GAAD,MAAY,CAChC7D,UAAW6D,EAAM7D,cAGM,SAAA2J,GAAQ,MAC/B,CACI8B,oBAAqB,kBAAM9B,ECzdO,CACtC5F,KVCgC,0BSwd5BoH,mBAAoB,SAAC7H,GAAD,OAAUqG,ECvdJ,SAACrG,GAAD,MAAW,CACzCS,KVD+B,sBUE/BE,QAAS,CACLX,SDoduC6H,CAAmB7H,KAC1D8H,sBAAuB,SAACpK,EAAIsC,GAAL,OAAcqG,EC1cR,SAAC3F,EAAOV,GAAR,MAAkB,CACnDS,KVbkC,yBUclCE,QAAS,CACLD,QACAV,SDsc8C8H,CAAsBpK,EAAIsC,KACxE+H,qBAAsB,kBAAM1B,EC5bgB,CAChD5F,KV1BiC,2BSsd7B2H,mBAAoB,kBAAM/B,ECxbO,CACrC5F,KV7B+B,yBSqd3BuH,kBAAmB,SAAChI,GAAD,OAAUqG,ECrbJ,SAACrG,GAAD,MAAW,CACxCS,KVhC8B,qBUiC9BE,QAAS,CACLX,SDkbsCgI,CAAkBhI,KACxDiI,qBAAsB,SAACvK,EAAIsC,GAAL,OAAcqG,ECxaR,SAAC3F,EAAOV,GAAR,MAAkB,CAClDS,KV5CiC,wBU6CjCE,QAAS,CACLD,QACAV,SDoa6CiI,CAAqBvK,EAAIsC,KACtEkI,oBAAqB,kBAAM7B,EC1ZgB,CAC/C5F,KVzDgC,6BSsdrBwC,CAGb0E,GE1eIU,E,kDACF,WAAYhH,GAAQ,IAAD,8BACf,cAAMA,IAIV8G,oBAAsB,WAClB,EAAK9G,MAAM8G,uBANI,EASnBG,0BAA4B,SAAC5K,GACzB,EAAK2D,MAAMiH,0BAA0B5K,IAVtB,EAanB6K,sBAAwB,SAAC7K,GACrB,EAAK2D,MAAMkH,sBAAsB7K,IAdlB,EAiBnB0K,mBAAqB,WACjB,EAAK/G,MAAM+G,sBAlBI,EAqBnBI,yBAA2B,SAAC9K,GACxB,EAAK2D,MAAMmH,yBAAyB9K,IAtBrB,EAyBnB+K,qBAAuB,SAAC/K,GACpB,EAAK2D,MAAMoH,qBAAqB/K,IA1BjB,EA6BnBwJ,WAAa,SAAClH,GACV,IAAImH,EAAQ,GACZ,IAAK,IAAI3D,KAAOxD,EACM,IAAdA,EAAKwD,IACL2D,EAAMpG,KAAK,wBAAIyC,IAAKA,GAAM,EAAKnC,MAAM3E,UAAUqD,MAAMyD,GAAKvF,KAAO,MAAQ+B,EAAKwD,KAGtF,OAAQ,wBAAIvB,MAAO,CAACmF,YAAa,SAAUD,IAlC3C,EAAK9F,MAAM6B,iBAAiB,GAFb,E,0CAoEnB,WAAU,IAAD,OACDmE,EAAQ,EACZ,OACI,kBAAC,IAAMxE,SAAP,KAEIpB,KAAKJ,MAAM3E,UAAUiB,SACrB,kBAAC,EAAD,MAEA,kBAAC0H,EAAA,EAAD,CAAMrD,UAAU,iBAEZ,kBAACqD,EAAA,EAAKC,OAAN,KACI,kBAAC,EAAD,OAGJ,kBAACD,EAAA,EAAKE,KAAN,KACI,kBAACF,EAAA,EAAKiC,MAAN,kCAGJ,kBAAC5B,EAAA,EAAD,CAAWC,QAAQ,SAEf,kBAACD,EAAA,EAAUE,KAAX,CAAgB5D,UAAU,aAEtB,kBAACc,EAAA,EAAD,KACI,kBAAC2B,EAAA,EAAD,CAAKzC,UAAU,aACX,uBAAGC,MAAO,CAACuD,WAAY,QAAvB,kBACA,uCACa,6BADb,8BAE+B,6BAF/B,2CAG4C,6BAH5C,+BAOJ,kBAACf,EAAA,EAAD,KACI,kBAAC,EAAD,CACIvC,QAAQ,EACRE,UAAU,EACVV,SAAUD,KAAK0G,oBAAoB7F,KAAKb,MACxCxD,KAAK,QACLuD,MAAOC,KAAKJ,MAAM3E,UAAUmB,QAKxC,kBAACiF,EAAA,EAAD,KACI,kBAAC2B,EAAA,EAAD,CAAKzC,UAAU,aACX,uBAAGC,MAAO,CAACuD,WAAY,QAAvB,uBACA,sCACY,6BADZ,8BAE+B,6BAF/B,qCAGsC,6BAHtC,+BAOJ,kBAACf,EAAA,EAAD,KACI,kBAAC,EAAD,CACIvC,QAAQ,EACRE,UAAU,EACVV,SAAUD,KAAK2G,mBAAmB9F,KAAKb,MACvCxD,KAAK,OACLuD,MAAOC,KAAKJ,MAAM3E,UAAU0D,cAO5C,kBAACsF,EAAA,EAAUE,KAAX,CAAgB5D,UAAU,aAEtB,kBAACc,EAAA,EAAD,KAEQrB,KAAKJ,MAAM3E,UAAUsD,KAAKiG,KAAI,SAACsB,EAAOC,GAClC,OAAqB,IAAjBD,EAAME,QACNJ,IAC4B,KAAxBE,EAAM3D,WAAW/F,IAEjB,kBAAC4G,EAAA,EAAD,CAAKjB,IAAK,OAAOgE,EAAQ9C,GAAI,EAAG1C,UAAU,kBACtC,yBAAKwB,IAAK,QAAQgE,EAAQvF,MAAO,CAAC0E,QAAS,OAAQe,OAAQ,sBACvD,wBAAI1F,UAAU,MAAMC,MAAO,CAAC8D,SAAU,SAAtC,QAAqDsB,EAArD,gBACI,kBAACnB,EAAA,EAAD,CAAejE,MAAO,CAAC0C,MAAO,UAC1B,kBAACwB,EAAA,EAAD,CAAQhE,QAAS,WAAO,EAAKmG,0BAA0Bd,IAAUxF,UAAU,2BAA3E,QACA,kBAACmE,EAAA,EAAD,CAAQhE,QAAS,WAAO,EAAKoG,sBAAsBf,IAAUxF,UAAU,+BAAvE,YAGR,6BACI,wBAAIA,UAAU,eACV,wBAAIA,UAAU,oBACT,EAAKkF,WAAWK,EAAM3D,WAAW5D,OAEtC,wBAAIgC,UAAU,oBACT,EAAKkF,WAAWK,EAAMzD,WAAW9D,OAEtC,wBAAIgC,UAAU,oBACT,EAAKkF,WAAWK,EAAMvD,aAAahE,WAYxD,kBAACyE,EAAA,EAAD,CAAKjB,IAAK,OAAOgE,EAAQ9C,GAAI,EAAG1C,UAAU,kBACtC,yBAAKwB,IAAK,QAAQgE,EAAQvF,MAAO,CAAC0E,QAAS,OAAQe,OAAQ,sBACvD,wBAAI1F,UAAU,MAAMC,MAAO,CAAC8D,SAAU,SAAtC,QAAqDsB,EAArD,gBACI,kBAACnB,EAAA,EAAD,CAAejE,MAAO,CAAC0C,MAAO,UAC1B,kBAACwB,EAAA,EAAD,CAAQhE,QAAS,WAAO,EAAKqG,yBAAyBhB,IAAUxF,UAAU,2BAA1E,QACA,kBAACmE,EAAA,EAAD,CAAQhE,QAAS,WAAO,EAAKsG,qBAAqBjB,IAAUxF,UAAU,+BAAtE,YAGR,6BACI,wBAAIA,UAAU,eACV,wBAAIA,UAAU,oBACT,EAAKkF,WAAWK,EAAM3D,WAAW5D,OAEtC,wBAAIgC,UAAU,oBACT,EAAKkF,WAAWK,EAAMzD,WAAW9D,OAEtC,wBAAIgC,UAAU,oBACT,EAAKkF,WAAWK,EAAMvD,aAAahE,YAarD,UAQ3B,kBAAC0F,EAAA,EAAUE,KAAX,CAAgB5D,UAAU,mBACtB,kBAACc,EAAA,EAAD,KACI,kBAAC2B,EAAA,EAAD,SACMhD,KAAKJ,MAAM3E,UAAUG,UAOvC,kBAACiG,EAAA,EAAD,KACI,kBAAC2B,EAAA,EAAD,CAAKC,GAAI,IACL,kBAAC,EAAD,c,GA/NJlC,IAAMC,WA2PfQ,eAjBS,SAAC1C,GAAD,MAAY,CAChC7D,UAAW6D,EAAM7D,cAGM,SAAA2J,GAAQ,gBAE3B8B,oBAAqB,kBAAM9B,ED7OO,CACtC5F,KVCgC,0BW4O5B8H,sBAAuB,SAAC7H,GAAD,OAAW2F,EDrNL,SAAC3F,GAAD,MAAY,CAC7CD,KVpBkC,yBUqBlCE,QAAS,CACLD,UCkN2C6H,CAAsB7H,KACjEwC,iBAAkB,SAACxC,GAAD,OAAW2F,EAASnD,EAAiBxC,KACvD4H,0BAA2B,SAAC5K,GAAD,OAAQ2I,EDtOU,CACjD5F,KVPuC,8BUQvCE,QAAS,CACLD,MCmOsEhD,MACtE0K,mBAAoB,kBAAM/B,ED5MO,CACrC5F,KV7B+B,yBWyO3BgI,qBAAsB,SAAC/H,GAAD,OAAW2F,EDnLL,SAAC3F,GAAD,MAAY,CAC5CD,KVnDiC,wBUoDjCE,QAAS,CACLD,UCgL0C+H,CAAqB/H,MAPpC,kCAQT,SAACA,GAAD,OAAW2F,EAASnD,EAAiBxC,OAR5B,0CASD,SAAChD,GAAD,OAAQ2I,EDpMU,CAChD5F,KVtCsC,6BUuCtCE,QAAS,CACLD,MCiMoEhD,QATzC,IAapBuF,CAGboF,G,SCvQIpI,EAAUzC,EAAQ,IAElBuJ,G,4MAEFG,WAAa,SAAClH,GACV,IAAImH,EAAQ,GACZ,IAAK,IAAI3D,KAAOxD,EACM,IAAdA,EAAKwD,IACL2D,EAAMpG,KAAK,4BAAK,EAAKM,MAAMd,MAAMR,MAAMyD,GAAKvF,KAAO,MAAQ+B,EAAKwD,KAGxE,OAAQ,wBAAIvB,MAAO,CAACmF,YAAa,SAAUD,I,EAG/CuB,WAAa,SAACC,GAEV,IADA,IAAIxB,EAAQ,GACHyB,EAAI,EAAGA,EAAI,EAAGA,IAAK,CACxB,IAAMzE,EAAQwE,EAAO3I,KAAK4I,GAC1B,GAAkB,SAAdzE,EAAM0E,IAAgB,CACtB,IAAMA,EAAM,8BAAO1E,EAAM0E,KACrBC,EAAM,KACNC,EAAQ,KACM,SAAd5E,EAAM2E,MAAiBA,EAAM,mCAAS3E,EAAM2E,MAC5B,SAAhB3E,EAAM4E,QAAmBA,EAAQ,mCAAS5E,EAAM4E,QACpD5B,EAAMpG,KACF,yBAAKyC,IAAK,QAAUoF,EAAG3G,MAAO,CAAC8D,SAAU,WAAzC,UAA4D6C,EAAE,EAA9D,MAAoEC,EAApE,IAA0EC,EAA1E,IAAgFC,KAM5F,OAAqB,IAAjB5B,EAAMM,OAAqB,KAGvB,kBAAC,IAAM5E,SAAP,KACI,wBAAIZ,MAAO,CAACyF,OAAQ,uBACpB,wBAAIzF,MAAO,CAAC4E,MAAO,OAAQrB,WAAY,QAAvC,8BAA8E,6BAC9E,wBAAIvD,MAAO,CAAC4E,MAAO,OAAQrB,WAAY,MAAOO,SAAS,KAAM,4JAC5DoB,I,4CAMjB,WAAU,IAAD,OACDE,EAAQ,EACZ,OACI,kBAAC3B,EAAA,EAAUE,KAAX,CAAgB3D,MAAO,CAAC6C,QAAqC,IAA3BrD,KAAKJ,MAAMd,MAAM1D,MAAc,OAAS,OACtE,yCACA,wBAAImF,UAAU,sBACV,wBAAIA,UAAU,uBACV,kBAACc,EAAA,EAAD,KACI,kBAAC2B,EAAA,EAAD,CAAKzC,UAAU,OAAO0C,GAAI,GAA1B,QACA,kBAACD,EAAA,EAAD,CAAKzC,UAAU,OAAf,YACA,kBAACyC,EAAA,EAAD,CAAKzC,UAAU,SAAf,SACA,kBAACyC,EAAA,EAAD,CAAKzC,UAAU,SAAf,WAIR,wBAAIA,UAAU,gBAGV,kBAACc,EAAA,EAAD,KACI,kBAAC2B,EAAA,EAAD,CAAKzC,UAAU,WAAW0C,GAAI,GAA9B,yBACA,kBAACD,EAAA,EAAD,CAAKzC,UAAU,OAAOP,KAAKJ,MAAMd,MAAM1C,KACvC,kBAAC4G,EAAA,EAAD,CAAKzC,UAAU,SAAf,IAAyBP,KAAKJ,MAAMd,MAAM3C,OAC1C,kBAAC6G,EAAA,EAAD,CAAKzC,UAAU,SAAf,IAAyB/B,EAAQwB,KAAKJ,MAAMd,MAAM1C,IAAI4D,KAAKJ,MAAMd,MAAM3C,MAAM,KAGjF,kBAACkF,EAAA,EAAD,CAAKb,MAAO,CAACmF,YAAa,OAAQ4B,WAAY,OAAQC,cAAe,QAASjH,UAAU,kBAEhFP,KAAKJ,MAAMd,MAAMP,KAAKiG,KAAI,SAACsB,EAAOC,GAC9B,OAAqB,IAAjBD,EAAME,QACNJ,IAEA,kBAAC5C,EAAA,EAAD,CAAKC,GAAI,EAAG1C,UAAU,kBAClB,yBAAKwB,IAAK,QAAQgE,EAAQvF,MAAO,CAAC0E,QAAS,OAAQe,OAAQ,sBACvD,wBAAI1F,UAAU,MAAMC,MAAO,CAAC8D,SAAU,SAAtC,QAAqDsB,GACrD,6BACI,wBAAIrF,UAAU,eACV,wBAAIA,UAAU,oBACT,EAAKkF,WAAWK,EAAM3D,WAAW5D,OAEtC,wBAAIgC,UAAU,oBACT,EAAKkF,WAAWK,EAAMzD,WAAW9D,OAEtC,wBAAIgC,UAAU,oBACT,EAAKkF,WAAWK,EAAMvD,aAAahE,YAYjD,UAO3B,wBAAIgC,UAAU,uBACV,kBAACc,EAAA,EAAD,KACI,kBAAC2B,EAAA,EAAD,CAAKzC,UAAU,OAAO0C,GAAI,IAC1B,kBAACD,EAAA,EAAD,CAAKzC,UAAU,QACf,kBAACyC,EAAA,EAAD,CAAKzC,UAAU,UACf,kBAACyC,EAAA,EAAD,CAAKzC,UAAU,SAAf,IAAyBP,KAAKJ,MAAMd,MAAM1D,e,GA7GlD2F,IAAMC,WA2HXQ,gBALS,SAAC1C,GAAD,MAAY,CAChCA,MAAOA,EAAMO,SAIFmC,CAEb8D,IC/HI9G,GAAUzC,EAAQ,IAElB6K,G,4MAEFnB,WAAa,SAAClH,GACV,IAAImH,EAAQ,GACZ,IAAK,IAAI3D,KAAOxD,EACM,IAAdA,EAAKwD,IACL2D,EAAMpG,KAAK,4BAAK,EAAKM,MAAMd,MAAMR,MAAMyD,GAAKvF,KAAO,MAAQ+B,EAAKwD,KAGxE,OAAQ,wBAAIvB,MAAO,CAACmF,YAAa,SAAUD,I,EAG/CuB,WAAa,SAACC,GAEV,IADA,IAAIxB,EAAQ,GACHyB,EAAI,EAAGA,EAAI,EAAGA,IAAK,CACxB,IAAMzE,EAAQwE,EAAO3I,KAAK4I,GAC1B,GAAkB,SAAdzE,EAAM0E,IAAgB,CACtB,IAAMA,EAAM,8BAAO1E,EAAM0E,KACrBC,EAAM,KACNC,EAAQ,KACM,SAAd5E,EAAM2E,MAAiBA,EAAM,mCAAS3E,EAAM2E,MAC5B,SAAhB3E,EAAM4E,QAAmBA,EAAQ,mCAAS5E,EAAM4E,QACpD5B,EAAMpG,KACF,yBAAKyC,IAAK,QAAUoF,EAAG3G,MAAO,CAAC8D,SAAU,WAAzC,UAA4D6C,EAAE,EAA9D,MAAoEC,EAApE,IAA0EC,EAA1E,IAAgFC,KAM5F,OAAqB,IAAjB5B,EAAMM,OAAqB,KAGvB,kBAAC,IAAM5E,SAAP,KACI,wBAAIZ,MAAO,CAACyF,OAAQ,uBACpB,wBAAIzF,MAAO,CAAC4E,MAAO,OAAQrB,WAAY,QAAvC,8BAA8E,6BAC9E,wBAAIvD,MAAO,CAAC4E,MAAO,OAAQrB,WAAY,MAAOO,SAAS,KAAM,4JAC5DoB,I,4CAMjB,WAAU,IAAD,OAEL,OACI,kBAACzB,EAAA,EAAUE,KAAX,CAAgB3D,MAAO,CAAC6C,QAAqC,IAA3BrD,KAAKJ,MAAMd,MAAM1D,MAAc,OAAS,OACtE,wDACA,wBAAImF,UAAU,sBACV,wBAAIA,UAAU,uBACV,kBAACc,EAAA,EAAD,KACI,kBAAC2B,EAAA,EAAD,CAAKzC,UAAU,OAAO0C,GAAI,GAA1B,QACA,kBAACD,EAAA,EAAD,CAAKzC,UAAU,OAAf,YACA,kBAACyC,EAAA,EAAD,CAAKzC,UAAU,SAAf,SACA,kBAACyC,EAAA,EAAD,CAAKzC,UAAU,SAAf,WAIR,wBAAIA,UAAU,gBAEV,kBAACc,EAAA,EAAD,KACI,kBAAC2B,EAAA,EAAD,CAAKzC,UAAU,WAAW0C,GAAI,GAA9B,iBACA,kBAACD,EAAA,EAAD,CAAKzC,UAAU,OAAOP,KAAKJ,MAAMd,MAAM1C,KACvC,kBAAC4G,EAAA,EAAD,CAAKzC,UAAU,SAAf,IAAyBP,KAAKJ,MAAMd,MAAM3C,OAC1C,kBAAC6G,EAAA,EAAD,CAAKzC,UAAU,SAAf,IAAyB/B,GAAQwB,KAAKJ,MAAMd,MAAM1C,IAAI4D,KAAKJ,MAAMd,MAAM3C,MAAM,KAEjF,kBAACkF,EAAA,EAAD,CAAKb,MAAO,CAACmF,YAAa,OAAQ4B,WAAY,OAAQC,cAAe,QAASjH,UAAU,kBAEhFP,KAAKJ,MAAMd,MAAMP,KAAKiG,KAAI,SAACsB,EAAOC,GAC9B,OAAqB,IAAjBD,EAAME,OA6BC,MA3BqB,KAAxBF,EAAM3D,WAAW/F,IAEjB,kBAAC4G,EAAA,EAAD,CAAKC,GAAI,EAAG1C,UAAU,kBAClB,yBAAKwB,IAAK,QAAQgE,EAAQvF,MAAO,CAAC0E,QAAS,OAAQe,OAAQ,sBACvD,wBAAI1F,UAAU,MAAMC,MAAO,CAAC8D,SAAU,SAAtC,aACA,6BACI,wBAAI/D,UAAU,eACV,wBAAIA,UAAU,oBACT,EAAKkF,WAAWK,EAAM3D,WAAW5D,OAEtC,wBAAIgC,UAAU,oBACT,EAAKkF,WAAWK,EAAMzD,WAAW9D,OAEtC,wBAAIgC,UAAU,oBACT,EAAKkF,WAAWK,EAAMvD,aAAahE,gBAd5D,OAiChB,kBAAC8C,EAAA,EAAD,KACI,kBAAC2B,EAAA,EAAD,CAAKzC,UAAU,WAAW0C,GAAI,GAA9B,iBACA,kBAACD,EAAA,EAAD,CAAKzC,UAAU,OAAOP,KAAKJ,MAAMd,MAAMH,UACvC,kBAACqE,EAAA,EAAD,CAAKzC,UAAU,SAAf,IAAyBP,KAAKJ,MAAMd,MAAMJ,YAC1C,kBAACsE,EAAA,EAAD,CAAKzC,UAAU,SAAf,IAAyB/B,GAAQwB,KAAKJ,MAAMd,MAAMH,SAASqB,KAAKJ,MAAMd,MAAMJ,WAAW,KAE3F,kBAAC2C,EAAA,EAAD,CAAKb,MAAO,CAACmF,YAAa,OAAQ4B,WAAY,OAAQC,cAAe,QAASjH,UAAU,kBAEhFP,KAAKJ,MAAMd,MAAMP,KAAKiG,KAAI,SAACsB,EAAOC,GAC9B,OAAqB,IAAjBD,EAAME,OA6BC,MA3BqB,IAAxBF,EAAM3D,WAAW/F,IAEjB,kBAAC4G,EAAA,EAAD,CAAKC,GAAI,EAAG1C,UAAU,kBAClB,yBAAKwB,IAAK,QAAQgE,EAAQvF,MAAO,CAAC0E,QAAS,OAAQe,OAAQ,sBACvD,wBAAI1F,UAAU,MAAMC,MAAO,CAAC8D,SAAU,SAAtC,kBACA,6BACI,wBAAI/D,UAAU,eACV,wBAAIA,UAAU,oBACT,EAAKkF,WAAWK,EAAM3D,WAAW5D,OAEtC,wBAAIgC,UAAU,oBACT,EAAKkF,WAAWK,EAAMzD,WAAW9D,OAEtC,wBAAIgC,UAAU,oBACT,EAAKkF,WAAWK,EAAMvD,aAAahE,gBAd5D,QAkCpB,wBAAIgC,UAAU,uBACV,kBAACc,EAAA,EAAD,KACI,kBAAC2B,EAAA,EAAD,CAAKzC,UAAU,OAAO0C,GAAI,IAC1B,kBAACD,EAAA,EAAD,CAAKzC,UAAU,QACf,kBAACyC,EAAA,EAAD,CAAKzC,UAAU,UACf,kBAACyC,EAAA,EAAD,CAAKzC,UAAU,SAAf,IAAyBP,KAAKJ,MAAMd,MAAM1D,e,GAzJ9C2F,IAAMC,WAuKfQ,gBALS,SAAC1C,GAAD,MAAY,CAChCA,MAAOA,EAAM7D,aAIFuG,CAEboF,ICjKIpI,I,OAAUzC,EAAQ,KAElB0L,G,kDAEF,WAAY7H,GAAQ,IAAD,uBACf,cAAMA,IA0BV8H,eAAiB,SAACtH,GACd,EAAKN,SAAS,CACVzE,mBAAoB+E,EAAMC,OAAON,SA7BtB,EAkCnB4H,YAAc,WACV,IAAMC,EAAO,CACTvI,MAAO,EAAKO,MAAMiI,YAAYxI,MAC9BpE,UAAW,EAAK2E,MAAMiI,YAAY5M,UAClCC,SAAU,EAAK4D,MAAM5D,SACrBC,IAAK,EAAK2D,MAAM3D,IAChBC,MAAO,EAAK0D,MAAM1D,MAClBC,mBAAoB,EAAKyD,MAAMzD,oBAEnC,EAAKuE,MAAM+H,YAAYC,GACvB,EAAKhI,MAAMkI,QAAQxI,KAAK,kBA1CxB,EAAKM,MAAM6B,iBAAiB,GAE5B,IAAMvG,EAAWsD,GACb,EAAKoB,MAAMiI,YAAYxI,MAAMjE,MAC7B,EAAKwE,MAAMiI,YAAY5M,UAAUG,MACjC,GACED,EAAMqD,GAAiB,KAATtD,EAAgB,GAC9BE,EAAQoD,GAAQtD,EAAWC,EAAK,GATvB,OAWf,EAAKyE,MAAMmI,kBAAkB7M,EAAUC,EAAKC,GAE5C,EAAK0D,MAAQ,CACT5D,SAAUA,EACVC,IAAKA,EACLC,MAAOA,EACPC,mBAAoB,IAjBT,E,qDAsBnB,WACI2E,KAAKJ,MAAMoI,sB,oBAwBf,WACI,OACI,kBAAC,IAAM5G,SAAP,KAEoD,OAAhDpB,KAAKJ,MAAMiI,YAAYhJ,KAAK/D,gBAC5B,yBAAK0F,MAAO,CAACyE,UAAW,SAAUC,QAAS,cACvC,kBAAC+C,EAAA,EAAD,CAASC,UAAU,OAAO1H,MAAO,CAAC2H,gBAAiB,cAGvD,kBAAC,IAAM/G,SAAP,KAEkD,KAA1CpB,KAAKJ,MAAMiI,YAAYhJ,KAAKjD,MAAME,IAClC,kBAAC8H,EAAA,EAAD,CAAMrD,UAAU,gBAEZ,kBAACqD,EAAA,EAAKC,OAAN,KACI,kBAAC,EAAD,OAGJ,kBAACD,EAAA,EAAKE,KAAN,KACI,kBAACF,EAAA,EAAKiC,MAAN,uBAIqB,IAArB7F,KAAKlB,MAAM1D,MACX,kBAACwI,EAAA,EAAKE,KAAN,CAAWvD,UAAU,cAAcC,MAAO,CAAC4H,aAAc,SACrD,kBAACxE,EAAA,EAAKyE,KAAN,CAAWpF,GAAI,GAAIzC,MAAO,CAAC+G,WAAY,OAAQC,cAAe,SAC1D,+EAIR,kBAAC,IAAMpG,SAAP,KAEI,kBAAC6C,EAAA,EAAD,KACI,kBAAC,GAAD,MACA,kBAAC,GAAD,OAGJ,kBAAC5C,EAAA,EAAD,CAAKd,UAAU,aAAaC,MAAO,CAAC8H,UAAW,SAC3C,kBAACtF,EAAA,EAAD,CAAKzC,UAAU,eAAf,eAA8C,kBAACyC,EAAA,EAAD,CAAKzC,UAAU,iBAAgB,0BAAMA,UAAU,UAAhB,IAA2BP,KAAKlB,MAAM5D,YAGvH,kBAACmG,EAAA,EAAD,CAAKd,UAAU,cACX,kBAACyC,EAAA,EAAD,CAAKzC,UAAU,eAAf,UAAyC,kBAACyC,EAAA,EAAD,CAAKzC,UAAU,iBAAgB,0BAAMA,UAAU,UAAhB,IAA2BP,KAAKlB,MAAM3D,OAI9D,aAAhD6E,KAAKJ,MAAMiI,YAAYhJ,KAAK/D,gBAC5B,kBAACuG,EAAA,EAAD,CAAKd,UAAU,cACX,kBAACyC,EAAA,EAAD,CAAKzC,UAAU,eAAf,mBAAkD,kBAACyC,EAAA,EAAD,CAAKzC,UAAU,iBAAgB,0BAAMA,UAAU,UAAhB,SAGrF,KAGJ,kBAACc,EAAA,EAAD,CAAKd,UAAU,cACX,kBAACyC,EAAA,EAAD,CAAKzC,UAAU,eAAf,YAA2C,kBAACyC,EAAA,EAAD,CAAKzC,UAAU,iBACtD,0BAAMA,UAAU,UAAhB,IAEwD,aAAhDP,KAAKJ,MAAMiI,YAAYhJ,KAAK/D,gBAC5B0D,GAAQwB,KAAKlB,MAAM1D,MAAM,GAAG,GAE5B4E,KAAKlB,MAAM1D,SAM3B,kBAAC6I,EAAA,EAAD,CAAWzD,MAAO,CAAC4H,aAAc,SAC7B,kBAACnE,EAAA,EAAUE,KAAX,KACI,wBAAI3D,MAAO,CAACmF,YAAa,QAAzB,6EACA,8BAAUnF,MAAO,CAAC4E,MAAO,QAASmD,KAAK,IAAItI,SAAUD,KAAK0H,eAAgB3H,MAAOC,KAAKlB,MAAMzD,wBAO5G,kBAACgG,EAAA,EAAD,KACI,kBAAC2B,EAAA,EAAD,CAAKC,GAAI,GACL,kBAACwB,EAAA,EAAD,KACI,kBAAC,IAAD,CACAlE,UAAW,cACXC,MAAO,CAAC2E,YAAa,OAAQC,MAAM,SACnC9D,GAAG,UAGsB,IAArBtB,KAAKlB,MAAM1D,MACX,WAEA,mBAMa,IAArB4E,KAAKlB,MAAM1D,MACX,KAEA,kBAAC4H,EAAA,EAAD,CAAKC,GAAI,GACL,kBAACwB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CACAnE,UAAW,cACXC,MAAO,CAAC6E,WAAY,OAAQD,MAAM,SAAU1E,QAASV,KAAK2H,aAF1D,oBAUpB,kBAAC/D,EAAA,EAAD,KACI,kBAACA,EAAA,EAAKE,KAAN,CAAWtD,MAAO,CAACgI,kBAAmB,QAClC,kBAAC5E,EAAA,EAAKyE,KAAN,2DAKJ,kBAAChH,EAAA,EAAD,KACI,kBAAC2B,EAAA,EAAD,CAAKC,GAAI,IACL,kBAACwB,EAAA,EAAD,KACI,uBAAGgE,KAAK,4CAA4ClI,UAAU,+BAA+BC,MAAO,CAAC4E,MAAO,SAA5G,uB,GAzKlBrE,IAAMC,WAsMbQ,gBAfS,SAAC1C,GAAD,MAAY,CAChC+I,YAAa/I,MAGU,SAAA8F,GAAQ,MAC/B,CAEInD,iBAAkB,SAACxC,GAAD,OAAW2F,EAASnD,EAAiBxC,KACvD8I,kBAAmB,SAAC7M,EAAUC,EAAKC,GAAhB,OAA0BwJ,EV7LpB,SAAC1J,EAAUC,EAAKC,GAAhB,MAA2B,CACxD4D,KJlB8B,qBImB9BE,QAAS,CACLhE,WAAUC,MAAKC,UU0LuC2M,CAAkB7M,EAAUC,EAAKC,KACvFuM,YAAa,SAACC,GAAD,OAAUhD,EVjKxB,SAAqBgD,GACxB,OAAO,SAAChD,GACJA,EAxB8B,CAClC5F,KJxBwB,iBIyDhB0J,QAAQC,IAAI,UACZD,QAAQC,IAAIf,GACZ,IAAMgB,EAAe,CACjBC,OAAQ,OACRC,QAAS,CAEL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAUrB,IAMzBsB,MAFY,uCAEDN,GACVO,MAAK,SAACC,GAIH,GAHAV,QAAQC,IAAIS,GACZV,QAAQC,IAAIS,EAAIC,IAChBX,QAAQC,IAAIS,EAAIE,QACbF,EAAIC,GACH,OAAOD,EAAIG,OAGX,MAAM,IAAIC,MAAM,yBAIvBL,MAAK,SAAAC,GA9Ce,IAPCnN,EAAIP,EAsDrBgN,QAAQC,IAAI,SAAUS,EAAIK,QACvBL,EAAI3N,QACJmJ,GAxDc3I,EAwDamN,EAAIK,OAAOC,SAxDpBhO,EAwD8B0N,EAAIK,OAAO/N,MAxD9B,CAC7CsD,KJ/B0B,iBIgC1BE,QAAS,CACLjD,KAAIP,YAwDQkJ,EApDwB,CACxC5F,KJrC0B,iBIsC1BE,QAAS,CACLrD,KAiDuCuN,EAAIK,OAAO5N,WAG7C8N,OAAM,SAAAxK,GACHuJ,QAAQC,IAAIxJ,OUgHYwI,CAAYC,KAC5CI,kBAAmB,kBAAMpD,GVzGtB,SAACA,GAWJsE,MAFY,uDARS,CACjBL,OAAQ,OACRC,QAAS,CACL,OAAU,sBAQjBK,MAAK,SAACC,GACH,GAAGA,EAAIC,GACH,OAAOD,EAAIG,OAGX,MAAM,IAAIC,MAAM,yBAGvBL,MAAK,SAAAC,GAEFxE,EAASlD,EAAyB0H,EAAIK,OAAO3O,qBAEhD6O,OAAM,SAAAxK,GACHuJ,QAAQC,IAAIxJ,GACZyF,EAASjD,EAAyBxC,WUgFtCuI,eAAgB,SAACtI,GAAD,OAAUwF,EV7DJ,SAACxF,GAAD,MAAW,CACrCJ,KJ/I2B,kBIgJ3BE,QAASE,GU2D8BsI,CAAetI,QAI3CoC,CAGbiG,ICjNImC,G,4JAMF,WACI,OACI,kBAAC,IAAMxI,SAAP,KAEIpB,KAAKJ,MAAMd,MAAMD,KAAKrD,aAAaT,QACnC,yBAAKyF,MAAO,CAACyE,UAAW,SAAUC,QAAS,cACvC,kBAAC+C,EAAA,EAAD,CAASC,UAAU,OAAO1H,MAAO,CAAC2H,gBAAiB,cAGvD,kBAACvE,EAAA,EAAD,CAAMrD,UAAU,IAGuC,OAA/CP,KAAKJ,MAAMd,MAAMD,KAAKrD,aAAaG,QACnC,kBAAC,IAAMyF,SAAP,KACI,kBAACwC,EAAA,EAAKE,KAAN,KACI,kBAACF,EAAA,EAAKyE,KAAN,6FAKJ,yBAAK9H,UAAU,aAEX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,YACX,uBAAGkI,KAAK,4CAA4ClI,UAAU,+BAA+BC,MAAO,CAAC4E,MAAO,SAA5G,iBAOhB,kBAAC,IAAMhE,SAAP,KACI,kBAACwC,EAAA,EAAKE,KAAN,KACI,kBAACF,EAAA,EAAKyE,KAAN,KACI,0BAAM7H,MAAO,CAACuD,WAAY,MAAOT,WAAY,MAAOgB,SAAU,WAA9D,aAAyF,wBAAI9D,MAAO,CAAC8C,WAAY,SADrH,4EAE8EtD,KAAKJ,MAAMd,MAAMD,KAAKrD,aAAaE,MAFjH,KAEyH,6BAFzH,oBAGsBsE,KAAKJ,MAAMd,MAAMD,KAAKrD,aAAaG,QAHzD,MAOJ,yBAAK4E,UAAU,aAEX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,YACX,uBAAGkI,KAAK,4CAA4ClI,UAAU,+BAA+BC,MAAO,CAAC4E,MAAO,SAA5G,gBAGJ,yBAAK7E,UAAU,YACX,uBAAGkI,KAAK,kBAAkBlI,UAAU,+BAA+BC,MAAO,CAAC4E,MAAO,SAAlF,mBAGJ,yBAAK7E,UAAU,YACX,uBAAGkI,KAAK,IAAIlI,UAAU,+BAA+BC,MAAO,CAAC4E,MAAO,SAApE,yB,GA1DbrE,IAAMC,WAkFlBQ,gBATS,SAAC1C,GAAD,MAAY,CAChCA,MAAOA,MAGgB,SAAA8F,GAAQ,MAC/B,KAIWpD,CAGboI,IC7Ea,SAASC,KAGtB,OACE,kBAACC,EAAA,EAAD,CAAWtJ,MAAO,CAAC8H,UAAW,OAAQF,aAAc,OAAQnC,OAAQ,sBAElE,kBAAC5E,EAAA,EAAD,KACE,yBAAK0I,IAAKC,IAAQxJ,MAAO,CAAC4E,MAAO,QAAS6E,IAAI,YAGhD,kBAAC5I,EAAA,EAAD,CAAKb,MAAO,CAAC2H,gBAAiB,SAC5B,kBAACnF,EAAA,EAAD,CAAKC,GAAI,GAAI1C,UAAU,aACrB,kBAAC,IAAD,CAAQ2J,SAAU,6BAChB,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAW/E,IACjC,kBAAC,IAAD,CAAO6E,OAAK,EAACC,KAAK,SAASC,UAAW/E,IACtC,kBAAC,IAAD,CAAO6E,OAAK,EAACC,KAAK,aAAaC,UAAWzD,IAC1C,kBAAC,IAAD,CAAOuD,OAAK,EAACC,KAAK,WAAWC,UAAW5C,KACxC,kBAAC,IAAD,CAAO0C,OAAK,EAACC,KAAK,gBAAgBC,UAAWT,SCrBrCU,QACW,cAA7BzH,OAAO0H,SAASC,UAEe,UAA7B3H,OAAO0H,SAASC,UAEhB3H,OAAO0H,SAASC,SAASC,MACvB,2DCLNC,IAASC,OACL,kBAAC,IAAD,CAAUC,MAAOA,GACb,kBAAC,GAAD,OAEJ1J,SAAS2J,eAAe,SDgHtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM7B,MAAK,SAAA8B,GACjCA,EAAaC,kB","file":"static/js/main.67d68f65.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/iq_fresh_banner.fce23883.jpg\";","import { \r\n    UPDATE_CURRENT_NAV, \r\n    CALCULATE_SUBTOTAL,\r\n    SUBMIT_SUCCESS,\r\n    SUBMIT_FAILURE,\r\n    GET_DELIVERY_METHOD,\r\n    GET_DELIVERY_METHOD_FAILURE,\r\n    ADDITIONAL_NOTE\r\n} from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n    delivery_method: null,\r\n    loading: true,\r\n    byo_lunch: 0,\r\n    teamlunch: 0,\r\n    subtotal: 0,\r\n    tax: 0,\r\n    total: 0,\r\n    additional_comment: '',\r\n    nav: 0,\r\n    routes: [\r\n        '/lunch',\r\n        '/teamlunch',\r\n        '/summary'\r\n    ],\r\n    confirmation: {\r\n        loading: true,\r\n        success: false,\r\n        email: null,\r\n        orderID: null,\r\n        error: {\r\n            code: null\r\n        }\r\n    },\r\n    error: {\r\n        msg: ''\r\n    }\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n    switch (action.type) {\r\n        case UPDATE_CURRENT_NAV: {\r\n            const {index} = action.payload;\r\n            state.nav = index;\r\n            return {...state};\r\n        }\r\n        case CALCULATE_SUBTOTAL: {\r\n            const {subtotal, tax, total} = action.payload;\r\n            state.subtotal = subtotal;\r\n            state.tax = tax;\r\n            state.total = total;\r\n            return {...state};\r\n        }\r\n        case SUBMIT_SUCCESS: {\r\n            const {id, email} = action.payload;\r\n            initialState.confirmation = {\r\n                loading: false,\r\n                orderID: id,\r\n                email: email,\r\n                success: true\r\n            }\r\n            return {...initialState};\r\n        }\r\n        case SUBMIT_FAILURE: {\r\n            const {code} = action.payload;\r\n            state.confirmation = {\r\n                loading: false,\r\n                orderID: null\r\n            }\r\n            state.error.code = code;\r\n            return {...state}\r\n        }\r\n        case GET_DELIVERY_METHOD: {\r\n            const {delivery_method} = action.payload;\r\n            state.delivery_method = delivery_method;\r\n            return {...state};\r\n        }\r\n        case GET_DELIVERY_METHOD_FAILURE: {\r\n            const {err} = action.payload;\r\n            state.delivery_method = 'Failed';\r\n            state.error.msg = err;\r\n            return {...state}\r\n        }\r\n        case ADDITIONAL_NOTE: {\r\n            const text = action.payload;\r\n            state.additional_comment = text;\r\n            return {...state}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};","import { \r\n    UPDATE_BREAKFAST_QTY,\r\n    OPEN_BREAKFAST_EXECUTIVE_BEGINNING,\r\n    CLOSE_BREAKFAST_EXECUTIVE_BEGINNING,\r\n    ADD_BREAKFAST_EXECUTIVE_BEGINNING,\r\n    UPDATE_BREAKFAST_EXECUTIVE_BEGINNING,\r\n    EDIT_BREAKFAST_EXECUTIVE_BEGINNING,\r\n    REMOVE_BREAKFAST_EXECUTIVE_BEGINNING,\r\n    OPEN_BREAKFAST_SWEETTREATS,\r\n    CLOSE_BREAKFAST_SWEETTREATS,\r\n    ADD_BREAKFAST_SWEETTREATS,\r\n    EDIT_BREAKFAST_SWEETTREATS,\r\n    UPDATE_BREAKFAST_SWEETTREATS,\r\n    REMOVE_BREAKFAST_SWEETTREATS,\r\n} from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n    bk_beginnings : { qty : 0, price : 27.99, name: 'Breakfast Beginnings', description: '96oz Coffee Carafe and 6 Pastries', total : 0 },\r\n    ex_breakfast : { \r\n        qty : 0, \r\n        price : 52.99, \r\n        name: 'Executive Breakfast', \r\n        description: '96oz Coffee Carafe, 6 Pastries, and 6 Breakfast Sandwiches', \r\n        total : 0,\r\n        box_open: false,\r\n        add: 'add',\r\n        id: null,\r\n        list: [] \r\n    },\r\n    ex_breakfast_name: {\r\n        western_egg_bagel: \"Western Egg Bagel\",\r\n        egg_white: \"Egg White, Mushroom and Spinach on Whole Grain\",\r\n        ham_sau_bacon: \"Ham, Sausage and Bacon on Bagel\"\r\n    },\r\n    baker_dozen : { qty : 0, price : 15.99, name: 'Baker\\'s Dozen', description: 'Assorted Bagels and Cream Cheese (13 ea.)', total : 0 },\r\n    sweet_treats: {\r\n        box_open: false,\r\n        type: null,\r\n        add: 'add',\r\n        id: null,\r\n        half_dozen: {\r\n            price: 10.99,\r\n            qty: 0,\r\n            selected: true,\r\n            list: [],\r\n            total: 0\r\n        }, \r\n        dozen: {\r\n            price: 21.99,\r\n            qty: 0,\r\n            selected: true,\r\n            list: [],\r\n            total: 0\r\n        },\r\n        total: 0,\r\n        names: {\r\n            banana_bread: 'Banana Bread',\r\n            banana_chocolate_chip_bread: 'Banana Chocolate Chip Bread',\r\n            blue_berry_scone: 'Blueberry Scone',\r\n            chocolate_chip_cookie: 'Chocolate Chip Cookie',\r\n            chocolate_croissant: 'Chocolate Croissant',\r\n            cinnamon_scone_croissant: 'Cinnamon Scone Croissant',\r\n            lemon_pound_cake: 'Lemon Pound Cake',\r\n            poppy_seed_bread: 'Poppy Seed Bread',\r\n            pumpkin_bread: 'Pumpkin Bread',\r\n            bars_cookie: 'Bars and Cookies'\r\n        }\r\n    },\r\n    sweet_treats_name: {\r\n        banana_bread: 'Banana Bread',\r\n        banana_chocolate_chip_bread: 'Banana Chocolate Chip Bread',\r\n        blue_berry_scone: 'Blueberry Scone',\r\n        chocolate_chip_cookie: 'Chocolate Chip Cookie',\r\n        chocolate_croissant: 'Chocolate Croissant',\r\n        cinnamon_scone_croissant: 'Cinnamon Scone Croissant',\r\n        lemon_pound_cake: 'Lemon Pound Cake',\r\n        poppy_seed_bread: 'Poppy Seed Bread',\r\n        pumpkin_bread: 'Pumpkin Bread',\r\n        bars_cookie: 'Bars and Cookies'\r\n    },\r\n    assorted_muffins: { qty : 0, price : 12.99, name: 'Assorted Muffins by the 1/2 Dozen', description: '', total : 0 },\r\n    total : 0\r\n};\r\n\r\nconst roundTo = require('roundto');\r\n\r\nexport default function(state = initialState, action) {\r\n    switch (action.type) {\r\n        case UPDATE_BREAKFAST_QTY: {\r\n\r\n            const {name, qty} = action.payload;\r\n\r\n            state[name].qty = qty;\r\n            state[name].total = roundTo(state[name].price * qty, 2);\r\n            state.total = updateBreakfastTotal(state, name, qty);\r\n\r\n            return {...state};\r\n        }\r\n        case OPEN_BREAKFAST_EXECUTIVE_BEGINNING: {\r\n            const {add, id} = action.payload;\r\n            state.ex_breakfast.box_open = true;\r\n            state.ex_breakfast.add = add;\r\n            state.ex_breakfast.id = id;\r\n\r\n            return {...state};\r\n        }\r\n        case CLOSE_BREAKFAST_EXECUTIVE_BEGINNING: {\r\n            state.ex_breakfast.box_open = false;\r\n            return {...state}\r\n        }\r\n        case ADD_BREAKFAST_EXECUTIVE_BEGINNING: {\r\n            const {list} = action.payload;\r\n\r\n            state.ex_breakfast.box_open = false;\r\n\r\n            state.ex_breakfast.list.push(list);\r\n            state.ex_breakfast.qty = state.ex_breakfast.qty + 1;\r\n\r\n            state.ex_breakfast.total = roundTo(state.ex_breakfast.qty * state.ex_breakfast.price, 2);\r\n\r\n            state.total = updateBreakfastTotal(state, 'ex_breakfast', state.ex_breakfast.qty);\r\n\r\n            return {...state};\r\n        }\r\n        case UPDATE_BREAKFAST_EXECUTIVE_BEGINNING: {\r\n            const {id, list} = action.payload;\r\n            state.ex_breakfast.list[id] = list;\r\n            state.ex_breakfast.box_open = false;\r\n            state.ex_breakfast.id = null;\r\n\r\n            return {...state};\r\n        }\r\n        case EDIT_BREAKFAST_EXECUTIVE_BEGINNING: {\r\n            const {id} = action.payload;\r\n            state.ex_breakfast.id = id;\r\n            state.ex_breakfast.box_open = true;\r\n            state.ex_breakfast.add = 'edit';\r\n            return {...state};\r\n        }\r\n        case REMOVE_BREAKFAST_EXECUTIVE_BEGINNING: {\r\n            const {id} = action.payload;\r\n            state.ex_breakfast.list[id] = null;\r\n            state.ex_breakfast.qty = state.ex_breakfast.qty - 1;\r\n\r\n            state.ex_breakfast.id = null;\r\n\r\n            state.ex_breakfast.total = roundTo(state.ex_breakfast.qty * state.ex_breakfast.price, 2);\r\n\r\n            state.total = updateBreakfastTotal(state, 'ex_breakfast', state.ex_breakfast.qty);\r\n\r\n            return {...state};\r\n        }\r\n        case OPEN_BREAKFAST_SWEETTREATS: {\r\n            const {type, add, id} = action.payload;\r\n            \r\n            return {\r\n                ...state,\r\n                sweet_treats:{\r\n                    ...state.sweet_treats,\r\n                    box_open: true,\r\n                    type: type,\r\n                    add: 'add',\r\n                    id: id,\r\n                }\r\n            }\r\n        }\r\n        case CLOSE_BREAKFAST_SWEETTREATS: {\r\n            return {\r\n                ...state,\r\n                sweet_treats: {\r\n                    ...state.sweet_treats,\r\n                    box_open: false\r\n                }\r\n            }\r\n        }\r\n        case ADD_BREAKFAST_SWEETTREATS: {\r\n            const {name, list} = action.payload;\r\n            state.sweet_treats[name].list.push(list);\r\n            state.sweet_treats[name].qty = state.sweet_treats[name].qty + 1;\r\n\r\n            // Get total of sweet treats\r\n            state.sweet_treats[name].total = roundTo(state.sweet_treats[name].qty * state.sweet_treats[name].price, 2) + roundTo(state.sweet_treats[name].qty * state.sweet_treats[name].price, 2);\r\n            state.sweet_treats.total = roundTo(state.sweet_treats.half_dozen.qty * state.sweet_treats.half_dozen.price, 2) + roundTo(state.sweet_treats.dozen.qty * state.sweet_treats.dozen.price, 2);\r\n        \r\n            // BYO Breakfast Total\r\n            state.total = updateBreakfastTotal(state, 'sweet_treats', state.sweet_treats.total);\r\n            state.sweet_treats.box_open = false;\r\n            \r\n            return {...state}\r\n        }\r\n        case EDIT_BREAKFAST_SWEETTREATS: {\r\n            const {type, id} = action.payload;\r\n            \r\n            return {\r\n                ...state,\r\n                sweet_treats: {\r\n                    ...state.sweet_treats,\r\n                    box_open: true,\r\n                    type: type,\r\n                    add: 'edit',\r\n                    id: id\r\n                }\r\n            }\r\n        }\r\n        case UPDATE_BREAKFAST_SWEETTREATS: {\r\n            const {type, id, list} = action.payload;\r\n            state.sweet_treats[type].list[id] = list;\r\n\r\n            return {\r\n                ...state,\r\n                sweet_treats: {\r\n                    ...state.sweet_treats,\r\n                    box_open: false,\r\n                    id: null\r\n                }\r\n            }\r\n        }\r\n        case REMOVE_BREAKFAST_SWEETTREATS: {\r\n            const {type, id} = action.payload;\r\n            state.sweet_treats[type].list[id] = null;\r\n            state.sweet_treats[type].qty = state.sweet_treats[type].qty - 1;\r\n\r\n            // Get total of sweet treats\r\n            state.sweet_treats[type].total = roundTo(state.sweet_treats[type].qty * state.sweet_treats[type].price, 2) + roundTo(state.sweet_treats[type].qty * state.sweet_treats[type].price, 2);\r\n            state.sweet_treats.total = roundTo(state.sweet_treats.half_dozen.qty * state.sweet_treats.half_dozen.price, 2) + roundTo(state.sweet_treats.dozen.qty * state.sweet_treats.dozen.price, 2);\r\n\r\n            // BYO Breakfast Total\r\n            state.total = updateBreakfastTotal(state, 'sweet_treats', state.sweet_treats.total);\r\n\r\n            return {\r\n                ...state\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nfunction updateBreakfastTotal(state, name, qty) {\r\n    // state[name].total = state[name].price * qty;\r\n    return roundTo(state.bk_beginnings.total + state.ex_breakfast.total + state.baker_dozen.total + state.sweet_treats.total + state.assorted_muffins.total, 2);\r\n}","import { \r\n    UPDATE_BYO_BREAKFAST,\r\n    UPDATE_BYO_BREAKFAST_COFFEE,\r\n    UPDATE_BYO_BREAKFAST_FRUITSALAD,\r\n    UPDATE_BYO_BREAKFAST_SANDWICH\r\n} from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n    coffee_carafe: {\r\n        price: 16.99,\r\n        list: {\r\n            regular: 0,\r\n            decaf: 0,\r\n            iced: 0,\r\n            iced_decaf: 0\r\n        },\r\n        total: 0\r\n    },\r\n    fruit_salad: {\r\n        serve_20: {price: 49.99, qty: 0},\r\n        serve_8: {price: 29.99, qty: 0},\r\n        total: 0\r\n    },\r\n    sandwiches: {\r\n        list: {\r\n            zucchini: {price: 21.99, qty: 0, name: 'Ham and Gruyere on Zucchini Bread', description: ''},\r\n            sausage_bagel: {price: 17.99, qty: 0, name: 'Egg, Cheese, Bacon and Sausage on a Bagel', description: ''},\r\n            pepper_bagel: {price: 17.99, qty: 0, name: 'Egg, Cheese, Chorizo, and Roasted Poblano Peppers on a Bagel', description: ''},\r\n            red_pepper_bagel: {price: 17.99, qty: 0, name: 'Egg Whites, Goat Cheese, Mushrooms, Spinach and Red Peppers on a Bagel', description: ''}\r\n        },\r\n        total: 0\r\n    },\r\n    west_egg_bagel: { qty : 0, price : 20.99, name: 'Western Egg Bagel', description: 'sold by the 1/2 Dozen', total : 0 },\r\n    ewms_whole: { qty : 0, price : 22.99, name: 'Egg White, Mushroom and Spinach on Whole Grain', description: 'sold by the 1/2 Dozen', total : 0 },\r\n    hsb_bagel: { qty : 0, price : 20.99, name: 'Ham, Sausage and Bacon on Bagel', description: 'sold by the 1/2 Dozen', total : 0 },\r\n    total : 0\r\n};\r\n\r\nconst roundTo = require('roundto');\r\n\r\nexport default function(state = initialState, action) {\r\n    switch (action.type) {\r\n        case UPDATE_BYO_BREAKFAST: {\r\n            const {name, qty} = action.payload;\r\n\r\n            state[name].qty = qty;\r\n            state[name].total = roundTo(state[name].price * qty, 2);\r\n            state.total = updateByoTotal(state, name, state[name].total);\r\n\r\n            return {...state}\r\n        }\r\n        case UPDATE_BYO_BREAKFAST_COFFEE: {\r\n            const {name, qty} = action.payload;\r\n\r\n            let coffee_list = ['regular', 'decaf', 'iced', 'iced_decaf'];\r\n            let total_qty = 0;\r\n            for (let i = 0; i < coffee_list.length; i++) {\r\n                const coffee_name = coffee_list[i];\r\n                if (coffee_name !== name) {\r\n                    total_qty = total_qty + state.coffee_carafe.list[coffee_list[i]];\r\n                }\r\n                else {\r\n                    total_qty = total_qty + qty;\r\n                }\r\n            }\r\n            \r\n            const coffee_total = roundTo(state.coffee_carafe.price * total_qty, 2); \r\n\r\n\r\n            const total = updateByoTotal(state, 'coffee_carafe', coffee_total);\r\n\r\n            return {\r\n                ...state,\r\n                coffee_carafe: {\r\n                    ...state.coffee_carafe,\r\n                    list: {\r\n                        ...state.coffee_carafe.list,\r\n                        [name]: qty\r\n                    },\r\n                    total: coffee_total\r\n                },\r\n                total: total\r\n            };\r\n        }\r\n        case UPDATE_BYO_BREAKFAST_FRUITSALAD: {\r\n            const {name, qty} = action.payload;\r\n\r\n            state.fruit_salad[name].qty = qty;\r\n\r\n            const fruit_total = (state.fruit_salad.serve_20.price * state.fruit_salad.serve_20.qty) + \r\n                                (state.fruit_salad.serve_8.price * state.fruit_salad.serve_8.qty);\r\n\r\n            const total = updateByoTotal(state, 'fruit_salad', fruit_total);\r\n\r\n            return {\r\n                ...state,\r\n                fruit_salad: {\r\n                    ...state.fruit_salad,\r\n                    [name]: {\r\n                        ...state.fruit_salad[name],\r\n                        qty: qty\r\n                    },\r\n                    total: roundTo(fruit_total, 2)\r\n                },\r\n                total: total\r\n            }\r\n        }\r\n        case UPDATE_BYO_BREAKFAST_SANDWICH: {\r\n            const {name, qty} = action.payload;\r\n\r\n            let subtotal = 0;\r\n            state.sandwiches.list[name].qty = qty;\r\n            \r\n            for (const name in state.sandwiches.list){\r\n                subtotal = subtotal + roundTo(state.sandwiches.list[name].qty * state.sandwiches.list[name].price, 2);\r\n            }\r\n\r\n            state.sandwiches.total = subtotal;\r\n\r\n            const total = updateByoTotal(state, 'sandwiches', subtotal);\r\n\r\n            return {\r\n                ...state,\r\n                sandwiches: {\r\n                    ...state.sandwiches,\r\n                    total: subtotal\r\n                },\r\n                total: total\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nfunction updateByoTotal(state, name, subtotal) {\r\n    state[name].total = subtotal;\r\n    const total = roundTo(\r\n                            state.coffee_carafe.total + \r\n                            state.fruit_salad.total + \r\n                            state.sandwiches.total +\r\n                            state.west_egg_bagel.total +\r\n                            state.ewms_whole.total +\r\n                            state.hsb_bagel.total, \r\n                        2);\r\n    return total;\r\n}","import { \r\n    OPEN_LUNCHBOX,\r\n    ADD_LUNCHBOX,\r\n    OPEN_LUNCHBOX_EDITOR,\r\n    UPDATE_LUNCHBOX,\r\n    REMOVE_LUNCHBOX,\r\n    CLOSE_LUNCHBOX\r\n} from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n    actionType: 'add',\r\n    id: null,\r\n    open_box: false,\r\n    price: 9.99,\r\n    qty: 0,\r\n    products: {\r\n        sandwiches : {\r\n            italian_job: {name: 'The Italian Job', description: 'Ham, Peppered Turkey, Salami, Provolone, Lettuce, Tomato, Sport Peppers, and a Spinach Wrap'},\r\n            hail_caesar: {name: 'Hail Caesar', description: 'Chopped Romaine, Grilled Chicken, Parmesan, Croutons, Caesar Dressing, and a Whole Wheat Wrap'},\r\n            gyro_wrapture : {name: 'Gyro Wrapture', description: 'Gyro Meat, Red Onion, Tomato, Lettuce, Tzatziki Sauce, Feta Cheese, and a Pita Wrap'},\r\n            wrapzilla : {name: 'Wrapzilla', description: 'Ham, Turkey, Bacon, Swiss Cheese, Lettuce, Tomato, Pesto Spread, and a Whole Wheat Wrap'},\r\n            crunch_roll : {name: 'Crunch Roll', description: 'Crispy Chicken Tenders, Shredded Lettuce, Tomatoes, Serrano Ranch Dressing, and a Spinach Wrap'},\r\n            wedge_quesadilla : {name: 'Wedge Quesadilla', description: 'Wheat Tortilla, Chicken Chorizo, Bean Salsa, and Cheese'},\r\n            garden_ofeden : {name: 'Garden of Eden', description: 'Hummus, Fattoush, Soy Nuts, Ancient Grains, Wrapped in Lettuce Leaves'}\r\n        },\r\n        salads: {\r\n            kale_crunch: {name: 'Kale Crunch', description: 'Kale Blend, Almond, Cranberry, Peppered Turkey, and Citrus Vinaigrette'},\r\n            chicken_egg: {name: 'Chicken and Egg', description: 'Chicken, Egg, Carrots, Red Onion, Tomato, Cucumber, Romaine Lettuce, and Balsamic Vinaigrette'},\r\n            whats_updoc: {name: 'What\\'s Up Doc', description: 'Carrot, Hummus, Fattoush, Soy Nuts, Ancient Grains, Spinach, and Lemon Vinaigrette'},\r\n            to_thaifor: {name: 'To Thai For', description: 'Asian Slaw, Chicken, Peanutes, Crispy Noodles, Edamame, and Sesame Ginger Dressing'},\r\n        },\r\n        chips: {\r\n            pita: 'Pita Chips',\r\n            baked_lays: 'Baked Lays',\r\n            bbq_lays: 'Baked BBQ Lays',\r\n            //pb_jalapeno: 'Poore Brother\\'s - Jalapeno',\r\n            //pb_original: 'Poore Brother\\'s - Original',\r\n            //sun_chips: 'Sun Chips',\r\n            //bbq_chips: 'BBQ Chips'\r\n        },\r\n        fruit: {\r\n            banana: 'Banana',\r\n            red_apple: 'Red apple',\r\n            green_apple: 'Green apple',\r\n            orange: 'Orange',\r\n        },\r\n        beverages: {\r\n            coke: 'Coke',\r\n            diet_coke: 'Diet Coke',\r\n            dr_pepper: 'Dr.Pepper',\r\n            //diet_dr_pepper: 'Diet Dr.Pepper',\r\n            sprite: 'Sprite',\r\n            dasani: 'Dasani Water',\r\n            fruit_punch: 'Powerade Fruit Punch',\r\n            mountain_blast: 'Powerade Mountain Blast',\r\n            //cherry_coke: 'Cherry Coke',\r\n            //coke_zero: 'Coke Zero'\r\n        }\r\n    },\r\n    names: {\r\n        italian_job: {name: 'The Italian Job', description: 'Ham, Peppered Turkey, Salami, Provolone, Lettuce, Tomato, Sport Peppers, and a Spinach Wrap'},\r\n        hail_caesar: {name: 'Hail Caesar', description: 'Chopped Romaine, Grilled Chicken, Parmesan, Croutons, Caesar Dressing, and a Whole Wheat Wrap'},\r\n        gyro_wrapture : {name: 'Gyro Wrapture', description: 'Gyro Meat, Red Onion, Tomato, Lettuce, Tzatziki Sauce, Feta Cheese, and a Pita Wrap'},\r\n        wrapzilla : {name: 'Wrapzilla', description: 'Ham, Turkey, Bacon, Swiss Cheese, Lettuce, Tomato, Pesto Spread, and a Whole Wheat Wrap'},\r\n        crunch_roll : {name: 'Crunch Roll', description: 'Crispy Chicken Tenders, Shredded Lettuce, Tomatoes, Serrano Ranch Dressing, and a Spinach Wrap'},\r\n        wedge_quesadilla : {name: 'Wedge Quesadilla', description: 'Wheat Tortilla, Chicken Chorizo, Bean Salsa, and Cheese'},\r\n        garden_ofeden : {name: 'Garden of Eden', description: 'Hummus, Fattoush, Soy Nuts, Ancient Grains, Wrapped in Lettuce Leaves'},\r\n        kale_crunch: {name: 'Kale Crunch', description: 'Kale Blend, Almond, Cranberry, Peppered Turkey, and Citrus Vinaigrette'},\r\n        chicken_egg: {name: 'Chicken and Egg', description: 'Chicken, Egg, Carrots, Red Onion, Tomato, Cucumber, Romaine Lettuce, and Balsamic Vinaigrette'},\r\n        whats_updoc: {name: 'What\\'s Up Doc', description: 'Carrot, Hummus, Fattoush, Soy Nuts, Ancient Grains, Spinach, and Lemon Vinaigrette'},\r\n        to_thaifor: {name: 'To Thai For', description: 'Asian Slaw, Chicken, Peanutes, Crispy Noodles, Edamame, and Sesame Ginger Dressing'},\r\n        pita: {name:'Pita Chips'},\r\n        baked_lays: {name:'Baked Lays'},\r\n        bbq_lays: {name:'Baked BBQ Lays'},\r\n        fruit: {name: 'Fruit'},\r\n        banana: {name: 'Banana'},\r\n        red_apple: {name: 'Red apple'},\r\n        green_apple: {name: 'Green apple'},\r\n        orange: {name: 'Orange'},\r\n        coke: {name:'Coke'},\r\n        diet_coke: {name:'Diet Coke'},\r\n        dr_pepper: {name:'Dr.Pepper'},\r\n        //diet_dr_pepper: {name:'Diet Dr.Pepper'},\r\n        sprite: {name:'Sprite'},\r\n        dasani: {name:'Dasani Water'},\r\n        fruit_punch: {name: 'Powerade Fruit Punch'},\r\n        mountain_blast: {name: 'Powerade Mountain Blast'},\r\n        //cherry_coke: {name:'Cherry Coke'},\r\n        //coke_zero: {name:'Coke Zero'}\r\n    },\r\n    list: [],\r\n    total: 0\r\n};\r\n\r\nconst roundTo = require('roundto');\r\n\r\nexport default function(state = initialState, action) {\r\n    switch (action.type) {\r\n        case OPEN_LUNCHBOX: {\r\n            state.actionType = 'add';\r\n            state.open_box = true;\r\n            return {\r\n                ...state\r\n            };\r\n        }\r\n        case ADD_LUNCHBOX: {\r\n            const {list} = action.payload;\r\n            state.open_box = false;\r\n            state.qty = state.qty + 1;\r\n\r\n            // Don't need extra sandwich and chips for IQfresh catering page. But left here for reference incase needed\r\n            // Check Extra\r\n            /*const extras = list.extra.list;\r\n            let extra_total = 0;\r\n            for (let i = 0; i < extras.length; i++) {\r\n                if (extras[i].one !== 'None'){extra_total = extra_total + 6.99;} //price extra sandwich or salad = 6.99\r\n                if (extras[i].two !== 'None'){extra_total = extra_total + 0.99;} //price extra chips = 0.99\r\n                if (extras[i].three !== 'None'){\r\n                    if (extras[i].three === 'Dasani Water'){\r\n                        extra_total = extra_total + 1.99; //price dasani = 1.99\r\n                    }\r\n                    else {\r\n                        extra_total = extra_total + 2.09; //price soda = 2.09\r\n                    }\r\n                }\r\n            }\r\n\r\n            list.extra.total = extra_total;*/\r\n            state.list.push(list);\r\n            // state.total = roundTo((state.qty * state.price) + extra_total,2);\r\n            state.total = roundTo((state.qty * state.price),2);\r\n            \r\n            return {\r\n                ...state\r\n            };\r\n        }\r\n        case OPEN_LUNCHBOX_EDITOR: {\r\n            const {index} = action.payload;\r\n            state.id = index;\r\n            state.actionType = 'edit';\r\n            state.open_box = true;\r\n            return {\r\n                ...state\r\n            };\r\n        }\r\n        case UPDATE_LUNCHBOX: {\r\n            const {index, list} = action.payload;\r\n            state.list[index] = list;\r\n\r\n            // Check Extra\r\n            /*const extras = state.list[index].extra.list;\r\n            let extra_total = 0;\r\n            for (let i = 0; i < extras.length; i++) {\r\n                if (extras[i].one !== 'None'){extra_total = extra_total + 6.99;} //price extra sandwich or salad = 6.99\r\n                if (extras[i].two !== 'None'){extra_total = extra_total + 0.99;} //price extra chips = 0.99\r\n                if (extras[i].three !== 'None'){\r\n                    if (extras[i].three === 'Dasani Water'){\r\n                        extra_total = extra_total + 1.99; //price dasani = 1.99\r\n                    }\r\n                    else {\r\n                        extra_total = extra_total + 2.09; //price soda = 2.09\r\n                    }\r\n                }\r\n            }\r\n            state.list[index].extra.total = extra_total; \r\n            state.total = roundTo((state.qty * state.price) + extra_total,2);*/\r\n            state.total = roundTo((state.qty * state.price),2);\r\n            \r\n            state.open_box = false;\r\n            return {\r\n                ...state\r\n            };\r\n        }\r\n        case CLOSE_LUNCHBOX: {\r\n            state.open_box = false;\r\n            return {\r\n                ...state\r\n            };\r\n        }\r\n        case REMOVE_LUNCHBOX: {\r\n            const {index} = action.payload;\r\n            state.qty = state.qty - 1;\r\n            state.list[index] = [];\r\n            state.total = roundTo((state.qty * state.price),2);\r\n            return {\r\n                ...state\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { \r\n    OPEN_TEAMLUNCH_DOZEN,\r\n    ADD_TEAMLUNCH_DOZEN,\r\n    OPEN_TEAMLUNCH_DOZEN_EDITOR,\r\n    UPDATE_TEAMLUNCH_DOZEN,\r\n    REMOVE_TEAMLUNCH_DOZEN,\r\n    CLOSE_TEAMLUNCH_DOZEN, \r\n    OPEN_TEAMLUNCH_HALF,\r\n    ADD_TEAMLUNCH_HALF,\r\n    OPEN_TEAMLUNCH_HALF_EDITOR,\r\n    UPDATE_TEAMLUNCH_HALF,\r\n    REMOVE_TEAMLUNCH_HALF,\r\n    CLOSE_TEAMLUNCH_HALF, \r\n} from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n    actionType: 'add',\r\n    id: null,\r\n    open_box: false,\r\n    dozen: true,\r\n    price: 99.99,\r\n    qty: 0,\r\n    price_half: 55.99,\r\n    qty_half: 0,\r\n    products: {\r\n        sandwiches : {\r\n            italian_job: {name: 'The Italian Job', description: 'Ham, Peppered Turkey, Salami, Provolone, Lettuce, Tomato, Sport Peppers, and a Spinach Wrap'},\r\n            hail_caesar: {name: 'Hail Caesar', description: 'Chopped Romaine, Grilled Chicken, Parmesan, Croutons, Caesar Dressing, and a Whole Wheat Wrap'},\r\n            gyro_wrapture : {name: 'Gyro Wrapture', description: 'Gyro Meat, Red Onion, Tomato, Lettuce, Tzatziki Sauce, Feta Cheese, and a Pita Wrap'},\r\n            wrapzilla : {name: 'Wrapzilla', description: 'Ham, Turkey, Bacon, Swiss Cheese, Lettuce, Tomato, Pesto Spread, and a Whole Wheat Wrap'},\r\n            crunch_roll : {name: 'Crunch Roll', description: 'Crispy Chicken Tenders, Shredded Lettuce, Tomatoes, Serrano Ranch Dressing, and a Spinach Wrap'},\r\n            wedge_quesadilla : {name: 'Wedge Quesadilla', description: 'Wheat Tortilla, Chicken Chorizo, Bean Salsa, and Cheese'},\r\n            garden_ofeden : {name: 'Garden of Eden', description: 'Hummus, Fattoush, Soy Nuts, Ancient Grains, Wrapped in Lettuce Leaves'}\r\n        },\r\n        salads: {\r\n            kale_crunch: {name: 'Kale Crunch', description: 'Kale Blend, Almond, Cranberry, Peppered Turkey, and Citrus Vinaigrette'},\r\n            chicken_egg: {name: 'Chicken and Egg', description: 'Chicken, Egg, Carrots, Red Onion, Tomato, Cucumber, Romaine Lettuce, and Balsamic Vinaigrette'},\r\n            whats_updoc: {name: 'What\\'s Up Doc', description: 'Carrot, Hummus, Fattoush, Soy Nuts, Ancient Grains, Spinach, and Lemon Vinaigrette'},\r\n            to_thaifor: {name: 'To Thai For', description: 'Asian Slaw, Chicken, Peanutes, Crispy Noodles, Edamame, and Sesame Ginger Dressing'},\r\n        },\r\n        chips: {\r\n            pita: 'Pita Chips',\r\n            baked_lays: 'Baked Lays',\r\n            bbq_lays: 'Baked BBQ Lays',\r\n            //pb_jalapeno: 'Poore Brother\\'s - Jalapeno',\r\n            //pb_original: 'Poore Brother\\'s - Original',\r\n            //sun_chips: 'Sun Chips',\r\n            //bbq_chips: 'BBQ Chips'\r\n        },\r\n        fruit: {\r\n            banana: 'Banana',\r\n            red_apple: 'Red apple',\r\n            green_apple: 'Green apple',\r\n            orange: 'Orange',\r\n        },\r\n        beverages: {\r\n            coke: 'Coke',\r\n            diet_coke: 'Diet Coke',\r\n            dr_pepper: 'Dr.Pepper',\r\n            //diet_dr_pepper: 'Diet Dr.Pepper',\r\n            sprite: 'Sprite',\r\n            dasani: 'Dasani Water',\r\n            fruit_punch: 'Powerade Fruit Punch',\r\n            mountain_blast: 'Powerade Mountain Blast',\r\n            //cherry_coke: 'Cherry Coke',\r\n            //coke_zero: 'Coke Zero'\r\n        }\r\n    },\r\n    names: {\r\n        italian_job: {name: 'The Italian Job', description: 'Ham, Peppered Turkey, Salami, Provolone, Lettuce, Tomato, Sport Peppers, and a Spinach Wrap'},\r\n        hail_caesar: {name: 'Hail Caesar', description: 'Chopped Romaine, Grilled Chicken, Parmesan, Croutons, Caesar Dressing, and a Whole Wheat Wrap'},\r\n        gyro_wrapture : {name: 'Gyro Wrapture', description: 'Gyro Meat, Red Onion, Tomato, Lettuce, Tzatziki Sauce, Feta Cheese, and a Pita Wrap'},\r\n        wrapzilla : {name: 'Wrapzilla', description: 'Ham, Turkey, Bacon, Swiss Cheese, Lettuce, Tomato, Pesto Spread, and a Whole Wheat Wrap'},\r\n        crunch_roll : {name: 'Crunch Roll', description: 'Crispy Chicken Tenders, Shredded Lettuce, Tomatoes, Serrano Ranch Dressing, and a Spinach Wrap'},\r\n        wedge_quesadilla : {name: 'Wedge Quesadilla', description: 'Wheat Tortilla, Chicken Chorizo, Bean Salsa, and Cheese'},\r\n        garden_ofeden : {name: 'Garden of Eden', description: 'Hummus, Fattoush, Soy Nuts, Ancient Grains, Wrapped in Lettuce Leaves'},\r\n        kale_crunch: {name: 'Kale Crunch', description: 'Kale Blend, Almond, Cranberry, Peppered Turkey, and Citrus Vinaigrette'},\r\n        chicken_egg: {name: 'Chicken and Egg', description: 'Chicken, Egg, Carrots, Red Onion, Tomato, Cucumber, Romaine Lettuce, and Balsamic Vinaigrette'},\r\n        whats_updoc: {name: 'What\\'s Up Doc', description: 'Carrot, Hummus, Fattoush, Soy Nuts, Ancient Grains, Spinach, and Lemon Vinaigrette'},\r\n        to_thaifor: {name: 'To Thai For', description: 'Asian Slaw, Chicken, Peanutes, Crispy Noodles, Edamame, and Sesame Ginger Dressing'},\r\n        pita: {name:'Pita Chips'},\r\n        baked_lays: {name:'Baked Lays'},\r\n        bbq_lays: {name:'Baked BBQ Lays'},\r\n        fruit: {name: 'Fruit'},\r\n        banana: {name: 'Banana'},\r\n        red_apple: {name: 'Red apple'},\r\n        green_apple: {name: 'Green apple'},\r\n        orange: {name: 'Orange'},\r\n        coke: {name:'Coke'},\r\n        diet_coke: {name:'Diet Coke'},\r\n        dr_pepper: {name:'Dr.Pepper'},\r\n        //diet_dr_pepper: {name:'Diet Dr.Pepper'},\r\n        sprite: {name:'Sprite'},\r\n        dasani: {name:'Dasani Water'},\r\n        fruit_punch: {name: 'Powerade Fruit Punch'},\r\n        mountain_blast: {name: 'Powerade Mountain Blast'},\r\n        //cherry_coke: {name:'Cherry Coke'},\r\n        //coke_zero: {name:'Coke Zero'}\r\n    },\r\n    list: [],\r\n    total: 0\r\n};\r\n\r\nconst roundTo = require('roundto');\r\n\r\nexport default function(state = initialState, action) {\r\n    switch (action.type) {\r\n        //dozen size functions\r\n        case OPEN_TEAMLUNCH_DOZEN: {\r\n            state.actionType = 'add';\r\n            state.open_box = true;\r\n            state.dozen = true;\r\n            return {\r\n                ...state\r\n            };\r\n        }\r\n        case ADD_TEAMLUNCH_DOZEN: {\r\n            const {list} = action.payload;\r\n            state.open_box = false;\r\n            state.qty = state.qty + 1;\r\n\r\n            // Don't need extra sandwich and chips for IQfresh catering page. But left here for reference incase needed\r\n            // Check Extra\r\n            /*const extras = list.extra.list;\r\n            let extra_total = 0;\r\n            for (let i = 0; i < extras.length; i++) {\r\n                if (extras[i].one !== 'None'){extra_total = extra_total + 6.99;} //price extra sandwich or salad = 6.99\r\n                if (extras[i].two !== 'None'){extra_total = extra_total + 0.99;} //price extra chips = 0.99\r\n                if (extras[i].three !== 'None'){\r\n                    if (extras[i].three === 'Dasani Water'){\r\n                        extra_total = extra_total + 1.99; //price dasani = 1.99\r\n                    }\r\n                    else {\r\n                        extra_total = extra_total + 2.09; //price soda = 2.09\r\n                    }\r\n                }\r\n            }\r\n\r\n            list.extra.total = extra_total;\r\n            state.list.push(list);\r\n            state.total = roundTo((state.qty * state.price) + extra_total,2);\r\n            */\r\n            state.list.push(list);\r\n            state.total = roundTo((state.qty * state.price),2) + roundTo((state.qty_half * state.price_half),2);\r\n            return {\r\n                ...state\r\n            };\r\n        }\r\n        case OPEN_TEAMLUNCH_DOZEN_EDITOR: {\r\n            const {index} = action.payload;\r\n            state.id = index;\r\n            state.actionType = 'edit';\r\n            state.open_box = true;\r\n            state.dozen=true;\r\n            return {\r\n                ...state\r\n            };\r\n        }\r\n        case UPDATE_TEAMLUNCH_DOZEN: {\r\n            const {index, list} = action.payload;\r\n            state.list[index] = list;\r\n\r\n            // Check Extra\r\n            /*const extras = state.list[index].extra.list;\r\n            let extra_total = 0;\r\n            for (let i = 0; i < extras.length; i++) {\r\n                if (extras[i].one !== 'None'){extra_total = extra_total + 6.99;} //price extra sandwich or salad = 6.99\r\n                if (extras[i].two !== 'None'){extra_total = extra_total + 0.99;} //price extra chips = 0.99\r\n                if (extras[i].three !== 'None'){\r\n                    if (extras[i].three === 'Dasani Water'){\r\n                        extra_total = extra_total + 1.99; //price dasani = 1.99\r\n                    }\r\n                    else {\r\n                        extra_total = extra_total + 2.09; //price soda = 2.09\r\n                    }\r\n                }\r\n            }\r\n            state.list[index].extra.total = extra_total;\r\n            state.total = roundTo((state.qty * state.price) + extra_total,2);\r\n            */\r\n            state.total = roundTo((state.qty * state.price),2) + roundTo((state.qty_half * state.price_half),2);\r\n            state.open_box = false;\r\n            return {\r\n                ...state\r\n            };\r\n        }\r\n        case CLOSE_TEAMLUNCH_DOZEN: {\r\n            state.open_box = false;\r\n            return {\r\n                ...state\r\n            };\r\n        }\r\n        case REMOVE_TEAMLUNCH_DOZEN: {\r\n            const {index} = action.payload;\r\n            state.qty = state.qty - 1;\r\n            state.list[index] = [];\r\n            state.total = roundTo((state.qty * state.price),2) + roundTo((state.qty_half * state.price_half),2);\r\n            return {\r\n                ...state\r\n            };\r\n        }\r\n        //half dozen size functions\r\n        case OPEN_TEAMLUNCH_HALF: {\r\n            state.actionType = 'add';\r\n            state.open_box = true;\r\n            state.dozen= false;\r\n            return {\r\n                ...state\r\n            };\r\n        }\r\n        case ADD_TEAMLUNCH_HALF: {\r\n            const {list} = action.payload;\r\n            state.open_box = false;\r\n            state.qty_half = state.qty_half + 1;\r\n\r\n            // Don't need extra sandwich and chips for IQfresh catering page. But left here for reference incase needed\r\n            // Check Extra\r\n            /*const extras = list.extra.list;\r\n            let extra_total = 0;\r\n            for (let i = 0; i < extras.length; i++) {\r\n                if (extras[i].one !== 'None'){extra_total = extra_total + 6.99;} //price extra sandwich or salad = 6.99\r\n                if (extras[i].two !== 'None'){extra_total = extra_total + 0.99;} //price extra chips = 0.99\r\n                if (extras[i].three !== 'None'){\r\n                    if (extras[i].three === 'Dasani Water'){\r\n                        extra_total = extra_total + 1.99; //price dasani = 1.99\r\n                    }\r\n                    else {\r\n                        extra_total = extra_total + 2.09; //price soda = 2.09\r\n                    }\r\n                }\r\n            }\r\n\r\n            list.extra.total = extra_total;\r\n            state.list.push(list);\r\n            state.total = roundTo((state.qty_half * state.price) + extra_total,2);\r\n            */\r\n            state.list.push(list);\r\n            state.total = roundTo((state.qty * state.price),2) + roundTo((state.qty_half * state.price_half),2);\r\n            return {\r\n                ...state\r\n            };\r\n        }\r\n        case OPEN_TEAMLUNCH_HALF_EDITOR: {\r\n            const {index} = action.payload;\r\n            state.id = index;\r\n            state.actionType = 'edit';\r\n            state.open_box = true;\r\n            state.dozen = false;\r\n            return {\r\n                ...state\r\n            };\r\n        }\r\n        case UPDATE_TEAMLUNCH_HALF: {\r\n            const {index, list} = action.payload;\r\n            state.list[index] = list;\r\n\r\n            // Check Extra\r\n            /*const extras = state.list[index].extra.list;\r\n            let extra_total = 0;\r\n            for (let i = 0; i < extras.length; i++) {\r\n                if (extras[i].one !== 'None'){extra_total = extra_total + 6.99;} //price extra sandwich or salad = 6.99\r\n                if (extras[i].two !== 'None'){extra_total = extra_total + 0.99;} //price extra chips = 0.99\r\n                if (extras[i].three !== 'None'){\r\n                    if (extras[i].three === 'Dasani Water'){\r\n                        extra_total = extra_total + 1.99; //price dasani = 1.99\r\n                    }\r\n                    else {\r\n                        extra_total = extra_total + 2.09; //price soda = 2.09\r\n                    }\r\n                }\r\n            }\r\n            state.list[index].extra.total = extra_total;\r\n            state.total = roundTo((state.qty_half * state.price) + extra_total,2);\r\n            */\r\n            state.total = roundTo((state.qty * state.price),2) + roundTo((state.qty_half * state.price_half),2);\r\n            state.open_box = false;\r\n            return {\r\n                ...state\r\n            };\r\n        }\r\n        case CLOSE_TEAMLUNCH_HALF: {\r\n            state.open_box = false;\r\n            return {\r\n                ...state\r\n            };\r\n        }\r\n        case REMOVE_TEAMLUNCH_HALF: {\r\n            const {index} = action.payload;\r\n            state.qty_half = state.qty_half - 1;\r\n            state.list[index] = [];\r\n            state.total = roundTo((state.qty * state.price),2) + roundTo((state.qty_half * state.price_half),2);\r\n            return {\r\n                ...state\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\n\r\n","import { UPDATE_OFFICEPARTY_QTY } from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n    serve_10 : { qty : 0, price : 34.99, name: 'Serve 10', description: 'Snack sized assorted meats, cheeses, veggies, hummus and pita chips', total : 0 },\r\n    total : 0\r\n};\r\n\r\nconst roundTo = require('roundto');\r\n\r\nexport default function(state = initialState, action) {\r\n    switch (action.type) {\r\n        case UPDATE_OFFICEPARTY_QTY: {\r\n\r\n            const {name, qty} = action.payload;\r\n            const subtotal = roundTo(state[name].price * qty, 2); \r\n            const total = updateOfficePartyTotal(state, name, qty);\r\n\r\n            return {\r\n                ...state,\r\n                [name]: {\r\n                    ...state[name],\r\n                    qty: qty,\r\n                    total: subtotal\r\n                },\r\n                total: total\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nfunction updateOfficePartyTotal(state, name, qty) {\r\n    state[name].total = state[name].price * qty;\r\n    return roundTo(state.serve_10.total, 2);\r\n}","import { \r\n    UPDATE_BEVERAGE_QTY\r\n} from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n    list: {\r\n        coke: {name: 'Coke', price: 2.09, qty: 0},\r\n        diet_coke: {name: 'Diet Coke', price: 2.09, qty: 0},\r\n        dr_pepper: {name: 'Dr.Pepper', price: 2.09, qty: 0},\r\n        diet_dr_pepper: {name: 'Diet Dr.Pepper', price: 2.09, qty: 0},\r\n        sprite: {name: 'Sprite', price: 2.09, qty:0},\r\n        dasani: {name: 'Dasani Water', price: 1.99, qty: 0},\r\n        cherry_coke: {name: 'Cherry Coke', price: 2.09, qty: 0},\r\n        coke_zero: {name: 'Coke Zero', price: 2.09, qty: 0}\r\n    },\r\n    total : 0\r\n};\r\n\r\nconst roundTo = require('roundto');\r\n\r\nexport default function(state = initialState, action) {\r\n    switch (action.type) {\r\n        case UPDATE_BEVERAGE_QTY: {\r\n            const {name, qty} = action.payload;\r\n\r\n            state.list[name].qty = qty;\r\n            state.total = updateTotal(state, name);\r\n\r\n            return {...state};\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nfunction updateTotal(state, name) {\r\n    const total = roundTo(\r\n                            state.list.coke.qty*state.list.coke.price + \r\n                            state.list.diet_coke.qty*state.list.diet_coke.price +\r\n                            state.list.dr_pepper.qty*state.list.dr_pepper.price +\r\n                            state.list.diet_dr_pepper.qty*state.list.diet_dr_pepper.price +\r\n                            state.list.sprite.qty*state.list.sprite.price +\r\n                            state.list.dasani.qty*state.list.dasani.price +\r\n                            state.list.cherry_coke.qty*state.list.cherry_coke.price +\r\n                            state.list.coke_zero.qty*state.list.coke_zero.price, \r\n                        2);\r\n    return total;\r\n}","import { combineReducers } from \"redux\";\r\nimport main from \"./main\";\r\nimport breakfast from \"./breakfast\";\r\nimport byo_breakfast from \"./byo_breakfast\";\r\nimport lunch from \"./lunch\";\r\nimport teamlunch from \"./teamlunch\";\r\nimport office_party from \"./officeParty\";\r\nimport beverage from \"./beverage\";\r\n\r\nexport default combineReducers({ main, lunch, teamlunch });","export const UPDATE_CURRENT_NAV = \"UPDATE_CURRENT_NAV\";\r\nexport const CALCULATE_SUBTOTAL = \"CALCULATE_SUBTOTAL\";\r\nexport const SUBMIT_ORDER = \"SUBMIT_ORDER\";\r\nexport const SUBMIT_SUCCESS = \"SUBMIT_SUCCESS\";\r\nexport const SUBMIT_FAILURE = \"SUBMIT_FAILURE\";\r\nexport const GET_DELIVERY_METHOD = \"GET_DELIVERY_METHOD\";\r\nexport const GET_DELIVERY_METHOD_FAILURE = \"GET_DELIVERY_METHOD_FAILURE\";\r\nexport const ADDITIONAL_NOTE = \"ADDITIONAL_NOTE\";\r\n\r\n// Lunch\r\nexport const OPEN_LUNCHBOX = \"OPEN_LUNCHBOX\";\r\nexport const ADD_LUNCHBOX = \"ADD_LUNCHBOX\";\r\nexport const OPEN_LUNCHBOX_EDITOR = \"OPEN_LUNCHBOX_EDITOR\";\r\nexport const UPDATE_LUNCHBOX = \"UPDATE_LUNCHBOX\";\r\nexport const REMOVE_LUNCHBOX = \"REMOVE_LUNCHBOX\";\r\nexport const CLOSE_LUNCHBOX = \"CLOSE_LUNCHBOX\";\r\n\r\n// Smart Team Lunch for the Group | Dozen\r\nexport const OPEN_TEAMLUNCH_DOZEN = \"OPEN_TEAMLUNCH_DOZEN\";\r\nexport const ADD_TEAMLUNCH_DOZEN = \"ADD_TEAMLUNCH_DOZEN\";\r\nexport const OPEN_TEAMLUNCH_DOZEN_EDITOR = \"OPEN_TEAMLUNCH_DOZEN_EDITOR\";\r\nexport const UPDATE_TEAMLUNCH_DOZEN = \"UPDATE_TEAMLUNCH_DOZEN\";\r\nexport const REMOVE_TEAMLUNCH_DOZEN = \"REMOVE_TEAMLUNCH_DOZEN\";\r\nexport const CLOSE_TEAMLUNCH_DOZEN = \"CLOSE_TEAMLUNCH_DOZEN\"; \r\n// Smart Team Lunch for the Group | Half Dozen\r\nexport const OPEN_TEAMLUNCH_HALF = \"OPEN_TEAMLUNCH_HALF\";\r\nexport const ADD_TEAMLUNCH_HALF = \"ADD_TEAMLUNCH_HALF\";\r\nexport const OPEN_TEAMLUNCH_HALF_EDITOR = \"OPEN_TEAMLUNCH_HALF_EDITOR\";\r\nexport const UPDATE_TEAMLUNCH_HALF = \"UPDATE_TEAMLUNCH_HALF\";\r\nexport const REMOVE_TEAMLUNCH_HALF = \"REMOVE_TEAMLUNCH_HALF\";\r\nexport const CLOSE_TEAMLUNCH_HALF = \"CLOSE_TEAMLUNCH_HALF\";\r\n\r\n\r\n// Breakfast\r\nexport const UPDATE_QTY = \"UPDATE_QTY\";\r\nexport const UPDATE_BREAKFAST_QTY = \"UPDATE_BREAKFAST_QTY\";\r\nexport const OPEN_BREAKFAST_EXECUTIVE_BEGINNING = \"OPEN_BREAKFAST_EXECUTIVE_BEGINNING\";\r\nexport const CLOSE_BREAKFAST_EXECUTIVE_BEGINNING = \"CLOSE_BREAKFAST_EXECUTIVE_BEGINNING\";\r\nexport const ADD_BREAKFAST_EXECUTIVE_BEGINNING = \"ADD_BREAKFAST_EXECUTIVE_BEGINNING\";\r\nexport const UPDATE_BREAKFAST_EXECUTIVE_BEGINNING = \"UPDATE_BREAKFAST_EXECUTIVE_BEGINNING\";\r\nexport const EDIT_BREAKFAST_EXECUTIVE_BEGINNING = \"EDIT_BREAKFAST_EXECUTIVE_BEGINNING\";\r\nexport const REMOVE_BREAKFAST_EXECUTIVE_BEGINNING = \"REMOVE_BREAKFAST_EXECUTIVE_BEGINNING\";\r\nexport const OPEN_BREAKFAST_SWEETTREATS = \"OPEN_BREAKFAST_SWEETTREATS\";\r\nexport const ADD_BREAKFAST_SWEETTREATS = \"ADD_BREAKFAST_SWEETTREATS\";\r\nexport const CLOSE_BREAKFAST_SWEETTREATS = \"CLOSE_BREAKFAST_SWEETTREATS\";\r\nexport const EDIT_BREAKFAST_SWEETTREATS = \"EDIT_BREAKFAST_SWEETTREATS\";\r\nexport const UPDATE_BREAKFAST_SWEETTREATS = \"UPDATE_BREAKFAST_SWEETTREATS\";\r\nexport const REMOVE_BREAKFAST_SWEETTREATS = \"REMOVE_BREAKFAST_SWEETTREATS\";\r\n\r\n// Build Your Own Breakfast\r\nexport const UPDATE_BYO_BREAKFAST = \"UPDATE_BYO_BREAKFAST\";\r\nexport const UPDATE_BYO_BREAKFAST_COFFEE = \"UPDATE_BYO_BREAKFAST_COFFEE\";\r\nexport const UPDATE_BYO_BREAKFAST_FRUITSALAD = \"UPDATE_BYO_BREAKFAST_FRUITSALAD\";\r\nexport const UPDATE_BYO_BREAKFAST_SANDWICH = \"UPDATE_BYO_BREAKFAST_SANDWICH\";\r\n\r\n// Office Party\r\nexport const UPDATE_OFFICEPARTY_QTY = \"UPDATE_OFFICEPARTY_QTY\";\r\n\r\n// Beverage\r\nexport const UPDATE_BEVERAGE_QTY = \"UPDATE_BEVERAGE_QTY\";\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport thunkMiddleware  from 'redux-thunk';\r\nimport rootReducer from \"./reducers\";\r\n\r\nexport default createStore( rootReducer, applyMiddleware( thunkMiddleware ));","import React from 'react';\r\n\r\nclass NumberInput extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            value: parseInt(this.props.value)\r\n        }\r\n    }\r\n\r\n    increase = () => {\r\n        this.setState({\r\n            value: this.state.value + 1\r\n        }, function() {\r\n            const result = this.props.onChange(this.props.name, this.state.value);\r\n            if (result === 'error'){\r\n                this.setState({\r\n                    value: this.state.value - 1\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    decrease = () => {\r\n        if (this.state.value-1 >= 0) {\r\n            this.setState({\r\n                value: this.state.value - 1\r\n            }, function() {\r\n                this.props.onChange(this.props.name, this.state.value)\r\n            })\r\n        }\r\n    }\r\n\r\n    onChangeHandler = (event) => {\r\n        const target = event.target;\r\n        const value = target.value;\r\n        this.setState({\r\n            value: parseInt(value)\r\n        }, function() {\r\n            this.props.onChange(this.props.name, this.state.value)\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"def-number-input number-input\" style={this.props.style}>\r\n                {\r\n                    !this.props.noleft ?\r\n                    <button className=\"minus\" onClick={this.decrease}></button> :\r\n                    null\r\n                }\r\n                <input className={'quantity ' + (this.props.readonly ? 'input-readonly' : '')} name={this.props.name}\r\n                min={0}\r\n                value={this.props.value}\r\n                onChange={this.onChangeHandler.bind(this)}\r\n                type=\"number\"\r\n                readOnly={this.props.readonly ? true : false} />\r\n                <button className=\"plus\" onClick={this.increase}></button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NumberInput;","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n    Link\r\n} from 'react-router-dom';\r\n\r\nimport { Row } from 'react-bootstrap';\r\n\r\n// import ArrowLeft from '../../img/arrow_left.png';\r\n\r\nclass TopNav extends React.Component {\r\n    componentDidMount() {\r\n        document.title=\"IQ Fresh Catering Order\";\r\n    }\r\n    render() {\r\n        return(\r\n            <React.Fragment>\r\n                <Row className=\"m-0\">\r\n                    <Link\r\n                    to=\"/lunch\"\r\n                    className={'topnav col ' + (this.props.global.main.nav === 0 ? 'active' : '')}\r\n                    >\r\n                        <p><u>Lunch Box</u></p>\r\n                    </Link>\r\n                    \r\n                    <Link\r\n                    to=\"/TeamLunch\"\r\n                    className={'topnav col ' + (this.props.global.main.nav === 1 ? 'active' : '')}\r\n                    >\r\n                        <p><u>Smart Lunch for the Team</u></p>\r\n                    </Link>\r\n\r\n                    <Link\r\n                    to=\"/summary\"\r\n                    className={'topnav col ' + (this.props.global.main.nav === 2 ? 'active' : '')}\r\n                    >\r\n                        <p><u>Order Summary</u></p>\r\n                    </Link>\r\n                </Row>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    global: state\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps\r\n)(TopNav)","import { \r\n    UPDATE_CURRENT_NAV, \r\n    SUBMIT_ORDER, \r\n    CALCULATE_SUBTOTAL,\r\n    SUBMIT_SUCCESS,\r\n    SUBMIT_FAILURE,\r\n    GET_DELIVERY_METHOD,\r\n    GET_DELIVERY_METHOD_FAILURE,\r\n    ADDITIONAL_NOTE\r\n} from './actionTypes.js'\r\n\r\nexport const updateCurrentNav = (index) => ({\r\n    type: UPDATE_CURRENT_NAV,\r\n    payload: {\r\n        index\r\n    }\r\n})\r\n\r\nexport const calculateSubtotal = (subtotal, tax, total) => ({\r\n    type: CALCULATE_SUBTOTAL,\r\n    payload: {\r\n        subtotal, tax, total\r\n    }\r\n})\r\n\r\nexport const initSubmitOrder = () => ({\r\n    type: SUBMIT_ORDER\r\n})\r\n\r\nexport const formValidationFailure = () => ({\r\n\r\n})\r\n\r\nexport const formSubmitSuccess = (id, email) => ({\r\n    type: SUBMIT_SUCCESS,\r\n    payload: {\r\n        id, email\r\n    }\r\n})\r\n\r\nexport const formSubmitFailure = (code) => ({\r\n    type: SUBMIT_FAILURE,\r\n    payload: {\r\n        code\r\n    }\r\n})\r\n\r\nexport function submitOrder(data) {\r\n    return (dispatch) => {\r\n        dispatch(initSubmitOrder());\r\n\r\n        // Validate Form\r\n\r\n        let error = false;\r\n\r\n        if (error){\r\n            dispatch(formValidationFailure());\r\n        }\r\n        else {\r\n            console.log(\"data: \");\r\n            console.log(data);\r\n            const fetch_option = {\r\n                method: 'POST',\r\n                headers: {\r\n                    \r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(data),\r\n            }\r\n\r\n            // const url = 'http://192.168.99.100/api/catering/retail/catalyst/submit';\r\n            const url = '/api/catering/retail/iq_fresh/submit';\r\n\r\n            fetch(url, fetch_option)\r\n            .then((res) => {\r\n                console.log(res);\r\n                console.log(res.ok);\r\n                console.log(res.status);\r\n                if(res.ok) {\r\n                    return res.json();\r\n                } else {\r\n                    // console.log(res);\r\n                    throw new Error('An error occurred.');\r\n                    return Promise.reject(res);\r\n                }\r\n            })\r\n            .then(res => {\r\n                 console.log('return', res.return);\r\n                if (res.success){\r\n                    dispatch(formSubmitSuccess(res.return.order_id, res.return.email));\r\n                }\r\n                else {\r\n                    dispatch(formSubmitFailure(res.return.code));\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n                // dispatch(formSubmitFailure(err));\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport function getDeliveryMethod() {\r\n    return (dispatch) => {\r\n        const fetch_option = {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json'\r\n            }\r\n        }\r\n\r\n        // const url = 'http://192.168.99.100/catering/retail/customer_info/getDeliveryMethod';\r\n        const url = '/api/catering/retail/customer_info/getDeliveryMethod';\r\n\r\n        fetch(url, fetch_option)\r\n        .then((res) => {\r\n            if(res.ok) {\r\n                return res.json();\r\n            } else {\r\n                // console.log(res);\r\n                throw new Error('An error occurred.');\r\n            }\r\n        })\r\n        .then(res => {\r\n            // console.log('return', res.return);\r\n            dispatch(getDeliveryMethodSuccess(res.return.delivery_method));\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n            dispatch(getDeliveryMethodFailure(err));\r\n        })\r\n    }\r\n}\r\n\r\nexport const getDeliveryMethodSuccess = (delivery_method) => ({\r\n    type: GET_DELIVERY_METHOD,\r\n    payload: {\r\n        delivery_method\r\n    }\r\n})\r\n\r\nexport const getDeliveryMethodFailure = (err) => ({\r\n    type: GET_DELIVERY_METHOD_FAILURE,\r\n    payload: {\r\n        err\r\n    }\r\n})\r\n\r\nexport const handleTextarea = (text) => ({\r\n    type: ADDITIONAL_NOTE,\r\n    payload: text\r\n})","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Row, Col, Card, ListGroup, ButtonToolbar, Button, Form } from 'react-bootstrap';\r\nimport NumberInput from '../common/numberInput.js';\r\n\r\nimport { openLunchBox, addLunchBox, updateLunchBox, closeLunchBox } from '../../redux/actions/lunch';\r\n\r\nimport './lunchbox.css';\r\n\r\nclass LunchBox extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        // Create ref objects\r\n        this.first = React.createRef();\r\n\r\n        // let list = [];\r\n\r\n        if (this.props.lunch.actionType === 'add'){\r\n            // Initialize\r\n            this.state = {\r\n                choice_one: {\r\n                    list: {italian_job: 0,hail_caesar: 0,gyro_wrapture: 0,wrapzilla: 0,crunch_roll: 0, wedge_quesadilla: 0,garden_ofeden: 0,kale_crunch: 0,chicken_egg: 0, whats_updoc: 0,to_thaifor: 0},\r\n                    qty: 0,\r\n                    error: false\r\n                },\r\n                choice_two: {\r\n                    list: {pita: 0, baked_lays: 0, bbq_lays: 0, fruit: 0,banana: 0,red_apple: 0,green_apple: 0,orange: 0,},\r\n                    qty: 0,\r\n                    error: false\r\n                },\r\n                choice_three: {\r\n                    list: {coke: 0,diet_coke: 0,dr_pepper: 0,sprite: 0,dasani: 0,fruit_punch: 0,mountain_blast: 0},\r\n                    qty: 0,\r\n                    error: false\r\n                },\r\n                //extra: {\r\n                //    list: [\r\n                //        {one: 'None', two: 'None', three: 'None'},\r\n                //        {one: 'None', two: 'None', three: 'None'}\r\n                //    ],\r\n                //    total: 0\r\n                //},\r\n                error: false\r\n            }\r\n        }\r\n        else {\r\n            this.state = {\r\n                choice_one: {\r\n                    list: this.props.lunch.list[this.props.lunch.id].choice_one.list,\r\n                    qty: this.props.lunch.list[this.props.lunch.id].choice_one.qty,\r\n                    error: false\r\n                },\r\n                choice_two: {\r\n                    list: this.props.lunch.list[this.props.lunch.id].choice_two.list,\r\n                    qty: this.props.lunch.list[this.props.lunch.id].choice_two.qty,\r\n                    error: false\r\n                },\r\n                choice_three: {\r\n                    list: this.props.lunch.list[this.props.lunch.id].choice_three.list,\r\n                    qty: this.props.lunch.list[this.props.lunch.id].choice_three.qty,\r\n                    error: false\r\n                },\r\n                extra: this.props.lunch.list[this.props.lunch.id].extra,\r\n                error: false\r\n            }\r\n        }\r\n    }\r\n\r\n    checkQty = (list, name, qty) => {\r\n        let tmp_qty = 0;\r\n        for (let key in list){\r\n            if (key !== name){\r\n                tmp_qty = tmp_qty + list[key];    \r\n            }\r\n            else{\r\n                tmp_qty = tmp_qty + qty;\r\n            }\r\n        }\r\n\r\n        return tmp_qty;\r\n    }\r\n\r\n    updateInput = (name, qty, type, total_qty) => {\r\n        this.setState({\r\n            error: false,\r\n            [type]: {\r\n                ...this.state[type],\r\n                list: {\r\n                    ...this.state[type].list,\r\n                    [name]: qty\r\n                },\r\n                qty: total_qty\r\n            }\r\n        })\r\n    }\r\n\r\n    onChangeFirst = (name, qty) => {\r\n        const tmp_qty = this.checkQty(this.state.choice_one.list, name, qty);\r\n        if (tmp_qty > 1) {\r\n            return 'error';\r\n        }\r\n        else {\r\n            this.setState({choice_one:{...this.state.choice_one, error: false}}, function() {\r\n                this.updateInput(name, qty, 'choice_one', tmp_qty);\r\n            });\r\n        }\r\n    }\r\n\r\n    onChangeSecond = (name, qty) => {\r\n        const tmp_qty = this.checkQty(this.state.choice_two.list, name, qty);\r\n        if (tmp_qty > 1) {\r\n            return 'error';\r\n        }\r\n        else {\r\n            this.setState({choice_two:{...this.state.choice_two, error: false}}, function() {\r\n                this.updateInput(name, qty, 'choice_two', tmp_qty);\r\n            });\r\n        }\r\n    }\r\n\r\n    onChangeThree = (name, qty) => {\r\n        const tmp_qty = this.checkQty(this.state.choice_three.list, name, qty);\r\n        if (tmp_qty > 1) {\r\n            return 'error';\r\n        }\r\n        else {\r\n            this.setState({choice_three:{...this.state.choice_three, error: false}}, function() {\r\n                this.updateInput(name, qty, 'choice_three', tmp_qty);\r\n            });\r\n        }\r\n    }\r\n\r\n    addLunchBox = () => {\r\n        // const qty = this.state.choice_one.qty + this.state.choice_two.qty + this.state.choice_three.qty;\r\n\r\n        if (!this.validateForm()) {\r\n            const list = {\r\n                choice_one: this.state.choice_one,\r\n                choice_two: this.state.choice_two,\r\n                choice_three: this.state.choice_three,\r\n                extra: this.state.extra\r\n            }\r\n            this.props.addLunchBox(list);\r\n        }\r\n    }\r\n\r\n    updateLunchBox = () => {\r\n        if (!this.validateForm()){\r\n            const list = {\r\n                choice_one: this.state.choice_one,\r\n                choice_two: this.state.choice_two,\r\n                choice_three: this.state.choice_three,\r\n                extra: this.state.extra\r\n            }\r\n            this.props.updateLunchBox(this.props.lunch.id, list);\r\n        }\r\n    }\r\n\r\n    closeLunchBox = () => {\r\n        this.props.closeLunchBox();\r\n    }\r\n\r\n    validateForm = () => {\r\n        let error = false;\r\n        if (this.state.choice_one.qty !== 1) {\r\n            this.setState({choice_one:{...this.state.choice_one, error: true}}, function() {\r\n                window.scrollTo(0,400);\r\n            });\r\n            error = true;\r\n        }\r\n        else if (this.state.choice_two.qty !== 1) {\r\n            this.setState({choice_two:{...this.state.choice_two, error: true}}, function() {\r\n                window.scrollTo(0,900);\r\n            });\r\n            error = true;\r\n        }\r\n        else if (this.state.choice_three.qty !== 1) {\r\n            this.setState({choice_three:{...this.state.choice_three, error: true}}, function() {\r\n                window.scrollTo(0,1000);\r\n            });\r\n            error = true;\r\n        }\r\n        return error;\r\n    }\r\n\r\n    printSandwiches = (key) => {\r\n        return (\r\n            <Col className=\"wrap_name\" md={6}>\r\n                <p className=\"name\">\r\n                    {this.props.lunch.products.sandwiches[key].name}\r\n                </p>\r\n                <p className=\"description\">\r\n                    {this.props.lunch.products.sandwiches[key].description}\r\n                </p>\r\n                <NumberInput \r\n                    readonly={true}\r\n                    onChange={this.onChangeFirst.bind(this)}\r\n                    name={key}\r\n                    value={this.state.choice_one.list[key]}\r\n                    style={{float: 'right'}}\r\n                />\r\n            </Col>\r\n        );\r\n    }\r\n\r\n    printSalads = (key) => {\r\n        return (\r\n            <Col className=\"wrap_name\" md={6}>\r\n                <p className=\"name\">\r\n                    {this.props.lunch.products.salads[key].name}\r\n                </p>\r\n                <p className=\"description\">\r\n                    {this.props.lunch.products.salads[key].description}\r\n                </p>\r\n                <NumberInput \r\n                    readonly={true}\r\n                    onChange={this.onChangeFirst.bind(this)}\r\n                    name={key}\r\n                    value={this.state.choice_one.list[key]}\r\n                    style={{float: 'right'}}\r\n                />\r\n            </Col>\r\n        );\r\n    }\r\n\r\n    printChips = (key) => {\r\n        return (\r\n            <Col className=\"wrap_name\" md={6}>\r\n                <p className=\"name\" style={{display: 'inline', lineHeight: '32px'}}>\r\n                    {this.props.lunch.products.chips[key]}\r\n                </p>\r\n                <NumberInput \r\n                    readonly={true}\r\n                    onChange={this.onChangeSecond.bind(this)}\r\n                    name={key}\r\n                    value={this.state.choice_two.list[key]}\r\n                    style={{float: 'right'}}\r\n                />\r\n            </Col>\r\n        );\r\n    }\r\n\r\n    printFruit = (key) => {\r\n        return (\r\n            <Col className=\"wrap_name\" md={6}>\r\n                <p className=\"name\" style={{display: 'inline', lineHeight: '32px'}}>\r\n                    {this.props.lunch.products.fruit[key]}\r\n                </p>\r\n                <NumberInput \r\n                    readonly={true}\r\n                    onChange={this.onChangeSecond.bind(this)}\r\n                    name={key}\r\n                    value={this.state.choice_two.list[key]}\r\n                    style={{float: 'right'}}\r\n                />\r\n            </Col>\r\n        );\r\n    }\r\n\r\n    onChangeExtra = (id,order,event) => {\r\n        let list = this.state.extra.list;\r\n        list[id][order] = event.target.value;\r\n        this.setState({\r\n            extra: {\r\n                ...this.state.extra,\r\n                list: list\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Card className=\"col-md-12 p-0\">\r\n\r\n                <Card.Header>\r\n                    <p>Lunch Box - Single</p>\r\n                    <ul>\r\n                        <li>Select your salad or wrap</li>\r\n                        <li>Select your side</li>\r\n                        <li>Select your bottled drink</li>\r\n                    </ul>\r\n                </Card.Header>\r\n\r\n                <Card.Body className={this.state.choice_one.error ? 'su-alert' : ''}>\r\n                    <h5 style={{fontWeight: '600', color: '#f48222'}}>1. Select your salad or wrap <span style={{color: 'rgb(84, 84, 84)'}}>- {this.state.choice_one.qty} of 1</span></h5>\r\n                    \r\n                    <ListGroup variant=\"flush\">\r\n                        <ListGroup.Item className=\"menu-list\" style={{borderWidth: '0px'}}>\r\n\r\n                            <p style={{fontWeight: '600', textDecoration: 'underline', fontSize: '18px'}}>Wraps</p>\r\n                            \r\n                            <Row className=\"pb-3\" style={{borderBottom: '1px solid #e1e1e1'}}>\r\n                                {this.printSandwiches('italian_job')}\r\n                                {this.printSandwiches('hail_caesar')}\r\n                            </Row>\r\n\r\n                            <Row className=\"pt-2 pb-3\" style={{borderBottom: '1px solid #e1e1e1'}}>\r\n                                {this.printSandwiches('gyro_wrapture')}\r\n                                {this.printSandwiches('wrapzilla')}\r\n                            </Row>\r\n\r\n                            <Row className=\"pt-2 pb-3\" style={{borderBottom: '1px solid #e1e1e1'}}>\r\n                                {this.printSandwiches('crunch_roll')}\r\n                                {this.printSandwiches('wedge_quesadilla')}\r\n                            </Row>\r\n\r\n                            <Row className=\"pt-2 pb-3\" style={{borderBottom: '1px solid #e1e1e1'}}>\r\n                                {this.printSandwiches('garden_ofeden')}\r\n                            </Row>\r\n\r\n                            <p className=\"mt-3\"  style={{fontWeight: '600', textDecoration: 'underline', fontSize: '18px'}}>Salads</p>\r\n\r\n                            <Row className=\"pt-2 pb-3\" style={{borderBottom: '1px solid #e1e1e1'}}>\r\n                                {this.printSalads('kale_crunch')}\r\n                                {this.printSalads('chicken_egg')}\r\n                            </Row>\r\n\r\n                            <Row className=\"pt-2 pb-3\" style={{borderBottom: '1px solid #e1e1e1'}}>\r\n                                {this.printSalads('whats_updoc')}\r\n                                {this.printSalads('to_thaifor')}\r\n                            </Row>\r\n\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Card.Body>\r\n\r\n                <Card.Body className={this.state.choice_two.error ? 'su-alert' : ''}>\r\n                    <h5 style={{fontWeight: '600', color: '#f48222'}}>2. Select your side <span style={{color: 'rgb(84, 84, 84)'}}>- {this.state.choice_two.qty} of 1</span></h5>\r\n                    <ListGroup variant=\"flush\">\r\n                        <ListGroup.Item className=\"menu-list\" style={{borderWidth: '0px'}}>\r\n                            <p className=\"mt-3\"  style={{fontWeight: '600', textDecoration: 'underline', fontSize: '18px'}}>Chips</p>\r\n                            <Row className=\"pt-2 pb-2\" style={{borderBottom: '1px solid #e1e1e1'}}>\r\n                                {this.printChips('pita')}\r\n                                {this.printChips('baked_lays')} <br/><br/>\r\n                                {this.printChips('bbq_lays')}\r\n                            </Row>\r\n\r\n                            <p className=\"mt-3\"  style={{fontWeight: '600', textDecoration: 'underline', fontSize: '18px'}}>Whole Fruit</p>\r\n                            <Row className=\"pt-2 pb-2\" style={{borderBottom: '1px solid #e1e1e1'}}>\r\n                                {this.printFruit('banana')}\r\n                                {this.printFruit('red_apple')} <br/><br/>\r\n                                {this.printFruit('green_apple')}\r\n                                {this.printFruit('orange')}\r\n                            </Row>\r\n                            \r\n                            {/*<Row className=\"pt-2 pb-2\" style={{borderBottom: '1px solid #e1e1e1'}}>\r\n                                <Col className=\"wrap_name\" md={6}>\r\n                                    <p className=\"name\" style={{display: 'inline', lineHeight: '32px'}}>\r\n                                        Fruit\r\n                                    </p>\r\n                                    <NumberInput \r\n                                        readonly={true}\r\n                                        onChange={this.onChangeSecond.bind(this)}\r\n                                        name=\"fruit\"\r\n                                        value={this.state.choice_two.list.fruit}\r\n                                        style={{float: 'right'}}\r\n                                    />\r\n                                </Col>\r\n                            </Row>*/}\r\n\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Card.Body>\r\n\r\n                <Card.Body className={this.state.choice_three.error ? 'su-alert' : ''}>\r\n                    <h5 style={{fontWeight: '600', color: '#f48222'}}>3. Select your bottled beverage <span style={{color: 'rgb(84, 84, 84)'}}>- {this.state.choice_three.qty} of 1</span></h5>\r\n\r\n                    <ListGroup variant=\"flush\">\r\n                        <ListGroup.Item className=\"menu-list\" style={{borderWidth: '0px'}}>\r\n\r\n                            <Row className=\"pb-3\" style={{borderBottom: '1px solid #e1e1e1'}}>\r\n                                {\r\n                                    ['coke', 'diet_coke', 'dr_pepper', 'sprite'].map((key, index) => {\r\n                                        return (\r\n                                            <Col className=\"wrap_name\" md={3} key={'lunchbox_soda'+index}>\r\n                                                <p className=\"name\">\r\n                                                    {this.props.lunch.products.beverages[key]}\r\n                                                </p>\r\n                                                <NumberInput \r\n                                                    readonly={true}\r\n                                                    onChange={this.onChangeThree.bind(this)}\r\n                                                    name={key}\r\n                                                    value={this.state.choice_three.list[key]}\r\n                                                    style={{float: 'left'}}\r\n                                                />\r\n                                            </Col>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </Row>\r\n\r\n                            <Row className=\"pb-3\" style={{borderBottom: '1px solid #e1e1e1'}}>\r\n                                {\r\n                                    ['dasani', 'fruit_punch', 'mountain_blast'].map((key, index) => {\r\n                                        return (\r\n                                            <Col className=\"wrap_name\" md={3} key={'print_soda_'+index}>\r\n                                                <p className=\"name\">\r\n                                                    {this.props.lunch.products.beverages[key]}\r\n                                                </p>\r\n                                                <NumberInput \r\n                                                    readonly={true}\r\n                                                    onChange={this.onChangeThree.bind(this)}\r\n                                                    name={key}\r\n                                                    value={this.state.choice_three.list[key]}\r\n                                                    style={{float: 'left'}}\r\n                                                />\r\n                                            </Col>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </Row>\r\n\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Card.Body>\r\n\r\n                \r\n\r\n                <Row>\r\n                    <Col>\r\n                        <ButtonToolbar className=\"mt-3\">\r\n                            {\r\n                                this.props.lunch.actionType === 'add' ?\r\n                                <Button variant=\"primary\" size=\"md\" onClick={this.addLunchBox.bind(this)} className=\"add-btn\">\r\n                                    Add\r\n                                </Button>\r\n                                :\r\n                                <Button variant=\"primary\" size=\"md\" onClick={this.updateLunchBox.bind(this)} className=\"add-btn\">\r\n                                    Update\r\n                                </Button>\r\n                            }\r\n                            <Button variant=\"light\" size=\"md\" onClick={this.closeLunchBox.bind(this)} className=\"cancel-btn ml-2\">\r\n                                Cancel\r\n                            </Button>\r\n                        </ButtonToolbar>\r\n                    </Col>\r\n                </Row>\r\n\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    lunch: state.lunch\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => (\r\n    {\r\n        openLunchBox: () => dispatch(openLunchBox()),\r\n        addLunchBox: (list) => dispatch(addLunchBox(list)),\r\n        updateLunchBox: (id, list) => dispatch(updateLunchBox(id, list)),\r\n        closeLunchBox: () => dispatch(closeLunchBox())\r\n    }\r\n)\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(LunchBox)","import { \r\n    OPEN_LUNCHBOX,\r\n    ADD_LUNCHBOX,\r\n    OPEN_LUNCHBOX_EDITOR,\r\n    UPDATE_LUNCHBOX,\r\n    REMOVE_LUNCHBOX,\r\n    CLOSE_LUNCHBOX \r\n} from './actionTypes.js'\r\n\r\nexport const openLunchBox = () => ({\r\n    type: OPEN_LUNCHBOX\r\n})\r\nexport const addLunchBox = (list) => ({\r\n    type: ADD_LUNCHBOX,\r\n    payload: {\r\n        list\r\n    }\r\n})\r\n\r\nexport const openLunchBoxEditor = (index) => ({\r\n    type: OPEN_LUNCHBOX_EDITOR,\r\n    payload: {\r\n        index\r\n    }\r\n})\r\n\r\nexport const updateLunchBox = (index, list) => ({\r\n    type: UPDATE_LUNCHBOX,\r\n    payload: {\r\n        index,\r\n        list\r\n    }\r\n})\r\n\r\nexport const removeLunchBox = (index) => ({\r\n    type: REMOVE_LUNCHBOX,\r\n    payload: {\r\n        index\r\n    }\r\n})\r\n\r\nexport const closeLunchBox = (name, qty) => ({\r\n    type: CLOSE_LUNCHBOX\r\n})","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from 'react-router-dom';\r\nimport { Row, Col, ButtonToolbar } from 'react-bootstrap';\r\n\r\nimport { updateCurrentNav } from '../redux/actions/main';\r\n\r\nconst roundTo = require('roundto');\r\n\r\nclass Bottom extends React.Component {\r\n\r\n    getTotal = () => {\r\n        return roundTo(\r\n                this.props.global.lunch.total +\r\n                this.props.global.teamlunch.total,\r\n                2\r\n            );\r\n    }\r\n\r\n    render() {\r\n\r\n        const navIndex = this.props.global.main.nav;\r\n        const routes = this.props.global.main.routes;\r\n\r\n        return(\r\n            <React.Fragment>\r\n                <Row>\r\n                    <Col>\r\n                        <p style={{fontSize: '22px', fontWeight: '600', textAlign: 'right', padding: '20px 15px'}}>Subtotal ${this.getTotal()}</p>\r\n                    </Col>\r\n                </Row>\r\n                <ButtonToolbar>\r\n\r\n                    {\r\n                        (navIndex !== 0 && navIndex !== 2) ?\r\n                        <Link\r\n                        className={\"btn add-btn\"}\r\n                        style={{marginRight: '10px', width: '200px'}}\r\n                        to={routes[navIndex-1]}\r\n                        >Prev</Link>\r\n                        :\r\n                        null\r\n                    }\r\n\r\n                    {\r\n                        navIndex !== 2 ? \r\n                        <Link\r\n                        className={\"btn add-btn\"}\r\n                        style={{marginLeft: 'auto', width:'200px'}}\r\n                        to={routes[navIndex+1]}\r\n                        >Next</Link>\r\n                        :\r\n                        <Link\r\n                        className={\"btn add-btn\"}\r\n                        style={{marginLeft: 'auto', width:'150px'}}\r\n                        to={routes[0]}\r\n                        >Add More Food</Link>\r\n                    }\r\n\r\n                </ButtonToolbar>\r\n\r\n                {/* <ButtonToolbar style={{marginTop: '15px'}}>\r\n                    {\r\n                        navIndex !== 2 ?\r\n                        <Link\r\n                        className={\"btn add-btn\"}\r\n                        style={{width:'100%'}}\r\n                        to={routes[2]}\r\n                        >Review Order</Link>\r\n                        :\r\n                        null\r\n                    }\r\n                </ButtonToolbar> */}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    global: state\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => (\r\n    {\r\n        updateCurrentNav: (index) => dispatch(updateCurrentNav(index))\r\n    }\r\n)\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Bottom)","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Row, Col, Card, ListGroup, ButtonToolbar, Button } from 'react-bootstrap';\r\nimport NumberInput from '../common/numberInput.js';\r\nimport TopNav from '../common/TopNav.js';\r\n\r\nimport { updateCurrentNav } from '../../redux/actions/main';\r\nimport { openLunchBox, removeLunchBox, openLunchBoxEditor } from '../../redux/actions/lunch';\r\n\r\nimport LunchBox from './LunchBox';\r\nimport Bottom from '../bottom';\r\n\r\nclass Lunch extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.props.updateCurrentNav(0);\r\n    }\r\n\r\n    openLunchBox = () => {\r\n        this.props.openLunchBox();\r\n    }\r\n\r\n    openLunchBoxEditor = (id) => {\r\n        this.props.openLunchBoxEditor(id);\r\n    }\r\n\r\n    removeLunchBox = (id) => {\r\n        this.props.removeLunchBox(id);\r\n    }\r\n\r\n    printItems = (list) => {\r\n        let print = [];\r\n        for (let key in list){\r\n            if (list[key] !== 0){\r\n                print.push(<li key={key}>{this.props.lunch.names[key].name + ' : ' + list[key]}</li>);     \r\n            }                           \r\n        }\r\n        return (<ul style={{paddingLeft: '20px'}}>{print}</ul>);\r\n    }\r\n\r\n    /*printExtra = (extras) => {\r\n        let print = [];\r\n        for (let i = 0; i < 2; i++) {\r\n            const extra = extras.list[i];\r\n            if (extra.one !== 'None') {\r\n                const one = <span>{extra.one}</span>;\r\n                let two = null;\r\n                let three = null;\r\n                if (extra.two !== 'None'){ two = <span>, {extra.two}</span> }\r\n                if (extra.three !== 'None'){ three = <span>, {extra.three}</span> }\r\n                print.push(\r\n                    <div key={'extra' + i} style={{fontSize: '0.9rem'}}>Extra #{i+1} : {one} {two} {three}</div>\r\n                )   \r\n\r\n            }            \r\n        }\r\n\r\n        if (print.length === 0){return null;}\r\n        else {\r\n            return (\r\n                <React.Fragment>\r\n                    <hr style={{border: '1px solid #e1e1e1'}} />\r\n                    <h6 style={{width: '100%', fontWeight: '600'}}>Extra Sandwiches or Salads</h6>\r\n                    {print}\r\n                </React.Fragment>\r\n            );\r\n        }\r\n    }*/\r\n\r\n    render() {\r\n        let count = 0;\r\n        return (\r\n            <React.Fragment>\r\n            {\r\n                this.props.lunch.open_box ?\r\n                <LunchBox></LunchBox>\r\n                :\r\n                <Card className=\"col-md-12 p-0\">\r\n\r\n                    <Card.Header>\r\n                        <TopNav />\r\n                    </Card.Header>\r\n\r\n                    <Card.Body>\r\n                        <Card.Title>Lunch Box</Card.Title>\r\n                    </Card.Body>\r\n\r\n                    <ListGroup variant=\"flush\">\r\n\r\n                        <ListGroup.Item className=\"menu-list\">\r\n\r\n                            <Row>\r\n                                <Col className=\"wrap_name\">\r\n                                    <p style={{fontWeight: '600'}}>Single - $9.99</p>\r\n                                    <p>\r\n                                        Select one wrap or salad<br />\r\n                                        Select one side (chips or whole fruit)<br />\r\n                                        Select one bottled drink\r\n                                    </p>\r\n                                </Col>\r\n                                <Col>\r\n                                    <NumberInput \r\n                                        noleft={true}\r\n                                        readonly={true}\r\n                                        onChange={this.openLunchBox.bind(this)}\r\n                                        name=\"lunch\"\r\n                                        value={this.props.lunch.qty}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                        \r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item className=\"menu-list\">\r\n\r\n                            <Row>\r\n                                \r\n                                {\r\n                                    this.props.lunch.list.map((boxes, pindex) => {\r\n                                        if (boxes.length !== 0) {\r\n                                            count++;\r\n                                            return (\r\n                                            <Col key={'col-'+pindex} md={6} className=\"wrap-lunch-box\">\r\n                                                <div key={'list-'+pindex} style={{padding: '10px', border: '1px solid #dadada'}}>\r\n                                                    <h3 className=\"p-0\" style={{fontSize: '1rem'}}>Box #{count}\r\n                                                        <ButtonToolbar style={{float: 'right'}}>\r\n                                                            <Button onClick={() => {this.openLunchBoxEditor(pindex)}} className=\"sweet-edit-btn edit-btn\">Edit</Button>\r\n                                                            <Button onClick={() => {this.removeLunchBox(pindex)}} className=\"sweet-remove-btn remove-btn\">Remove</Button>\r\n                                                        </ButtonToolbar>\r\n                                                    </h3>\r\n                                                    <div>\r\n                                                        <ul className=\"list-inline\">\r\n                                                            <li className=\"list-inline-item\"> \r\n                                                                {this.printItems(boxes.choice_one.list)}\r\n                                                            </li>\r\n                                                            <li className=\"list-inline-item\">\r\n                                                                {this.printItems(boxes.choice_two.list)} \r\n                                                            </li>\r\n                                                            <li className=\"list-inline-item\">\r\n                                                                {this.printItems(boxes.choice_three.list)} \r\n                                                            </li>\r\n                                                            {/*<li className=\"list-inline-item\">\r\n                                                                {this.printExtra(boxes.extra)} \r\n                                                            </li>*/}\r\n                                                        </ul>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </Col>\r\n                                            );\r\n                                        }\r\n                                        else {\r\n                                            return null;\r\n                                        }\r\n                                    }) \r\n                                }\r\n                            </Row>\r\n\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item className=\"menu-list total\">\r\n                            <Row>\r\n                                <Col>\r\n                                    ${this.props.lunch.total}\r\n                                </Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n\r\n                    </ListGroup>\r\n\r\n                    <Row>\r\n                        <Col md={12}>\r\n                            <Bottom />\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </Card>\r\n            }\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    lunch: state.lunch\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => (\r\n    {\r\n        openLunchBox: () => dispatch(openLunchBox()),\r\n        removeLunchBox: (index) => dispatch(removeLunchBox(index)),\r\n        updateCurrentNav: (index) => dispatch(updateCurrentNav(index)),\r\n        openLunchBoxEditor: (id) => dispatch(openLunchBoxEditor(id))\r\n    }\r\n)\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Lunch)","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Row, Col, Card, ListGroup, ButtonToolbar, Button, Form } from 'react-bootstrap';\r\nimport NumberInput from '../common/numberInput.js';\r\n\r\nimport { openTEAMLUNCH_DOZEN, addTEAMLUNCH_DOZEN, updateTEAMLUNCH_DOZEN, closeTEAMLUNCH_DOZEN, openTEAMLUNCH_HALF, addTEAMLUNCH_HALF, updateTEAMLUNCH_HALF, closeTEAMLUNCH_HALF } from '../../redux/actions/teamlunch';\r\n\r\nimport './lunchbox.css';\r\n\r\nclass TeamLunchBox extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        // Create ref objects\r\n        this.first = React.createRef();\r\n\r\n        // let list = [];\r\n\r\n        if (this.props.teamlunch.actionType === 'add'){\r\n            // Initialize\r\n            this.state = {\r\n                choice_one: {\r\n                    list: {italian_job: 0,hail_caesar: 0,gyro_wrapture: 0,wrapzilla: 0,crunch_roll: 0, wedge_quesadilla: 0,garden_ofeden: 0,kale_crunch: 0,chicken_egg: 0, whats_updoc: 0,to_thaifor: 0},\r\n                    qty: 0,\r\n                    error: false\r\n                },\r\n                choice_two: {\r\n                    list: {pita: 0, baked_lays: 0, bbq_lays: 0, fruit: 0,banana: 0,red_apple: 0,green_apple: 0,orange: 0,},\r\n                    qty: 0,\r\n                    error: false\r\n                },\r\n                choice_three: {\r\n                    list: {coke: 0,diet_coke: 0,dr_pepper: 0,sprite: 0,dasani: 0,fruit_punch: 0,mountain_blast: 0},\r\n                    qty: 0,\r\n                    error: false\r\n                },\r\n                //extra: {\r\n                //    list: [\r\n                //        {one: 'None', two: 'None', three: 'None'},\r\n                //        {one: 'None', two: 'None', three: 'None'}\r\n                //    ],\r\n                //    total: 0\r\n                //},\r\n                error: false\r\n            }\r\n        }\r\n        else {\r\n            this.state = {\r\n\r\n                choice_one: {\r\n                    list: this.props.teamlunch.list[this.props.teamlunch.id].choice_one.list,\r\n                    qty: this.props.teamlunch.list[this.props.teamlunch.id].choice_one.qty,\r\n                    error: false\r\n                },\r\n                choice_two: {\r\n                    list: this.props.teamlunch.list[this.props.teamlunch.id].choice_two.list,\r\n                    qty: this.props.teamlunch.list[this.props.teamlunch.id].choice_two.qty,\r\n                    error: false\r\n                },\r\n                choice_three: {\r\n                    list: this.props.teamlunch.list[this.props.teamlunch.id].choice_three.list,\r\n                    qty: this.props.teamlunch.list[this.props.teamlunch.id].choice_three.qty,\r\n                    error: false\r\n                },\r\n                extra: this.props.teamlunch.list[this.props.teamlunch.id].extra,\r\n                error: false\r\n            }\r\n        }\r\n        //set max quantity for each different type, dozen and half dozen\r\n        if (this.props.teamlunch.dozen === true) {\r\n            this.state.max_qty=12;\r\n        } else {\r\n            this.state.max_qty=6;\r\n        }\r\n    }\r\n\r\n    checkQty = (list, name, qty) => {\r\n        let tmp_qty = 0;\r\n        for (let key in list){\r\n            if (key !== name){\r\n                tmp_qty = tmp_qty + list[key];    \r\n            }\r\n            else{\r\n                tmp_qty = tmp_qty + qty;\r\n            }\r\n        }\r\n\r\n        return tmp_qty;\r\n    }\r\n\r\n    updateInput = (name, qty, type, total_qty) => {\r\n        this.setState({\r\n            error: false,\r\n            [type]: {\r\n                ...this.state[type],\r\n                list: {\r\n                    ...this.state[type].list,\r\n                    [name]: qty\r\n                },\r\n                qty: total_qty\r\n            }\r\n        })\r\n    }\r\n\r\n    onChangeFirst = (name, qty) => {\r\n        const tmp_qty = this.checkQty(this.state.choice_one.list, name, qty);\r\n        if (tmp_qty > this.state.max_qty) { //change max quantity to be added here and below in validateForm()\r\n            return 'error';\r\n        }\r\n        else {\r\n            this.setState({choice_one:{...this.state.choice_one, error: false}}, function() {\r\n                this.updateInput(name, qty, 'choice_one', tmp_qty);\r\n            });\r\n        }\r\n    }\r\n\r\n    onChangeSecond = (name, qty) => {\r\n        const tmp_qty = this.checkQty(this.state.choice_two.list, name, qty);\r\n        if (tmp_qty > this.state.max_qty) { //change max quantity to be added here and below in validateForm()\r\n            return 'error';\r\n        }\r\n        else {\r\n            this.setState({choice_two:{...this.state.choice_two, error: false}}, function() {\r\n                this.updateInput(name, qty, 'choice_two', tmp_qty);\r\n            });\r\n        }\r\n    }\r\n\r\n    onChangeThree = (name, qty) => {\r\n        const tmp_qty = this.checkQty(this.state.choice_three.list, name, qty);\r\n        if (tmp_qty > this.state.max_qty) { //change max quantity to be added here and below in validateForm()\r\n            return 'error';\r\n        }\r\n        else {\r\n            this.setState({choice_three:{...this.state.choice_three, error: false}}, function() {\r\n                this.updateInput(name, qty, 'choice_three', tmp_qty);\r\n            });\r\n        }\r\n    }\r\n    //dozen\r\n    addTEAMLUNCH_DOZEN = () => {\r\n        // const qty = this.state.choice_one.qty + this.state.choice_two.qty + this.state.choice_three.qty;\r\n\r\n        if (!this.validateForm()) {\r\n            const list = {\r\n                choice_one: this.state.choice_one,\r\n                choice_two: this.state.choice_two,\r\n                choice_three: this.state.choice_three,\r\n                extra: this.state.extra\r\n            }\r\n            this.props.addTEAMLUNCH_DOZEN(list);\r\n        }\r\n    }\r\n\r\n    updateTEAMLUNCH_DOZEN = () => {\r\n        if (!this.validateForm()){\r\n            const list = {\r\n                choice_one: this.state.choice_one,\r\n                choice_two: this.state.choice_two,\r\n                choice_three: this.state.choice_three,\r\n                extra: this.state.extra\r\n            }\r\n            this.props.updateTEAMLUNCH_DOZEN(this.props.teamlunch.id, list);\r\n        }\r\n    }\r\n\r\n    closeTEAMLUNCH_DOZEN = () => {\r\n        this.props.closeTEAMLUNCH_DOZEN();\r\n    }\r\n    //half dozen\r\n    addTEAMLUNCH_HALF = () => {\r\n        // const qty = this.state.choice_one.qty + this.state.choice_two.qty + this.state.choice_three.qty;\r\n\r\n        if (!this.validateForm()) {\r\n            const list = {\r\n                choice_one: this.state.choice_one,\r\n                choice_two: this.state.choice_two,\r\n                choice_three: this.state.choice_three,\r\n                extra: this.state.extra\r\n            }\r\n            this.props.addTEAMLUNCH_HALF(list);\r\n        }\r\n    }\r\n\r\n    updateTEAMLUNCH_HALF = () => {\r\n        if (!this.validateForm()){\r\n            const list = {\r\n                choice_one: this.state.choice_one,\r\n                choice_two: this.state.choice_two,\r\n                choice_three: this.state.choice_three,\r\n                extra: this.state.extra\r\n            }\r\n            this.props.updateTEAMLUNCH_HALF(this.props.teamlunch.id, list);\r\n        }\r\n    }\r\n\r\n    closeTEAMLUNCH_HALF = () => {\r\n        this.props.closeTEAMLUNCH_HALF();\r\n    }\r\n\r\n    validateForm = () => {\r\n        let error = false;\r\n        if (this.state.choice_one.qty !== this.state.max_qty) { //change max quantity to be added here and above in onChangeOne()\r\n            this.setState({choice_one:{...this.state.choice_one, error: true}}, function() {\r\n                window.scrollTo(0,400);\r\n            });\r\n            error = true;\r\n        }\r\n        else if (this.state.choice_two.qty !== this.state.max_qty) { //change max quantity to be added here and above in onChangeTwo()\r\n            this.setState({choice_two:{...this.state.choice_two, error: true}}, function() {\r\n                window.scrollTo(0,900);\r\n            });\r\n            error = true;\r\n        }\r\n        else if (this.state.choice_three.qty !== this.state.max_qty) { //change max quantity to be added here and above in onChangeThree()\r\n            this.setState({choice_three:{...this.state.choice_three, error: true}}, function() {\r\n                window.scrollTo(0,1000);\r\n            });\r\n            error = true;\r\n        }\r\n        return error;\r\n    }\r\n\r\n    printSandwiches = (key) => {\r\n        return (\r\n            <Col className=\"wrap_name\" md={6}>\r\n                <p className=\"name\">\r\n                    {this.props.teamlunch.products.sandwiches[key].name}\r\n                </p>\r\n                <p className=\"description\">\r\n                    {this.props.teamlunch.products.sandwiches[key].description}\r\n                </p>\r\n                <NumberInput \r\n                    readonly={true}\r\n                    onChange={this.onChangeFirst.bind(this)}\r\n                    name={key}\r\n                    value={this.state.choice_one.list[key]}\r\n                    style={{float: 'right'}}\r\n                />\r\n            </Col>\r\n        );\r\n    }\r\n\r\n    printSalads = (key) => {\r\n        return (\r\n            <Col className=\"wrap_name\" md={6}>\r\n                <p className=\"name\">\r\n                    {this.props.teamlunch.products.salads[key].name}\r\n                </p>\r\n                <p className=\"description\">\r\n                    {this.props.teamlunch.products.salads[key].description}\r\n                </p>\r\n                <NumberInput \r\n                    readonly={true}\r\n                    onChange={this.onChangeFirst.bind(this)}\r\n                    name={key}\r\n                    value={this.state.choice_one.list[key]}\r\n                    style={{float: 'right'}}\r\n                />\r\n            </Col>\r\n        );\r\n    }\r\n\r\n    printChips = (key) => {\r\n        return (\r\n            <Col className=\"wrap_name\" md={6}>\r\n                <p className=\"name\" style={{display: 'inline', lineHeight: '32px'}}>\r\n                    {this.props.teamlunch.products.chips[key]}\r\n                </p>\r\n                <NumberInput \r\n                    readonly={true}\r\n                    onChange={this.onChangeSecond.bind(this)}\r\n                    name={key}\r\n                    value={this.state.choice_two.list[key]}\r\n                    style={{float: 'right'}}\r\n                />\r\n            </Col>\r\n        );\r\n    }\r\n\r\n    printFruit = (key) => {\r\n        return (\r\n            <Col className=\"wrap_name\" md={6}>\r\n                <p className=\"name\" style={{display: 'inline', lineHeight: '32px'}}>\r\n                    {this.props.teamlunch.products.fruit[key]}\r\n                </p>\r\n                <NumberInput \r\n                    readonly={true}\r\n                    onChange={this.onChangeSecond.bind(this)}\r\n                    name={key}\r\n                    value={this.state.choice_two.list[key]}\r\n                    style={{float: 'right'}}\r\n                />\r\n            </Col>\r\n        );\r\n    }\r\n\r\n    onChangeExtra = (id,order,event) => {\r\n        let list = this.state.extra.list;\r\n        list[id][order] = event.target.value;\r\n        this.setState({\r\n            extra: {\r\n                ...this.state.extra,\r\n                list: list\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Card className=\"col-md-12 p-0\">\r\n\r\n                <Card.Header>\r\n                    <p>Smart Lunch for the Team</p>\r\n                    <ul>\r\n                        <li>Select your wraps or salads</li>\r\n                        <li>Select your sides</li>\r\n                        <li>Select your bottled drinks</li>\r\n                    </ul>\r\n                </Card.Header>\r\n\r\n                <Card.Body className={this.state.choice_one.error ? 'su-alert' : ''}>\r\n                    <h5 style={{fontWeight: '600', color: '#f48222'}}>1. Select your salads or wraps <span style={{color: 'rgb(84, 84, 84)'}}>- {this.state.choice_one.qty} of {this.state.max_qty}</span></h5>\r\n                    \r\n                    <ListGroup variant=\"flush\">\r\n                        <ListGroup.Item className=\"menu-list\" style={{borderWidth: '0px'}}>\r\n\r\n                            <p style={{fontWeight: '600', textDecoration: 'underline', fontSize: '18px'}}>Wraps</p>\r\n                            \r\n                            <Row className=\"pb-3\" style={{borderBottom: '1px solid #e1e1e1'}}>\r\n                                {this.printSandwiches('italian_job')}\r\n                                {this.printSandwiches('hail_caesar')}\r\n                            </Row>\r\n\r\n                            <Row className=\"pt-2 pb-3\" style={{borderBottom: '1px solid #e1e1e1'}}>\r\n                                {this.printSandwiches('gyro_wrapture')}\r\n                                {this.printSandwiches('wrapzilla')}\r\n                            </Row>\r\n\r\n                            <Row className=\"pt-2 pb-3\" style={{borderBottom: '1px solid #e1e1e1'}}>\r\n                                {this.printSandwiches('crunch_roll')}\r\n                                {this.printSandwiches('wedge_quesadilla')}\r\n                            </Row>\r\n\r\n                            <Row className=\"pt-2 pb-3\" style={{borderBottom: '1px solid #e1e1e1'}}>\r\n                                {this.printSandwiches('garden_ofeden')}\r\n                            </Row>\r\n\r\n                            <p className=\"mt-3\"  style={{fontWeight: '600', textDecoration: 'underline', fontSize: '18px'}}>Salads</p>\r\n\r\n                            <Row className=\"pt-2 pb-3\" style={{borderBottom: '1px solid #e1e1e1'}}>\r\n                                {this.printSalads('kale_crunch')}\r\n                                {this.printSalads('chicken_egg')}\r\n                            </Row>\r\n\r\n                            <Row className=\"pt-2 pb-3\" style={{borderBottom: '1px solid #e1e1e1'}}>\r\n                                {this.printSalads('whats_updoc')}\r\n                                {this.printSalads('to_thaifor')}\r\n                            </Row>\r\n\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Card.Body>\r\n\r\n                <Card.Body className={this.state.choice_two.error ? 'su-alert' : ''}>\r\n                    <h5 style={{fontWeight: '600', color: '#f48222'}}>2. Select your sides <span style={{color: 'rgb(84, 84, 84)'}}>- {this.state.choice_two.qty} of {this.state.max_qty}</span></h5>\r\n                    <ListGroup variant=\"flush\">\r\n                        <ListGroup.Item className=\"menu-list\" style={{borderWidth: '0px'}}>\r\n<p className=\"mt-3\"  style={{fontWeight: '600', textDecoration: 'underline', fontSize: '18px'}}>Chips</p>\r\n                            <Row className=\"pt-2 pb-2\" style={{borderBottom: '1px solid #e1e1e1'}}>\r\n                                {this.printChips('pita')}\r\n                                {this.printChips('baked_lays')} <br/><br/>\r\n                                {this.printChips('bbq_lays')}\r\n                            </Row>\r\n\r\n                            <p className=\"mt-3\"  style={{fontWeight: '600', textDecoration: 'underline', fontSize: '18px'}}>Whole Fruit</p>\r\n                            <Row className=\"pt-2 pb-2\" style={{borderBottom: '1px solid #e1e1e1'}}>\r\n                                {this.printFruit('banana')}\r\n                                {this.printFruit('red_apple')} <br/><br/>\r\n                                {this.printFruit('green_apple')}\r\n                                {this.printFruit('orange')}\r\n                            </Row>\r\n                            \r\n                            {/*<Row className=\"pt-2 pb-2\" style={{borderBottom: '1px solid #e1e1e1'}}>\r\n                                <Col className=\"wrap_name\" md={6}>\r\n                                    <p className=\"name\" style={{display: 'inline', lineHeight: '32px'}}>\r\n                                        Fruit\r\n                                    </p>\r\n                                    <NumberInput \r\n                                        readonly={true}\r\n                                        onChange={this.onChangeSecond.bind(this)}\r\n                                        name=\"fruit\"\r\n                                        value={this.state.choice_two.list.fruit}\r\n                                        style={{float: 'right'}}\r\n                                    />\r\n                                </Col>\r\n                            </Row>*/}\r\n\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Card.Body>\r\n\r\n                <Card.Body className={this.state.choice_three.error ? 'su-alert' : ''}>\r\n                    <h5 style={{fontWeight: '600', color: '#f48222'}}>3. Select your bottled drinks <span style={{color: 'rgb(84, 84, 84)'}}>- {this.state.choice_three.qty} of {this.state.max_qty}</span></h5>\r\n\r\n                    <ListGroup variant=\"flush\">\r\n                        <ListGroup.Item className=\"menu-list\" style={{borderWidth: '0px'}}>\r\n\r\n                            <Row className=\"pb-3\" style={{borderBottom: '1px solid #e1e1e1'}}>\r\n                                {\r\n                                    ['coke', 'diet_coke', 'dr_pepper', 'sprite'].map((key, index) => {\r\n                                        return (\r\n                                            <Col className=\"wrap_name\" md={3} key={'lunchbox_soda'+index}>\r\n                                                <p className=\"name\">\r\n                                                    {this.props.teamlunch.products.beverages[key]}\r\n                                                </p>\r\n                                                <NumberInput \r\n                                                    readonly={true}\r\n                                                    onChange={this.onChangeThree.bind(this)}\r\n                                                    name={key}\r\n                                                    value={this.state.choice_three.list[key]}\r\n                                                    style={{float: 'left'}}\r\n                                                />\r\n                                            </Col>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </Row>\r\n\r\n                            <Row className=\"pb-3\" style={{borderBottom: '1px solid #e1e1e1'}}>\r\n                                {\r\n                                    ['dasani', 'fruit_punch', 'mountain_blast'].map((key, index) => {\r\n                                        return (\r\n                                            <Col className=\"wrap_name\" md={3} key={'print_soda_'+index}>\r\n                                                <p className=\"name\">\r\n                                                    {this.props.teamlunch.products.beverages[key]}\r\n                                                </p>\r\n                                                <NumberInput \r\n                                                    readonly={true}\r\n                                                    onChange={this.onChangeThree.bind(this)}\r\n                                                    name={key}\r\n                                                    value={this.state.choice_three.list[key]}\r\n                                                    style={{float: 'left'}}\r\n                                                />\r\n                                            </Col>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </Row>\r\n\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Card.Body>\r\n\r\n                \r\n\r\n                <Row>\r\n                    <Col>\r\n                        <ButtonToolbar className=\"mt-3\">\r\n                            {\r\n                                this.props.teamlunch.actionType === 'add' ?\r\n                                <Button variant=\"primary\" size=\"md\" onClick={this.props.teamlunch.dozen ? this.addTEAMLUNCH_DOZEN.bind(this) : this.addTEAMLUNCH_HALF.bind(this)} className=\"add-btn\">\r\n                                    Add\r\n                                </Button>\r\n                                :\r\n                                <Button variant=\"primary\" size=\"md\" onClick={this.props.teamlunch.dozen ? this.updateTEAMLUNCH_DOZEN.bind(this) : this.updateTEAMLUNCH_HALF.bind(this)} className=\"add-btn\">\r\n                                    Update\r\n                                </Button>\r\n                            }\r\n                            <Button variant=\"light\" size=\"md\" onClick={this.props.teamlunch.dozen ? this.closeTEAMLUNCH_DOZEN.bind(this) : this.closeTEAMLUNCH_HALF.bind(this)} className=\"cancel-btn ml-2\">\r\n                                Cancel\r\n                            </Button>\r\n                        </ButtonToolbar>\r\n                    </Col>\r\n                </Row>\r\n\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    teamlunch: state.teamlunch\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => (\r\n    {\r\n        openTEAMLUNCH_DOZEN: () => dispatch(openTEAMLUNCH_DOZEN()),\r\n        addTEAMLUNCH_DOZEN: (list) => dispatch(addTEAMLUNCH_DOZEN(list)),\r\n        updateTEAMLUNCH_DOZEN: (id, list) => dispatch(updateTEAMLUNCH_DOZEN(id, list)),\r\n        closeTEAMLUNCH_DOZEN: () => dispatch(closeTEAMLUNCH_DOZEN()),\r\n        openTEAMLUNCH_HALF: () => dispatch(openTEAMLUNCH_HALF()),\r\n        addTEAMLUNCH_HALF: (list) => dispatch(addTEAMLUNCH_HALF(list)),\r\n        updateTEAMLUNCH_HALF: (id, list) => dispatch(updateTEAMLUNCH_HALF(id, list)),\r\n        closeTEAMLUNCH_HALF: () => dispatch(closeTEAMLUNCH_HALF())\r\n    }\r\n)\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(TeamLunchBox)","import { \r\n    OPEN_TEAMLUNCH_DOZEN,\r\n    ADD_TEAMLUNCH_DOZEN,\r\n    OPEN_TEAMLUNCH_DOZEN_EDITOR,\r\n    UPDATE_TEAMLUNCH_DOZEN,\r\n    REMOVE_TEAMLUNCH_DOZEN,\r\n    CLOSE_TEAMLUNCH_DOZEN, \r\n    OPEN_TEAMLUNCH_HALF,\r\n    ADD_TEAMLUNCH_HALF,\r\n    OPEN_TEAMLUNCH_HALF_EDITOR,\r\n    UPDATE_TEAMLUNCH_HALF,\r\n    REMOVE_TEAMLUNCH_HALF,\r\n    CLOSE_TEAMLUNCH_HALF, \r\n} from './actionTypes.js'\r\n\r\n// dozen\r\nexport const openTEAMLUNCH_DOZEN = () => ({\r\n    type: OPEN_TEAMLUNCH_DOZEN\r\n})\r\nexport const addTEAMLUNCH_DOZEN = (list) => ({\r\n    type: ADD_TEAMLUNCH_DOZEN,\r\n    payload: {\r\n        list\r\n    }\r\n})\r\n\r\nexport const openTEAMLUNCH_DOZENEditor = (index) => ({\r\n    type: OPEN_TEAMLUNCH_DOZEN_EDITOR,\r\n    payload: {\r\n        index\r\n    }\r\n})\r\n\r\nexport const updateTEAMLUNCH_DOZEN = (index, list) => ({\r\n    type: UPDATE_TEAMLUNCH_DOZEN,\r\n    payload: {\r\n        index,\r\n        list\r\n    }\r\n})\r\n\r\nexport const removeTEAMLUNCH_DOZEN = (index) => ({\r\n    type: REMOVE_TEAMLUNCH_DOZEN,\r\n    payload: {\r\n        index\r\n    }\r\n})\r\n\r\nexport const closeTEAMLUNCH_DOZEN = (name, qty) => ({\r\n    type: CLOSE_TEAMLUNCH_DOZEN\r\n})\r\n\r\n//half\r\nexport const openTEAMLUNCH_HALF = () => ({\r\n    type: OPEN_TEAMLUNCH_HALF\r\n})\r\n\r\nexport const addTEAMLUNCH_HALF = (list) => ({\r\n    type: ADD_TEAMLUNCH_HALF,\r\n    payload: {\r\n        list\r\n    }\r\n})\r\n\r\nexport const openTEAMLUNCH_HALFEditor = (index) => ({\r\n    type: OPEN_TEAMLUNCH_HALF_EDITOR,\r\n    payload: {\r\n        index\r\n    }\r\n})\r\n\r\nexport const updateTEAMLUNCH_HALF = (index, list) => ({\r\n    type: UPDATE_TEAMLUNCH_HALF,\r\n    payload: {\r\n        index,\r\n        list\r\n    }\r\n})\r\n\r\nexport const removeTEAMLUNCH_HALF = (index) => ({\r\n    type: REMOVE_TEAMLUNCH_HALF,\r\n    payload: {\r\n        index\r\n    }\r\n})\r\n\r\nexport const closeTEAMLUNCH_HALF = (name, qty) => ({\r\n    type: CLOSE_TEAMLUNCH_HALF\r\n})","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Row, Col, Card, ListGroup, ButtonToolbar, Button } from 'react-bootstrap';\r\nimport NumberInput from '../common/numberInput.js';\r\nimport TopNav from '../common/TopNav.js';\r\n\r\nimport { updateCurrentNav } from '../../redux/actions/main';\r\nimport { openTEAMLUNCH_DOZEN, removeTEAMLUNCH_DOZEN, openTEAMLUNCH_DOZENEditor, openTEAMLUNCH_HALF, removeTEAMLUNCH_HALF, openTEAMLUNCH_HALFEditor } from '../../redux/actions/teamlunch';\r\n\r\nimport TeamLunchBox from './LunchBox';\r\nimport Bottom from '../bottom';\r\n\r\nclass TeamLunch extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.props.updateCurrentNav(1);\r\n    }\r\n\r\n    openTEAMLUNCH_DOZEN = () => {\r\n        this.props.openTEAMLUNCH_DOZEN();\r\n    }\r\n\r\n    openTEAMLUNCH_DOZENEditor = (id) => {\r\n        this.props.openTEAMLUNCH_DOZENEditor(id);\r\n    }\r\n\r\n    removeTEAMLUNCH_DOZEN = (id) => {\r\n        this.props.removeTEAMLUNCH_DOZEN(id);\r\n    }\r\n\r\n    openTEAMLUNCH_HALF = () => {\r\n        this.props.openTEAMLUNCH_HALF();\r\n    }\r\n\r\n    openTEAMLUNCH_HALFEditor = (id) => {\r\n        this.props.openTEAMLUNCH_HALFEditor(id);\r\n    }\r\n\r\n    removeTEAMLUNCH_HALF = (id) => {\r\n        this.props.removeTEAMLUNCH_HALF(id);\r\n    }\r\n\r\n    printItems = (list) => {\r\n        let print = [];\r\n        for (let key in list){\r\n            if (list[key] !== 0){\r\n                print.push(<li key={key}>{this.props.teamlunch.names[key].name + ' : ' + list[key]}</li>);     \r\n            }                           \r\n        }\r\n        return (<ul style={{paddingLeft: '20px'}}>{print}</ul>);\r\n    }\r\n\r\n    /*printExtra = (extras) => {\r\n        let print = [];\r\n        for (let i = 0; i < 2; i++) {\r\n            const extra = extras.list[i];\r\n            if (extra.one !== 'None') {\r\n                const one = <span>{extra.one}</span>;\r\n                let two = null;\r\n                let three = null;\r\n                if (extra.two !== 'None'){ two = <span>, {extra.two}</span> }\r\n                if (extra.three !== 'None'){ three = <span>, {extra.three}</span> }\r\n                print.push(\r\n                    <div key={'extra' + i} style={{fontSize: '0.9rem'}}>Extra #{i+1} : {one} {two} {three}</div>\r\n                )   \r\n\r\n            }            \r\n        }\r\n\r\n        if (print.length === 0){return null;}\r\n        else {\r\n            return (\r\n                <React.Fragment>\r\n                    <hr style={{border: '1px solid #e1e1e1'}} />\r\n                    <h6 style={{width: '100%', fontWeight: '600'}}>Extra Sandwiches or Salads</h6>\r\n                    {print}\r\n                </React.Fragment>\r\n            );\r\n        }\r\n    }*/\r\n\r\n    render() {\r\n        let count = 0;\r\n        return (\r\n            <React.Fragment>\r\n            {\r\n                this.props.teamlunch.open_box ?\r\n                <TeamLunchBox></TeamLunchBox>\r\n                :\r\n                <Card className=\"col-md-12 p-0\">\r\n\r\n                    <Card.Header>\r\n                        <TopNav />\r\n                    </Card.Header>\r\n\r\n                    <Card.Body>\r\n                        <Card.Title>Smart Lunch for the Team</Card.Title>\r\n                    </Card.Body>\r\n\r\n                    <ListGroup variant=\"flush\">\r\n\r\n                        <ListGroup.Item className=\"menu-list\">\r\n\r\n                            <Row>\r\n                                <Col className=\"wrap_name\">\r\n                                    <p style={{fontWeight: '600'}}>Dozen - $99.99</p>\r\n                                    <p>\r\n                                        Serves 12<br />\r\n                                        Select your wraps or salads<br />\r\n                                        Select your sides (chips or whole fruit)<br />\r\n                                        Select your bottled drinks\r\n                                    </p>\r\n                                </Col>\r\n                                <Col>\r\n                                    <NumberInput \r\n                                        noleft={true}\r\n                                        readonly={true}\r\n                                        onChange={this.openTEAMLUNCH_DOZEN.bind(this)}\r\n                                        name=\"dozen\"\r\n                                        value={this.props.teamlunch.qty}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                <Col className=\"wrap_name\">\r\n                                    <p style={{fontWeight: '600'}}>Half Dozen - $55.99</p>\r\n                                    <p>\r\n                                        Serves 6<br />\r\n                                        Select your wraps or salads<br />\r\n                                        Select your sides (chips or fruit)<br />\r\n                                        Select your bottled drinks\r\n                                    </p>\r\n                                </Col>\r\n                                <Col>\r\n                                    <NumberInput \r\n                                        noleft={true}\r\n                                        readonly={true}\r\n                                        onChange={this.openTEAMLUNCH_HALF.bind(this)}\r\n                                        name=\"half\"\r\n                                        value={this.props.teamlunch.qty_half}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                        \r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item className=\"menu-list\">\r\n\r\n                            <Row>                               \r\n                                {\r\n                                    this.props.teamlunch.list.map((boxes, pindex) => {\r\n                                        if (boxes.length !== 0) {\r\n                                            count++;\r\n                                            if (boxes.choice_one.qty ===12) {\r\n                                                return (\r\n                                                <Col key={'col-'+pindex} md={6} className=\"wrap-lunch-box\">\r\n                                                    <div key={'list-'+pindex} style={{padding: '10px', border: '1px solid #dadada'}}>\r\n                                                        <h3 className=\"p-0\" style={{fontSize: '1rem'}}>Box #{count} Full Dozen -\r\n                                                            <ButtonToolbar style={{float: 'right'}}>\r\n                                                                <Button onClick={() => {this.openTEAMLUNCH_DOZENEditor(pindex)}} className=\"sweet-edit-btn edit-btn\">Edit</Button>\r\n                                                                <Button onClick={() => {this.removeTEAMLUNCH_DOZEN(pindex)}} className=\"sweet-remove-btn remove-btn\">Remove</Button>\r\n                                                            </ButtonToolbar>\r\n                                                        </h3>\r\n                                                        <div>\r\n                                                            <ul className=\"list-inline\">\r\n                                                                <li className=\"list-inline-item\"> \r\n                                                                    {this.printItems(boxes.choice_one.list)}\r\n                                                                </li>\r\n                                                                <li className=\"list-inline-item\">\r\n                                                                    {this.printItems(boxes.choice_two.list)} \r\n                                                                </li>\r\n                                                                <li className=\"list-inline-item\">\r\n                                                                    {this.printItems(boxes.choice_three.list)} \r\n                                                                </li>\r\n                                                                {/*<li className=\"list-inline-item\">\r\n                                                                    {this.printExtra(boxes.extra)} \r\n                                                                </li>*/}\r\n                                                            </ul>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </Col>\r\n                                                );\r\n                                            } else{\r\n                                                return (\r\n                                                <Col key={'col-'+pindex} md={6} className=\"wrap-lunch-box\">\r\n                                                    <div key={'list-'+pindex} style={{padding: '10px', border: '1px solid #dadada'}}>\r\n                                                        <h3 className=\"p-0\" style={{fontSize: '1rem'}}>Box #{count} Half Dozen -\r\n                                                            <ButtonToolbar style={{float: 'right'}}>\r\n                                                                <Button onClick={() => {this.openTEAMLUNCH_HALFEditor(pindex)}} className=\"sweet-edit-btn edit-btn\">Edit</Button>\r\n                                                                <Button onClick={() => {this.removeTEAMLUNCH_HALF(pindex)}} className=\"sweet-remove-btn remove-btn\">Remove</Button>\r\n                                                            </ButtonToolbar>\r\n                                                        </h3>\r\n                                                        <div>\r\n                                                            <ul className=\"list-inline\">\r\n                                                                <li className=\"list-inline-item\"> \r\n                                                                    {this.printItems(boxes.choice_one.list)}\r\n                                                                </li>\r\n                                                                <li className=\"list-inline-item\">\r\n                                                                    {this.printItems(boxes.choice_two.list)} \r\n                                                                </li>\r\n                                                                <li className=\"list-inline-item\">\r\n                                                                    {this.printItems(boxes.choice_three.list)} \r\n                                                                </li>\r\n                                                                {/*<li className=\"list-inline-item\">\r\n                                                                    {this.printExtra(boxes.extra)} \r\n                                                                </li>*/}\r\n                                                            </ul>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </Col>\r\n                                                );\r\n                                            }\r\n                                        }\r\n                                        else {\r\n                                            return null;\r\n                                        }\r\n                                    }) \r\n                                }\r\n                            </Row>\r\n\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item className=\"menu-list total\">\r\n                            <Row>\r\n                                <Col>\r\n                                    ${this.props.teamlunch.total}\r\n                                </Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n\r\n                    </ListGroup>\r\n\r\n                    <Row>\r\n                        <Col md={12}>\r\n                            <Bottom />\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </Card>\r\n            }\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    teamlunch: state.teamlunch\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => (\r\n    {\r\n        openTEAMLUNCH_DOZEN: () => dispatch(openTEAMLUNCH_DOZEN()),\r\n        removeTEAMLUNCH_DOZEN: (index) => dispatch(removeTEAMLUNCH_DOZEN(index)),\r\n        updateCurrentNav: (index) => dispatch(updateCurrentNav(index)),\r\n        openTEAMLUNCH_DOZENEditor: (id) => dispatch(openTEAMLUNCH_DOZENEditor(id)),\r\n        openTEAMLUNCH_HALF: () => dispatch(openTEAMLUNCH_HALF()),\r\n        removeTEAMLUNCH_HALF: (index) => dispatch(removeTEAMLUNCH_HALF(index)),\r\n        updateCurrentNav: (index) => dispatch(updateCurrentNav(index)),\r\n        openTEAMLUNCH_HALFEditor: (id) => dispatch(openTEAMLUNCH_HALFEditor(id))\r\n    }\r\n)\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(TeamLunch)","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { Row, Col, ListGroup } from 'react-bootstrap';\r\n\r\nconst roundTo = require('roundto');\r\n\r\nclass Lunch extends React.Component {\r\n\r\n    printItems = (list) => {\r\n        let print = [];\r\n        for (let key in list){\r\n            if (list[key] !== 0){\r\n                print.push(<li>{this.props.state.names[key].name + ' : ' + list[key]}</li>);     \r\n            }                           \r\n        }\r\n        return (<ul style={{paddingLeft: '20px'}}>{print}</ul>);\r\n    }\r\n\r\n    printExtra = (extras) => {\r\n        let print = [];\r\n        for (let i = 0; i < 2; i++) {\r\n            const extra = extras.list[i];\r\n            if (extra.one !== 'None') {\r\n                const one = <span>{extra.one}</span>;\r\n                let two = null;\r\n                let three = null;\r\n                if (extra.two !== 'None'){ two = <span>, {extra.two}</span> }\r\n                if (extra.three !== 'None'){ three = <span>, {extra.three}</span> } \r\n                print.push(\r\n                    <div key={'extra' + i} style={{fontSize: '0.9rem'}}>Extra #{i+1} : {one} {two} {three}</div>\r\n                )   \r\n\r\n            }            \r\n        }\r\n\r\n        if (print.length === 0){return null;}\r\n        else {\r\n            return (\r\n                <React.Fragment>\r\n                    <hr style={{border: '1px solid #e1e1e1'}} />\r\n                    <h7 style={{width: '100%', fontWeight: '600'}}>Extra Sandwiches or Salads</h7><br/>\r\n                    <h7 style={{width: '100%', fontWeight: '500', fontSize:12 }}><em>$6.99/each for Extra Sandwich or Salad, $0.99/each for Extra Chips, $2.09/each for Extra Sodas, $1.99/each for Extra Dasani</em></h7>\r\n                    {print}\r\n                </React.Fragment>\r\n            );\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let count = 0;\r\n        return (\r\n            <ListGroup.Item style={{display: (this.props.state.total === 0 ? 'none' : null)}}>\r\n                <h3>Lunch Box</h3>\r\n                <ul className=\"summary-list-group\">\r\n                    <li className=\"summary-list header\">\r\n                        <Row>\r\n                            <Col className=\"item\" md={5}>Item</Col>\r\n                            <Col className=\"qty\">Quantity</Col>\r\n                            <Col className=\"price\">Price</Col>\r\n                            <Col className=\"total\">Total</Col>\r\n                        </Row>\r\n                    </li>\r\n\r\n                    <li className=\"summary-list\">\r\n\r\n\r\n                        <Row>\r\n                            <Col className=\"item sub\" md={5}> - Lunch Box - Single</Col>\r\n                            <Col className=\"qty\">{this.props.state.qty}</Col>\r\n                            <Col className=\"price\">${this.props.state.price}</Col>\r\n                            <Col className=\"total\">${roundTo(this.props.state.qty*this.props.state.price,2)}</Col>\r\n                        </Row>\r\n\r\n                        <Row style={{paddingLeft: '80px', paddingTop: '10px', paddingBottom: '10px'}} className=\"wrap-lunch-box\">\r\n                            {\r\n                                this.props.state.list.map((boxes, pindex) => {\r\n                                    if (boxes.length !== 0) {\r\n                                        count++;\r\n                                        return (\r\n                                        <Col md={6} className=\"wrap-lunch-box\">\r\n                                            <div key={'list-'+pindex} style={{padding: '10px', border: '1px solid #dadada'}}>\r\n                                                <h3 className=\"p-0\" style={{fontSize: '1rem'}}>Box #{count}</h3>\r\n                                                <div>\r\n                                                    <ul className=\"list-inline\">\r\n                                                        <li className=\"list-inline-item\"> \r\n                                                            {this.printItems(boxes.choice_one.list)}\r\n                                                        </li>\r\n                                                        <li className=\"list-inline-item\">\r\n                                                            {this.printItems(boxes.choice_two.list)} \r\n                                                        </li>\r\n                                                        <li className=\"list-inline-item\">\r\n                                                            {this.printItems(boxes.choice_three.list)} \r\n                                                        </li>\r\n                                                        {/*<li className=\"list-inline-item\">\r\n                                                            {this.printExtra(boxes.extra)} \r\n                                                        </li>*/}\r\n                                                    </ul>\r\n                                                </div>\r\n                                            </div>\r\n                                        </Col>\r\n                                        );\r\n                                    }\r\n                                    else {\r\n                                        return null;\r\n                                    }\r\n                                }) \r\n                            }\r\n                        </Row>\r\n                    </li>\r\n\r\n                    <li className=\"summary-list footer\">\r\n                        <Row>\r\n                            <Col className=\"item\" md={5}></Col>\r\n                            <Col className=\"qty\"></Col>\r\n                            <Col className=\"price\"></Col>\r\n                            <Col className=\"total\">${this.props.state.total}</Col>\r\n                        </Row>\r\n                    </li>\r\n                </ul>\r\n            </ListGroup.Item>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    state: state.lunch\r\n});\r\n\r\n\r\nexport default connect(\r\n    mapStateToProps\r\n)(Lunch)","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { Row, Col, ListGroup } from 'react-bootstrap';\r\n\r\nconst roundTo = require('roundto');\r\n\r\nclass TeamLunch extends React.Component {\r\n\r\n    printItems = (list) => {\r\n        let print = [];\r\n        for (let key in list){\r\n            if (list[key] !== 0){\r\n                print.push(<li>{this.props.state.names[key].name + ' : ' + list[key]}</li>);     \r\n            }                           \r\n        }\r\n        return (<ul style={{paddingLeft: '20px'}}>{print}</ul>);\r\n    }\r\n\r\n    printExtra = (extras) => {\r\n        let print = [];\r\n        for (let i = 0; i < 2; i++) {\r\n            const extra = extras.list[i];\r\n            if (extra.one !== 'None') {\r\n                const one = <span>{extra.one}</span>;\r\n                let two = null;\r\n                let three = null;\r\n                if (extra.two !== 'None'){ two = <span>, {extra.two}</span> }\r\n                if (extra.three !== 'None'){ three = <span>, {extra.three}</span> } \r\n                print.push(\r\n                    <div key={'extra' + i} style={{fontSize: '0.9rem'}}>Extra #{i+1} : {one} {two} {three}</div>\r\n                )   \r\n\r\n            }            \r\n        }\r\n\r\n        if (print.length === 0){return null;}\r\n        else {\r\n            return (\r\n                <React.Fragment>\r\n                    <hr style={{border: '1px solid #e1e1e1'}} />\r\n                    <h7 style={{width: '100%', fontWeight: '600'}}>Extra Sandwiches or Salads</h7><br/>\r\n                    <h7 style={{width: '100%', fontWeight: '500', fontSize:12 }}><em>$6.99/each for Extra Sandwich or Salad, $0.99/each for Extra Chips, $2.09/each for Extra Sodas, $1.99/each for Extra Dasani</em></h7>\r\n                    {print}\r\n                </React.Fragment>\r\n            );\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let count = 0;\r\n        return (\r\n            <ListGroup.Item style={{display: (this.props.state.total === 0 ? 'none' : null)}}>\r\n                <h3>Smart Lunch for the Team</h3>\r\n                <ul className=\"summary-list-group\">\r\n                    <li className=\"summary-list header\">\r\n                        <Row>\r\n                            <Col className=\"item\" md={5}>Item</Col>\r\n                            <Col className=\"qty\">Quantity</Col>\r\n                            <Col className=\"price\">Price</Col>\r\n                            <Col className=\"total\">Total</Col>\r\n                        </Row>\r\n                    </li>\r\n\r\n                    <li className=\"summary-list\">\r\n\r\n                        <Row>\r\n                            <Col className=\"item sub\" md={5}> - Full Dozen</Col>\r\n                            <Col className=\"qty\">{this.props.state.qty}</Col>\r\n                            <Col className=\"price\">${this.props.state.price}</Col>\r\n                            <Col className=\"total\">${roundTo(this.props.state.qty*this.props.state.price,2)}</Col>\r\n                        </Row>\r\n                        <Row style={{paddingLeft: '80px', paddingTop: '10px', paddingBottom: '10px'}} className=\"wrap-lunch-box\">\r\n                            {\r\n                                this.props.state.list.map((boxes, pindex) => {\r\n                                    if (boxes.length !== 0) {\r\n                                        count++;\r\n                                        if (boxes.choice_one.qty ===12) { \r\n                                            return (\r\n                                            <Col md={6} className=\"wrap-lunch-box\">\r\n                                                <div key={'list-'+pindex} style={{padding: '10px', border: '1px solid #dadada'}}>\r\n                                                    <h3 className=\"p-0\" style={{fontSize: '1rem'}}>Dozen Box</h3>\r\n                                                    <div>\r\n                                                        <ul className=\"list-inline\">\r\n                                                            <li className=\"list-inline-item\"> \r\n                                                                {this.printItems(boxes.choice_one.list)}\r\n                                                            </li>\r\n                                                            <li className=\"list-inline-item\">\r\n                                                                {this.printItems(boxes.choice_two.list)} \r\n                                                            </li>\r\n                                                            <li className=\"list-inline-item\">\r\n                                                                {this.printItems(boxes.choice_three.list)} \r\n                                                            </li>\r\n                                                            {/*<li className=\"list-inline-item\">\r\n                                                                {this.printExtra(boxes.extra)} \r\n                                                            </li>*/}\r\n                                                        </ul>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </Col>\r\n                                            );\r\n                                        }\r\n                                    }\r\n                                    else {\r\n                                        return null;\r\n                                    }\r\n                                }) \r\n                            }\r\n                        </Row>\r\n\r\n                        <Row>\r\n                            <Col className=\"item sub\" md={5}> - Half Dozen</Col>\r\n                            <Col className=\"qty\">{this.props.state.qty_half}</Col>\r\n                            <Col className=\"price\">${this.props.state.price_half}</Col>\r\n                            <Col className=\"total\">${roundTo(this.props.state.qty_half*this.props.state.price_half,2)}</Col>\r\n                        </Row>\r\n                        <Row style={{paddingLeft: '80px', paddingTop: '10px', paddingBottom: '10px'}} className=\"wrap-lunch-box\">\r\n                            {\r\n                                this.props.state.list.map((boxes, pindex) => {\r\n                                    if (boxes.length !== 0) {\r\n                                        count++;\r\n                                        if (boxes.choice_one.qty ===6) {\r\n                                            return (\r\n                                            <Col md={6} className=\"wrap-lunch-box\">\r\n                                                <div key={'list-'+pindex} style={{padding: '10px', border: '1px solid #dadada'}}>\r\n                                                    <h3 className=\"p-0\" style={{fontSize: '1rem'}}>Half Dozen Box</h3>\r\n                                                    <div>\r\n                                                        <ul className=\"list-inline\">\r\n                                                            <li className=\"list-inline-item\"> \r\n                                                                {this.printItems(boxes.choice_one.list)}\r\n                                                            </li>\r\n                                                            <li className=\"list-inline-item\">\r\n                                                                {this.printItems(boxes.choice_two.list)} \r\n                                                            </li>\r\n                                                            <li className=\"list-inline-item\">\r\n                                                                {this.printItems(boxes.choice_three.list)} \r\n                                                            </li>\r\n                                                            {/*<li className=\"list-inline-item\">\r\n                                                                {this.printExtra(boxes.extra)} \r\n                                                            </li>*/}\r\n                                                        </ul>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </Col>\r\n                                            );\r\n                                        }\r\n                                    }\r\n                                    else {\r\n                                        return null;\r\n                                    }\r\n                                }) \r\n                            }\r\n                        </Row>\r\n                    </li>\r\n\r\n                    <li className=\"summary-list footer\">\r\n                        <Row>\r\n                            <Col className=\"item\" md={5}></Col>\r\n                            <Col className=\"qty\"></Col>\r\n                            <Col className=\"price\"></Col>\r\n                            <Col className=\"total\">${this.props.state.total}</Col>\r\n                        </Row>\r\n                    </li>\r\n                </ul>\r\n            </ListGroup.Item>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    state: state.teamlunch\r\n});\r\n\r\n\r\nexport default connect(\r\n    mapStateToProps\r\n)(TeamLunch)","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from 'react-router-dom';\r\nimport { updateCurrentNav, calculateSubtotal, submitOrder, getDeliveryMethod, handleTextarea } from '../../redux/actions/main';\r\nimport { Row, Col, Card, ListGroup, ButtonToolbar, Button, Spinner } from 'react-bootstrap';\r\n\r\nimport TopNav from '../common/TopNav.js';\r\n// import Bottom from '../bottom';\r\n\r\nimport Lunch from './Lunch';\r\nimport TeamLunch from './TeamLunch';\r\n\r\nimport './style.css';\r\n\r\nconst roundTo = require('roundto');\r\n\r\nclass Summary extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.props.updateCurrentNav(2);\r\n        \r\n        const subtotal = roundTo(\r\n            this.props.globalState.lunch.total +\r\n            this.props.globalState.teamlunch.total,\r\n            2);\r\n        const tax = roundTo(subtotal*0.061, 2);\r\n        const total = roundTo(subtotal + tax, 2);\r\n\r\n        this.props.calculateSubtotal(subtotal, tax, total);\r\n\r\n        this.state = {\r\n            subtotal: subtotal,\r\n            tax: tax,\r\n            total: total,\r\n            additional_comment: ''\r\n        }\r\n        // console.log(this.props.globalState.byo_breakfast);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.getDeliveryMethod();\r\n        \r\n    }\r\n\r\n    handleTextarea = (event) => {\r\n        this.setState({\r\n            additional_comment: event.target.value\r\n        });\r\n        // this.props.handleTextarea(event.target.value);\r\n    }\r\n    \r\n    submitOrder = () => {\r\n        const data = {\r\n            lunch: this.props.globalState.lunch,\r\n            teamlunch: this.props.globalState.teamlunch,\r\n            subtotal: this.state.subtotal,\r\n            tax: this.state.tax,\r\n            total: this.state.total,\r\n            additional_comment: this.state.additional_comment\r\n        };\r\n        this.props.submitOrder(data);\r\n        this.props.history.push('/Confirmation');\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n            {\r\n                this.props.globalState.main.delivery_method === null ?\r\n                <div style={{textAlign: 'center', padding: '100px 0px'}}>\r\n                    <Spinner animation=\"grow\" style={{backgroundColor: '#f58220'}} />\r\n                </div>\r\n                :\r\n                <React.Fragment>\r\n                    {\r\n                        this.props.globalState.main.error.msg === '' ?\r\n                        <Card className=\"wrap-summary\">\r\n                \r\n                            <Card.Header>\r\n                                <TopNav />\r\n                            </Card.Header>\r\n\r\n                            <Card.Body>\r\n                                <Card.Title>Order Summary</Card.Title>\r\n                            </Card.Body>\r\n\r\n                            {\r\n                                this.state.total === 0 ?\r\n                                <Card.Body className=\"text-center\" style={{marginBottom: '20px'}}>\r\n                                    <Card.Text md={12} style={{paddingTop: '15px', paddingBottom: '15px'}}>\r\n                                        <strong>There are no items in your shopping cart.</strong>\r\n                                    </Card.Text>\r\n                                </Card.Body>\r\n                                :\r\n                                <React.Fragment>\r\n\r\n                                    <ListGroup>\r\n                                        <Lunch />\r\n                                        <TeamLunch />\r\n                                    </ListGroup>\r\n\r\n                                    <Row className=\"wrap-total\" style={{marginTop: '20px'}}>\r\n                                        <Col className=\"total-names\">Subtotal : </Col><Col className=\"total-numbers\"><span className=\"number\">${this.state.subtotal}</span></Col>\r\n                                    </Row>\r\n\r\n                                    <Row className=\"wrap-total\">\r\n                                        <Col className=\"total-names\">Tax : </Col><Col className=\"total-numbers\"><span className=\"number\">${this.state.tax}</span></Col>\r\n                                    </Row>\r\n\r\n                                    {\r\n                                        this.props.globalState.main.delivery_method === 'Delivery' ?\r\n                                        <Row className=\"wrap-total\">\r\n                                            <Col className=\"total-names\">Delivery Fee : </Col><Col className=\"total-numbers\"><span className=\"number\">$10</span></Col>\r\n                                        </Row>\r\n                                        :\r\n                                        null\r\n                                    }\r\n\r\n                                    <Row className=\"wrap-total\">\r\n                                        <Col className=\"total-names\">Total : </Col><Col className=\"total-numbers\">\r\n                                            <span className=\"number\">\r\n                                                ${\r\n                                                    this.props.globalState.main.delivery_method === 'Delivery' ?\r\n                                                    roundTo(this.state.total+10,2)\r\n                                                    :\r\n                                                    this.state.total\r\n                                                }\r\n                                            </span>\r\n                                        </Col>\r\n                                    </Row>\r\n\r\n                                    <ListGroup style={{marginBottom: '40px'}}>\r\n                                        <ListGroup.Item>\r\n                                            <h3 style={{paddingLeft: '0px'}}>Additional Notes (Please provide any dietary restrictions/allergies, etc)</h3>\r\n                                            <textarea style={{width: '100%'}} rows=\"5\" onChange={this.handleTextarea} value={this.state.additional_comment} />\r\n                                        </ListGroup.Item>\r\n                                    </ListGroup>\r\n\r\n                                </React.Fragment>\r\n                            }\r\n\r\n                            <Row>\r\n                                <Col md={6}>\r\n                                    <ButtonToolbar>\r\n                                        <Link\r\n                                        className={\"btn add-btn\"}\r\n                                        style={{marginRight: '10px', width:'200px'}}\r\n                                        to=\"/Lunch\"\r\n                                        >\r\n                                        {\r\n                                            this.state.total === 0 ?\r\n                                            'Add Food'\r\n                                            :\r\n                                            'Add More Food'\r\n                                        }\r\n                                        </Link>\r\n                                    </ButtonToolbar>\r\n                                </Col>\r\n                                {\r\n                                    this.state.total === 0 ?\r\n                                    null\r\n                                    :\r\n                                    <Col md={6}>\r\n                                        <ButtonToolbar>\r\n                                            <Button \r\n                                            className={\"btn add-btn\"}\r\n                                            style={{marginLeft: 'auto', width:'200px'}} onClick={this.submitOrder}>Submit Order</Button>\r\n                                        </ButtonToolbar>\r\n                                    </Col>\r\n                                }\r\n                            </Row>\r\n\r\n                        </Card>\r\n                        :\r\n                        <Card>\r\n                            <Card.Body style={{borderBottomWidth: '0px'}}>\r\n                                <Card.Text>\r\n                                    Your session has expired. Please try again later.\r\n                                </Card.Text>\r\n                            </Card.Body>\r\n\r\n                            <Row>\r\n                                <Col md={12}>\r\n                                    <ButtonToolbar>\r\n                                        <a href=\"/catering/online/agreement.php?r=iq_fresh\" className=\"btn add-btn btn-lg btn-block\" style={{width: '100%'}}>Try Again</a>\r\n                                    </ButtonToolbar>\r\n                                </Col>\r\n                            </Row>\r\n                        </Card>\r\n                    }                    \r\n                </React.Fragment>\r\n                \r\n            }\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    globalState: state\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => (\r\n    {\r\n        // updateQty: (name, qty) => dispatch(updateQty(name, qty))\r\n        updateCurrentNav: (index) => dispatch(updateCurrentNav(index)),\r\n        calculateSubtotal: (subtotal, tax, total) => dispatch(calculateSubtotal(subtotal, tax, total)),\r\n        submitOrder: (data) => dispatch(submitOrder(data)),\r\n        getDeliveryMethod: () => dispatch(getDeliveryMethod()),\r\n        handleTextarea: (text) => dispatch(handleTextarea(text))\r\n    }\r\n)\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Summary)","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\n// import { Link } from 'react-router-dom';\r\n// import { updateCurrentNav, calculateSubtotal, submitOrder } from '../redux/actions/main';\r\nimport { Card, Spinner } from 'react-bootstrap';\r\n\r\n// import TopNav from './common/TopNav.js';\r\n\r\nclass Confirmation extends React.Component {\r\n\r\n    // constructor(props) {\r\n    //     super(props);\r\n    // }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n            {\r\n                this.props.state.main.confirmation.loading ?\r\n                <div style={{textAlign: 'center', padding: '100px 0px'}}>\r\n                    <Spinner animation=\"grow\" style={{backgroundColor: '#f58220'}} />\r\n                </div>\r\n                :\r\n                <Card className=\"\">\r\n\r\n                    {\r\n                        this.props.state.main.confirmation.orderID === null ?\r\n                        <React.Fragment>\r\n                            <Card.Body>\r\n                                <Card.Text>\r\n                                    We're sorry. An error occurred while processing your order. Please try again later.\r\n                                </Card.Text>\r\n                            </Card.Body>\r\n\r\n                            <div className=\"card-body\">\r\n                                        \r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-4\">\r\n                                        <a href=\"/catering/online/agreement.php?r=iq_fresh\" className=\"btn add-btn btn-lg btn-block\" style={{width: '100%'}}>Try Again</a>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </React.Fragment>\r\n                        :\r\n                        <React.Fragment>\r\n                            <Card.Body>\r\n                                <Card.Text>\r\n                                    <span style={{fontWeight: '500', lineHeight: '2.2', fontSize: '1.7rem'}}>Thank You</span><br style={{lineHeight: '2.2'}} />\r\n                                    Your order is confirmed. For your convenience, an email has been sent to {this.props.state.main.confirmation.email}. <br />\r\n                                    Your Order ID is {this.props.state.main.confirmation.orderID}.\r\n                                </Card.Text>\r\n                            </Card.Body>\r\n\r\n                            <div className=\"card-body\">\r\n                                        \r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-4\">\r\n                                        <a href=\"/catering/online/agreement.php?r=iq_fresh\" className=\"btn add-btn btn-lg btn-block\" style={{width: '100%'}}>Order Again</a>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-md-4\">\r\n                                        <a href=\"/dining/sumc/iq\" className=\"btn add-btn btn-lg btn-block\" style={{width: '100%'}}>Go to IQ Fresh</a>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-md-4\">\r\n                                        <a href=\"/\" className=\"btn add-btn btn-lg btn-block\" style={{width: '100%'}}>Go to Union</a>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </React.Fragment>\r\n                    }\r\n\r\n                </Card>\r\n            }\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    state: state\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => (\r\n    {\r\n    }\r\n)\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Confirmation)","import React from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route\r\n} from 'react-router-dom'\r\nimport './App.css';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n// import Banner from './img/Catalyst_Cafe_Catering_Banner.jpg';\r\nimport Banner from './img/iq_fresh_banner.jpg';\r\n// import Menu from './components/Menu';\r\nimport Lunch from './components/Lunch';\r\nimport TeamLunch from './components/TeamLunch';\r\nimport Summary from './components/Summary';\r\nimport Confirmation from './components/Confirmation';\r\n// import Bottom from './components/bottom';\r\n\r\nexport default function App() {\r\n  \r\n  \r\n  return (\r\n    <Container style={{marginTop: '0rem', marginBottom: '2rem', border: '1px solid #c8942b'}}>\r\n\r\n      <Row>\r\n        <img src={Banner} style={{width: '100%'}} alt=\"Banner\" />\r\n      </Row>\r\n\r\n      <Row style={{backgroundColor: '#fff'}}>\r\n        <Col md={12} className=\"wrap-main\">\r\n          <Router basename={'/catering/online/iq_fresh'}>\r\n            <Route exact path=\"/\" component={Lunch} />           \r\n            <Route exact path=\"/lunch\" component={Lunch} />\r\n            <Route exact path=\"/teamlunch\" component={TeamLunch} />\r\n            <Route exact path=\"/summary\" component={Summary} />\r\n            <Route exact path=\"/confirmation\" component={Confirmation} />\r\n          </Router>\r\n        </Col>\r\n      </Row>\r\n\r\n    </Container>\r\n  );\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'react-app-polyfill/ie9';\nimport 'react-app-polyfill/ie11';   \nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\n\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>, \n    document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}