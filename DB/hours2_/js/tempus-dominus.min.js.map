{"version":3,"sources":["./dist/tempus-dominus.js"],"names":["tempusDominus","$","luxon","core","_interopDefaultLegacy","e","default","_interopNamespace","__esModule","n","Object","create","keys","forEach","k","d","getOwnPropertyDescriptor","defineProperty","get","enumerable","Unit","$__default","luxon__namespace","DateTime","Date","constructor","super","arguments","this","locale","setLocale","value","convert","date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","clone","year","month","hours","minutes","seconds","startOf","unit","undefined","setMilliseconds","setSeconds","setMinutes","setHours","manipulate","weekDay","setDate","setMonth","endOf","format","template","fromJSDate","toFormat","Intl","DateTimeFormat","isValid","getTime","isBefore","compare","valueOf","isAfter","isSame","isBetween","left","right","inclusivity","leftInclusivity","rightInclusivity","parts","dateStyle","timeStyle","formatToParts","filter","x","type","secondsFormatted","second","minutesFormatted","minute","hoursFormatted","hour","twelveHoursFormatted","hour12","meridiem","dateFormatted","week","startOfYear","getDay","Math","round","monthFormatted","setFullYear","TdError","Error","NAME","Namespace","version","dataKey","Events","key","change","update","error","show","hide","blur","focus","keyup","keydown","Css","widget","switch","sideBySide","previous","next","disabled","old","new","active","dateContainer","decadesContainer","decade","yearsContainer","monthsContainer","daysContainer","day","calendarWeeks","dayOfTheWeek","today","weekend","timeContainer","separator","clockContainer","hourContainer","minuteContainer","secondContainer","collapsing","collapse","inline","ErrorMessages","base","failedToSetInvalidDate","failedToParseInput","unexpectedOption","optionName","code","unexpectedOptions","join","unexpectedOptionValue","badValue","validOptions","typeMismatch","badType","expectedType","numbersOutOfRage","lower","upper","failedToParseDate","mustProvideElement","subscribeMismatch","conflictingConfiguration","message","dateString","console","warn","DefaultOptions","restrictions","minDate","maxDate","disabledDates","enabledDates","daysOfWeekDisabled","disabledTimeIntervals","disabledHours","enabledHours","display","icons","time","up","down","clear","close","viewMode","toolbarPlacement","buttons","components","calendar","decades","century","clock","useTwentyfourHour","inputFormat","stepping","useCurrent","defaultDate","localization","selectMonth","previousMonth","nextMonth","selectYear","previousYear","nextYear","selectDecade","previousDecade","nextDecade","previousCentury","nextCentury","pickHour","incrementHour","decrementHour","pickMinute","incrementMinute","decrementMinute","pickSecond","incrementSecond","decrementSecond","togglePeriod","selectTime","selectDate","dayViewHeaderFormat","readonly","ignoreReadonly","keepOpen","focusOnShow","keepInvalid","keyBinds","pageDown","pageUp","delete","t","enter","escape","debug","allowInputToggle","viewDate","multipleDates","multipleDatesSeparator","promptTimeOnDateChange","promptTimeOnDateChangeTransitionDelay","DatePickerModes","name","className","step","Collapse","getTransitionDurationFromElement","element","transitionDuration","transitionDelay","window","getComputedStyle","floatTransitionDuration","Number","parseFloat","floatTransitionDelay","split","toggle","target","classList","contains","style","height","remove","add","timeOut","setTimeout","scrollHeight","getBoundingClientRect","offsetHeight","Actions","context","_context","do","action","currentTarget","dataset","lastPicked","dates","_viewDate","manipulateAndSet","newDate","_validation","_setValue","lastPickedIndex","ActionTypes","_currentViewMode","_display","_update","_viewUpdate","pickerSwitch","_showMode","getAttribute","_minViewModeNumber","_options","selectDay","index","pickedIndex","_hasTime","selectHour","showClock","selectMinute","selectSecond","incrementHours","incrementMinutes","incrementSeconds","decrementHours","decrementMinutes","decrementSeconds","togglePicker","querySelectorAll","htmlElement","setAttribute","innerHTML","_iconTag","outerHTML","popper","forceUpdate","querySelector","showHours","showMinutes","showSeconds","classToUse","getElementsByClassName","DateDisplay","_picker","container","document","createElement","table","headTemplate","_headTemplate","switcher","getElementsByTagName","appendChild","tableBody","_daysOfTheWeek","row","td","div","i","innerText","innerDate","containerClone","classes","push","_unset","isPicked","th","weekday","MonthDisplay","YearDisplay","_startYear","_endYear","Dates","_dates","picked","length","targetDate","find","getFormatByUnit","innerDateFormatted","map","indexOf","_triggerEvent","oldDate","isClear","getStartEndYear","factor","startYear","floor","noIndex","updateInput","_input","newValue","reason","splice","DecadeDisplay","removeAttribute","start","end","_startDecade","_endDecade","pickedYears","nodeList","textContent","startDecadeYear","endDecadeYear","TimeDisplay","_grid","timesDiv","rows","separatorColon","cloneNode","topRow","middleRow","bottomRow","upIcon","downIcon","actionDiv","actionLinkClone","button","HourDisplay","MinuteDisplay","secondDisplay","Display","_isVisible","_documentClickEvent","_a","composedPath","includes","_element","_actionsClickEvent","_action","_dateDisplay","_monthDisplay","_yearDisplay","_decadeDisplay","_timeDisplay","_hourDisplay","_minuteDisplay","_secondDisplay","_widget","_popperInstance","isVisible","_hasDate","_buildWidget","body","createPopper","toggleElement","modifiers","options","offset","enabled","placement","addEventListener","direction","max","min","datePickerMode","picker","removeEventListener","_dispose","parentNode","removeChild","dateView","timeView","toolbar","_toolbar","arrow","tbody","title","icon","thead","rowElement","iconClass","svg","DOMTokenList","prototype","apply","_rebuild","wasVisible","Validation","granularity","_isInDisabledDates","_isInEnabledDates","_isInDisabledHours","_isInEnabledHours","from","to","testDate","formattedDate","OptionConverter","_mergeOptions","providedOptions","mergeTo","newOptions","path","processKey","providedType","defaultType","dateTime","_dateConversion","_typeCheckNumberArray","_typeCheckDateArray","Array","isArray","valueObject","vk","subOptionName","keyOptions","substring","toString","spread","provided","mergeOption","copyTo","unsupportedOptions","flattenedOptions","_flattenDefaultOptions","errors","didYouMean","y","defaultOptionValue","hasOwnProperty","lastIndexOf","_dataToOptions","eData","DOMStringMap","dataOptions","objectToNormalized","object","lowered","toLowerCase","rabbitHole","optionSubgroup","keyOption","internalObject","optionsLower","startsWith","_dateTypeCheck","JSON","stringify","converted","deepKeys","pre","entries","flatMap","v","_validateConflcits","config","__proto__","TempusDominus","_subscribers","_isDisabled","_notifyChangeEventContext","_inputChangeEvent","parsedDate","numberingSystem","NumberFormat","resolvedOptions","fromFormat","toJSDate","_toggleClickEvent","_initializeOptions","_initializeInput","_initializeToggle","_toggle","updateOptions","reset","disable","enable","subscribe","eventTypes","callbacks","callBackArray","returnArray","eventType","unsubscribe","_unsubscribe","bind","dispose","_b","event","_handlePromptTimeIfNeeded","trigger","Event","dispatchEvent","CustomEvent","detail","jQuery","callback","publish","eventName","includeDataset","test","findIndex","_c","tagName","query","tdTargetInput","tdTargetToggle","clearTimeout","_currentPromptTimeTimeout","jQueryInterface","option","argument","jQueryHandleThis","each","me","data","extend","isDateUpdateThroughDateOptionFromClientCode","ret","getSelectorFromElement","$element","$selector","selector","attr","fn","Constructor","noConflict","Popper"],"mappings":"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","sourcesContent":["var tempusDominus = (function ($, luxon, core) {\n    'use strict';\n\n    function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\n    function _interopNamespace(e) {\n        if (e && e.__esModule) return e;\n        var n = Object.create(null);\n        if (e) {\n            Object.keys(e).forEach(function (k) {\n                if (k !== 'default') {\n                    var d = Object.getOwnPropertyDescriptor(e, k);\n                    Object.defineProperty(n, k, d.get ? d : {\n                        enumerable: true,\n                        get: function () {\n                            return e[k];\n                        }\n                    });\n                }\n            });\n        }\n        n['default'] = e;\n        return n;\n    }\n\n    var $__default = /*#__PURE__*/_interopDefaultLegacy($);\n    var luxon__namespace = /*#__PURE__*/_interopNamespace(luxon);\n\n    var Unit;\r\n    (function (Unit) {\r\n        Unit[\"seconds\"] = \"seconds\";\r\n        Unit[\"minutes\"] = \"minutes\";\r\n        Unit[\"hours\"] = \"hours\";\r\n        Unit[\"date\"] = \"date\";\r\n        Unit[\"month\"] = \"month\";\r\n        Unit[\"year\"] = \"year\";\r\n    })(Unit || (Unit = {}));\r\n    /**\r\n     * For the most part this object behaves exactly the same way\r\n     * as the native Date object with a little extra spice.\r\n     */\r\n    class DateTime extends Date {\r\n        constructor() {\r\n            super(...arguments);\r\n            /**\r\n             * Used with Intl.DateTimeFormat\r\n             */\r\n            this.locale = 'default';\r\n        }\r\n        /**\r\n         * Chainable way to set the {@link locale}\r\n         * @param value\r\n         */\r\n        setLocale(value) {\r\n            this.locale = value;\r\n            return this;\r\n        }\r\n        /**\r\n         * Converts a plain JS date object to a DateTime object.\r\n         * Doing this allows access to format, etc.\r\n         * @param  date\r\n         */\r\n        static convert(date) {\r\n            if (!date)\r\n                throw `A date is required`;\r\n            return new DateTime(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds());\r\n        }\r\n        /**\r\n         * Native date manipulations are not pure functions. This function creates a duplicate of the DateTime object.\r\n         */\r\n        get clone() {\r\n            return new DateTime(this.year, this.month, this.date, this.hours, this.minutes, this.seconds, this.getMilliseconds()).setLocale(this.locale);\r\n        }\r\n        /**\r\n         * Sets the current date to the start of the {@link unit} provided\r\n         * Example: Consider a date of \"April 30, 2021, 11:45:32.984 AM\" => new DateTime(2021, 3, 30, 11, 45, 32, 984).startOf('month')\r\n         * would return April 1, 2021, 12:00:00.000 AM (midnight)\r\n         * @param unit\r\n         */\r\n        startOf(unit) {\r\n            if (this[unit] === undefined)\r\n                throw `Unit '${unit}' is not valid`;\r\n            switch (unit) {\r\n                case 'seconds':\r\n                    this.setMilliseconds(0);\r\n                    break;\r\n                case 'minutes':\r\n                    this.setSeconds(0, 0);\r\n                    break;\r\n                case 'hours':\r\n                    this.setMinutes(0, 0, 0);\r\n                    break;\r\n                case 'date':\r\n                    this.setHours(0, 0, 0, 0);\r\n                    break;\r\n                case 'weekDay':\r\n                    this.startOf(Unit.date);\r\n                    this.manipulate(0 - this.weekDay, Unit.date);\r\n                    break;\r\n                case 'month':\r\n                    this.startOf(Unit.date);\r\n                    this.setDate(1);\r\n                    break;\r\n                case 'year':\r\n                    this.startOf(Unit.date);\r\n                    this.setMonth(0, 1);\r\n                    break;\r\n            }\r\n            return this;\r\n        }\r\n        /**\r\n         * Sets the current date to the end of the {@link unit} provided\r\n         * Example: Consider a date of \"April 30, 2021, 11:45:32.984 AM\" => new DateTime(2021, 3, 30, 11, 45, 32, 984).endOf('month')\r\n         * would return April 30, 2021, 11:59:59.999 PM\r\n         * @param unit\r\n         */\r\n        endOf(unit) {\r\n            if (this[unit] === undefined)\r\n                throw `Unit '${unit}' is not valid`;\r\n            switch (unit) {\r\n                case 'seconds':\r\n                    this.setMilliseconds(999);\r\n                    break;\r\n                case 'minutes':\r\n                    this.setSeconds(59, 999);\r\n                    break;\r\n                case 'hours':\r\n                    this.setMinutes(59, 59, 999);\r\n                    break;\r\n                case 'date':\r\n                    this.setHours(23, 59, 59, 999);\r\n                    break;\r\n                case 'weekDay':\r\n                    this.startOf(Unit.date);\r\n                    this.manipulate(6 - this.weekDay, Unit.date);\r\n                    break;\r\n                case 'month':\r\n                    this.endOf(Unit.date);\r\n                    this.manipulate(1, Unit.month);\r\n                    this.setDate(0);\r\n                    break;\r\n                case 'year':\r\n                    this.endOf(Unit.date);\r\n                    this.manipulate(1, Unit.year);\r\n                    this.setDate(0);\r\n                    break;\r\n            }\r\n            return this;\r\n        }\r\n        /**\r\n         * Change a {@link unit} value. Value can be positive or negative\r\n         * Example: Consider a date of \"April 30, 2021, 11:45:32.984 AM\" => new DateTime(2021, 3, 30, 11, 45, 32, 984).manipulate(1, 'month')\r\n         * would return May 30, 2021, 11:45:32.984 AM\r\n         * @param value A positive or negative number\r\n         * @param unit\r\n         */\r\n        manipulate(value, unit) {\r\n            if (this[unit] === undefined)\r\n                throw `Unit '${unit}' is not valid`;\r\n            this[unit] += value;\r\n            return this;\r\n        }\r\n        /**\r\n         * Returns a string format.\r\n         * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat\r\n         * for valid templates and locale objects\r\n         * @param template An object. Uses browser defaults otherwise.\r\n         * @param locale Can be a string or an array of strings. Uses browser defaults otherwise.\r\n         */\r\n        format(template, locale = this.locale) {\r\n            if (typeof template === 'string')\r\n                return luxon__namespace.DateTime.fromJSDate(this).setLocale(locale).toFormat(template);\r\n            else\r\n                return new Intl.DateTimeFormat(locale, template).format(this);\r\n        }\r\n        /**\r\n         * Check if the date is valid //***\r\n         * An invalid date object returns NaN for getTime() and NaN is the only object not strictly equal to itself.\r\n         */\r\n        get isValid() {\r\n            return this.getTime() === this.getTime();\r\n        }\r\n        /**\r\n         * Return true if {@link compare} is before this date\r\n         * @param compare The Date/DateTime to compare\r\n         * @param unit If provided, uses {@link startOf} for\r\n         * comparision.\r\n         */\r\n        isBefore(compare, unit) {\r\n            if (!unit)\r\n                return this.valueOf() < compare.valueOf();\r\n            if (this[unit] === undefined)\r\n                throw `Unit '${unit}' is not valid`;\r\n            return (this.clone.startOf(unit).valueOf() < compare.clone.startOf(unit).valueOf());\r\n        }\r\n        /**\r\n         * Return true if {@link compare} is after this date\r\n         * @param compare The Date/DateTime to compare\r\n         * @param unit If provided, uses {@link startOf} for\r\n         * comparision.\r\n         */\r\n        isAfter(compare, unit) {\r\n            if (!unit)\r\n                return this.valueOf() > compare.valueOf();\r\n            if (this[unit] === undefined)\r\n                throw `Unit '${unit}' is not valid`;\r\n            return (this.clone.startOf(unit).valueOf() > compare.clone.startOf(unit).valueOf());\r\n        }\r\n        /**\r\n         * Return true if {@link compare} is same this date\r\n         * @param compare The Date/DateTime to compare\r\n         * @param unit If provided, uses {@link startOf} for\r\n         * comparision.\r\n         */\r\n        isSame(compare, unit) {\r\n            if (!unit)\r\n                return this.valueOf() === compare.valueOf();\r\n            if (this[unit] === undefined)\r\n                throw `Unit '${unit}' is not valid`;\r\n            compare = DateTime.convert(compare);\r\n            return (this.clone.startOf(unit).valueOf() === compare.startOf(unit).valueOf());\r\n        }\r\n        /**\r\n         * Check if this is between two other DateTimes, optionally looking at unit scale. The match is exclusive.\r\n         * @param left\r\n         * @param right\r\n         * @param unit.\r\n         * @param inclusivity. A [ indicates inclusion of a value. A ( indicates exclusion.\r\n         * If the inclusivity parameter is used, both indicators must be passed.\r\n         */\r\n        isBetween(left, right, unit, inclusivity = '()') {\r\n            if (unit && this[unit] === undefined)\r\n                throw `Unit '${unit}' is not valid`;\r\n            const leftInclusivity = inclusivity[0] === '(';\r\n            const rightInclusivity = inclusivity[1] === ')';\r\n            return (((leftInclusivity\r\n                ? this.isAfter(left, unit)\r\n                : !this.isBefore(left, unit)) &&\r\n                (rightInclusivity\r\n                    ? this.isBefore(right, unit)\r\n                    : !this.isAfter(right, unit))) ||\r\n                ((leftInclusivity\r\n                    ? this.isBefore(left, unit)\r\n                    : !this.isAfter(left, unit)) &&\r\n                    (rightInclusivity\r\n                        ? this.isAfter(right, unit)\r\n                        : !this.isBefore(right, unit))));\r\n        }\r\n        /**\r\n         * Returns flattened object of the date. Does not include literals\r\n         * @param locale\r\n         * @param template\r\n         */\r\n        parts(locale = this.locale, template = { dateStyle: 'full', timeStyle: 'long' }) {\r\n            const parts = {};\r\n            new Intl.DateTimeFormat(locale, template)\r\n                .formatToParts(this)\r\n                .filter((x) => x.type !== 'literal')\r\n                .forEach((x) => (parts[x.type] = x.value));\r\n            return parts;\r\n        }\r\n        /**\r\n         * Shortcut to Date.getSeconds()\r\n         */\r\n        get seconds() {\r\n            return this.getSeconds();\r\n        }\r\n        /**\r\n         * Shortcut to Date.setSeconds()\r\n         */\r\n        set seconds(value) {\r\n            this.setSeconds(value);\r\n        }\r\n        /**\r\n         * Returns two digit hours\r\n         */\r\n        get secondsFormatted() {\r\n            // return this.seconds < 10 ? `0${this.seconds}` : `${this.seconds}`; //***\r\n            return this.format({ second: \"2-digit\" }); //***\r\n        }\r\n        /**\r\n         * Shortcut to Date.getMinutes()\r\n         */\r\n        get minutes() {\r\n            return this.getMinutes();\r\n        }\r\n        /**\r\n         * Shortcut to Date.setMinutes()\r\n         */\r\n        set minutes(value) {\r\n            this.setMinutes(value);\r\n        }\r\n        /**\r\n         * Returns two digit hours\r\n         */\r\n        get minutesFormatted() {\r\n            //***return this.minutes < 10 ? `0${this.minutes}` : `${this.minutes}`;\r\n            return this.format({ minute: \"2-digit\" }); //***\r\n        }\r\n        /**\r\n         * Shortcut to Date.getHours()\r\n         */\r\n        get hours() {\r\n            return this.getHours();\r\n        }\r\n        /**\r\n         * Shortcut to Date.setHours()\r\n         */\r\n        set hours(value) {\r\n            this.setHours(value);\r\n        }\r\n        /**\r\n         * Returns two digit hours\r\n         */\r\n        get hoursFormatted() {\r\n            //***return this.hours < 10 ? `0${this.hours}` : `${this.hours}`;\r\n            return this.format({ hour: \"2-digit\" }); //***\r\n        }\r\n        /**\r\n         * Returns two digit hours but in twelve hour mode e.g. 13 -> 1\r\n         */\r\n        get twelveHoursFormatted() {\r\n            //*** let hour = this.hours;\r\n            // if (hour > 12) hour = hour - 12;\r\n            // if (hour === 0) hour = 12;\r\n            // return hour < 10 ? `0${hour}` : `${hour}`;\r\n            return this.format({ hour12: true, hour: \"2-digit\" }); //***\r\n        }\r\n        /**\r\n         * Get the meridiem of the date. E.g. AM or PM.\r\n         * If the {@link locale} provides a \"dayPeriod\" then this will be returned,\r\n         * otherwise it will return AM or PM.\r\n         * @param locale\r\n         */\r\n        meridiem(locale = this.locale) {\r\n            /*\r\n            for some reason this stopped returning \"AM/PM\" and returned \"in the morning\"\r\n            const dayPeriod = new Intl.DateTimeFormat(locale, {\r\n              hour: 'numeric',\r\n              dayPeriod: 'narrow',\r\n            } as any)\r\n              .formatToParts(this)\r\n              .find((p) => p.type === 'dayPeriod')?.value;*/\r\n            return this.hours <= 12 ? 'AM' : 'PM'; //***???\r\n        }\r\n        /**\r\n         * Shortcut to Date.getDate()\r\n         */\r\n        get date() {\r\n            return this.getDate();\r\n        }\r\n        /**\r\n         * Shortcut to Date.setDate()\r\n         */\r\n        set date(value) {\r\n            this.setDate(value);\r\n        }\r\n        /**\r\n         * Return two digit date\r\n         */\r\n        get dateFormatted() {\r\n            return this.date < 10 ? `0${this.date}` : `${this.date}`;\r\n        }\r\n        // https://github.com/you-dont-need/You-Dont-Need-Momentjs#week-of-year\r\n        /**\r\n         * Gets the week of the year\r\n         */\r\n        get week() {\r\n            const MILLISECONDS_IN_WEEK = 604800000;\r\n            const firstDayOfWeek = 1; // monday as the first day (0 = sunday)\r\n            const startOfYear = new Date(this.year, 0, 1);\r\n            startOfYear.setDate(startOfYear.getDate() + (firstDayOfWeek - (startOfYear.getDay() % 7)));\r\n            return (Math.round((this.valueOf() - startOfYear.valueOf()) / MILLISECONDS_IN_WEEK) + 1);\r\n        }\r\n        /**\r\n         * Shortcut to Date.getDay()\r\n         */\r\n        get weekDay() {\r\n            return this.getDay();\r\n        }\r\n        /**\r\n         * Shortcut to Date.getMonth()\r\n         */\r\n        get month() {\r\n            return this.getMonth();\r\n        }\r\n        /**\r\n         * Shortcut to Date.setMonth()\r\n         */\r\n        set month(value) {\r\n            this.setMonth(value);\r\n        }\r\n        /**\r\n         * Return two digit, human expected month. E.g. January = 1, December = 12\r\n         */\r\n        get monthFormatted() {\r\n            return this.month + 1 < 10 ? `0${this.month}` : `${this.month}`;\r\n        }\r\n        /**\r\n         * Shortcut to Date.getFullYear()\r\n         */\r\n        get year() {\r\n            return this.getFullYear();\r\n        }\r\n        /**\r\n         * Shortcut to Date.setFullYear()\r\n         */\r\n        set year(value) {\r\n            this.setFullYear(value);\r\n        }\r\n    }\n\n    class TdError extends Error {\r\n    }\r\n    class ErrorMessages {\r\n        constructor() {\r\n            this.base = 'TD:';\r\n            //#endregion\r\n            //#region used with notify.error\r\n            /**\r\n             * Used with an Error Event type if the user selects a date that\r\n             * fails restriction validation.\r\n             */\r\n            this.failedToSetInvalidDate = 'Failed to set invalid date';\r\n            /**\r\n             * Used with an Error Event type when a user changes the value of the\r\n             * input field directly, and does not provide a valid date.\r\n             */\r\n            this.failedToParseInput = 'Failed parse input field';\r\n            //#endregion\r\n        }\r\n        //#region out to console\r\n        /**\r\n         * Throws an error indicating that a key in the options object is invalid.\r\n         * @param optionName\r\n         */\r\n        unexpectedOption(optionName) {\r\n            const error = new TdError(`${this.base} Unexpected option: ${optionName} does not match a known option.`);\r\n            error.code = 1;\r\n            throw error;\r\n        }\r\n        /**\r\n         * Throws an error indicating that one more keys in the options object is invalid.\r\n         * @param optionName\r\n         */\r\n        unexpectedOptions(optionName) {\r\n            const error = new TdError(`${this.base}: ${optionName.join(', ')}`);\r\n            error.code = 1;\r\n            throw error;\r\n        }\r\n        /**\r\n         * Throws an error when an option is provide an unsupported value.\r\n         * For example a value of 'cheese' for toolbarPlacement which only supports\r\n         * 'top', 'bottom', 'default'.\r\n         * @param optionName\r\n         * @param badValue\r\n         * @param validOptions\r\n         */\r\n        unexpectedOptionValue(optionName, badValue, validOptions) {\r\n            const error = new TdError(`${this.base} Unexpected option value: ${optionName} does not accept a value of \"${badValue}\". Valid values are: ${validOptions.join(', ')}`);\r\n            error.code = 2;\r\n            throw error;\r\n        }\r\n        /**\r\n         * Throws an error when an option value is the wrong type.\r\n         * For example a string value was provided to multipleDates which only\r\n         * supports true or false.\r\n         * @param optionName\r\n         * @param badType\r\n         * @param expectedType\r\n         */\r\n        typeMismatch(optionName, badType, expectedType) {\r\n            const error = new TdError(`${this.base} Mismatch types: ${optionName} has a type of ${badType} instead of the required ${expectedType}`);\r\n            error.code = 3;\r\n            throw error;\r\n        }\r\n        /**\r\n         * Throws an error when an option value is  outside of the expected range.\r\n         * For example restrictions.daysOfWeekDisabled excepts a value between 0 and 6.\r\n         * @param optionName\r\n         * @param lower\r\n         * @param upper\r\n         */\r\n        numbersOutOfRage(optionName, lower, upper) {\r\n            const error = new TdError(`${this.base} ${optionName} expected an array of number between ${lower} and ${upper}.`);\r\n            error.code = 4;\r\n            throw error;\r\n        }\r\n        /**\r\n         * Throws an error when a value for a date options couldn't be parsed. Either\r\n         * the option was an invalide string or an invalid Date object.\r\n         * @param optionName\r\n         * @param date\r\n         */\r\n        failedToParseDate(optionName, date) {\r\n            const error = new TdError(`${this.base} Could not correctly parse \"${date}\" to a date for option ${optionName}.`);\r\n            error.code = 5;\r\n            throw error;\r\n        }\r\n        /**\r\n         * Throws when an element to attach to was not provided in the constructor.\r\n         */\r\n        mustProvideElement() {\r\n            const error = new TdError(`${this.base} No element was provided.`);\r\n            error.code = 6;\r\n            throw error;\r\n        }\r\n        /**\r\n         * Throws if providing an array for the events to subscribe method doesn't have\r\n         * the same number of callbacks. E.g., subscribe([1,2], [1])\r\n         */\r\n        subscribeMismatch() {\r\n            const error = new TdError(`${this.base} The subscribed events does not match the number of callbacks`);\r\n            error.code = 7;\r\n            throw error;\r\n        }\r\n        /**\r\n         * Throws if the configuration has conflicting rules e.g. minDate is after maxDate\r\n         */\r\n        conflictingConfiguration(message) {\r\n            const error = new TdError(`${this.base} A configuration value conflicts with another rule. ${message}`);\r\n            error.code = 8;\r\n            throw error;\r\n        }\r\n        /**\r\n         * Logs a warning if a date option value is provided as a string, instead of\r\n         * a date/datetime object.\r\n         */\r\n        dateString() {\r\n            console.warn(`${this.base} Using a string for date options is not recommended unless you specify an ISO string.`);\r\n        }\r\n    }\n\n    //this is not the way I want this to stay but nested classes seemed to blown up once its compiled.\r\n    const NAME = 'tempus-dominus', version = '6.0.0-alpha1', dataKey = 'td';\r\n    /**\r\n     * Events\r\n     */\r\n    class Events {\r\n        constructor() {\r\n            this.key = `.${dataKey}`;\r\n            /**\r\n             * Change event. Fired when the user selects a date.\r\n             * See also EventTypes.ChangeEvent\r\n             */\r\n            this.change = `change${this.key}`;\r\n            /**\r\n             * Emit when the view changes for example from month view to the year view.\r\n             * See also EventTypes.ViewUpdateEvent\r\n             */\r\n            this.update = `update${this.key}`;\r\n            /**\r\n             * Emits when a selected date or value from the input field fails to meet the provided validation rules.\r\n             * See also EventTypes.FailEvent\r\n             */\r\n            this.error = `error${this.key}`;\r\n            /**\r\n             * Show event\r\n             * @event Events#show\r\n             */\r\n            this.show = `show${this.key}`;\r\n            /**\r\n             * Hide event\r\n             * @event Events#hide\r\n             */\r\n            this.hide = `hide${this.key}`;\r\n            // blur and focus are used in the jQuery provider but are otherwise unused.\r\n            // keyup/down will be used later for keybinding options\r\n            this.blur = `blur${this.key}`;\r\n            this.focus = `focus${this.key}`;\r\n            this.keyup = `keyup${this.key}`;\r\n            this.keydown = `keydown${this.key}`;\r\n        }\r\n    }\r\n    class Css {\r\n        constructor() {\r\n            /**\r\n             * The outer element for the widget.\r\n             */\r\n            this.widget = `${NAME}-widget`;\r\n            /**\r\n             * The element for the action to change the calendar view. E.g. month -> year.\r\n             */\r\n            this.switch = 'picker-switch';\r\n            /**\r\n             * Applied to the widget element when the side by side option is in use.\r\n             */\r\n            this.sideBySide = 'timepicker-sbs';\r\n            /**\r\n             * The element for the action to change the calendar view, e.g. August -> July\r\n             */\r\n            this.previous = 'previous';\r\n            /**\r\n             * The element for the action to change the calendar view, e.g. August -> September\r\n             */\r\n            this.next = 'next';\r\n            /**\r\n             * Applied to any action that would violate any restriction options. ALso applied\r\n             * to an input field if the disabled function is called.\r\n             */\r\n            this.disabled = 'disabled';\r\n            /**\r\n             * Applied to any date that is less than requested view,\r\n             * e.g. the last day of the previous month.\r\n             */\r\n            this.old = 'old';\r\n            /**\r\n             * Applied to any date that is greater than of requested view,\r\n             * e.g. the last day of the previous month.\r\n             */\r\n            this.new = 'new';\r\n            /**\r\n             * Applied to any date that is currently selected.\r\n             */\r\n            this.active = 'active';\r\n            //#region date element\r\n            /**\r\n             * The outer most element for the calendar view.\r\n             */\r\n            this.dateContainer = 'date-container';\r\n            /**\r\n             * The outer most element for the decades view.\r\n             */\r\n            this.decadesContainer = `${this.dateContainer}-decades`;\r\n            /**\r\n             * Applied to elements within the decades container, e.g. 2020, 2030\r\n             */\r\n            this.decade = 'decade';\r\n            /**\r\n             * The outer most element for the years view.\r\n             */\r\n            this.yearsContainer = `${this.dateContainer}-years`;\r\n            /**\r\n             * Applied to elements within the years container, e.g. 2021, 2021\r\n             */\r\n            this.year = 'year';\r\n            /**\r\n             * The outer most element for the month view.\r\n             */\r\n            this.monthsContainer = `${this.dateContainer}-months`;\r\n            /**\r\n             * Applied to elements within the month container, e.g. January, February\r\n             */\r\n            this.month = 'month';\r\n            /**\r\n             * The outer most element for the calendar view.\r\n             */\r\n            this.daysContainer = `${this.dateContainer}-days`;\r\n            /**\r\n             * Applied to elements within the day container, e.g. 1, 2..31\r\n             */\r\n            this.day = 'day';\r\n            /**\r\n             * If display.calendarWeeks is enabled, a column displaying the week of year\r\n             * is shown. This class is applied to each cell in that column.\r\n             */\r\n            this.calendarWeeks = 'cw';\r\n            /**\r\n             * Applied to the first row of the calendar view, e.g. Sunday, Monday\r\n             */\r\n            this.dayOfTheWeek = 'dow';\r\n            /**\r\n             * Applied to the current date on the calendar view.\r\n             */\r\n            this.today = 'today';\r\n            /**\r\n             * Applied to the locale's weekend dates on the calendar view, e.g. Sunday, Saturday\r\n             */\r\n            this.weekend = 'weekend';\r\n            //#endregion\r\n            //#region time element\r\n            /**\r\n             * The outer most element for all time related elements.\r\n             */\r\n            this.timeContainer = 'time-container';\r\n            /**\r\n             * Applied the separator columns between time elements, e.g. hour *:* minute *:* second\r\n             */\r\n            this.separator = 'separator';\r\n            /**\r\n             * The outer most element for the clock view.\r\n             */\r\n            this.clockContainer = `${this.timeContainer}-clock`;\r\n            /**\r\n             * The outer most element for the hours selection view.\r\n             */\r\n            this.hourContainer = `${this.timeContainer}-hour`;\r\n            /**\r\n             * The outer most element for the minutes selection view.\r\n             */\r\n            this.minuteContainer = `${this.timeContainer}-minute`;\r\n            /**\r\n             * The outer most element for the seconds selection view.\r\n             */\r\n            this.secondContainer = `${this.timeContainer}-second`;\r\n            /**\r\n             * Applied to each element in the hours selection view.\r\n             */\r\n            this.hour = 'hour';\r\n            /**\r\n             * Applied to each element in the minutes selection view.\r\n             */\r\n            this.minute = 'minute';\r\n            /**\r\n             * Applied to each element in the seconds selection view.\r\n             */\r\n            this.second = 'second';\r\n            //#endregion\r\n            //#region collapse\r\n            /**\r\n             * Applied the element of the current view mode, e.g. calendar or clock.\r\n             */\r\n            this.show = 'show';\r\n            /**\r\n             * Applied to the currently showing view mode during a transition\r\n             * between calendar and clock views\r\n             */\r\n            this.collapsing = 'td-collapsing';\r\n            /**\r\n             * Applied to the currently hidden view mode.\r\n             */\r\n            this.collapse = 'td-collapse';\r\n            //#endregion\r\n            /**\r\n             * Applied to the widget when the option display.inline is enabled.\r\n             */\r\n            this.inline = 'inline';\r\n        }\r\n    }\r\n    class Namespace {\r\n    }\r\n    Namespace.NAME = NAME;\r\n    // noinspection JSUnusedGlobalSymbols\r\n    Namespace.version = version;\r\n    Namespace.dataKey = dataKey;\r\n    Namespace.Events = new Events();\r\n    Namespace.Css = new Css();\r\n    Namespace.ErrorMessages = new ErrorMessages();\n\n    const DefaultOptions = {\r\n        restrictions: {\r\n            minDate: undefined,\r\n            maxDate: undefined,\r\n            disabledDates: [],\r\n            enabledDates: [],\r\n            daysOfWeekDisabled: [],\r\n            disabledTimeIntervals: [],\r\n            disabledHours: [],\r\n            enabledHours: [],\r\n        },\r\n        display: {\r\n            icons: {\r\n                type: 'icons',\r\n                time: 'fas fa-clock',\r\n                date: 'fas fa-calendar',\r\n                up: 'fas fa-arrow-up',\r\n                down: 'fas fa-arrow-down',\r\n                previous: 'fas fa-chevron-left',\r\n                next: 'fas fa-chevron-right',\r\n                today: 'fas fa-calendar-check',\r\n                clear: 'fas fa-trash',\r\n                close: 'fas fa-times',\r\n            },\r\n            sideBySide: false,\r\n            calendarWeeks: false,\r\n            viewMode: 'calendar',\r\n            toolbarPlacement: 'default',\r\n            buttons: {\r\n                today: false,\r\n                clear: false,\r\n                close: false,\r\n            },\r\n            components: {\r\n                calendar: true,\r\n                date: true,\r\n                month: true,\r\n                year: true,\r\n                decades: true,\r\n                century: true,\r\n                clock: true,\r\n                hours: true,\r\n                minutes: true,\r\n                seconds: false,\r\n                useTwentyfourHour: false,\r\n            },\r\n            inputFormat: '',\r\n            inline: false,\r\n        },\r\n        stepping: 1,\r\n        useCurrent: true,\r\n        defaultDate: false,\r\n        localization: {\r\n            today: 'Go to today',\r\n            clear: 'Clear selection',\r\n            close: 'Close the picker',\r\n            selectMonth: 'Select Month',\r\n            previousMonth: 'Previous Month',\r\n            nextMonth: 'Next Month',\r\n            selectYear: 'Select Year',\r\n            previousYear: 'Previous Year',\r\n            nextYear: 'Next Year',\r\n            selectDecade: 'Select Decade',\r\n            previousDecade: 'Previous Decade',\r\n            nextDecade: 'Next Decade',\r\n            previousCentury: 'Previous Century',\r\n            nextCentury: 'Next Century',\r\n            pickHour: 'Pick Hour',\r\n            incrementHour: 'Increment Hour',\r\n            decrementHour: 'Decrement Hour',\r\n            pickMinute: 'Pick Minute',\r\n            incrementMinute: 'Increment Minute',\r\n            decrementMinute: 'Decrement Minute',\r\n            pickSecond: 'Pick Second',\r\n            incrementSecond: 'Increment Second',\r\n            decrementSecond: 'Decrement Second',\r\n            togglePeriod: 'Toggle Period',\r\n            selectTime: 'Select Time',\r\n            selectDate: 'Select Date',\r\n            dayViewHeaderFormat: 'long',\r\n            locale: 'default',\r\n        },\r\n        readonly: false,\r\n        ignoreReadonly: false,\r\n        keepOpen: false,\r\n        focusOnShow: true,\r\n        keepInvalid: false,\r\n        keyBinds: {\r\n            'control down': () => {\r\n                return false;\r\n            },\r\n            pageDown: () => {\r\n                return false;\r\n            },\r\n            'control up': () => {\r\n                return false;\r\n            },\r\n            right: () => {\r\n                return false;\r\n            },\r\n            pageUp: () => {\r\n                return false;\r\n            },\r\n            down: () => {\r\n                return false;\r\n            },\r\n            delete: () => {\r\n                return false;\r\n            },\r\n            t: () => {\r\n                return false;\r\n            },\r\n            left: () => {\r\n                return false;\r\n            },\r\n            up: () => {\r\n                return false;\r\n            },\r\n            enter: () => {\r\n                return false;\r\n            },\r\n            'control space': () => {\r\n                return false;\r\n            },\r\n            escape: () => {\r\n                return false;\r\n            },\r\n        },\r\n        debug: false,\r\n        allowInputToggle: false,\r\n        viewDate: new DateTime(),\r\n        multipleDates: false,\r\n        multipleDatesSeparator: '; ',\r\n        promptTimeOnDateChange: false,\r\n        promptTimeOnDateChangeTransitionDelay: 200,\r\n    };\r\n    const DatePickerModes = [\r\n        {\r\n            name: 'calendar',\r\n            className: Namespace.Css.daysContainer,\r\n            unit: Unit.month,\r\n            step: 1,\r\n        },\r\n        {\r\n            name: 'months',\r\n            className: Namespace.Css.monthsContainer,\r\n            unit: Unit.year,\r\n            step: 1,\r\n        },\r\n        {\r\n            name: 'years',\r\n            className: Namespace.Css.yearsContainer,\r\n            unit: Unit.year,\r\n            step: 10,\r\n        },\r\n        {\r\n            name: 'decades',\r\n            className: Namespace.Css.decadesContainer,\r\n            unit: Unit.year,\r\n            step: 100,\r\n        },\r\n    ];\n\n    /**\r\n     * Provides a collapse functionality to the view changes\r\n     */\r\n    class Collapse {\r\n        constructor() {\r\n            /**\r\n             * Gets the transition duration from the `element` by getting css properties\r\n             * `transition-duration` and `transition-delay`\r\n             * @param element HTML Element\r\n             */\r\n            this.getTransitionDurationFromElement = (element) => {\r\n                if (!element) {\r\n                    return 0;\r\n                }\r\n                // Get transition-duration of the element\r\n                let { transitionDuration, transitionDelay } = window.getComputedStyle(element);\r\n                const floatTransitionDuration = Number.parseFloat(transitionDuration);\r\n                const floatTransitionDelay = Number.parseFloat(transitionDelay);\r\n                // Return 0 if element or transition duration is not found\r\n                if (!floatTransitionDuration && !floatTransitionDelay) {\r\n                    return 0;\r\n                }\r\n                // If multiple durations are defined, take the first\r\n                transitionDuration = transitionDuration.split(',')[0];\r\n                transitionDelay = transitionDelay.split(',')[0];\r\n                return ((Number.parseFloat(transitionDuration) +\r\n                    Number.parseFloat(transitionDelay)) *\r\n                    1000);\r\n            };\r\n        }\r\n        /**\r\n         * Flips the show/hide state of `target`\r\n         * @param target html element to affect.\r\n         */\r\n        toggle(target) {\r\n            if (target.classList.contains(Namespace.Css.show)) {\r\n                this.hide(target);\r\n            }\r\n            else {\r\n                this.show(target);\r\n            }\r\n        }\r\n        /**\r\n         * If `target` is not already showing, then show after the animation.\r\n         * @param target\r\n         */\r\n        show(target) {\r\n            if (target.classList.contains(Namespace.Css.collapsing) ||\r\n                target.classList.contains(Namespace.Css.show))\r\n                return;\r\n            const complete = () => {\r\n                target.classList.remove(Namespace.Css.collapsing);\r\n                target.classList.add(Namespace.Css.collapse, Namespace.Css.show);\r\n                target.style.height = '';\r\n                this.timeOut = null;\r\n            };\r\n            target.style.height = '0';\r\n            target.classList.remove(Namespace.Css.collapse);\r\n            target.classList.add(Namespace.Css.collapsing);\r\n            this.timeOut = setTimeout(complete, this.getTransitionDurationFromElement(target));\r\n            target.style.height = `${target.scrollHeight}px`;\r\n        }\r\n        /**\r\n         * If `target` is not already hidden, then hide after the animation.\r\n         * @param target HTML Element\r\n         */\r\n        hide(target) {\r\n            if (target.classList.contains(Namespace.Css.collapsing) ||\r\n                !target.classList.contains(Namespace.Css.show))\r\n                return;\r\n            const complete = () => {\r\n                target.classList.remove(Namespace.Css.collapsing);\r\n                target.classList.add(Namespace.Css.collapse);\r\n                this.timeOut = null;\r\n            };\r\n            target.style.height = `${target.getBoundingClientRect()['height']}px`;\r\n            const reflow = (element) => element.offsetHeight;\r\n            reflow(target);\r\n            target.classList.remove(Namespace.Css.collapse, Namespace.Css.show);\r\n            target.classList.add(Namespace.Css.collapsing);\r\n            target.style.height = '';\r\n            this.timeOut = setTimeout(complete, this.getTransitionDurationFromElement(target));\r\n        }\r\n    }\n\n    /**\r\n     *\r\n     */\r\n    class Actions {\r\n        constructor(context) {\r\n            this._context = context;\r\n            this.collapse = new Collapse();\r\n        }\r\n        /**\r\n         * Performs the selected `action`. See ActionTypes\r\n         * @param e This is normally a click event\r\n         * @param action If not provided, then look for a [data-action]\r\n         */\r\n        do(e, action) {\r\n            const currentTarget = e.currentTarget;\r\n            if (currentTarget.classList.contains(Namespace.Css.disabled))\r\n                return false;\r\n            action = action || currentTarget.dataset.action;\r\n            const lastPicked = (this._context.dates.lastPicked || this._context._viewDate).clone;\r\n            /**\r\n             * Common function to manipulate {@link lastPicked} by `unit`\r\n             * @param unit\r\n             * @param value Value to change by\r\n             */\r\n            const manipulateAndSet = (unit, value = 1) => {\r\n                const newDate = lastPicked.manipulate(value, unit);\r\n                if (this._context._validation.isValid(newDate, unit)) {\r\n                    /*if (this.context.dates.lastPickedIndex < 0) {\r\n                                this.date(newDate);\r\n                            }*/\r\n                    this._context.dates._setValue(newDate, this._context.dates.lastPickedIndex);\r\n                }\r\n            };\r\n            switch (action) {\r\n                case ActionTypes.next:\r\n                case ActionTypes.previous:\r\n                    const { unit, step } = DatePickerModes[this._context._currentViewMode];\r\n                    if (action === ActionTypes.next)\r\n                        this._context._viewDate.manipulate(step, unit);\r\n                    else\r\n                        this._context._viewDate.manipulate(step * -1, unit);\r\n                    this._context._display._update('calendar');\r\n                    this._context._viewUpdate(unit);\r\n                    break;\r\n                case ActionTypes.pickerSwitch:\r\n                    this._context._display._showMode(1);\r\n                    this._context._viewUpdate(DatePickerModes[this._context._currentViewMode].unit);\r\n                    break;\r\n                case ActionTypes.selectMonth:\r\n                case ActionTypes.selectYear:\r\n                case ActionTypes.selectDecade:\r\n                    const value = +currentTarget.getAttribute('data-value');\r\n                    switch (action) {\r\n                        case ActionTypes.selectMonth:\r\n                            this._context._viewDate.month = value;\r\n                            this._context._viewUpdate(Unit.month);\r\n                            break;\r\n                        case ActionTypes.selectYear:\r\n                            this._context._viewDate.year = value;\r\n                            this._context._viewUpdate(Unit.year);\r\n                            break;\r\n                        case ActionTypes.selectDecade:\r\n                            this._context._viewDate.year = value;\r\n                            this._context._viewUpdate(Unit.year);\r\n                            break;\r\n                    }\r\n                    if (this._context._currentViewMode === this._context._minViewModeNumber) {\r\n                        this._context.dates._setValue(this._context._viewDate, this._context.dates.lastPickedIndex);\r\n                        if (!this._context._options.display.inline) {\r\n                            this._context._display.hide();\r\n                        }\r\n                    }\r\n                    else {\r\n                        this._context._display._showMode(-1);\r\n                    }\r\n                    break;\r\n                case ActionTypes.selectDay:\r\n                    const day = this._context._viewDate.clone;\r\n                    if (currentTarget.classList.contains(Namespace.Css.old)) {\r\n                        day.manipulate(-1, Unit.month);\r\n                    }\r\n                    if (currentTarget.classList.contains(Namespace.Css.new)) {\r\n                        day.manipulate(1, Unit.month);\r\n                    }\r\n                    day.date = +currentTarget.getAttribute('data-day'); //***\r\n                    let index = 0;\r\n                    if (this._context._options.multipleDates) {\r\n                        index = this._context.dates.pickedIndex(day, Unit.date);\r\n                        if (index !== -1) {\r\n                            this._context.dates._setValue(null, index); //deselect multi-date\r\n                        }\r\n                        else {\r\n                            this._context.dates._setValue(day, this._context.dates.lastPickedIndex + 1);\r\n                        }\r\n                    }\r\n                    else {\r\n                        this._context.dates._setValue(day, this._context.dates.lastPickedIndex);\r\n                    }\r\n                    if (!this._context._display._hasTime &&\r\n                        !this._context._options.keepOpen &&\r\n                        !this._context._options.display.inline &&\r\n                        !this._context._options.multipleDates) {\r\n                        this._context._display.hide();\r\n                    }\r\n                    break;\r\n                case ActionTypes.selectHour:\r\n                    let hour = +currentTarget.getAttribute('data-value');\r\n                    lastPicked.hours = hour;\r\n                    this._context.dates._setValue(lastPicked, this._context.dates.lastPickedIndex);\r\n                    if (this._context._options.display.components.useTwentyfourHour &&\r\n                        !this._context._options.display.components.minutes &&\r\n                        !this._context._options.keepOpen &&\r\n                        !this._context._options.display.inline) {\r\n                        this._context._display.hide();\r\n                    }\r\n                    else {\r\n                        this.do(e, ActionTypes.showClock);\r\n                    }\r\n                    break;\r\n                case ActionTypes.selectMinute:\r\n                    lastPicked.minutes = +currentTarget.getAttribute('data-value'); //***\r\n                    this._context.dates._setValue(lastPicked, this._context.dates.lastPickedIndex);\r\n                    if (this._context._options.display.components.useTwentyfourHour &&\r\n                        !this._context._options.display.components.seconds &&\r\n                        !this._context._options.keepOpen &&\r\n                        !this._context._options.display.inline) {\r\n                        this._context._display.hide();\r\n                    }\r\n                    else {\r\n                        this.do(e, ActionTypes.showClock);\r\n                    }\r\n                    break;\r\n                case ActionTypes.selectSecond:\r\n                    lastPicked.seconds = +currentTarget.getAttribute('data-value'); //***\r\n                    this._context.dates._setValue(lastPicked, this._context.dates.lastPickedIndex);\r\n                    if (this._context._options.display.components.useTwentyfourHour &&\r\n                        !this._context._options.keepOpen &&\r\n                        !this._context._options.display.inline) {\r\n                        this._context._display.hide();\r\n                    }\r\n                    else {\r\n                        this.do(e, ActionTypes.showClock);\r\n                    }\r\n                    break;\r\n                case ActionTypes.incrementHours:\r\n                    manipulateAndSet(Unit.hours);\r\n                    break;\r\n                case ActionTypes.incrementMinutes:\r\n                    manipulateAndSet(Unit.minutes, this._context._options.stepping);\r\n                    break;\r\n                case ActionTypes.incrementSeconds:\r\n                    manipulateAndSet(Unit.seconds);\r\n                    break;\r\n                case ActionTypes.decrementHours:\r\n                    manipulateAndSet(Unit.hours, -1);\r\n                    break;\r\n                case ActionTypes.decrementMinutes:\r\n                    manipulateAndSet(Unit.minutes, this._context._options.stepping * -1);\r\n                    break;\r\n                case ActionTypes.decrementSeconds:\r\n                    manipulateAndSet(Unit.seconds, -1);\r\n                    break;\r\n                case ActionTypes.togglePeriod:\r\n                    manipulateAndSet(Unit.hours, this._context.dates.lastPicked.hours >= 12 ? -12 : 12);\r\n                    break;\r\n                case ActionTypes.togglePicker:\r\n                    this._context._display.widget\r\n                        .querySelectorAll(`.${Namespace.Css.dateContainer}, .${Namespace.Css.timeContainer}`)\r\n                        .forEach((htmlElement) => this.collapse.toggle(htmlElement));\r\n                    if (currentTarget.getAttribute('title') ===\r\n                        this._context._options.localization.selectDate) {\r\n                        currentTarget.setAttribute('title', this._context._options.localization.selectTime);\r\n                        currentTarget.innerHTML = this._context._display._iconTag(this._context._options.display.icons.time).outerHTML;\r\n                        this._context._display._update('calendar');\r\n                    }\r\n                    else {\r\n                        currentTarget.setAttribute('title', this._context._options.localization.selectDate);\r\n                        currentTarget.innerHTML = this._context._display._iconTag(this._context._options.display.icons.date).outerHTML;\r\n                        this.do(e, ActionTypes.showClock);\r\n                        this._context._display._update('clock');\r\n                    }\r\n                    setTimeout(() => this._context._display.popper.forceUpdate(), this.collapse.getTransitionDurationFromElement(this._context._display.widget.querySelector(\".td-collapsing\"))); // Update after transition time of .td-collapsing //***\r\n                    break;\r\n                case ActionTypes.showClock:\r\n                case ActionTypes.showHours:\r\n                case ActionTypes.showMinutes:\r\n                case ActionTypes.showSeconds:\r\n                    this._context._display.widget\r\n                        .querySelectorAll(`.${Namespace.Css.timeContainer} > div`)\r\n                        .forEach((htmlElement) => (htmlElement.style.display = 'none'));\r\n                    let classToUse = '';\r\n                    switch (action) {\r\n                        case ActionTypes.showClock:\r\n                            classToUse = Namespace.Css.clockContainer;\r\n                            this._context._display._update('clock');\r\n                            break;\r\n                        case ActionTypes.showHours:\r\n                            classToUse = Namespace.Css.hourContainer;\r\n                            this._context._display._update(Unit.hours);\r\n                            break;\r\n                        case ActionTypes.showMinutes:\r\n                            classToUse = Namespace.Css.minuteContainer;\r\n                            this._context._display._update(Unit.minutes);\r\n                            break;\r\n                        case ActionTypes.showSeconds:\r\n                            classToUse = Namespace.Css.secondContainer;\r\n                            this._context._display._update(Unit.seconds);\r\n                            break;\r\n                    }\r\n                    (this._context._display.widget.getElementsByClassName(classToUse)[0]).style.display = 'block';\r\n                    break;\r\n                case ActionTypes.clear:\r\n                    this._context.dates._setValue(null);\r\n                    break;\r\n                case ActionTypes.close:\r\n                    this._context._display.hide();\r\n                    break;\r\n                case ActionTypes.today:\r\n                    const today = new DateTime().setLocale(this._context._options.localization.locale);\r\n                    this._context._viewDate = today;\r\n                    if (this._context._validation.isValid(today, Unit.date))\r\n                        this._context.dates._setValue(today, this._context.dates.lastPickedIndex);\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n    var ActionTypes;\r\n    (function (ActionTypes) {\r\n        ActionTypes[\"next\"] = \"next\";\r\n        ActionTypes[\"previous\"] = \"previous\";\r\n        ActionTypes[\"pickerSwitch\"] = \"pickerSwitch\";\r\n        ActionTypes[\"selectMonth\"] = \"selectMonth\";\r\n        ActionTypes[\"selectYear\"] = \"selectYear\";\r\n        ActionTypes[\"selectDecade\"] = \"selectDecade\";\r\n        ActionTypes[\"selectDay\"] = \"selectDay\";\r\n        ActionTypes[\"selectHour\"] = \"selectHour\";\r\n        ActionTypes[\"selectMinute\"] = \"selectMinute\";\r\n        ActionTypes[\"selectSecond\"] = \"selectSecond\";\r\n        ActionTypes[\"incrementHours\"] = \"incrementHours\";\r\n        ActionTypes[\"incrementMinutes\"] = \"incrementMinutes\";\r\n        ActionTypes[\"incrementSeconds\"] = \"incrementSeconds\";\r\n        ActionTypes[\"decrementHours\"] = \"decrementHours\";\r\n        ActionTypes[\"decrementMinutes\"] = \"decrementMinutes\";\r\n        ActionTypes[\"decrementSeconds\"] = \"decrementSeconds\";\r\n        ActionTypes[\"togglePeriod\"] = \"togglePeriod\";\r\n        ActionTypes[\"togglePicker\"] = \"togglePicker\";\r\n        ActionTypes[\"showClock\"] = \"showClock\";\r\n        ActionTypes[\"showHours\"] = \"showHours\";\r\n        ActionTypes[\"showMinutes\"] = \"showMinutes\";\r\n        ActionTypes[\"showSeconds\"] = \"showSeconds\";\r\n        ActionTypes[\"clear\"] = \"clear\";\r\n        ActionTypes[\"close\"] = \"close\";\r\n        ActionTypes[\"today\"] = \"today\";\r\n    })(ActionTypes || (ActionTypes = {}));\n\n    /**\r\n     * Creates and updates the grid for `date`\r\n     */\r\n    class DateDisplay {\r\n        constructor(context) {\r\n            this._context = context;\r\n        }\r\n        /**\r\n         * Build the container html for the display\r\n         * @private\r\n         */\r\n        get _picker() {\r\n            const container = document.createElement('div');\r\n            container.classList.add(Namespace.Css.daysContainer);\r\n            const table = document.createElement('table');\r\n            const headTemplate = this._context._display._headTemplate;\r\n            const [previous, switcher, next] = headTemplate.getElementsByTagName('th');\r\n            previous\r\n                .getElementsByTagName('div')[0]\r\n                .setAttribute('title', this._context._options.localization.previousMonth);\r\n            switcher.setAttribute('title', this._context._options.localization.selectMonth);\r\n            next\r\n                .getElementsByTagName('div')[0]\r\n                .setAttribute('title', this._context._options.localization.nextMonth);\r\n            table.appendChild(headTemplate);\r\n            const tableBody = document.createElement('tbody');\r\n            tableBody.appendChild(this._daysOfTheWeek());\r\n            let row = document.createElement('tr');\r\n            if (this._context._options.display.calendarWeeks) {\r\n                const td = document.createElement('td');\r\n                const div = document.createElement('div');\r\n                div.classList.add(Namespace.Css.calendarWeeks);\r\n                td.appendChild(div);\r\n                row.appendChild(td);\r\n            }\r\n            for (let i = 0; i <= 42; i++) {\r\n                if (i !== 0 && i % 7 === 0) {\r\n                    tableBody.appendChild(row);\r\n                    row = document.createElement('tr');\r\n                    if (this._context._options.display.calendarWeeks) {\r\n                        const td = document.createElement('td');\r\n                        const div = document.createElement('div');\r\n                        div.classList.add(Namespace.Css.calendarWeeks);\r\n                        td.appendChild(div);\r\n                        row.appendChild(td);\r\n                    }\r\n                }\r\n                const td = document.createElement('td');\r\n                const div = document.createElement('div');\r\n                div.setAttribute('data-action', ActionTypes.selectDay);\r\n                td.appendChild(div);\r\n                row.appendChild(td);\r\n            }\r\n            table.appendChild(tableBody);\r\n            container.appendChild(table);\r\n            return container;\r\n        }\r\n        /**\r\n         * Populates the grid and updates enabled states\r\n         * @private\r\n         */\r\n        _update() {\r\n            const container = this._context._display.widget.getElementsByClassName(Namespace.Css.daysContainer)[0];\r\n            const [previous, switcher, next] = container\r\n                .getElementsByTagName('thead')[0]\r\n                .getElementsByTagName('th');\r\n            switcher.innerText = this._context._viewDate.format({\r\n                month: this._context._options.localization.dayViewHeaderFormat,\r\n            });\r\n            this._context._validation.isValid(this._context._viewDate.clone.manipulate(-1, Unit.month), Unit.month)\r\n                ? previous.classList.remove(Namespace.Css.disabled)\r\n                : previous.classList.add(Namespace.Css.disabled);\r\n            this._context._validation.isValid(this._context._viewDate.clone.manipulate(1, Unit.month), Unit.month)\r\n                ? next.classList.remove(Namespace.Css.disabled)\r\n                : next.classList.add(Namespace.Css.disabled);\r\n            let innerDate = this._context._viewDate.clone\r\n                .startOf(Unit.month)\r\n                .startOf('weekDay')\r\n                .manipulate(12, Unit.hours);\r\n            container\r\n                .querySelectorAll('tbody td div')\r\n                .forEach((containerClone, index) => {\r\n                if (this._context._options.display.calendarWeeks &&\r\n                    containerClone.classList.contains(Namespace.Css.calendarWeeks)) {\r\n                    containerClone.innerText = `${innerDate.week}`;\r\n                    return;\r\n                }\r\n                let classes = [];\r\n                classes.push(Namespace.Css.day);\r\n                if (innerDate.isBefore(this._context._viewDate, Unit.month)) {\r\n                    classes.push(Namespace.Css.old);\r\n                }\r\n                if (innerDate.isAfter(this._context._viewDate, Unit.month)) {\r\n                    classes.push(Namespace.Css.new);\r\n                }\r\n                if (!this._context._unset &&\r\n                    this._context.dates.isPicked(innerDate, Unit.date)) {\r\n                    classes.push(Namespace.Css.active);\r\n                }\r\n                if (!this._context._validation.isValid(innerDate, Unit.date)) {\r\n                    classes.push(Namespace.Css.disabled);\r\n                }\r\n                if (innerDate.isSame(new DateTime(), Unit.date)) {\r\n                    classes.push(Namespace.Css.today);\r\n                }\r\n                if (innerDate.weekDay === 0 || innerDate.weekDay === 6) {\r\n                    classes.push(Namespace.Css.weekend);\r\n                }\r\n                containerClone.classList.remove(...containerClone.classList);\r\n                containerClone.classList.add(...classes);\r\n                containerClone.setAttribute('data-value', `${innerDate.year}-${innerDate.monthFormatted}-${innerDate.dateFormatted}`);\r\n                containerClone.setAttribute('data-day', `${innerDate.date}`); //***\r\n                containerClone.innerText = innerDate.format({ day: \"numeric\" }); //***\r\n                innerDate.manipulate(1, Unit.date);\r\n            });\r\n        }\r\n        /***\r\n         * Generates an html row that contains the days of the week.\r\n         * @private\r\n         */\r\n        _daysOfTheWeek() {\r\n            let innerDate = this._context._viewDate.clone\r\n                .startOf('weekDay')\r\n                .startOf(Unit.date);\r\n            const row = document.createElement('tr');\r\n            if (this._context._options.display.calendarWeeks) {\r\n                const th = document.createElement('th');\r\n                th.classList.add(Namespace.Css.calendarWeeks);\r\n                th.innerText = '#';\r\n                row.appendChild(th);\r\n            }\r\n            let i = 0;\r\n            while (i < 7) {\r\n                const th = document.createElement('th');\r\n                th.classList.add(Namespace.Css.dayOfTheWeek);\r\n                th.innerText = innerDate.format({ weekday: 'short' });\r\n                innerDate.manipulate(1, Unit.date);\r\n                row.appendChild(th);\r\n                i++;\r\n            }\r\n            return row;\r\n        }\r\n    }\n\n    /**\r\n     * Creates and updates the grid for `month`\r\n     */\r\n    class MonthDisplay {\r\n        constructor(context) {\r\n            this._context = context;\r\n        }\r\n        /**\r\n         * Build the container html for the display\r\n         * @private\r\n         */\r\n        get _picker() {\r\n            const container = document.createElement('div');\r\n            container.classList.add(Namespace.Css.monthsContainer);\r\n            const table = document.createElement('table');\r\n            const headTemplate = this._context._display._headTemplate;\r\n            const [previous, switcher, next] = headTemplate.getElementsByTagName('th');\r\n            previous\r\n                .getElementsByTagName('div')[0]\r\n                .setAttribute('title', this._context._options.localization.previousYear);\r\n            switcher.setAttribute('title', this._context._options.localization.selectYear);\r\n            switcher.setAttribute('colspan', '2');\r\n            next\r\n                .getElementsByTagName('div')[0]\r\n                .setAttribute('title', this._context._options.localization.nextYear);\r\n            table.appendChild(headTemplate);\r\n            const tableBody = document.createElement('tbody');\r\n            let row = document.createElement('tr');\r\n            for (let i = 0; i <= 12; i++) {\r\n                if (i !== 0 && i % 4 === 0) {\r\n                    tableBody.appendChild(row);\r\n                    row = document.createElement('tr');\r\n                }\r\n                const td = document.createElement('td');\r\n                const div = document.createElement('div');\r\n                div.setAttribute('data-action', ActionTypes.selectMonth);\r\n                td.appendChild(div);\r\n                row.appendChild(td);\r\n            }\r\n            table.appendChild(tableBody);\r\n            container.appendChild(table);\r\n            return container;\r\n        }\r\n        /**\r\n         * Populates the grid and updates enabled states\r\n         * @private\r\n         */\r\n        _update() {\r\n            const container = this._context._display.widget.getElementsByClassName(Namespace.Css.monthsContainer)[0];\r\n            const [previous, switcher, next] = container\r\n                .getElementsByTagName('thead')[0]\r\n                .getElementsByTagName('th');\r\n            switcher.innerText = this._context._viewDate.format({ year: 'numeric' });\r\n            this._context._validation.isValid(this._context._viewDate.clone.manipulate(-1, Unit.year), Unit.year)\r\n                ? previous.classList.remove(Namespace.Css.disabled)\r\n                : previous.classList.add(Namespace.Css.disabled);\r\n            this._context._validation.isValid(this._context._viewDate.clone.manipulate(1, Unit.year), Unit.year)\r\n                ? next.classList.remove(Namespace.Css.disabled)\r\n                : next.classList.add(Namespace.Css.disabled);\r\n            let innerDate = this._context._viewDate.clone.startOf(Unit.year);\r\n            container\r\n                .querySelectorAll('tbody td div')\r\n                .forEach((containerClone, index) => {\r\n                let classes = [];\r\n                classes.push(Namespace.Css.month);\r\n                if (!this._context._unset &&\r\n                    this._context.dates.isPicked(innerDate, Unit.month)) {\r\n                    classes.push(Namespace.Css.active);\r\n                }\r\n                if (!this._context._validation.isValid(innerDate, Unit.month)) {\r\n                    classes.push(Namespace.Css.disabled);\r\n                }\r\n                containerClone.classList.remove(...containerClone.classList);\r\n                containerClone.classList.add(...classes);\r\n                containerClone.setAttribute('data-value', `${index}`);\r\n                containerClone.innerText = `${innerDate.format({ month: 'short' })}`;\r\n                innerDate.manipulate(1, Unit.month);\r\n            });\r\n        }\r\n    }\n\n    /**\r\n     * Creates and updates the grid for `year`\r\n     */\r\n    class YearDisplay {\r\n        constructor(context) {\r\n            this._context = context;\r\n            this._startYear = this._context._viewDate.clone.manipulate(-1, Unit.year);\r\n            this._endYear = this._context._viewDate.clone.manipulate(10, Unit.year);\r\n        }\r\n        /**\r\n         * Build the container html for the display\r\n         * @private\r\n         */\r\n        get _picker() {\r\n            const container = document.createElement('div');\r\n            container.classList.add(Namespace.Css.yearsContainer);\r\n            const table = document.createElement('table');\r\n            const headTemplate = this._context._display._headTemplate;\r\n            const [previous, switcher, next] = headTemplate.getElementsByTagName('th');\r\n            previous\r\n                .getElementsByTagName('div')[0]\r\n                .setAttribute('title', this._context._options.localization.previousDecade);\r\n            switcher.setAttribute('title', this._context._options.localization.selectDecade);\r\n            switcher.setAttribute('colspan', '1');\r\n            next\r\n                .getElementsByTagName('div')[0]\r\n                .setAttribute('title', this._context._options.localization.nextDecade);\r\n            table.appendChild(headTemplate);\r\n            const tableBody = document.createElement('tbody');\r\n            let row = document.createElement('tr');\r\n            for (let i = 0; i <= 12; i++) {\r\n                if (i !== 0 && i % 3 === 0) {\r\n                    tableBody.appendChild(row);\r\n                    row = document.createElement('tr');\r\n                }\r\n                const td = document.createElement('td');\r\n                const div = document.createElement('div');\r\n                div.setAttribute('data-action', ActionTypes.selectYear);\r\n                td.appendChild(div);\r\n                row.appendChild(td);\r\n            }\r\n            table.appendChild(tableBody);\r\n            container.appendChild(table);\r\n            return container;\r\n        }\r\n        /**\r\n         * Populates the grid and updates enabled states\r\n         * @private\r\n         */\r\n        _update() {\r\n            const container = this._context._display.widget.getElementsByClassName(Namespace.Css.yearsContainer)[0];\r\n            const [previous, switcher, next] = container\r\n                .getElementsByTagName('thead')[0]\r\n                .getElementsByTagName('th');\r\n            this._startYear = this._context.viewDate.clone.manipulate(-1, Unit.year); //***\r\n            this._endYear = this._context.viewDate.clone.manipulate(10, Unit.year); //***\r\n            switcher.innerText = `${this._startYear.format({ year: 'numeric' })}-${this._endYear.format({ year: 'numeric' })}`; //***\r\n            this._context._validation.isValid(this._startYear, Unit.year)\r\n                ? previous.classList.remove(Namespace.Css.disabled)\r\n                : previous.classList.add(Namespace.Css.disabled);\r\n            this._context._validation.isValid(this._endYear, Unit.year)\r\n                ? next.classList.remove(Namespace.Css.disabled)\r\n                : next.classList.add(Namespace.Css.disabled);\r\n            //*** let innerDate = this._context._viewDate.clone\r\n            //   .startOf(Unit.year)\r\n            //   .manipulate(-1, Unit.year);\r\n            let innerDate = this._startYear; //***\r\n            container\r\n                .querySelectorAll('tbody td div')\r\n                .forEach((containerClone, index) => {\r\n                let classes = [];\r\n                classes.push(Namespace.Css.year);\r\n                if (!this._context._unset &&\r\n                    this._context.dates.isPicked(innerDate, Unit.year)) {\r\n                    classes.push(Namespace.Css.active);\r\n                }\r\n                if (!this._context._validation.isValid(innerDate, Unit.year)) {\r\n                    classes.push(Namespace.Css.disabled);\r\n                }\r\n                containerClone.classList.remove(...containerClone.classList);\r\n                containerClone.classList.add(...classes);\r\n                containerClone.setAttribute('data-value', `${innerDate.year}`); //***\r\n                containerClone.innerText = innerDate.format({ year: \"numeric\" }); //***\r\n                innerDate.manipulate(1, Unit.year);\r\n            });\r\n        }\r\n    }\n\n    class Dates {\r\n        constructor(context) {\r\n            this._dates = [];\r\n            this._context = context;\r\n        }\r\n        /**\r\n         * Returns the array of selected dates\r\n         */\r\n        get picked() {\r\n            return this._dates;\r\n        }\r\n        /**\r\n         * Returns the last picked value.\r\n         */\r\n        get lastPicked() {\r\n            return this._dates[this.lastPickedIndex];\r\n        }\r\n        /**\r\n         * Returns the length of picked dates -1 or 0 if none are selected.\r\n         */\r\n        get lastPickedIndex() {\r\n            if (this._dates.length === 0)\r\n                return 0;\r\n            return this._dates.length - 1;\r\n        }\r\n        /**\r\n         * Adds a new DateTime to selected dates array\r\n         * @param date\r\n         */\r\n        add(date) {\r\n            this._dates.push(date);\r\n        }\r\n        /**\r\n         * Returns true if the `targetDate` is part of the selected dates array.\r\n         * If `unit` is provided then a granularity to that unit will be used.\r\n         * @param targetDate\r\n         * @param unit\r\n         */\r\n        isPicked(targetDate, unit) {\r\n            if (!unit)\r\n                return this._dates.find((x) => x === targetDate) !== undefined;\r\n            const format = Dates.getFormatByUnit(unit);\r\n            let innerDateFormatted = targetDate.format(format);\r\n            return (this._dates\r\n                .map((x) => x.format(format))\r\n                .find((x) => x === innerDateFormatted) !== undefined);\r\n        }\r\n        /**\r\n         * Returns the index at which `targetDate` is in the array.\r\n         * This is used for updating or removing a date when multi-date is used\r\n         * If `unit` is provided then a granularity to that unit will be used.\r\n         * @param targetDate\r\n         * @param unit\r\n         */\r\n        pickedIndex(targetDate, unit) {\r\n            if (!unit)\r\n                return this._dates.indexOf(targetDate);\r\n            const format = Dates.getFormatByUnit(unit);\r\n            let innerDateFormatted = targetDate.format(format);\r\n            return this._dates.map((x) => x.format(format)).indexOf(innerDateFormatted);\r\n        }\r\n        /**\r\n         * Clears all selected dates.\r\n         */\r\n        clear() {\r\n            this._context._unset = true;\r\n            this._context._triggerEvent({\r\n                type: Namespace.Events.change,\r\n                date: undefined,\r\n                oldDate: this.lastPicked,\r\n                isClear: true,\r\n                isValid: true,\r\n            });\r\n            this._dates = [];\r\n        }\r\n        /**\r\n         * Find the \"book end\" years given a `year` and a `factor`\r\n         * @param factor e.g. 100 for decades\r\n         * @param year e.g. 2021\r\n         */\r\n        static getStartEndYear(factor, year) {\r\n            const step = factor / 10, startYear = Math.floor(year / factor) * factor, endYear = startYear + step * 9, focusValue = Math.floor(year / step) * step;\r\n            return [startYear, endYear, focusValue];\r\n        }\r\n        /**\r\n         * Attempts to either clear or set the `target` date at `index`.\r\n         * If the `target` is null then the date will be cleared.\r\n         * If multi-date is being used then it will be removed from the array.\r\n         * If `target` is valid and multi-date is used then if `index` is\r\n         * provided the date at that index will be replaced, otherwise it is appended.\r\n         * @param target\r\n         * @param index\r\n         */\r\n        _setValue(target, index) {\r\n            const noIndex = typeof index === 'undefined', isClear = !target && noIndex;\r\n            let oldDate = this._context._unset ? null : this._dates[index];\r\n            if (!oldDate && !this._context._unset && noIndex && isClear) {\r\n                oldDate = this.lastPicked;\r\n            }\r\n            const updateInput = () => {\r\n                if (!this._context._input)\r\n                    return;\r\n                let newValue = target === null || target === void 0 ? void 0 : target.format(this._context._options.display.inputFormat);\r\n                if (this._context._options.multipleDates) {\r\n                    newValue = this._dates\r\n                        .map((d) => d.format(this._context._options.display.inputFormat))\r\n                        .join(this._context._options.multipleDatesSeparator);\r\n                }\r\n                if (this._context._input.value != newValue)\r\n                    this._context._input.value = newValue;\r\n            };\r\n            // case of calling setValue(null)\r\n            if (!target) {\r\n                if (!this._context._options.multipleDates ||\r\n                    this._dates.length === 1 ||\r\n                    isClear) {\r\n                    this._context._unset = true;\r\n                    this._dates = [];\r\n                }\r\n                else {\r\n                    this._dates.splice(index, 1);\r\n                }\r\n                this._context._triggerEvent({\r\n                    type: Namespace.Events.change,\r\n                    date: undefined,\r\n                    oldDate,\r\n                    isClear,\r\n                    isValid: true,\r\n                });\r\n                updateInput();\r\n                this._context._display._update('all');\r\n                return;\r\n            }\r\n            index = index || 0;\r\n            target = target.clone;\r\n            // minute stepping is being used, force the minute to the closest value\r\n            if (this._context._options.stepping !== 1) {\r\n                target.minutes =\r\n                    Math.round(target.minutes / this._context._options.stepping) *\r\n                        this._context._options.stepping;\r\n                target.seconds = 0;\r\n            }\r\n            if (this._context._validation.isValid(target)) {\r\n                this._dates[index] = target;\r\n                this._context._viewDate = target.clone;\r\n                updateInput();\r\n                this._context._unset = false;\r\n                this._context._display._update('all');\r\n                this._context._triggerEvent({\r\n                    type: Namespace.Events.change,\r\n                    date: target,\r\n                    oldDate,\r\n                    isClear,\r\n                    isValid: true,\r\n                });\r\n                return;\r\n            }\r\n            if (this._context._options.keepInvalid) {\r\n                this._dates[index] = target;\r\n                this._context._viewDate = target.clone;\r\n                this._context._triggerEvent({\r\n                    type: Namespace.Events.change,\r\n                    date: target,\r\n                    oldDate,\r\n                    isClear,\r\n                    isValid: false,\r\n                });\r\n            }\r\n            this._context._triggerEvent({\r\n                type: Namespace.Events.error,\r\n                reason: Namespace.ErrorMessages.failedToSetInvalidDate,\r\n                date: target,\r\n                oldDate,\r\n            });\r\n        }\r\n        /**\r\n         * Returns a format object based on the granularity of `unit`\r\n         * @param unit\r\n         */\r\n        static getFormatByUnit(unit) {\r\n            switch (unit) {\r\n                case 'date':\r\n                    return { dateStyle: 'short' };\r\n                case 'month':\r\n                    return {\r\n                        month: 'numeric',\r\n                        year: 'numeric',\r\n                    };\r\n                case 'year':\r\n                    return { year: 'numeric' };\r\n            }\r\n        }\r\n    }\n\n    /**\r\n     * Creates and updates the grid for `seconds`\r\n     */\r\n    class DecadeDisplay {\r\n        constructor(context) {\r\n            this._context = context;\r\n        }\r\n        /**\r\n         * Build the container html for the display\r\n         * @private\r\n         */\r\n        get _picker() {\r\n            const container = document.createElement('div');\r\n            container.classList.add(Namespace.Css.decadesContainer);\r\n            const table = document.createElement('table');\r\n            const headTemplate = this._context._display._headTemplate;\r\n            const [previous, switcher, next] = headTemplate.getElementsByTagName('th');\r\n            previous\r\n                .getElementsByTagName('div')[0]\r\n                .setAttribute('title', this._context._options.localization.previousCentury);\r\n            switcher.setAttribute('title', '');\r\n            switcher.removeAttribute('data-action');\r\n            switcher.setAttribute('colspan', '1');\r\n            next\r\n                .getElementsByTagName('div')[0]\r\n                .setAttribute('title', this._context._options.localization.nextCentury);\r\n            table.appendChild(headTemplate);\r\n            const tableBody = document.createElement('tbody');\r\n            let row = document.createElement('tr');\r\n            for (let i = 0; i <= 12; i++) {\r\n                if (i !== 0 && i % 3 === 0) {\r\n                    tableBody.appendChild(row);\r\n                    row = document.createElement('tr');\r\n                }\r\n                const td = document.createElement('td');\r\n                const div = document.createElement('div');\r\n                div.setAttribute('data-action', ActionTypes.selectDecade);\r\n                td.appendChild(div);\r\n                row.appendChild(td);\r\n            }\r\n            table.appendChild(tableBody);\r\n            container.appendChild(table);\r\n            return container;\r\n        }\r\n        /**\r\n         * Populates the grid and updates enabled states\r\n         * @private\r\n         */\r\n        _update() {\r\n            const [start, end] = Dates.getStartEndYear(100, this._context._viewDate.year);\r\n            this._startDecade = this._context._viewDate.clone.startOf(Unit.year);\r\n            this._startDecade.year = start;\r\n            this._endDecade = this._context._viewDate.clone.startOf(Unit.year);\r\n            this._endDecade.year = end;\r\n            const container = this._context._display.widget.getElementsByClassName(Namespace.Css.decadesContainer)[0];\r\n            const [previous, switcher, next] = container\r\n                .getElementsByTagName('thead')[0]\r\n                .getElementsByTagName('th');\r\n            switcher.innerText = `${this._startDecade.format({ year: 'numeric' })}-${this._endDecade.format({ year: 'numeric' })}`; //***\r\n            this._context._validation.isValid(this._startDecade, Unit.year)\r\n                ? previous.classList.remove(Namespace.Css.disabled)\r\n                : previous.classList.add(Namespace.Css.disabled);\r\n            this._context._validation.isValid(this._endDecade, Unit.year)\r\n                ? next.classList.remove(Namespace.Css.disabled)\r\n                : next.classList.add(Namespace.Css.disabled);\r\n            const pickedYears = this._context.dates.picked.map((x) => x.year);\r\n            const nodeList = container.querySelectorAll('tbody td div');\r\n            nodeList.forEach((containerClone, index) => {\r\n                if (index === 0) {\r\n                    containerClone.classList.add(Namespace.Css.old);\r\n                    if (this._startDecade.year - 10 < 0) {\r\n                        containerClone.textContent = ' ';\r\n                        previous.classList.add(Namespace.Css.disabled);\r\n                        containerClone.classList.add(Namespace.Css.disabled);\r\n                        containerClone.setAttribute('data-value', ``);\r\n                        return;\r\n                    }\r\n                    else {\r\n                        containerClone.innerText = this._startDecade.clone.manipulate(-10, Unit.year).format({ year: 'numeric' }); //***\r\n                        containerClone.setAttribute('data-value', `${this._startDecade.clone.manipulate(-10, Unit.year).year + 6}` //***\r\n                        );\r\n                        return;\r\n                    }\r\n                }\r\n                let classes = [];\r\n                classes.push(Namespace.Css.decade);\r\n                const startDecadeYear = this._startDecade.year;\r\n                const endDecadeYear = this._startDecade.year + 9;\r\n                if (!this._context._unset &&\r\n                    pickedYears.filter((x) => x >= startDecadeYear && x <= endDecadeYear)\r\n                        .length > 0) {\r\n                    classes.push(Namespace.Css.active);\r\n                }\r\n                containerClone.classList.remove(...containerClone.classList);\r\n                containerClone.classList.add(...classes);\r\n                containerClone.setAttribute('data-value', `${this._startDecade.year + 6}`);\r\n                containerClone.innerText = `${this._startDecade.format({ year: 'numeric' })}`; //***\r\n                if (nodeList.length === index + 1) {\r\n                    containerClone.classList.add(Namespace.Css.old);\r\n                }\r\n                this._startDecade.manipulate(10, Unit.year);\r\n            });\r\n        }\r\n    }\n\n    /**\r\n     * Creates the clock display\r\n     */\r\n    class TimeDisplay {\r\n        constructor(context) {\r\n            this._context = context;\r\n        }\r\n        /**\r\n         * Build the container html for the clock display\r\n         * @private\r\n         */\r\n        get _picker() {\r\n            const container = document.createElement('div');\r\n            container.classList.add(Namespace.Css.clockContainer);\r\n            const table = document.createElement('table');\r\n            const tableBody = document.createElement('tbody');\r\n            this._grid().forEach((row) => tableBody.appendChild(row));\r\n            table.appendChild(tableBody);\r\n            container.appendChild(table);\r\n            return container;\r\n        }\r\n        /**\r\n         * Populates the various elements with in the clock display\r\n         * like the current hour and if the manipulation icons are enabled.\r\n         * @private\r\n         */\r\n        _update() {\r\n            const timesDiv = this._context._display.widget.getElementsByClassName(Namespace.Css.clockContainer)[0];\r\n            const lastPicked = (this._context.dates.lastPicked || this._context._viewDate).clone;\r\n            if (!this._context._options.display.components.useTwentyfourHour) {\r\n                const toggle = timesDiv.querySelector(`[data-action=${ActionTypes.togglePeriod}]`);\r\n                toggle.innerText = lastPicked.meridiem();\r\n                if (!this._context._validation.isValid(lastPicked.clone.manipulate(lastPicked.hours >= 12 ? -12 : 12, Unit.hours))) {\r\n                    toggle.classList.add(Namespace.Css.disabled);\r\n                }\r\n                else {\r\n                    toggle.classList.remove(Namespace.Css.disabled);\r\n                }\r\n            }\r\n            timesDiv\r\n                .querySelectorAll('.disabled')\r\n                .forEach((element) => element.classList.remove(Namespace.Css.disabled));\r\n            if (this._context._options.display.components.hours) {\r\n                if (!this._context._validation.isValid(this._context._viewDate.clone.manipulate(1, Unit.hours), Unit.hours)) {\r\n                    timesDiv\r\n                        .querySelector(`[data-action=${ActionTypes.incrementHours}]`)\r\n                        .classList.add(Namespace.Css.disabled);\r\n                }\r\n                if (!this._context._validation.isValid(this._context._viewDate.clone.manipulate(-1, Unit.hours), Unit.hours)) {\r\n                    timesDiv\r\n                        .querySelector(`[data-action=${ActionTypes.decrementHours}]`)\r\n                        .classList.add(Namespace.Css.disabled);\r\n                }\r\n                timesDiv.querySelector(`[data-time-component=${Unit.hours}]`).innerText = this._context._options.display.components.useTwentyfourHour\r\n                    ? lastPicked.hoursFormatted\r\n                    : lastPicked.twelveHoursFormatted;\r\n            }\r\n            if (this._context._options.display.components.minutes) {\r\n                if (!this._context._validation.isValid(this._context._viewDate.clone.manipulate(1, Unit.minutes), Unit.minutes)) {\r\n                    timesDiv\r\n                        .querySelector(`[data-action=${ActionTypes.incrementMinutes}]`)\r\n                        .classList.add(Namespace.Css.disabled);\r\n                }\r\n                if (!this._context._validation.isValid(this._context._viewDate.clone.manipulate(-1, Unit.minutes), Unit.minutes)) {\r\n                    timesDiv\r\n                        .querySelector(`[data-action=${ActionTypes.decrementMinutes}]`)\r\n                        .classList.add(Namespace.Css.disabled);\r\n                }\r\n                timesDiv.querySelector(`[data-time-component=${Unit.minutes}]`).innerText = lastPicked.minutesFormatted;\r\n            }\r\n            if (this._context._options.display.components.seconds) {\r\n                if (!this._context._validation.isValid(this._context._viewDate.clone.manipulate(1, Unit.seconds), Unit.seconds)) {\r\n                    timesDiv\r\n                        .querySelector(`[data-action=${ActionTypes.incrementSeconds}]`)\r\n                        .classList.add(Namespace.Css.disabled);\r\n                }\r\n                if (!this._context._validation.isValid(this._context._viewDate.clone.manipulate(-1, Unit.seconds), Unit.seconds)) {\r\n                    timesDiv\r\n                        .querySelector(`[data-action=${ActionTypes.decrementSeconds}]`)\r\n                        .classList.add(Namespace.Css.disabled);\r\n                }\r\n                timesDiv.querySelector(`[data-time-component=${Unit.seconds}]`).innerText = lastPicked.secondsFormatted;\r\n            }\r\n        }\r\n        /**\r\n         * Creates the table for the clock display depending on what options are selected.\r\n         * @private\r\n         */\r\n        _grid() {\r\n            const rows = [], separator = document.createElement('td'), separatorColon = separator.cloneNode(true), topRow = document.createElement('tr'), middleRow = document.createElement('tr'), bottomRow = document.createElement('tr'), upIcon = this._context._display._iconTag(this._context._options.display.icons.up), downIcon = this._context._display._iconTag(this._context._options.display.icons.down), actionDiv = document.createElement('div');\r\n            separator.classList.add(Namespace.Css.separator);\r\n            separatorColon.innerHTML = ':';\r\n            if (this._context._options.display.components.hours) {\r\n                let td = document.createElement('td');\r\n                let actionLinkClone = actionDiv.cloneNode(true);\r\n                actionLinkClone.setAttribute('title', this._context._options.localization.incrementHour);\r\n                actionLinkClone.setAttribute('data-action', ActionTypes.incrementHours);\r\n                actionLinkClone.appendChild(upIcon.cloneNode(true));\r\n                td.appendChild(actionLinkClone);\r\n                topRow.appendChild(td);\r\n                td = document.createElement('td');\r\n                const div = document.createElement('div');\r\n                div.setAttribute('title', this._context._options.localization.pickHour);\r\n                div.setAttribute('data-action', ActionTypes.showHours);\r\n                div.setAttribute('data-time-component', Unit.hours);\r\n                td.appendChild(div);\r\n                middleRow.appendChild(td);\r\n                td = document.createElement('td');\r\n                actionLinkClone = actionDiv.cloneNode(true);\r\n                actionLinkClone.setAttribute('title', this._context._options.localization.decrementHour);\r\n                actionLinkClone.setAttribute('data-action', ActionTypes.decrementHours);\r\n                actionLinkClone.appendChild(downIcon.cloneNode(true));\r\n                td.appendChild(actionLinkClone);\r\n                bottomRow.appendChild(td);\r\n            }\r\n            if (this._context._options.display.components.minutes) {\r\n                if (this._context._options.display.components.hours) {\r\n                    topRow.appendChild(separator.cloneNode(true));\r\n                    middleRow.appendChild(separatorColon.cloneNode(true));\r\n                    bottomRow.appendChild(separator.cloneNode(true));\r\n                }\r\n                let td = document.createElement('td');\r\n                let actionLinkClone = actionDiv.cloneNode(true);\r\n                actionLinkClone.setAttribute('title', this._context._options.localization.incrementMinute);\r\n                actionLinkClone.setAttribute('data-action', ActionTypes.incrementMinutes);\r\n                actionLinkClone.appendChild(upIcon.cloneNode(true));\r\n                td.appendChild(actionLinkClone);\r\n                topRow.appendChild(td);\r\n                td = document.createElement('td');\r\n                const div = document.createElement('div');\r\n                div.setAttribute('title', this._context._options.localization.pickMinute);\r\n                div.setAttribute('data-action', ActionTypes.showMinutes);\r\n                div.setAttribute('data-time-component', Unit.minutes);\r\n                td.appendChild(div);\r\n                middleRow.appendChild(td);\r\n                td = document.createElement('td');\r\n                actionLinkClone = actionDiv.cloneNode(true);\r\n                actionLinkClone.setAttribute('title', this._context._options.localization.decrementMinute);\r\n                actionLinkClone.setAttribute('data-action', ActionTypes.decrementMinutes);\r\n                actionLinkClone.appendChild(downIcon.cloneNode(true));\r\n                td.appendChild(actionLinkClone);\r\n                bottomRow.appendChild(td);\r\n            }\r\n            if (this._context._options.display.components.seconds) {\r\n                if (this._context._options.display.components.minutes) {\r\n                    topRow.appendChild(separator.cloneNode(true));\r\n                    middleRow.appendChild(separatorColon.cloneNode(true));\r\n                    bottomRow.appendChild(separator.cloneNode(true));\r\n                }\r\n                let td = document.createElement('td');\r\n                let actionLinkClone = actionDiv.cloneNode(true);\r\n                actionLinkClone.setAttribute('title', this._context._options.localization.incrementSecond);\r\n                actionLinkClone.setAttribute('data-action', ActionTypes.incrementSeconds);\r\n                actionLinkClone.appendChild(upIcon.cloneNode(true));\r\n                td.appendChild(actionLinkClone);\r\n                topRow.appendChild(td);\r\n                td = document.createElement('td');\r\n                const div = document.createElement('div');\r\n                div.setAttribute('title', this._context._options.localization.pickSecond);\r\n                div.setAttribute('data-action', ActionTypes.showSeconds);\r\n                div.setAttribute('data-time-component', Unit.seconds);\r\n                td.appendChild(div);\r\n                middleRow.appendChild(td);\r\n                td = document.createElement('td');\r\n                actionLinkClone = actionDiv.cloneNode(true);\r\n                actionLinkClone.setAttribute('title', this._context._options.localization.decrementSecond);\r\n                actionLinkClone.setAttribute('data-action', ActionTypes.decrementSeconds);\r\n                actionLinkClone.appendChild(downIcon.cloneNode(true));\r\n                td.appendChild(actionLinkClone);\r\n                bottomRow.appendChild(td);\r\n            }\r\n            if (!this._context._options.display.components.useTwentyfourHour) {\r\n                topRow.appendChild(separator.cloneNode(true));\r\n                let td = document.createElement('td');\r\n                let button = document.createElement('button');\r\n                button.setAttribute('title', this._context._options.localization.togglePeriod);\r\n                button.setAttribute('data-action', ActionTypes.togglePeriod);\r\n                button.setAttribute('tabindex', '-1');\r\n                button.classList.add('btn', 'btn-primary'); //***\r\n                td.appendChild(button);\r\n                middleRow.appendChild(td);\r\n                bottomRow.appendChild(separator.cloneNode(true));\r\n            }\r\n            rows.push(topRow, middleRow, bottomRow);\r\n            return rows;\r\n        }\r\n    }\n\n    /**\r\n     * Creates and updates the grid for `hours`\r\n     */\r\n    class HourDisplay {\r\n        constructor(context) {\r\n            this._context = context;\r\n        }\r\n        /**\r\n         * Build the container html for the display\r\n         * @private\r\n         */\r\n        get _picker() {\r\n            const container = document.createElement('div');\r\n            container.classList.add(Namespace.Css.hourContainer);\r\n            const table = document.createElement('table');\r\n            const tableBody = document.createElement('tbody');\r\n            let row = document.createElement('tr');\r\n            for (let i = 0; i <=\r\n                (this._context._options.display.components.useTwentyfourHour ? 24 : 12); i++) {\r\n                if (i !== 0 && i % 4 === 0) {\r\n                    tableBody.appendChild(row);\r\n                    row = document.createElement('tr');\r\n                }\r\n                const td = document.createElement('td');\r\n                const div = document.createElement('div');\r\n                div.setAttribute('data-action', ActionTypes.selectHour);\r\n                td.appendChild(div);\r\n                row.appendChild(td);\r\n            }\r\n            table.appendChild(tableBody);\r\n            container.appendChild(table);\r\n            return container;\r\n        }\r\n        /**\r\n         * Populates the grid and updates enabled states\r\n         * @private\r\n         */\r\n        _update() {\r\n            const container = this._context._display.widget.getElementsByClassName(Namespace.Css.hourContainer)[0];\r\n            let innerDate = this._context._viewDate.clone.startOf(Unit.date);\r\n            container\r\n                .querySelectorAll('tbody td div')\r\n                .forEach((containerClone, index) => {\r\n                let classes = [];\r\n                classes.push(Namespace.Css.hour);\r\n                if (!this._context._validation.isValid(innerDate, Unit.hours)) {\r\n                    classes.push(Namespace.Css.disabled);\r\n                }\r\n                containerClone.classList.remove(...containerClone.classList);\r\n                containerClone.classList.add(...classes);\r\n                containerClone.setAttribute('data-value', `${innerDate.hours}`);\r\n                containerClone.innerText = this._context._options.display.components\r\n                    .useTwentyfourHour\r\n                    ? innerDate.hoursFormatted\r\n                    : innerDate.twelveHoursFormatted;\r\n                innerDate.manipulate(1, Unit.hours);\r\n            });\r\n        }\r\n    }\n\n    /**\r\n     * Creates and updates the grid for `minutes`\r\n     */\r\n    class MinuteDisplay {\r\n        constructor(context) {\r\n            this._context = context;\r\n        }\r\n        /**\r\n         * Build the container html for the display\r\n         * @private\r\n         */\r\n        get _picker() {\r\n            const container = document.createElement('div');\r\n            container.classList.add(Namespace.Css.minuteContainer);\r\n            const table = document.createElement('table');\r\n            const tableBody = document.createElement('tbody');\r\n            let row = document.createElement('tr');\r\n            let step = this._context._options.stepping === 1\r\n                ? 5\r\n                : this._context._options.stepping;\r\n            for (let i = 0; i <= 60 / step; i++) {\r\n                if (i !== 0 && i % 4 === 0) {\r\n                    tableBody.appendChild(row);\r\n                    row = document.createElement('tr');\r\n                }\r\n                const td = document.createElement('td');\r\n                const div = document.createElement('div');\r\n                div.setAttribute('data-action', ActionTypes.selectMinute);\r\n                td.appendChild(div);\r\n                row.appendChild(td);\r\n            }\r\n            table.appendChild(tableBody);\r\n            container.appendChild(table);\r\n            return container;\r\n        }\r\n        /**\r\n         * Populates the grid and updates enabled states\r\n         * @private\r\n         */\r\n        _update() {\r\n            const container = this._context._display.widget.getElementsByClassName(Namespace.Css.minuteContainer)[0];\r\n            let innerDate = this._context._viewDate.clone.startOf(Unit.hours);\r\n            let step = this._context._options.stepping === 1\r\n                ? 5\r\n                : this._context._options.stepping;\r\n            container\r\n                .querySelectorAll('tbody td div')\r\n                .forEach((containerClone, index) => {\r\n                let classes = [];\r\n                classes.push(Namespace.Css.minute);\r\n                if (!this._context._validation.isValid(innerDate, Unit.minutes)) {\r\n                    classes.push(Namespace.Css.disabled);\r\n                }\r\n                containerClone.classList.remove(...containerClone.classList);\r\n                containerClone.classList.add(...classes);\r\n                containerClone.setAttribute('data-value', `${innerDate.minutes}`);\r\n                containerClone.innerText = innerDate.minutesFormatted;\r\n                innerDate.manipulate(step, Unit.minutes);\r\n            });\r\n        }\r\n    }\n\n    /**\r\n     * Creates and updates the grid for `seconds`\r\n     */\r\n    class secondDisplay {\r\n        constructor(context) {\r\n            this._context = context;\r\n        }\r\n        /**\r\n         * Build the container html for the display\r\n         * @private\r\n         */\r\n        get _picker() {\r\n            const container = document.createElement('div');\r\n            container.classList.add(Namespace.Css.secondContainer);\r\n            const table = document.createElement('table');\r\n            const tableBody = document.createElement('tbody');\r\n            let row = document.createElement('tr');\r\n            for (let i = 0; i <= 12; i++) {\r\n                if (i !== 0 && i % 4 === 0) {\r\n                    tableBody.appendChild(row);\r\n                    row = document.createElement('tr');\r\n                }\r\n                const td = document.createElement('td');\r\n                const div = document.createElement('div');\r\n                div.setAttribute('data-action', ActionTypes.selectSecond);\r\n                td.appendChild(div);\r\n                row.appendChild(td);\r\n            }\r\n            table.appendChild(tableBody);\r\n            container.appendChild(table);\r\n            return container;\r\n        }\r\n        /**\r\n         * Populates the grid and updates enabled states\r\n         * @private\r\n         */\r\n        _update() {\r\n            const container = this._context._display.widget.getElementsByClassName(Namespace.Css.secondContainer)[0];\r\n            let innerDate = this._context._viewDate.clone.startOf(Unit.minutes);\r\n            container\r\n                .querySelectorAll('tbody td div')\r\n                .forEach((containerClone, index) => {\r\n                let classes = [];\r\n                classes.push(Namespace.Css.second);\r\n                if (!this._context._validation.isValid(innerDate, Unit.seconds)) {\r\n                    classes.push(Namespace.Css.disabled);\r\n                }\r\n                containerClone.classList.remove(...containerClone.classList);\r\n                containerClone.classList.add(...classes);\r\n                containerClone.setAttribute('data-value', `${innerDate.seconds}`);\r\n                containerClone.innerText = innerDate.secondsFormatted;\r\n                innerDate.manipulate(5, Unit.seconds);\r\n            });\r\n        }\r\n    }\n\n    /**\r\n     * Main class for all things display related.\r\n     */\r\n    class Display {\r\n        constructor(context) {\r\n            this._isVisible = false;\r\n            /**\r\n             * A document click event to hide the widget if click is outside\r\n             * @private\r\n             * @param e MouseEvent\r\n             */\r\n            this._documentClickEvent = (e) => {\r\n                var _a;\r\n                if (this._isVisible &&\r\n                    !e.composedPath().includes(this.widget) && // click inside the widget\r\n                    !((_a = e.composedPath()) === null || _a === void 0 ? void 0 : _a.includes(this._context._element)) && // click on the element\r\n                    (!this._context._options.keepOpen || !this._context._options.debug)) {\r\n                    this.hide();\r\n                }\r\n            };\r\n            /**\r\n             * Click event for any action like selecting a date\r\n             * @param e MouseEvent\r\n             * @private\r\n             */\r\n            this._actionsClickEvent = (e) => {\r\n                this._context._action.do(e);\r\n            };\r\n            this._context = context;\r\n            this._dateDisplay = new DateDisplay(context);\r\n            this._monthDisplay = new MonthDisplay(context);\r\n            this._yearDisplay = new YearDisplay(context);\r\n            this._decadeDisplay = new DecadeDisplay(context);\r\n            this._timeDisplay = new TimeDisplay(context);\r\n            this._hourDisplay = new HourDisplay(context);\r\n            this._minuteDisplay = new MinuteDisplay(context);\r\n            this._secondDisplay = new secondDisplay(context);\r\n            this._widget = undefined;\r\n        }\r\n        // Get popper //***\r\n        get popper() {\r\n            return this._popperInstance;\r\n        }\r\n        /**\r\n         * Returns the widget body or undefined\r\n         * @private\r\n         */\r\n        get widget() {\r\n            return this._widget;\r\n        }\r\n        /**\r\n         * Returns this visible state of the picker (shown)\r\n         */\r\n        get isVisible() {\r\n            return this._isVisible;\r\n        }\r\n        /**\r\n         * Updates the table for a particular unit. Used when an option as changed or\r\n         * whenever the class list might need to be refreshed.\r\n         * @param unit\r\n         * @private\r\n         */\r\n        _update(unit) {\r\n            if (!this.widget)\r\n                return;\r\n            //todo do I want some kind of error catching or other guards here?\r\n            switch (unit) {\r\n                case Unit.seconds:\r\n                    this._secondDisplay._update();\r\n                    break;\r\n                case Unit.minutes:\r\n                    this._minuteDisplay._update();\r\n                    break;\r\n                case Unit.hours:\r\n                    this._hourDisplay._update();\r\n                    break;\r\n                case Unit.date:\r\n                    this._dateDisplay._update();\r\n                    break;\r\n                case Unit.month:\r\n                    this._monthDisplay._update();\r\n                    break;\r\n                case Unit.year:\r\n                    this._yearDisplay._update();\r\n                    break;\r\n                case 'clock':\r\n                    this._timeDisplay._update();\r\n                    this._update(Unit.hours);\r\n                    this._update(Unit.minutes);\r\n                    this._update(Unit.seconds);\r\n                    break;\r\n                case 'calendar':\r\n                    this._update(Unit.date);\r\n                    this._update(Unit.year);\r\n                    this._update(Unit.month);\r\n                    this._decadeDisplay._update();\r\n                    break;\r\n                case 'all':\r\n                    if (this._hasTime) {\r\n                        this._update('clock');\r\n                    }\r\n                    if (this._hasDate) {\r\n                        this._update('calendar');\r\n                    }\r\n            }\r\n        }\r\n        /**\r\n         * Shows the picker and creates a Popper instance if needed.\r\n         * Add document click event to hide when clicking outside the picker.\r\n         * @fires Events#show\r\n         */\r\n        show() {\r\n            if (this.widget == undefined) {\r\n                if (this._context._options.useCurrent) {\r\n                    //todo in the td4 branch a pr changed this to allow granularity\r\n                    const date = new DateTime().setLocale(this._context._options.localization.locale);\r\n                    if (this._context._options.keepInvalid) {\r\n                        while (!this._context._validation.isValid(date)) {\r\n                            date.manipulate(1, Unit.date);\r\n                        }\r\n                    }\r\n                    this._context.dates._setValue(date);\r\n                }\r\n                this._buildWidget();\r\n                if (this._hasDate) {\r\n                    this._showMode();\r\n                }\r\n                if (!this._context._options.display.inline) {\r\n                    document.body.appendChild(this.widget);\r\n                    this._popperInstance = core.createPopper(this._context.toggleElement || this._context._element, //***\r\n                    this.widget, {\r\n                        modifiers: [\r\n                            {\r\n                                name: 'offset',\r\n                                options: {\r\n                                    offset: [0, 8], //***\r\n                                },\r\n                            },\r\n                            { name: 'eventListeners', enabled: true },\r\n                        ],\r\n                        placement: 'auto',\r\n                    });\r\n                }\r\n                else {\r\n                    this._context._element.appendChild(this.widget);\r\n                }\r\n                if (this._context._options.display.viewMode == 'clock') {\r\n                    this._context._action.do({\r\n                        currentTarget: this.widget.querySelector(`.${Namespace.Css.timeContainer}`),\r\n                    }, ActionTypes.showClock);\r\n                }\r\n                this.widget\r\n                    .querySelectorAll('[data-action]')\r\n                    .forEach((element) => element.addEventListener('click', this._actionsClickEvent));\r\n                // show the clock when using sideBySide\r\n                if (this._context._options.display.sideBySide) {\r\n                    this._timeDisplay._update();\r\n                    this.widget.getElementsByClassName(Namespace.Css.clockContainer)[0].style.display = 'block';\r\n                }\r\n            }\r\n            this.widget.classList.add(Namespace.Css.show);\r\n            if (!this._context._options.display.inline) {\r\n                this._popperInstance.update();\r\n                document.addEventListener('click', this._documentClickEvent);\r\n            }\r\n            this._context._triggerEvent({ type: Namespace.Events.show });\r\n            this._isVisible = true;\r\n        }\r\n        /**\r\n         * Changes the calendar view mode. E.g. month <-> year\r\n         * @param direction -/+ number to move currentViewMode\r\n         * @private\r\n         */\r\n        _showMode(direction) {\r\n            if (!this.widget) {\r\n                return;\r\n            }\r\n            if (direction) {\r\n                const max = Math.max(this._context._minViewModeNumber, Math.min(3, this._context._currentViewMode + direction));\r\n                if (this._context._currentViewMode == max)\r\n                    return;\r\n                this._context._currentViewMode = max;\r\n            }\r\n            this.widget\r\n                .querySelectorAll(`.${Namespace.Css.dateContainer} > div, .${Namespace.Css.timeContainer} > div`)\r\n                .forEach((e) => (e.style.display = 'none'));\r\n            const datePickerMode = DatePickerModes[this._context._currentViewMode];\r\n            let picker = this.widget.querySelector(`.${datePickerMode.className}`);\r\n            switch (datePickerMode.className) {\r\n                case Namespace.Css.decadesContainer:\r\n                    this._decadeDisplay._update();\r\n                    break;\r\n                case Namespace.Css.yearsContainer:\r\n                    this._yearDisplay._update();\r\n                    break;\r\n                case Namespace.Css.monthsContainer:\r\n                    this._monthDisplay._update();\r\n                    break;\r\n                case Namespace.Css.daysContainer:\r\n                    this._dateDisplay._update();\r\n                    break;\r\n            }\r\n            picker.style.display = 'block';\r\n        }\r\n        /**\r\n         * Hides the picker if needed.\r\n         * Remove document click event to hide when clicking outside the picker.\r\n         * @fires Events#hide\r\n         */\r\n        hide() {\r\n            this.widget.classList.remove(Namespace.Css.show);\r\n            if (this._isVisible) {\r\n                this._context._triggerEvent({\r\n                    type: Namespace.Events.hide,\r\n                    date: this._context._unset\r\n                        ? null\r\n                        : this._context.dates.lastPicked\r\n                            ? this._context.dates.lastPicked.clone\r\n                            : void 0,\r\n                });\r\n                this._isVisible = false;\r\n            }\r\n            document.removeEventListener('click', this._documentClickEvent);\r\n        }\r\n        /**\r\n         * Toggles the picker's open state. Fires a show/hide event depending.\r\n         */\r\n        toggle() {\r\n            return this._isVisible ? this.hide() : this.show();\r\n        }\r\n        /**\r\n         * Removes document and data-action click listener and reset the widget\r\n         * @private\r\n         */\r\n        _dispose() {\r\n            document.removeEventListener('click', this._documentClickEvent);\r\n            if (!this.widget)\r\n                return;\r\n            this.widget\r\n                .querySelectorAll('[data-action]')\r\n                .forEach((element) => element.removeEventListener('click', this._actionsClickEvent));\r\n            this.widget.parentNode.removeChild(this.widget);\r\n            this._widget = undefined;\r\n        }\r\n        /**\r\n         * Builds the widgets html template.\r\n         * @private\r\n         */\r\n        _buildWidget() {\r\n            const template = document.createElement('div');\r\n            template.classList.add(Namespace.Css.widget);\r\n            const dateView = document.createElement('div');\r\n            dateView.classList.add(Namespace.Css.dateContainer);\r\n            dateView.appendChild(this._decadeDisplay._picker);\r\n            dateView.appendChild(this._yearDisplay._picker);\r\n            dateView.appendChild(this._monthDisplay._picker);\r\n            dateView.appendChild(this._dateDisplay._picker);\r\n            const timeView = document.createElement('div');\r\n            timeView.classList.add(Namespace.Css.timeContainer);\r\n            timeView.appendChild(this._timeDisplay._picker);\r\n            timeView.appendChild(this._hourDisplay._picker);\r\n            timeView.appendChild(this._minuteDisplay._picker);\r\n            timeView.appendChild(this._secondDisplay._picker);\r\n            const toolbar = document.createElement('div');\r\n            toolbar.classList.add(Namespace.Css.switch);\r\n            toolbar.appendChild(this._toolbar);\r\n            if (this._context._options.display.inline) {\r\n                template.classList.add(Namespace.Css.inline);\r\n            }\r\n            if (this._context._options.display.sideBySide &&\r\n                this._hasDate &&\r\n                this._hasTime) {\r\n                template.classList.add(Namespace.Css.sideBySide);\r\n                if (this._context._options.display.toolbarPlacement === 'top') {\r\n                    template.appendChild(toolbar);\r\n                }\r\n                const row = document.createElement('div');\r\n                row.classList.add('td-row');\r\n                dateView.classList.add('td-half');\r\n                timeView.classList.add('td-half');\r\n                row.appendChild(dateView);\r\n                row.appendChild(timeView);\r\n                template.appendChild(row);\r\n                if (this._context._options.display.toolbarPlacement === 'bottom' ||\r\n                    this._context._options.display.toolbarPlacement === 'default') {\r\n                    template.appendChild(toolbar);\r\n                }\r\n                this._widget = template;\r\n                return;\r\n            }\r\n            if (this._context._options.display.toolbarPlacement === 'top') {\r\n                template.appendChild(toolbar);\r\n            }\r\n            if (this._hasDate) {\r\n                if (this._hasTime) {\r\n                    dateView.classList.add(Namespace.Css.collapse);\r\n                    if (this._context._options.display.viewMode !== 'clock')\r\n                        dateView.classList.add(Namespace.Css.show);\r\n                }\r\n                template.appendChild(dateView);\r\n            }\r\n            if (this._context._options.display.toolbarPlacement === 'default') {\r\n                template.appendChild(toolbar);\r\n            }\r\n            if (this._hasTime) {\r\n                if (this._hasDate) {\r\n                    timeView.classList.add(Namespace.Css.collapse);\r\n                    if (this._context._options.display.viewMode === 'clock')\r\n                        timeView.classList.add(Namespace.Css.show);\r\n                }\r\n                template.appendChild(timeView);\r\n            }\r\n            if (this._context._options.display.toolbarPlacement === 'bottom') {\r\n                template.appendChild(toolbar);\r\n            }\r\n            const arrow = document.createElement('div');\r\n            arrow.classList.add('arrow');\r\n            arrow.setAttribute('data-popper-arrow', '');\r\n            template.appendChild(arrow);\r\n            this._widget = template;\r\n        }\r\n        /**\r\n         * Returns true if the hours, minutes, or seconds component is turned on\r\n         */\r\n        get _hasTime() {\r\n            return (this._context._options.display.components.clock &&\r\n                (this._context._options.display.components.hours ||\r\n                    this._context._options.display.components.minutes ||\r\n                    this._context._options.display.components.seconds));\r\n        }\r\n        /**\r\n         * Returns true if the year, month, or date component is turned on\r\n         */\r\n        get _hasDate() {\r\n            return (this._context._options.display.components.calendar &&\r\n                (this._context._options.display.components.year ||\r\n                    this._context._options.display.components.month ||\r\n                    this._context._options.display.components.date));\r\n        }\r\n        /**\r\n         * Get the toolbar html based on options like buttons.today\r\n         * @private\r\n         */\r\n        get _toolbar() {\r\n            const tbody = document.createElement('tbody');\r\n            if (this._context._options.display.buttons.today) {\r\n                const td = document.createElement('td');\r\n                const div = document.createElement('div');\r\n                div.setAttribute('data-action', ActionTypes.today);\r\n                div.setAttribute('title', this._context._options.localization.today);\r\n                div.appendChild(this._iconTag(this._context._options.display.icons.today));\r\n                td.appendChild(div);\r\n                tbody.appendChild(td);\r\n            }\r\n            if (!this._context._options.display.sideBySide &&\r\n                this._hasDate &&\r\n                this._hasTime) {\r\n                let title, icon;\r\n                if (this._context._options.display.viewMode === 'clock') {\r\n                    title = this._context._options.localization.selectDate;\r\n                    icon = this._context._options.display.icons.date;\r\n                }\r\n                else {\r\n                    title = this._context._options.localization.selectTime;\r\n                    icon = this._context._options.display.icons.time;\r\n                }\r\n                const td = document.createElement('td');\r\n                const div = document.createElement('div');\r\n                div.setAttribute('data-action', ActionTypes.togglePicker);\r\n                div.setAttribute('title', title);\r\n                div.appendChild(this._iconTag(icon));\r\n                td.appendChild(div);\r\n                tbody.appendChild(td);\r\n            }\r\n            if (this._context._options.display.buttons.clear) {\r\n                const td = document.createElement('td');\r\n                const div = document.createElement('div');\r\n                div.setAttribute('data-action', ActionTypes.clear);\r\n                div.setAttribute('title', this._context._options.localization.clear);\r\n                div.appendChild(this._iconTag(this._context._options.display.icons.clear));\r\n                td.appendChild(div);\r\n                tbody.appendChild(td);\r\n            }\r\n            if (this._context._options.display.buttons.close) {\r\n                const td = document.createElement('td');\r\n                const div = document.createElement('div');\r\n                div.setAttribute('data-action', ActionTypes.close);\r\n                div.setAttribute('title', this._context._options.localization.close);\r\n                div.appendChild(this._iconTag(this._context._options.display.icons.close));\r\n                td.appendChild(div);\r\n                tbody.appendChild(td);\r\n            }\r\n            const table = document.createElement('table');\r\n            table.appendChild(tbody);\r\n            return table;\r\n        }\r\n        /***\r\n         * Builds the base header template with next and previous icons\r\n         * @private\r\n         */\r\n        get _headTemplate() {\r\n            let div = document.createElement('div');\r\n            const thead = document.createElement('thead');\r\n            const rowElement = document.createElement('tr');\r\n            const previous = document.createElement('th');\r\n            previous.classList.add(Namespace.Css.previous);\r\n            previous.setAttribute('data-action', ActionTypes.previous);\r\n            div.appendChild(this._iconTag(this._context._options.display.icons.previous));\r\n            previous.appendChild(div);\r\n            rowElement.appendChild(previous);\r\n            const switcher = document.createElement('th');\r\n            switcher.classList.add(Namespace.Css.switch);\r\n            switcher.setAttribute('data-action', ActionTypes.pickerSwitch);\r\n            switcher.setAttribute('colspan', this._context._options.display.calendarWeeks ? '6' : '5');\r\n            rowElement.appendChild(switcher);\r\n            const next = document.createElement('th');\r\n            next.classList.add(Namespace.Css.next);\r\n            next.setAttribute('data-action', ActionTypes.next);\r\n            div = document.createElement('div');\r\n            div.appendChild(this._iconTag(this._context._options.display.icons.next));\r\n            next.appendChild(div);\r\n            rowElement.appendChild(next);\r\n            thead.appendChild(rowElement);\r\n            return thead.cloneNode(true);\r\n        }\r\n        /**\r\n         * Builds an icon tag as either an `<i>`\r\n         * or with icons.type is `sprites` then an svg tag instead\r\n         * @param iconClass\r\n         * @private\r\n         */\r\n        _iconTag(iconClass) {\r\n            if (this._context._options.display.icons.type === 'sprites') {\r\n                const svg = document.createElement('svg');\r\n                svg.innerHTML = `<use xlink:href='${iconClass}'></use>`;\r\n                return svg;\r\n            }\r\n            const icon = document.createElement('i');\r\n            DOMTokenList.prototype.add.apply(icon.classList, iconClass.split(' '));\r\n            return icon;\r\n        }\r\n        /**\r\n         * Causes the widget to get rebuilt on next show. If the picker is already open\r\n         * then hide and reshow it.\r\n         * @private\r\n         */\r\n        _rebuild() {\r\n            const wasVisible = this._isVisible;\r\n            if (wasVisible)\r\n                this.hide();\r\n            this._dispose();\r\n            if (wasVisible) {\r\n                this.show();\r\n            }\r\n        }\r\n    }\n\n    /**\r\n     * Main class for date validation rules based on the options provided.\r\n     */\r\n    class Validation {\r\n        constructor(context) {\r\n            this._context = context;\r\n        }\r\n        /**\r\n         * Checks to see if the target date is valid based on the rules provided in the options.\r\n         * Granularity can be provide to chek portions of the date instead of the whole.\r\n         * @param targetDate\r\n         * @param granularity\r\n         */\r\n        isValid(targetDate, granularity) {\r\n            var _a;\r\n            if (this._context._options.restrictions.disabledDates.length > 0 &&\r\n                this._isInDisabledDates(targetDate)) {\r\n                return false;\r\n            }\r\n            if (this._context._options.restrictions.enabledDates.length > 0 &&\r\n                !this._isInEnabledDates(targetDate)) {\r\n                return false;\r\n            }\r\n            if (((_a = this._context._options.restrictions.daysOfWeekDisabled) === null || _a === void 0 ? void 0 : _a.length) > 0 &&\r\n                this._context._options.restrictions.daysOfWeekDisabled.indexOf(targetDate.weekDay) !== -1) {\r\n                return false;\r\n            }\r\n            if (this._context._options.restrictions.minDate &&\r\n                targetDate.isBefore(this._context._options.restrictions.minDate, granularity)) {\r\n                return false;\r\n            }\r\n            if (this._context._options.restrictions.maxDate &&\r\n                targetDate.isAfter(this._context._options.restrictions.maxDate, granularity)) {\r\n                return false;\r\n            }\r\n            if (granularity === Unit.hours ||\r\n                granularity === Unit.minutes ||\r\n                granularity === Unit.seconds) {\r\n                if (this._context._options.restrictions.disabledHours.length > 0 &&\r\n                    this._isInDisabledHours(targetDate)) {\r\n                    return false;\r\n                }\r\n                if (this._context._options.restrictions.enabledHours.length > 0 &&\r\n                    !this._isInEnabledHours(targetDate)) {\r\n                    return false;\r\n                }\r\n                if (this._context._options.restrictions.disabledTimeIntervals.length > 0) {\r\n                    for (let i = 0; i < this._context._options.restrictions.disabledTimeIntervals.length; i++) {\r\n                        if (targetDate.isBetween(this._context._options.restrictions.disabledTimeIntervals[i].from, this._context._options.restrictions.disabledTimeIntervals[i].to))\r\n                            return false;\r\n                    }\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n        /**\r\n         * Checks to see if the disabledDates option is in use and returns true (meaning invalid)\r\n         * if the `testDate` is with in the array. Granularity is by date.\r\n         * @param testDate\r\n         * @private\r\n         */\r\n        _isInDisabledDates(testDate) {\r\n            if (!this._context._options.restrictions.disabledDates ||\r\n                this._context._options.restrictions.disabledDates.length === 0)\r\n                return false;\r\n            const formattedDate = testDate.format(Dates.getFormatByUnit(Unit.date));\r\n            return this._context._options.restrictions.disabledDates\r\n                .map((x) => x.format(Dates.getFormatByUnit(Unit.date)))\r\n                .find((x) => x === formattedDate);\r\n        }\r\n        /**\r\n         * Checks to see if the enabledDates option is in use and returns true (meaning valid)\r\n         * if the `testDate` is with in the array. Granularity is by date.\r\n         * @param testDate\r\n         * @private\r\n         */\r\n        _isInEnabledDates(testDate) {\r\n            if (!this._context._options.restrictions.enabledDates ||\r\n                this._context._options.restrictions.enabledDates.length === 0)\r\n                return true;\r\n            const formattedDate = testDate.format(Dates.getFormatByUnit(Unit.date));\r\n            return this._context._options.restrictions.enabledDates\r\n                .map((x) => x.format(Dates.getFormatByUnit(Unit.date)))\r\n                .find((x) => x === formattedDate);\r\n        }\r\n        /**\r\n         * Checks to see if the disabledHours option is in use and returns true (meaning invalid)\r\n         * if the `testDate` is with in the array. Granularity is by hours.\r\n         * @param testDate\r\n         * @private\r\n         */\r\n        _isInDisabledHours(testDate) {\r\n            if (!this._context._options.restrictions.disabledHours ||\r\n                this._context._options.restrictions.disabledHours.length === 0)\r\n                return false;\r\n            const formattedDate = testDate.hours;\r\n            return this._context._options.restrictions.disabledHours.find((x) => x === formattedDate);\r\n        }\r\n        /**\r\n         * Checks to see if the enabledHours option is in use and returns true (meaning valid)\r\n         * if the `testDate` is with in the array. Granularity is by hours.\r\n         * @param testDate\r\n         * @private\r\n         */\r\n        _isInEnabledHours(testDate) {\r\n            if (!this._context._options.restrictions.enabledHours ||\r\n                this._context._options.restrictions.enabledHours.length === 0)\r\n                return true;\r\n            const formattedDate = testDate.hours;\r\n            return this._context._options.restrictions.enabledHours.find((x) => x === formattedDate);\r\n        }\r\n    }\n\n    class OptionConverter {\r\n        static _mergeOptions(providedOptions, mergeTo) {\r\n            const newOptions = {};\r\n            let path = '';\r\n            const processKey = (key, value, providedType, defaultType) => {\r\n                switch (key) {\r\n                    case 'viewDate': {\r\n                        const dateTime = this._dateConversion(value, 'viewDate');\r\n                        if (dateTime !== undefined) {\r\n                            return dateTime;\r\n                        }\r\n                        Namespace.ErrorMessages.typeMismatch('viewDate', providedType, 'DateTime or Date');\r\n                    }\r\n                    case 'minDate': {\r\n                        if (value === undefined) {\r\n                            return value;\r\n                        }\r\n                        const dateTime = this._dateConversion(value, 'restrictions.minDate');\r\n                        if (dateTime !== undefined) {\r\n                            return dateTime;\r\n                        }\r\n                        Namespace.ErrorMessages.typeMismatch('restrictions.minDate', providedType, 'DateTime or Date');\r\n                    }\r\n                    case 'maxDate': {\r\n                        if (value === undefined) {\r\n                            return value;\r\n                        }\r\n                        const dateTime = this._dateConversion(value, 'restrictions.maxDate');\r\n                        if (dateTime !== undefined) {\r\n                            return dateTime;\r\n                        }\r\n                        Namespace.ErrorMessages.typeMismatch('restrictions.maxDate', providedType, 'DateTime or Date');\r\n                    }\r\n                    case 'disabledHours':\r\n                        if (value === undefined) {\r\n                            return [];\r\n                        }\r\n                        this._typeCheckNumberArray('restrictions.disabledHours', value, providedType);\r\n                        if (value.filter((x) => x < 0 || x > 24).length > 0)\r\n                            Namespace.ErrorMessages.numbersOutOfRage('restrictions.disabledHours', 0, 23);\r\n                        return value;\r\n                    case 'enabledHours':\r\n                        if (value === undefined) {\r\n                            return [];\r\n                        }\r\n                        this._typeCheckNumberArray('restrictions.enabledHours', value, providedType);\r\n                        if (value.filter((x) => x < 0 || x > 24).length > 0)\r\n                            Namespace.ErrorMessages.numbersOutOfRage('restrictions.enabledHours', 0, 23);\r\n                        return value;\r\n                    case 'daysOfWeekDisabled':\r\n                        if (value === undefined) {\r\n                            return [];\r\n                        }\r\n                        this._typeCheckNumberArray('restrictions.daysOfWeekDisabled', value, providedType);\r\n                        if (value.filter((x) => x < 0 || x > 6).length > 0)\r\n                            Namespace.ErrorMessages.numbersOutOfRage('restrictions.daysOfWeekDisabled', 0, 6);\r\n                        return value;\r\n                    case 'enabledDates':\r\n                        if (value === undefined) {\r\n                            return [];\r\n                        }\r\n                        this._typeCheckDateArray('restrictions.enabledDates', value, providedType);\r\n                        return value;\r\n                    case 'disabledDates':\r\n                        if (value === undefined) {\r\n                            return [];\r\n                        }\r\n                        this._typeCheckDateArray('restrictions.disabledDates', value, providedType);\r\n                        return value;\r\n                    case 'disabledTimeIntervals':\r\n                        if (value === undefined) {\r\n                            return [];\r\n                        }\r\n                        if (!Array.isArray(value)) {\r\n                            Namespace.ErrorMessages.typeMismatch(key, providedType, 'array of { from: DateTime|Date, to: DateTime|Date }');\r\n                        }\r\n                        const valueObject = value;\r\n                        for (let i = 0; i < valueObject.length; i++) {\r\n                            Object.keys(valueObject[i]).forEach((vk) => {\r\n                                const subOptionName = `${key}[${i}].${vk}`;\r\n                                let d = valueObject[i][vk];\r\n                                const dateTime = this._dateConversion(d, subOptionName);\r\n                                if (!dateTime) {\r\n                                    Namespace.ErrorMessages.typeMismatch(subOptionName, typeof d, 'DateTime or Date');\r\n                                }\r\n                                valueObject[i][vk] = dateTime;\r\n                            });\r\n                        }\r\n                        return valueObject;\r\n                    case 'toolbarPlacement':\r\n                    case 'type':\r\n                    case 'viewMode':\r\n                    case 'dayViewHeaderFormat':\r\n                        const optionValues = {\r\n                            toolbarPlacement: ['top', 'bottom', 'default'],\r\n                            type: ['icons', 'sprites'],\r\n                            viewMode: ['clock', 'calendar', 'months', 'years', 'decades'],\r\n                            dayViewHeaderFormat: [\r\n                                'numeric',\r\n                                '2-digit',\r\n                                'long',\r\n                                'short',\r\n                                'narrow',\r\n                            ],\r\n                        };\r\n                        const keyOptions = optionValues[key];\r\n                        if (!keyOptions.includes(value))\r\n                            Namespace.ErrorMessages.unexpectedOptionValue(path.substring(1), value, keyOptions);\r\n                        return value;\r\n                    case 'inputFormat':\r\n                        return value;\r\n                    default:\r\n                        switch (defaultType) {\r\n                            case 'boolean':\r\n                                return value === 'true' || value === true;\r\n                            case 'number':\r\n                                return +value;\r\n                            case 'string':\r\n                                return value.toString();\r\n                            case 'object':\r\n                                return {};\r\n                            case 'function':\r\n                                return value;\r\n                            default:\r\n                                Namespace.ErrorMessages.typeMismatch(path.substring(1), providedType, defaultType);\r\n                        }\r\n                }\r\n            };\r\n            /**\r\n             * The spread operator caused sub keys to be missing after merging.\r\n             * This is to fix that issue by using spread on the child objects first.\r\n             * Also handles complex options like disabledDates\r\n             * @param provided An option from new providedOptions\r\n             * @param mergeOption Default option to compare types against\r\n             * @param copyTo Destination object. This was add to prevent reference copies\r\n             */\r\n            const spread = (provided, mergeOption, copyTo) => {\r\n                const unsupportedOptions = Object.keys(provided).filter((x) => !Object.keys(mergeOption).includes(x));\r\n                if (unsupportedOptions.length > 0) {\r\n                    const flattenedOptions = OptionConverter._flattenDefaultOptions();\r\n                    const errors = unsupportedOptions.map((x) => {\r\n                        let error = `\"${path.substring(1)}.${x}\" in not a known option.`;\r\n                        let didYouMean = flattenedOptions.find((y) => y.includes(x));\r\n                        if (didYouMean)\r\n                            error += `Did you mean \"${didYouMean}\"?`;\r\n                        return error;\r\n                    });\r\n                    Namespace.ErrorMessages.unexpectedOptions(errors);\r\n                }\r\n                Object.keys(mergeOption).forEach((key) => {\r\n                    const defaultOptionValue = mergeOption[key];\r\n                    let providedType = typeof provided[key];\r\n                    let defaultType = typeof defaultOptionValue;\r\n                    let value = provided[key];\r\n                    if (!provided.hasOwnProperty(key)) {\r\n                        if (defaultType === 'undefined' ||\r\n                            ((value === null || value === void 0 ? void 0 : value.length) === 0 && Array.isArray(defaultOptionValue))) {\r\n                            copyTo[key] = defaultOptionValue;\r\n                            return;\r\n                        }\r\n                        provided[key] = defaultOptionValue;\r\n                        value = provided[key];\r\n                    }\r\n                    path += `.${key}`;\r\n                    copyTo[key] = processKey(key, value, providedType, defaultType);\r\n                    if (typeof defaultOptionValue !== 'object' || key === 'inputFormat') {\r\n                        path = path.substring(0, path.lastIndexOf(`.${key}`));\r\n                        return;\r\n                    }\r\n                    if (!Array.isArray(provided[key])) {\r\n                        spread(provided[key], defaultOptionValue, copyTo[key]);\r\n                        path = path.substring(0, path.lastIndexOf(`.${key}`));\r\n                    }\r\n                    path = path.substring(0, path.lastIndexOf(`.${key}`));\r\n                });\r\n            };\r\n            spread(providedOptions, mergeTo, newOptions);\r\n            return newOptions;\r\n        }\r\n        static _dataToOptions(element, options) {\r\n            const eData = element.dataset;\r\n            if (!eData ||\r\n                Object.keys(eData).length === 0 ||\r\n                eData.constructor !== DOMStringMap)\r\n                return options;\r\n            let dataOptions = {};\r\n            // because dataset returns camelCase including the 'td' key the option\r\n            // key won't align\r\n            const objectToNormalized = (object) => {\r\n                const lowered = {};\r\n                Object.keys(object).forEach((x) => {\r\n                    lowered[x.toLowerCase()] = x;\r\n                });\r\n                return lowered;\r\n            };\r\n            const rabbitHole = (split, index, optionSubgroup, value) => {\r\n                // first round = display { ... }\r\n                const normalizedOptions = objectToNormalized(optionSubgroup);\r\n                const keyOption = normalizedOptions[split[index].toLowerCase()];\r\n                const internalObject = {};\r\n                if (keyOption === undefined)\r\n                    return internalObject;\r\n                // if this is another object, continue down the rabbit hole\r\n                if (optionSubgroup[keyOption].constructor === Object) {\r\n                    index++;\r\n                    internalObject[keyOption] = rabbitHole(split, index, optionSubgroup[keyOption], value);\r\n                }\r\n                else {\r\n                    internalObject[keyOption] = value;\r\n                }\r\n                return internalObject;\r\n            };\r\n            const optionsLower = objectToNormalized(options);\r\n            Object.keys(eData)\r\n                .filter((x) => x.startsWith(Namespace.dataKey))\r\n                .map((x) => x.substring(2))\r\n                .forEach((key) => {\r\n                let keyOption = optionsLower[key.toLowerCase()];\r\n                // dataset merges dashes to camelCase... yay\r\n                // i.e. key = display_components_seconds\r\n                if (key.includes('_')) {\r\n                    // [display, components, seconds]\r\n                    const split = key.split('_');\r\n                    // display\r\n                    keyOption = optionsLower[split[0].toLowerCase()];\r\n                    if (keyOption !== undefined &&\r\n                        options[keyOption].constructor === Object) {\r\n                        dataOptions[keyOption] = rabbitHole(split, 1, options[keyOption], eData[`td${key}`]);\r\n                    }\r\n                }\r\n                // or key = multipleDate\r\n                else if (keyOption !== undefined) {\r\n                    dataOptions[keyOption] = eData[`td${key}`];\r\n                }\r\n            });\r\n            return this._mergeOptions(dataOptions, options);\r\n        }\r\n        /**\r\n         * Attempts to prove `d` is a DateTime or Date or can be converted into one.\r\n         * @param d If a string will attempt creating a date from it.\r\n         * @private\r\n         */\r\n        static _dateTypeCheck(d) {\r\n            if (d.constructor.name === 'DateTime')\r\n                return d;\r\n            if (d.constructor.name === 'Date') {\r\n                return DateTime.convert(d);\r\n            }\r\n            if (typeof d === typeof '') {\r\n                const dateTime = new DateTime(d);\r\n                if (JSON.stringify(dateTime) === 'null') {\r\n                    return null;\r\n                }\r\n                return dateTime;\r\n            }\r\n            return null;\r\n        }\r\n        /**\r\n         * Type checks that `value` is an array of Date or DateTime\r\n         * @param optionName Provides text to error messages e.g. disabledDates\r\n         * @param value Option value\r\n         * @param providedType Used to provide text to error messages\r\n         */\r\n        static _typeCheckDateArray(optionName, value, providedType) {\r\n            if (!Array.isArray(value)) {\r\n                Namespace.ErrorMessages.typeMismatch(optionName, providedType, 'array of DateTime or Date');\r\n            }\r\n            for (let i = 0; i < value.length; i++) {\r\n                let d = value[i];\r\n                const dateTime = this._dateConversion(d, optionName);\r\n                if (!dateTime) {\r\n                    Namespace.ErrorMessages.typeMismatch(optionName, typeof d, 'DateTime or Date');\r\n                }\r\n                value[i] = dateTime;\r\n            }\r\n        }\r\n        /**\r\n         * Type checks that `value` is an array of numbers\r\n         * @param optionName Provides text to error messages e.g. disabledDates\r\n         * @param value Option value\r\n         * @param providedType Used to provide text to error messages\r\n         */\r\n        static _typeCheckNumberArray(optionName, value, providedType) {\r\n            if (!Array.isArray(value) || value.length && value.find((x) => typeof x !== typeof 0)) { //***\r\n                Namespace.ErrorMessages.typeMismatch(optionName, providedType, 'array of numbers');\r\n            }\r\n            return;\r\n        }\r\n        /**\r\n         * Attempts to convert `d` to a DateTime object\r\n         * @param d value to convert\r\n         * @param optionName Provides text to error messages e.g. disabledDates\r\n         */\r\n        static _dateConversion(d, optionName) {\r\n            if (typeof d === typeof '') {\r\n                Namespace.ErrorMessages.dateString();\r\n            }\r\n            const converted = this._dateTypeCheck(d);\r\n            if (!converted) {\r\n                Namespace.ErrorMessages.failedToParseDate(optionName, d);\r\n            }\r\n            return converted;\r\n        }\r\n        static _flattenDefaultOptions() {\r\n            const deepKeys = (t, pre = []) => Array.isArray(t)\r\n                ? []\r\n                : Object(t) === t\r\n                    ? Object.entries(t).flatMap(([k, v]) => deepKeys(v, [...pre, k]))\r\n                    : pre.join('.');\r\n            return deepKeys(DefaultOptions);\r\n        }\r\n        /**\r\n         * Some options conflict like min/max date. Verify that these kinds of options\r\n         * are set correctly.\r\n         * @param config\r\n         */\r\n        static _validateConflcits(config) {\r\n            if (config.restrictions.minDate && config.restrictions.maxDate) {\r\n                if (config.restrictions.minDate.isAfter(config.restrictions.maxDate)) {\r\n                    Namespace.ErrorMessages.conflictingConfiguration('minDate is after maxDate');\r\n                }\r\n                if (config.restrictions.maxDate.isBefore(config.restrictions.minDate)) {\r\n                    Namespace.ErrorMessages.conflictingConfiguration('maxDate is before minDate');\r\n                }\r\n            }\r\n        }\r\n    }\n\n    /**\r\n     * A robust and powerful date/time picker component.\r\n     */\r\n    class TempusDominus {\r\n        constructor(element, options = {}) {\r\n            this._currentViewMode = 0;\r\n            this._subscribers = {};\r\n            this._minViewModeNumber = 0;\r\n            this._isDisabled = false;\r\n            this._notifyChangeEventContext = 0;\r\n            this._viewDate = new DateTime();\r\n            /**\r\n             * Event for when the input field changes. This is a class level method so there's\r\n             * something for the remove listener function.\r\n             * @private\r\n             */\r\n            this._inputChangeEvent = () => {\r\n                //*** let parsedDate = OptionConverter._dateTypeCheck(this._input.value);\r\n                let parsedDate;\r\n                if (typeof this._options.display.inputFormat == 'string') {\r\n                    let numberingSystem = (new Intl.NumberFormat(this._options.localization.locale)).resolvedOptions().numberingSystem;\r\n                    parsedDate = new DateTime(luxon__namespace.DateTime.fromFormat(this._input.value, this._options.display.inputFormat, { locale: this._options.localization.locale, numberingSystem }).toJSDate()); //***\r\n                }\r\n                if (parsedDate === null || parsedDate === void 0 ? void 0 : parsedDate.isValid) {\r\n                    parsedDate.setLocale(this._options.localization.locale); //***\r\n                    this.dates._setValue(parsedDate);\r\n                }\r\n                else {\r\n                    this._triggerEvent({\r\n                        type: Namespace.Events.error,\r\n                        reason: Namespace.ErrorMessages.failedToParseInput,\r\n                        date: parsedDate,\r\n                    });\r\n                }\r\n            };\r\n            /**\r\n             * Event for when the toggle is clicked. This is a class level method so there's\r\n             * something for the remove listener function.\r\n             * @private\r\n             */\r\n            this._toggleClickEvent = () => {\r\n                this.toggle();\r\n            };\r\n            if (!element) {\r\n                Namespace.ErrorMessages.mustProvideElement;\r\n            }\r\n            this._element = element;\r\n            this._options = this._initializeOptions(options, DefaultOptions, true);\r\n            this._viewDate.setLocale(this._options.localization.locale);\r\n            this._unset = true;\r\n            this._display = new Display(this);\r\n            this._validation = new Validation(this);\r\n            this.dates = new Dates(this);\r\n            this._action = new Actions(this);\r\n            this._initializeInput();\r\n            this._initializeToggle();\r\n            if (this._options.display.inline)\r\n                this._display.show();\r\n        }\r\n        get viewDate() {\r\n            return this._viewDate;\r\n        }\r\n        // Get toggle button //***\r\n        get toggleElement() {\r\n            return this._toggle;\r\n        }\r\n        // noinspection JSUnusedGlobalSymbols\r\n        /**\r\n         * Update the picker options. If `reset` is provide `options` will be merged with DefaultOptions instead.\r\n         * @param options\r\n         * @param reset\r\n         * @public\r\n         */\r\n        updateOptions(options, reset = false) {\r\n            if (reset)\r\n                this._options = this._initializeOptions(options, DefaultOptions);\r\n            else\r\n                this._options = this._initializeOptions(options, this._options);\r\n            this._display._rebuild();\r\n        }\r\n        // noinspection JSUnusedGlobalSymbols\r\n        /**\r\n         * Toggles the picker open or closed. If the picker is disabled, nothing will happen.\r\n         * @public\r\n         */\r\n        toggle() {\r\n            if (this._isDisabled)\r\n                return;\r\n            this._display.toggle();\r\n        }\r\n        // noinspection JSUnusedGlobalSymbols\r\n        /**\r\n         * Shows the picker unless the picker is disabled.\r\n         * @public\r\n         */\r\n        show() {\r\n            if (this._isDisabled)\r\n                return;\r\n            this._display.show();\r\n        }\r\n        // noinspection JSUnusedGlobalSymbols\r\n        /**\r\n         * Hides the picker unless the picker is disabled.\r\n         * @public\r\n         */\r\n        hide() {\r\n            this._display.hide();\r\n        }\r\n        // noinspection JSUnusedGlobalSymbols\r\n        /**\r\n         * Disables the picker and the target input field.\r\n         * @public\r\n         */\r\n        disable() {\r\n            var _a;\r\n            this._isDisabled = true;\r\n            // todo this might be undesired. If a dev disables the input field to\r\n            // only allow using the picker, this will break that.\r\n            (_a = this._input) === null || _a === void 0 ? void 0 : _a.setAttribute('disabled', 'disabled');\r\n            this._display.hide();\r\n        }\r\n        // noinspection JSUnusedGlobalSymbols\r\n        /**\r\n         * Enables the picker and the target input field.\r\n         * @public\r\n         */\r\n        enable() {\r\n            var _a;\r\n            this._isDisabled = false;\r\n            (_a = this._input) === null || _a === void 0 ? void 0 : _a.removeAttribute('disabled');\r\n        }\r\n        // noinspection JSUnusedGlobalSymbols\r\n        /**\r\n         * Clears all the selected dates\r\n         * @public\r\n         */\r\n        clear() {\r\n            this.dates.clear();\r\n        }\r\n        // noinspection JSUnusedGlobalSymbols\r\n        /**\r\n         * Allows for a direct subscription to picker events, without having to use addEventListener on the element.\r\n         * @param eventTypes See Namespace.Events\r\n         * @param callbacks Function to call when event is triggered\r\n         * @public\r\n         */\r\n        subscribe(eventTypes, callbacks) {\r\n            if (typeof eventTypes === 'string') {\r\n                eventTypes = [eventTypes];\r\n            }\r\n            let callBackArray = [];\r\n            if (!Array.isArray(callbacks)) {\r\n                callBackArray = [callbacks];\r\n            }\r\n            else {\r\n                callBackArray = callbacks;\r\n            }\r\n            if (eventTypes.length !== callBackArray.length) {\r\n                Namespace.ErrorMessages.subscribeMismatch;\r\n            }\r\n            const returnArray = [];\r\n            for (let i = 0; i < eventTypes.length; i++) {\r\n                const eventType = eventTypes[i];\r\n                if (!Array.isArray(this._subscribers[eventType])) {\r\n                    this._subscribers[eventType] = [];\r\n                }\r\n                this._subscribers[eventType].push(callBackArray[i]);\r\n                returnArray.push({\r\n                    unsubscribe: this._unsubscribe.bind(this, eventType, this._subscribers[eventType].length - 1),\r\n                });\r\n                if (eventTypes.length === 1) {\r\n                    return returnArray[0];\r\n                }\r\n            }\r\n            return returnArray;\r\n        }\r\n        // noinspection JSUnusedGlobalSymbols\r\n        /**\r\n         * Hides the picker and removes event listeners\r\n         */\r\n        dispose() {\r\n            var _a, _b;\r\n            this._display.hide();\r\n            // this will clear the document click event listener\r\n            this._display._dispose();\r\n            (_a = this._input) === null || _a === void 0 ? void 0 : _a.removeEventListener('change', this._inputChangeEvent);\r\n            if (this._options.allowInputToggle) {\r\n                (_b = this._input) === null || _b === void 0 ? void 0 : _b.removeEventListener('click', this._toggleClickEvent);\r\n            }\r\n            this._toggle.removeEventListener('click', this._toggleClickEvent);\r\n            this._subscribers = {};\r\n        }\r\n        /**\r\n         * Triggers an event like ChangeEvent when the picker has updated the value\r\n         * of a selected date.\r\n         * @param event Accepts a BaseEvent object.\r\n         * @private\r\n         */\r\n        _triggerEvent(event) {\r\n            // checking hasOwnProperty because the BasicEvent also falls through here otherwise\r\n            if (event && event.hasOwnProperty('date')) {\r\n                const { date, oldDate, isClear } = event;\r\n                // this was to prevent a max call stack error\r\n                // https://github.com/tempusdominus/core/commit/15a280507f5277b31b0b3319ab1edc7c19a000fb\r\n                // todo see if this is still needed or if there's a cleaner way\r\n                this._notifyChangeEventContext++;\r\n                if ((date && oldDate && date.isSame(oldDate)) ||\r\n                    (!isClear && !date && !oldDate) ||\r\n                    this._notifyChangeEventContext > 1) {\r\n                    this._notifyChangeEventContext = 0;\r\n                    return;\r\n                }\r\n                this._handlePromptTimeIfNeeded(event);\r\n                $__default['default'] === null || $__default['default'] === void 0 ? void 0 : $__default['default'](this._element).trigger($__default['default'].Event(event.type, { date: date })); //***\r\n            }\r\n            this._element.dispatchEvent(new CustomEvent(event.type, { detail: event }));\r\n            if (window.jQuery) {\r\n                const $ = window.jQuery;\r\n                $(this._element).trigger(event);\r\n            }\r\n            const publish = () => {\r\n                // return if event is not subscribed\r\n                if (!Array.isArray(this._subscribers[event.type])) {\r\n                    return;\r\n                }\r\n                // Trigger callback for each subscriber\r\n                this._subscribers[event.type].forEach((callback) => {\r\n                    callback(event);\r\n                });\r\n            };\r\n            publish();\r\n            this._notifyChangeEventContext = 0;\r\n        }\r\n        /**\r\n         * Fires a ViewUpdate event when, for example, the month view is changed.\r\n         * @param {Unit} unit\r\n         * @private\r\n         */\r\n        _viewUpdate(unit) {\r\n            this._triggerEvent({\r\n                type: Namespace.Events.update,\r\n                change: unit,\r\n                viewDate: this._viewDate.clone,\r\n            });\r\n        }\r\n        _unsubscribe(eventName, index) {\r\n            this._subscribers[eventName].splice(index, 1);\r\n        }\r\n        /**\r\n         * Merges two Option objects together and validates options type\r\n         * @param config new Options\r\n         * @param mergeTo Options to merge into\r\n         * @param includeDataset When true, the elements data-td attributes will be included in the\r\n         * @private\r\n         */\r\n        _initializeOptions(config, mergeTo, includeDataset = false) {\r\n            var _a;\r\n            config = OptionConverter._mergeOptions(config, mergeTo);\r\n            if (includeDataset)\r\n                config = OptionConverter._dataToOptions(this._element, config);\r\n            OptionConverter._validateConflcits(config);\r\n            config.viewDate = config.viewDate.setLocale(config.localization.locale);\r\n            if (!this._viewDate.isSame(config.viewDate)) {\r\n                this._viewDate = config.viewDate;\r\n            }\r\n            if (config.display.inputFormat) { //***\r\n                let inputFormat = config.display.inputFormat;\r\n                let components = config.display.components;\r\n                components.year = /y/.test(inputFormat);\r\n                components.month = /M/.test(inputFormat);\r\n                components.date = /d/.test(inputFormat);\r\n                components.hours = (/h/i).test(inputFormat);\r\n                components.useTwentyfourHour = /H/.test(inputFormat);\r\n                components.minutes = /m/.test(inputFormat);\r\n                components.seconds = /s/.test(inputFormat);\r\n            }\r\n            /**\r\n             * Sets the minimum view allowed by the picker. For example the case of only\r\n             * allowing year and month to be selected but not date.\r\n             */\r\n            if (config.display.components.year) {\r\n                this._minViewModeNumber = 2;\r\n            }\r\n            if (config.display.components.month) {\r\n                this._minViewModeNumber = 1;\r\n            }\r\n            if (config.display.components.date) {\r\n                this._minViewModeNumber = 0;\r\n            }\r\n            this._currentViewMode = Math.max(this._minViewModeNumber, this._currentViewMode);\r\n            // Update view mode if needed\r\n            if (DatePickerModes[this._currentViewMode].name !== config.display.viewMode) {\r\n                this._currentViewMode = Math.max(DatePickerModes.findIndex((x) => x.name === config.display.viewMode), this._minViewModeNumber);\r\n            }\r\n            // defaults the input format based on the components enabled\r\n            //*** if (config.display.inputFormat === undefined) {\r\n            //   const components = config.display.components;\r\n            //   config.display.inputFormat = {\r\n            //     year: components.calendar && components.year ? 'numeric' : undefined,\r\n            //     month: components.calendar && components.month ? '2-digit' : undefined,\r\n            //     day: components.calendar && components.date ? '2-digit' : undefined,\r\n            //     hour:\r\n            //       components.clock && components.hours\r\n            //         ? components.useTwentyfourHour\r\n            //           ? '2-digit'\r\n            //           : 'numeric'\r\n            //         : undefined,\r\n            //     minute: components.clock && components.minutes ? '2-digit' : undefined,\r\n            //     second: components.clock && components.seconds ? '2-digit' : undefined,\r\n            //     hour12: !components.useTwentyfourHour,\r\n            //   };\r\n            // }\r\n            if ((_a = this._display) === null || _a === void 0 ? void 0 : _a.isVisible) {\r\n                this._display._update('all');\r\n            }\r\n            return config;\r\n        }\r\n        /**\r\n         * Checks if an input field is being used, attempts to locate one and sets an\r\n         * event listener if found.\r\n         * @private\r\n         */\r\n        _initializeInput() {\r\n            var _a, _b, _c;\r\n            if (this._element.tagName == 'INPUT') {\r\n                this._input = this._element;\r\n            }\r\n            else {\r\n                let query = this._element.dataset.tdTargetInput;\r\n                if (query == undefined || query == 'nearest') {\r\n                    this._input = this._element.querySelector('input');\r\n                }\r\n                else {\r\n                    this._input = this._element.querySelector(query);\r\n                }\r\n            }\r\n            (_a = this._input) === null || _a === void 0 ? void 0 : _a.addEventListener('change', this._inputChangeEvent);\r\n            if ((_b = this._input) === null || _b === void 0 ? void 0 : _b.value) { //***\r\n                this._input.dispatchEvent(new Event('change'));\r\n            }\r\n            if (this._options.allowInputToggle) {\r\n                (_c = this._input) === null || _c === void 0 ? void 0 : _c.addEventListener('click', this._toggleClickEvent);\r\n            }\r\n        }\r\n        /**\r\n         * Attempts to locate a toggle for the picker and sets an event listener\r\n         * @private\r\n         */\r\n        _initializeToggle() {\r\n            if (this._options.display.inline)\r\n                return;\r\n            let query = this._element.dataset.tdTargetToggle;\r\n            if (query == 'nearest') {\r\n                query = `[data-td-toggle=\"${Namespace.dataKey}\"]`; //***\r\n            }\r\n            this._toggle =\r\n                query == undefined ? this._element : this._element.querySelector(query);\r\n            this._toggle.addEventListener('click', this._toggleClickEvent);\r\n        }\r\n        /**\r\n         * If the option is enabled this will render the clock view after a date pick.\r\n         * @param e change event\r\n         * @private\r\n         */\r\n        _handlePromptTimeIfNeeded(e) {\r\n            var _a, _b;\r\n            if (\r\n            // options is disabled\r\n            !this._options.promptTimeOnDateChange ||\r\n                this._options.display.inline ||\r\n                this._options.display.sideBySide ||\r\n                // time is disabled\r\n                !this._display._hasTime ||\r\n                (\r\n                // clock component is already showing\r\n                (_a = this._display.widget) === null || _a === void 0 ? void 0 : _a.getElementsByClassName(Namespace.Css.show)[0].classList.contains(Namespace.Css.timeContainer)))\r\n                return;\r\n            // First time ever. If useCurrent option is set to true (default), do nothing\r\n            // because the first date is selected automatically.\r\n            // or date didn't change (time did) or date changed because time did.\r\n            if ((!e.oldDate && this._options.useCurrent) ||\r\n                (e.oldDate && ((_b = e.date) === null || _b === void 0 ? void 0 : _b.isSame(e.oldDate)))) {\r\n                return;\r\n            }\r\n            clearTimeout(this._currentPromptTimeTimeout);\r\n            this._currentPromptTimeTimeout = setTimeout(() => {\r\n                if (this._display.widget) {\r\n                    this._action.do({\r\n                        currentTarget: this._display.widget.querySelector(`.${Namespace.Css.switch} div`),\r\n                    }, ActionTypes.togglePicker);\r\n                }\r\n            }, this._options.promptTimeOnDateChangeTransitionDelay);\r\n        }\r\n    }\n\n    var _tempusDominus = {\n        __proto__: null,\n        TempusDominus: TempusDominus,\n        Namespace: Namespace,\n        DefaultOptions: DefaultOptions,\n        DateTime: DateTime\n    };\n\n    /*global $ */\n\n    //window.tempusDominus.Namespace.Events\n    const tempusDominus = _tempusDominus; //***\n\n    tempusDominus.jQueryInterface = function (option, argument) {\n      if (this.length === 1) {\n        return tempusDominus.jQueryHandleThis(this, option, argument);\n      }\n      // \"this\" is jquery here\n      return this.each(function () {\n        tempusDominus.jQueryHandleThis(this, option, argument);\n      });\n    };\n\n    tempusDominus.jQueryHandleThis = function (me, option, argument) {\n      let data = $__default['default'](me).data(tempusDominus.Namespace.dataKey);\n      if (typeof option === 'object') {\n        option = $__default['default'].extend({}, tempusDominus.DefaultOptions, option); //***\n      }\n\n      if (!data) {\n        data = new tempusDominus.TempusDominus($__default['default'](me)[0], option);\n        $__default['default'](me).data(tempusDominus.Namespace.dataKey, data);\n      }\n\n      if (typeof option === 'string') {\n        if (data[option] === undefined) {\n          throw new Error(`No method named \"${option}\"`);\n        }\n        if (argument === undefined) {\n          return data[option]();\n        } else {\n          if (option === 'date') {\n            data.isDateUpdateThroughDateOptionFromClientCode = true;\n          }\n          const ret = data[option](argument);\n          data.isDateUpdateThroughDateOptionFromClientCode = false;\n          return ret;\n        }\n      }\n    };\n\n    tempusDominus.getSelectorFromElement = function ($element) {\n      let selector = $element.data('target'),\n        $selector;\n\n      if (!selector) {\n        selector = $element.attr('href') || '';\n        selector = /^#[a-z]/i.test(selector) ? selector : null;\n      }\n      $selector = $__default['default'](selector);\n      if ($selector.length === 0) {\n        return $element;\n      }\n\n      if (!$selector.data(tempusDominus.Namespace.dataKey)) {\n        $__default['default'].extend({}, $selector.data(), $__default['default'](this).data());\n      }\n\n      return $selector;\n    };\n\n    /**\n     * ------------------------------------------------------------------------\n     * jQuery\n     * ------------------------------------------------------------------------\n     */\n    //*** $(document)\n    //   .on(\n    //     `click${tempusDominus.Namespace.Events.key}.data-api`,\n    //     `[data-td-toggle=\"${tempusDominus.Namespace.DATA_KEY}\"]`, //***\n    //     function () {\n    //       const $originalTarget = $(this),\n    //         $target = tempusDominus.getSelectorFromElement($originalTarget),\n    //         config = $target.data(tempusDominus.Namespace.DATA_KEY);\n    //       if ($target.length === 0) {\n    //         return;\n    //       }\n    //       if (\n    //         config.options.allowInputToggle && //***\n    //         $originalTarget.is(`input[data-td-toggle=\"${tempusDominus.Namespace.DATA_KEY}\"]`) //***\n    //       ) {\n    //         return;\n    //       }\n    //       tempusDominus.jQueryInterface.call($target, 'toggle');\n    //     }\n    //   )\n    //   .on(\n    //     tempusDominus.Namespace.Events.change,\n    //     `.${tempusDominus.Namespace.NAME}-input`,\n    //     function (event) {\n    //       const $target = tempusDominus.getSelectorFromElement($(this));\n    //       if ($target.length === 0 || event.isInit) {\n    //         return;\n    //       }\n    //       tempusDominus.jQueryInterface.call($target, '_change', event);\n    //     }\n    //   )\n    //   .on(\n    //     tempusDominus.Namespace.Events.blur,\n    //     `.${tempusDominus.Namespace.NAME}-input`,\n    //     function (event) {\n    //       const $target = tempusDominus.getSelectorFromElement($(this)),\n    //         config = $target.data(tempusDominus.Namespace.DATA_KEY);\n    //       if ($target.length === 0) {\n    //         return;\n    //       }\n    //       if (config.options.debug || window.debug) { //***\n    //         return;\n    //       }\n    //       tempusDominus.jQueryInterface.call($target, 'hide', event);\n    //     }\n    //   )\n    //   /*.on(tempusDominus.Namespace.Events.keydown, `.${tempusDominus.Namespace.NAME}-input`, function (event) {\n    //     const $target = tempusDominus.getSelectorFromElement($(this));\n    //     if ($target.length === 0) {\n    //       return;\n    //     }\n    //     tempusDominus.jQueryInterface.call($target, '_keydown', event);\n    //   })\n    //   .on(tempusDominus.Namespace.Events.keyup, `.${tempusDominus.Namespace.NAME}-input`, function (event) {\n    //     const $target = tempusDominus.getSelectorFromElement($(this));\n    //     if ($target.length === 0) {\n    //       return;\n    //     }\n    //     tempusDominus.jQueryInterface.call($target, '_keyup', event);\n    //   })*/\n    //   .on(\n    //     tempusDominus.Namespace.Events.focus,\n    //     `.${tempusDominus.Namespace.NAME}-input`,\n    //     function (event) {\n    //       const $target = tempusDominus.getSelectorFromElement($(this)),\n    //         config = $target.data(tempusDominus.Namespace.DATA_KEY);\n    //       if ($target.length === 0) {\n    //         return;\n    //       }\n    //       if (!config.options.allowInputToggle) { //***\n    //         return;\n    //       }\n    //       tempusDominus.jQueryInterface.call($target, 'show', event);\n    //     }\n    //   );\n    const name = 'tempusDominus';\n    $__default['default'].fn[name] = tempusDominus.jQueryInterface;\n    $__default['default'].fn[name].Constructor = tempusDominus.TempusDominus;\n    $__default['default'].fn[name].noConflict = function () {\n      $__default['default'].fn[name] = $__default['default'].fn[name];\n      return tempusDominus.jQueryInterface;\n    };\n\n    return tempusDominus;\n\n}(jQuery, luxon, Popper));\n//# sourceMappingURL=tempus-dominus.js.map\n"]}