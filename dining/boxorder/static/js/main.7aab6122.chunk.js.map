{"version":3,"sources":["img/Catalyst_Cafe_Catering_Banner.jpg","redux/reducers/main.js","redux/reducers/menu_reducer.js","redux/reducers/bagelandsheamr_reducer.js","redux/reducers/egg_sandwiches_reducer.js","redux/reducers/bk_fav_reducer.js","redux/reducers/sweet_snack_reducer.js","redux/reducers/beverage.js","redux/reducers/fresh_salads_reducer.js","redux/reducers/cookie_reducer.js","redux/reducers/lunchsandwich_reducer.js","redux/reducers/customer_reducer.js","redux/reducers/index.js","redux/actions/actionTypes.js","redux/store.js","components/Nav.js","components/common/TopNav.js","redux/actions/main.js","components/bottom.js","components/Menu/index.js","redux/actions/menu_action.js","components/Customer/index.js","redux/actions/customer_action.js","components/Summary/index.js","components/Confirmation.js","serviceWorker.js","index.js","App.js"],"names":["module","exports","initialState","delivery_method","loading","bagelandsheamr","byo_breakfast","byo_lunch","office_party","beverage","subtotal","tax","total","additional_comment","nav","routes","confirmation","success","email","orderID","error","code","msg","items","qty","box","mode","id","baker_dozen","name","description","price","list","nosh_box","bagel","plain","honey","everything","asiago","blueberry","choco","cinnamonRaisin","cinnamonSugar","sesame","whip","onion","salmon","plainRF","garden","garlic","jalapeno","strawberry","roundTo","require","type","classic","applewood","turkey","ham","spinach","half","selected","dozen","signature","mush","thintastic","santafe","for_group","bagel_max","whip_max","salmon_platter","bagel_shmear_break_box","power_protein_breakfast_box","Pastry_breakfast_box","cinnamon","cherry","salad_large","salad_small","parfait","noshbox_half","noshbox_dozen","noshbox","neighborhood_blend","neighborhood_decaf","vanilla_hazelnut","seasonal_roast","orange_juice","tea_lemonade","hot_tea","hon_tea_green","hon_tea_half","vitamin_acai","vitamin_tropical","vitamin_strawberry","coke","diet_coke","dr_pepper","sprite","fanta_orange","dasani","gallon_water","chips","bakedlays","kettleseasalt","kettlebbq","chicken","chicken_group","almond","almond_group","sugar","variety","sweet","small","large","kettle","sea","bbq","layBake","harvest","green_chile","hummus","albacore","full","turkey_cheddar","ham_swiss","forGroup","sandwich","cookie","chip","kettleplain","drink","diet_dr_pepper","cherry_coke","coke_zero","lunchBox","tasty","green","nova_lox","firstname","lastname","phone","location","payment","detail","validation_check","combineReducers","main","state","action","index","payload","err","text","menu","date","meal","item_id","item","console","log","date_id","push","meal_id","new_item","old_item","remove_id","parseInt","length","box_total","diff","filter","egg_sandwich","split","bk_fav_reducer","new_list","key","sweet_snack","fresh_salads","ex_total","lunchsandwich","list_id","customer","value","createStore","rootReducer","applyMiddleware","thunkMiddleware","React","Component","TopNav","Fragment","Row","className","to","this","props","global","style","fontSize","marginTop","updateCurrentNav","connect","Bottom","getTotal","navIndex","Col","fontWeight","textAlign","padding","ButtonToolbar","marginRight","width","marginLeft","Menu","dispatch","pickupDateHandler","event","target","setState","fetch","method","headers","then","res","ok","json","Error","return","menus","available_meal","breakfast","lunch","dinner","current_time","Date","getDay","getHours","tmp_menu","breakfast_1","title","breakfast_bag","breakfast_beverage","lunch_1","lunch_bag","lunch_2","lunch_3","lunch_beverage","dinner_1","dinner_bag","dinner_2","dinner_3","dinner_beverage","catch","selectMealHandler","selectItemHandler","changeNameHandler","addBox","picked_date","i","pickup_date","daynumber","history","monthNames","dayNames","getTime","year","getFullYear","month","getMonth","month_name","getDate","day","display_menu","Card","Body","Title","float","boxShadow","color","Form","Group","as","controlId","Label","Control","onChange","bind","defaultValue","map","row","ListGroup","Item","onClick","textTransform","paddingLeft","paddingRight","height","listStyle","list_row","lr_index","placeholder","margin","Button","Customer","textChangeHandler","infoUpdate","locationChangeHandler","paymentChangeHandler","submitOrder","data","marginBottom","Text","md","paddingTop","paddingBottom","verticalAlign","fetch_option","body","JSON","stringify","order_id","Summary","handleTextarea","printList","print","item_index","meal_key","printListItem","borderLeftWidth","borderRightWidth","menu_index","removeBox","editBox","Confirmation","Spinner","animation","backgroundColor","href","lineHeight","Boolean","window","hostname","match","ReactDOM","render","store","Container","basename","exact","path","component","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7aab6122.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Catalyst_Cafe_Catering_Banner.5c79c466.jpg\";","import { \r\n    UPDATE_CURRENT_NAV, \r\n    CALCULATE_SUBTOTAL,\r\n    SUBMIT_SUCCESS,\r\n    SUBMIT_FAILURE,\r\n    GET_DELIVERY_METHOD,\r\n    GET_DELIVERY_METHOD_FAILURE,\r\n    ADDITIONAL_NOTE\r\n} from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n    delivery_method: null,\r\n    loading: true,\r\n    bagelandsheamr: 0,\r\n    byo_breakfast: 0,\r\n    byo_lunch: 0,\r\n    office_party: 0,\r\n    beverage: 0,\r\n    subtotal: 0,\r\n    tax: 0,\r\n    total: 0,\r\n    additional_comment: '',\r\n    nav: 0,\r\n    routes: [\r\n        '/bagelandshmear',\r\n        '/eggsandwich',\r\n        '/breakfastfavorites',\r\n        '/sweetsnack',\r\n        '/beverage',\r\n        '/freshsalads',\r\n        '/cookies',\r\n        '/lunchsandwich',\r\n        '/summary'\r\n    ],\r\n    confirmation: {\r\n        loading: true,\r\n        success: false,\r\n        email: null,\r\n        orderID: null,\r\n        error: {\r\n            code: null\r\n        }\r\n    },\r\n    error: {\r\n        msg: ''\r\n    }\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n    switch (action.type) {\r\n        case UPDATE_CURRENT_NAV: {\r\n            const {index} = action.payload;\r\n            state.nav = index;\r\n            return {...state};\r\n        }\r\n        case CALCULATE_SUBTOTAL: {\r\n            const {subtotal, tax, total} = action.payload;\r\n            state.subtotal = subtotal;\r\n            state.tax = tax;\r\n            state.total = total;\r\n            return {...state};\r\n        }\r\n        case SUBMIT_SUCCESS: {\r\n            const {id, email} = action.payload;\r\n            initialState.confirmation = {\r\n                loading: false,\r\n                orderID: id,\r\n                email: email,\r\n                success: true\r\n            }\r\n            return {...initialState};\r\n        }\r\n        case SUBMIT_FAILURE: {\r\n            const {code} = action.payload;\r\n            state.confirmation = {\r\n                loading: false,\r\n                orderID: null\r\n            }\r\n            state.error.code = code;\r\n            return {...state}\r\n        }\r\n        case GET_DELIVERY_METHOD: {\r\n            const {delivery_method} = action.payload;\r\n            state.delivery_method = delivery_method;\r\n            return {...state};\r\n        }\r\n        case GET_DELIVERY_METHOD_FAILURE: {\r\n            const {err} = action.payload;\r\n            state.delivery_method = 'Failed';\r\n            state.error.msg = err;\r\n            return {...state}\r\n        }\r\n        case ADDITIONAL_NOTE: {\r\n            const text = action.payload;\r\n            state.additional_comment = text;\r\n            return {...state}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};","import { \r\n    ADD_BOX,\r\n    REMOVE_BOX\r\n} from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n    items: [{},{},{},{}],\r\n    qty: 0\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n    switch (action.type) {\r\n        case ADD_BOX: {\r\n            const {date, meal, item_id, item, name} = action.payload;\r\n\r\n            console.log(date);\r\n\r\n            if ((meal in state.items[date.date_id]) === false){\r\n                state.items[date.date_id][meal] = [];\r\n            }\r\n\r\n            state.items[date.date_id][meal].push({\r\n                date: date,\r\n                meal: meal,\r\n                item_id: item_id,\r\n                item: item,\r\n                name: name\r\n            })\r\n\r\n            state.qty = state.qty + 1;\r\n\r\n            return {...state};\r\n        }\r\n        case REMOVE_BOX: {\r\n            const { date_id, meal, meal_id } = action.payload;\r\n\r\n            let new_item = [];\r\n            let old_item = state.items[date_id][meal];\r\n\r\n            let remove_id = parseInt(meal_id);\r\n            for (let index = 0; index < old_item.length; index++){\r\n                if (remove_id !== index){\r\n                    new_item.push(old_item[index]);\r\n                }\r\n            }\r\n            state.items[date_id][meal] = new_item;\r\n            state.qty = state.qty - 1;\r\n\r\n            return {...state};\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};","import { \r\n    UPDATE_BAGEL_SHEAMR_QTY,\r\n    OPEN_BAGEL_SHEAMR_CHOICE,\r\n    OPEN_EDIT_BAGEL_SHEAMR_CHOICE,\r\n    CLOSE_BAGEL_SHEAMR_CHOICE,\r\n    ADD_BAGEL_SHEAMR_CHOICE,\r\n    UPDATE_BAGEL_SHEAMR_CHOICE,\r\n    REMOVE_BAGEL_SHEAMR_CHOICE \r\n} from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    box: null,\r\n    mode: null,\r\n    id: null,\r\n    baker_dozen: {\r\n        name: \"Bagels & Shmear Baker's Dozen\",\r\n        description: \"13 Fresh-Baked Bagels & 2 Tubs of Double-Whipped Shmear\",\r\n        price: 15.00,\r\n        qty: 0,\r\n        total: 0,\r\n        list: []\r\n    },\r\n    nosh_box: {\r\n        name: \"Bagels & Shmear Nosh Box\",\r\n        description: \"24 Fresh-Baked Bagels & 4 Tubs of our Double-Whipped Shmear\",\r\n        price: 29.99,\r\n        qty: 0,\r\n        total: 0,\r\n        list: []\r\n    },\r\n    bagel: {\r\n        plain: {name: 'Plain'},\r\n        honey: {name: 'Honey Whole Wheat'},\r\n        everything: {name: 'Everything'},\r\n        asiago: {name: 'Asiago'},\r\n        blueberry: {name: 'Blueberry'},\r\n        choco: {name: 'Chocolate Chip'},\r\n        cinnamonRaisin: {name: 'Cinnamon Raisin'},\r\n        cinnamonSugar: {name: 'Cinnamon Sugar'},\r\n        sesame: {name: 'Sesame Seed'}\r\n    },\r\n    whip: {\r\n        plain: {name: 'Plain'},\r\n        onion: {name: 'Onion & Chive'},\r\n        salmon: {name: 'Smoked Salmon'},\r\n        plainRF: {name: 'Plain'},\r\n        garden: {name: 'Garden Veggie'},\r\n        garlic: {name: 'Garlic & Herb Honey Almond'},\r\n        jalapeno: {name: 'Jalapeno Salsa'},\r\n        strawberry: {name: 'Strawberry'}\r\n    },\r\n    total: 0\r\n}\r\n\r\nconst roundTo = require('roundto');\r\n\r\nexport default function(state = initialState, action) {\r\n    switch (action.type) {\r\n        case UPDATE_BAGEL_SHEAMR_QTY : {\r\n            const {name, qty} = action.payload;\r\n            state[name].total = roundTo(state[name].price * qty, 2);\r\n            state[name].qty = qty;\r\n            state.total = roundTo(state.baker_dozen.total + state.nosh_box.total, 2);\r\n\r\n            return {...state};\r\n        }\r\n        case OPEN_BAGEL_SHEAMR_CHOICE : {\r\n            const {name, mode} = action.payload;\r\n\r\n\r\n            state.box = name;\r\n            state.mode = mode;\r\n\r\n            return {...state};\r\n        }\r\n        case OPEN_EDIT_BAGEL_SHEAMR_CHOICE : {\r\n            const {box, id} = action.payload;\r\n\r\n            state.box = box;\r\n            state.id = id;\r\n            state.mode = 'edit';\r\n\r\n            return {...state}\r\n        }\r\n        case ADD_BAGEL_SHEAMR_CHOICE : {\r\n            const {item} = action.payload;\r\n            let box_total = 0;\r\n            let diff = 0;\r\n\r\n            state[state.box].list.push(item);\r\n            state[state.box].qty = state[state.box].qty + 1;\r\n\r\n            box_total = state[state.box].total;\r\n            state[state.box].total = roundTo(state[state.box].qty * state[state.box].price, 2);\r\n            diff = state[state.box].total - box_total;\r\n\r\n            // Get Total\r\n            state.total = roundTo(state.total + diff, 2);\r\n\r\n            // Reset box, mode\r\n            state.box = null;\r\n            state.mode = null;\r\n\r\n            return {...state}\r\n        }\r\n        case UPDATE_BAGEL_SHEAMR_CHOICE : {\r\n            const {item} = action.payload;\r\n\r\n            // Decrement previous item\r\n\r\n\r\n            state[state.box].list[state.id] = item;\r\n\r\n            // Reset box, type, mode\r\n            state.box = null;\r\n            state.mode = null;\r\n\r\n            return {...state}\r\n        }\r\n        case REMOVE_BAGEL_SHEAMR_CHOICE: {\r\n            const {box, id} = action.payload;\r\n\r\n            let box_total = 0;\r\n            let diff = 0;\r\n\r\n            state[box].list[id] = null;\r\n            state[box].list = state[box].list.filter(function (box) {\r\n                return box != null\r\n            })\r\n            state[box].qty = state[box].qty - 1;\r\n\r\n            // Subtotal\r\n            box_total = state[box].total;\r\n            state[box].total = roundTo(state[box].qty * state[box].price, 2);\r\n            diff = state[box].total - box_total;\r\n            \r\n\r\n            // Get Total\r\n            state.total = roundTo(state.total + diff, 2);\r\n\r\n            return {...state}\r\n        }\r\n        case CLOSE_BAGEL_SHEAMR_CHOICE: {\r\n            state.box = null;\r\n            state.mode = null;\r\n\r\n            return {...state};\r\n        }\r\n        default :\r\n            return state;\r\n    }\r\n}","import { \r\n    OPEN_EGG_SANDWICH_BOX,\r\n    OPEN_EDIT_EGG_SANDWICH_BOX,\r\n    CLOSE_EGG_SANDWICH_BOX,\r\n    ADD_EGG_SANDWICH_BOX,\r\n    UPDATE_EGG_SANDWICH_BOX,\r\n    REMOVE_EGG_SANDWICH_BOX\r\n} from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    box: null,\r\n    type: null,\r\n    mode: null,\r\n    id: null,\r\n    classic: {\r\n        name: \"Classic Egg Sandwich Nosh Box\",\r\n        description: \"An assortment of hot egg Bagel Sandwiches including our three most popular sandwiches served on plain bagels: Applewood Bacon & Cheddar, Turkey-Sausage & Cheddar and Ham & Swiss. Veggie options also available.\",\r\n        items: {\r\n            applewood: {name: 'Applewood Bacon & Cheddar'},\r\n            turkey: {name: 'Turkey-Sausage & Cheddar'},\r\n            ham: {name: 'Ham & Swiss'},\r\n            spinach: {name: 'Spinach, Mushroom & Swiss'}\r\n        },\r\n        half: {\r\n            price: 32.99,\r\n            qty: 0,\r\n            total: 0,\r\n            list: [],\r\n            selected: true\r\n        },\r\n        dozen: {\r\n            price: 63.99,\r\n            qty: 0,\r\n            total: 0,\r\n            list: [],\r\n            selected: true\r\n        },\r\n        total: 0\r\n    },\r\n    signature: {\r\n        name: \"Signature Egg Sandwich Nosh Box\",\r\n        description: \"Enjoy hot eggs served on bagels just the way our chefs imagined: Applewood Bacon & Cheddar on Plain Bagel, Turkey-Sausage & Cheddar on Plain Bagel and Spinach, Mushroom & Swiss on Wheat Bagel\",\r\n        items: {\r\n            applewood: {name: 'Applewood Bacon & Cheddar on Asiago'},\r\n            turkey: {name: 'Turkey-Sausage & Cheddar on Plain Bagel'},\r\n            mush: {name: 'Spinach, Mushroom & Swiss on Wheat'}\r\n        },\r\n        half: {\r\n            price: 32.99,\r\n            qty: 0,\r\n            total: 0,\r\n            list: [],\r\n            selected: true\r\n        },\r\n        dozen: {\r\n            price: 63.99,\r\n            qty: 0,\r\n            total: 0,\r\n            list: [],\r\n            selected: true\r\n        },\r\n        total: 0\r\n    },\r\n    thintastic: {\r\n        name: \"Thintastic Egg Whites Sandwich Nosh Box\",\r\n        description: \"Our most popular Thintastic Egg Whites: Spinach, Mushroom & Swiss on Wheat Bagel and Santa Fe Turkey-Sausage on Asiago Bagel\",\r\n        items: {\r\n            spinach: {name: 'Spinach, Mushroom & Swiss on Wheat Bagel'},\r\n            santafe: {name: 'Santa Fe Turkey-Sausage on Asiago Bagel'}\r\n        },\r\n        half: {\r\n            price: 32.99,\r\n            qty: 0,\r\n            total: 0,\r\n            list: [],\r\n            selected: true\r\n        },\r\n        dozen: {\r\n            price: 63.99,\r\n            qty: 0,\r\n            total: 0,\r\n            list: [],\r\n            selected: true\r\n        },\r\n        total: 0\r\n    },\r\n    total: 0\r\n}\r\n\r\nconst roundTo = require('roundto');\r\n\r\nexport default function(state = initialState, action) {\r\n    switch (action.type) {\r\n        case OPEN_EGG_SANDWICH_BOX : {\r\n            const {name, mode} = action.payload;\r\n            const [box, type] = name.split('_');\r\n\r\n            state.box = box;\r\n            state.type = type;\r\n            state.mode = mode;\r\n\r\n            return {...state};\r\n        }\r\n        case OPEN_EDIT_EGG_SANDWICH_BOX : {\r\n            const {box, type, id} = action.payload;\r\n\r\n            state.box = box;\r\n            state.type = type;\r\n            state.id = id;\r\n            state.mode = 'edit';\r\n\r\n            return {...state}\r\n        }\r\n        case ADD_EGG_SANDWICH_BOX : {\r\n            const {list} = action.payload;\r\n\r\n            state[state.box][state.type].list.push(list);                                   \r\n            state[state.box][state.type].qty = state[state.box][state.type].qty + 1;\r\n\r\n            // Get Subtotal\r\n            const box_total = state[state.box][state.type].total;\r\n            state[state.box][state.type].total = roundTo(state[state.box][state.type].qty * state[state.box][state.type].price, 2);\r\n            const diff = state[state.box][state.type].total - box_total;\r\n\r\n            // Get Total\r\n            state.total = roundTo(state.total + diff, 2);\r\n\r\n            // Reset box, type, mode\r\n            state.box = null;\r\n            state.type = null;\r\n            state.mode = null;\r\n\r\n            return {...state}\r\n        }\r\n        case UPDATE_EGG_SANDWICH_BOX : {\r\n            const {list} = action.payload;\r\n\r\n            state[state.box][state.type].list[state.id] = list;\r\n\r\n            // Reset box, type, mode\r\n            state.box = null;\r\n            state.type = null;\r\n            state.mode = null;\r\n\r\n            return {...state}\r\n        }\r\n        case REMOVE_EGG_SANDWICH_BOX: {\r\n            const {box, type, id} = action.payload;\r\n\r\n            state[box][type].list[id] = null;\r\n            state[box][type].qty = state[box][type].qty - 1;\r\n\r\n            // Subtotal\r\n            const box_total = state[box][type].total;\r\n            state[box][type].total = roundTo(state[box][type].qty * state[box][type].price, 2);\r\n            const diff = state[box][type].total - box_total;\r\n\r\n            // Get Total\r\n            state.total = roundTo(state.total + diff, 2);\r\n\r\n            return {...state}\r\n        }\r\n        case CLOSE_EGG_SANDWICH_BOX: {\r\n            state.box = null;\r\n            state.type = null;\r\n            state.mode = null;\r\n\r\n            return {...state};\r\n        }\r\n        default :\r\n            return state;\r\n    }\r\n}","import { \r\n    UPDATE_BK_QTY,\r\n    OPEN_BK_BOX,\r\n    OPEN_EDIT_BK_BOX,\r\n    CLOSE_BK_BOX,\r\n    ADD_BK_BOX,\r\n    UPDATE_BK_BOX,\r\n    REMOVE_BK_BOX,\r\n    ADD_BK_PASTRY,\r\n    UPDATE_BK_PASTRY,\r\n    CLOSE_BK_PASTRY,\r\n    REMOVE_BK_PASTRY\r\n} from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    box: null,\r\n    mode: null,\r\n    id: null,\r\n    for_group: {\r\n        name: 'Breakfast For The Group', \r\n        price: 109.99, \r\n        qty: 0, \r\n        bagel_max: 12,\r\n        whip_max: 2,\r\n        total: 0, \r\n        description: 'A Mixed Bagels & Sweets Nosh Box, Large Fresh Fruit Salad, Coffee & Orange Juice for the Group & 2 Tubs of Double-Whipped Shmear',\r\n        list: []\r\n    },\r\n    salmon_platter: {\r\n        name: 'Traditional Nova Lox Salmon Platter', \r\n        price: 74.99, \r\n        qty: 0, \r\n        bagel_max: 13,\r\n        whip_max: 2,\r\n        total: 0, \r\n        description: 'Complete with 13 Fresh-Baked Bagels, Capers, Tomatoes, Red Onions, Cucumbers, Lemons & 2 Tubs of Double-Whipped Shmear',\r\n        list: []\r\n    },\r\n    nosh_box: {\r\n        name: 'Mixed Bagels & Sweets Nosh Box', \r\n        price: 39.99, \r\n        qty: 0, \r\n        bagel_max: 12,\r\n        whip_max: 2,\r\n        total: 0, \r\n        description: 'An assortment of 9 Breakfast Muffins & Assorted Pastries plus 12 Bagels with 2 Tubs of Double-Whipped Shmear, Honey Butter & Preserves',\r\n        list: []\r\n    },\r\n    bagel_shmear_break_box: {\r\n        name: 'Bagel & Shmear Breakfast Box', \r\n        price: 6.99, \r\n        qty: 0, \r\n        bagel_max: 1,\r\n        whip_max: 1,\r\n        total: 0, \r\n        description: 'Bagel with Shmear, Fruit Cup, Yogurt with Granola & a Banana',\r\n        list: []\r\n    },\r\n    power_protein_breakfast_box: {name: 'Power Protein Breakfast Box', price: 6.99, qty: 0, total: 0, description: 'Wheat Bagel with Peanut Butter, Fruit Cup, Yogurt with Granola & a Banana'},\r\n    Pastry_breakfast_box: {\r\n        name: 'Pastry Breakfast Box', \r\n        price: 6.99, \r\n        qty: 0, \r\n        total: 0, \r\n        description: 'Choice of Muffin or Strudel, Fruit Cup, Yogurt with Granola & a Banana',\r\n        list: {},\r\n        items: {\r\n            blueberry: {name: 'Blueberry Muffin'},\r\n            cinnamon: {name: 'Cinnamon Chip Muffin'},\r\n            choco: {name: 'Chocolate Croissant'},\r\n            cherry: {name: 'Greek Yogurt Cherry'}\r\n\r\n        }\r\n    },\r\n    total: 0,\r\n    bagel: {\r\n        plain: {name: 'Plain'},\r\n        honey: {name: 'Honey Whole Wheat'},\r\n        everything: {name: 'Everything'},\r\n        asiago: {name: 'Asiago'},\r\n        blueberry: {name: 'Blueberry'},\r\n        choco: {name: 'Chocolate Chip'},\r\n        cinnamonRaisin: {name: 'Cinnamon Raisin'},\r\n        cinnamonSugar: {name: 'Cinnamon Sugar'},\r\n        sesame: {name: 'Sesame Seed'}\r\n    },\r\n    whip: {\r\n        plain: {name: 'Plain'},\r\n        onion: {name: 'Onion & Chive'},\r\n        salmon: {name: 'Smoked Salmon'},\r\n        plainRF: {name: 'Plain'},\r\n        garden: {name: 'Garden Veggie'},\r\n        garlic: {name: 'Garlic & Herb Honey Almond'},\r\n        jalapeno: {name: 'Jalapeno Salsa'},\r\n        strawberry: {name: 'Strawberry'}\r\n    },\r\n}\r\n\r\nconst roundTo = require('roundto');\r\n\r\nexport default function(state = initialState, action) {\r\n    switch (action.type) {\r\n        case UPDATE_BK_QTY : {\r\n            const {name, qty} = action.payload;\r\n            state[name].total = roundTo(state[name].price * qty, 2);\r\n            state[name].qty = qty;\r\n            state.total = roundTo(\r\n                                state.for_group.total + \r\n                                state.salmon_platter.total +\r\n                                state.nosh_box.total +\r\n                                state.bagel_shmear_break_box.total +\r\n                                state.power_protein_breakfast_box.total +\r\n                                state.Pastry_breakfast_box.total\r\n                                ,2);\r\n\r\n            return {...state};\r\n        }\r\n        case OPEN_BK_BOX : {\r\n            const {name, mode} = action.payload;\r\n\r\n            state.box = name;\r\n            state.mode = mode;\r\n\r\n            return {...state};\r\n        }\r\n        case OPEN_EDIT_BK_BOX : {\r\n            const {box, id} = action.payload;\r\n\r\n            state.box = box;\r\n            state.id = id;\r\n            state.mode = 'edit';\r\n\r\n            return {...state}\r\n        }\r\n        case ADD_BK_BOX : {\r\n            const {list} = action.payload;\r\n\r\n            state[state.box].list.push(list);                                   \r\n            state[state.box].qty = state[state.box].qty + 1;\r\n\r\n            // Get Subtotal\r\n            const box_total = state[state.box].total;\r\n            state[state.box].total = roundTo(state[state.box].qty * state[state.box].price, 2);\r\n            const diff = state[state.box].total - box_total;\r\n\r\n            // Get Total\r\n            state.total = roundTo(state.total + diff, 2);\r\n\r\n            // Reset box, type, mode\r\n            state.box = null;\r\n            state.mode = null;\r\n\r\n            return {...state}\r\n        }\r\n        case UPDATE_BK_BOX : {\r\n            const {list} = action.payload;\r\n\r\n            state[state.box].list[state.id] = list;\r\n\r\n            // Reset box, type, mode\r\n            state.box = null;\r\n            state.mode = null;\r\n\r\n            return {...state}\r\n        }\r\n        case REMOVE_BK_BOX: {\r\n            const {box, id} = action.payload;\r\n\r\n            state[box].list[id] = null;\r\n            state[box].qty = state[box].qty - 1;\r\n\r\n            let new_list = [];\r\n            for (const id in state[box].list){\r\n                if (state[box].list[id] !== null){\r\n                    new_list.push(state[box].list[id])\r\n                }\r\n            }\r\n            state[box].list = new_list;\r\n\r\n            // Subtotal\r\n            const box_total = state[box].total;\r\n            state[box].total = roundTo(state[box].qty * state[box].price, 2);\r\n            const diff = state[box].total - box_total;\r\n\r\n            // Get Total\r\n            state.total = state.total + diff;\r\n\r\n            return {...state}\r\n        }\r\n        case CLOSE_BK_BOX: {\r\n            state.box = null;\r\n            state.mode = null;\r\n\r\n            return {...state};\r\n        }\r\n        case ADD_BK_PASTRY: {\r\n            const {item} = action.payload;\r\n            // let box_total = 0;\r\n            let diff = 0;\r\n\r\n            if (item in state.Pastry_breakfast_box.list) {\r\n                state.Pastry_breakfast_box.list[item] = state.Pastry_breakfast_box.list[item] + 1;\r\n            }\r\n            else {\r\n                state.Pastry_breakfast_box.list[item] = 1;\r\n            }\r\n\r\n            state.Pastry_breakfast_box.qty = state.Pastry_breakfast_box.qty + 1;\r\n            state.Pastry_breakfast_box.total = roundTo(state.Pastry_breakfast_box.price*state.Pastry_breakfast_box.qty, 2);\r\n            \r\n            diff = state.Pastry_breakfast_box.price;\r\n\r\n            // Get Total\r\n            state.total = roundTo(state.total + diff, 2);\r\n\r\n            // Reset box, type, mode\r\n            state.box = null;\r\n            state.type = null;\r\n            state.mode = null;\r\n\r\n            return {...state}\r\n        }\r\n        case UPDATE_BK_PASTRY: {\r\n            const {item} = action.payload;\r\n\r\n            // Decrement previous item\r\n\r\n\r\n            state.Pastry_breakfast_box.list[state.id] = item;\r\n\r\n            // Reset box, type, mode\r\n            state.box = null;\r\n            state.type = null;\r\n            state.mode = null;\r\n\r\n            return {...state}\r\n        }\r\n        case REMOVE_BK_PASTRY: {\r\n            const {item} = action.payload;\r\n\r\n            state.Pastry_breakfast_box.list[item] = state.Pastry_breakfast_box.list[item] - 1;\r\n            if (state.Pastry_breakfast_box.list[item] === 0) {\r\n                // delete state.lunchBox[sandwich].list[cookie]\r\n                let new_list = {}\r\n                for (let key in state.Pastry_breakfast_box.list){\r\n                    if (state.Pastry_breakfast_box.list[key] !== 0){\r\n                        new_list[key] = state.Pastry_breakfast_box.list[key]\r\n                    }\r\n                }\r\n                state.Pastry_breakfast_box.list = new_list;\r\n            }\r\n            // console.log(state.Pastry_breakfast_box.list)\r\n\r\n            // Subtotal\r\n            state.Pastry_breakfast_box.qty = state.Pastry_breakfast_box.qty - 1;\r\n            state.Pastry_breakfast_box.total = roundTo(state.Pastry_breakfast_box.total - state.Pastry_breakfast_box.price, 2)\r\n            state.total = roundTo(state.total - state.Pastry_breakfast_box.price, 2)\r\n\r\n            return {...state}\r\n        }\r\n        case CLOSE_BK_PASTRY: {\r\n            state.box = null;\r\n            state.type = null;\r\n            state.mode = null;\r\n\r\n            return {...state}\r\n        }\r\n        default :\r\n            return state;\r\n    }\r\n}","import { \r\n    UPDATE_SWEETSNACK_QTY,\r\n    OPEN_SWEETSNACK_BOX,\r\n    OPEN_EDIT_SWEETSNACK_BOX,\r\n    CLOSE_SWEETSNACK_BOX,\r\n    ADD_SWEETSNACK_BOX,\r\n    UPDATE_SWEETSNACK_BOX,\r\n    REMOVE_SWEETSNACK_BOX\r\n} from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    salad_large: {name: 'Seasonal Fresh Fruit Salad', price: 49.99, qty: 0, total: 0, description: 'An Assortment of Fresh-Cut Seasonal Fruit'},\r\n    salad_small: {name: '', price: 29.99, qty: 0, total: 0, description: ''},\r\n    parfait: {name: 'Vanilla Strawberry Granola Parfait', price: 29.99, qty: 0, total: 0, description: 'Let your Group Create Their Own Parfait with our Fresh-Cut Strawberries, Low-Fat Vanilla Yogurt & Premium Granola with Sliced Almonds & Craisins Dried Cranberries'},\r\n    box: null,\r\n    type: null,\r\n    mode: null,\r\n    id: null,\r\n    noshbox_half: {price: 14.99, qty: 0, total: 0},\r\n    noshbox_dozen: {price: 28.99, qty: 0, total: 0},\r\n    noshbox: {\r\n        name: \"Sweets Nosh Box\",\r\n        description: \"Muffins & Assorted Pastries\",\r\n        items: {\r\n            applewood: {name: 'Applewood Bacon & Cheddar'},\r\n            turkey: {name: 'Turkey-Sausage & Cheddar'},\r\n            ham: {name: 'Ham & Swiss'}\r\n        },\r\n        half: {\r\n            price: 14.99,\r\n            qty: 0,\r\n            total: 0,\r\n            list: [],\r\n            selected: true\r\n        },\r\n        dozen: {\r\n            price: 28.99,\r\n            qty: 0,\r\n            total: 0,\r\n            list: [],\r\n            selected: true\r\n        },\r\n        total: 0\r\n    },\r\n    total: 0\r\n}\r\n\r\nconst roundTo = require('roundto');\r\n\r\nexport default function(state = initialState, action) {\r\n    switch (action.type) {\r\n        case UPDATE_SWEETSNACK_QTY : {\r\n            const {name, qty} = action.payload;\r\n            state[name].total = roundTo(state[name].price * qty, 2);\r\n            state[name].qty = qty;\r\n            state.total = roundTo(\r\n                                state.salad_large.total + \r\n                                state.salad_small.total +\r\n                                state.parfait.total +\r\n                                state.noshbox_half.total +\r\n                                state.noshbox_dozen.total\r\n                                ,2);\r\n\r\n            return {...state};\r\n        }\r\n        case OPEN_SWEETSNACK_BOX : {\r\n            const {name, mode} = action.payload;\r\n            const [box, type] = name.split('_');\r\n\r\n            state.box = box;\r\n            state.type = type;\r\n            state.mode = mode;\r\n\r\n            return {...state};\r\n        }\r\n        case OPEN_EDIT_SWEETSNACK_BOX : {\r\n            const {box, type, id} = action.payload;\r\n\r\n            state.box = box;\r\n            state.type = type;\r\n            state.id = id;\r\n            state.mode = 'edit';\r\n\r\n            return {...state}\r\n        }\r\n        case ADD_SWEETSNACK_BOX : {\r\n            const {list} = action.payload;\r\n\r\n            state[state.box][state.type].list.push(list);                                   \r\n            state[state.box][state.type].qty = state[state.box][state.type].qty + 1;\r\n\r\n            // Get Subtotal\r\n            const box_total = state[state.box][state.type].total;\r\n            state[state.box][state.type].total = roundTo(state[state.box][state.type].qty * state[state.box][state.type].price, 2);\r\n            const diff = state[state.box][state.type].total - box_total;\r\n\r\n            // Get Total\r\n            state.total = state.total + diff;\r\n\r\n            // Reset box, type, mode\r\n            state.box = null;\r\n            state.type = null;\r\n            state.mode = null;\r\n\r\n            return {...state}\r\n        }\r\n        case UPDATE_SWEETSNACK_BOX : {\r\n            const {list} = action.payload;\r\n\r\n            state[state.box][state.type].list[state.id] = list;\r\n\r\n            // Reset box, type, mode\r\n            state.box = null;\r\n            state.type = null;\r\n            state.mode = null;\r\n\r\n            return {...state}\r\n        }\r\n        case REMOVE_SWEETSNACK_BOX: {\r\n            const {box, type, id} = action.payload;\r\n\r\n            state[box][type].list[id] = null;\r\n            state[box][type].qty = state[box][type].qty - 1;\r\n\r\n            // Subtotal\r\n            const box_total = state[box][type].total;\r\n            state[box][type].total = roundTo(state[box][type].qty * state[box][type].price, 2);\r\n            const diff = state[box][type].total - box_total;\r\n\r\n            // Get Total\r\n            state.total = state.total + diff;\r\n\r\n            return {...state}\r\n        }\r\n        case CLOSE_SWEETSNACK_BOX: {\r\n            state.box = null;\r\n            state.type = null;\r\n            state.mode = null;\r\n\r\n            return {...state};\r\n        }\r\n        default :\r\n            return state;\r\n    }\r\n}","import { \r\n    UPDATE_BEVERAGE_QTY\r\n} from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n    list: {\r\n        neighborhood_blend: {name: 'Neighborhood Blend', price: 15.99, qty: 0, total: 0, description: 'Our Signature Blend. Balanced, Medium-Bodied & Mellow. Roasted to a Light Nutty Brown.'},\r\n        neighborhood_decaf: {name: 'Neighborhood Decaf', price: 15.99, qty: 0, total: 0, description: 'All the flavor without the caffeine. A Medium-Bodied Dark Roast with a Smoky Flavor'},\r\n        vanilla_hazelnut: {name: 'Vanilla Hazelnut', price: 15.99, qty: 0, total: 0, description: 'Sweet & Nutty. Lightly Roasted Coffee Beans falvored with Vanilla & Hazelnut essence.'},\r\n        seasonal_roast: {name: 'Seasonal Roast', price: 15.99, qty: 0, total: 0, description: 'A coffee lover\\'s blend. Roasted in the Italian Roast Tradition to a Smoky, Bold Flavor & Deep Color.'},\r\n        orange_juice: {name: 'Orange Juice For The Group', price: 9.99, qty: 0, total: 0, description: ''},\r\n        tea_lemonade: {name: 'Tea & Lemonade For The Group', price: 8.99, qty: 0, total: 0, description: ''},\r\n        hot_tea: {name: 'Hot Tea For The Group', price: 15.99, qty: 0, total: 0, description: ''},\r\n\r\n        hon_tea_green: {name: 'Honey Green', price: 2.89, qty: 0, total: 0, description: ''},\r\n        hon_tea_half: {name: 'Half Tea/Lemonade', price: 2.89, qty: 0, total: 0, description: ''},\r\n\r\n        vitamin_acai: {name: 'Acai-Blueberry-Pomegranate', price: 2.79, qty: 0, total: 0, description: ''},\r\n        vitamin_tropical: {name: 'Tropical Citrus', price: 2.79, qty: 0, total: 0, description: ''},\r\n        vitamin_strawberry: {name: 'Kiwi Strawberry', price: 2.79, qty: 0, total: 0, description: ''},\r\n\r\n        coke: {name: 'Coke', price: 1.99, qty: 0, total: 0,},\r\n        diet_coke: {name: 'Diet Coke', price: 1.99, qty: 0, total: 0,},\r\n        dr_pepper: {name: 'Dr.Pepper', price: 1.99, qty: 0, total: 0,},\r\n        // diet_dr_pepper: {name: 'Diet Dr.Pepper', price: 1.99, qty: 0, total: 0,},\r\n        sprite: {name: 'Sprite', price: 1.99, qty:0, total: 0,},\r\n        fanta_orange: {name: 'Fanta Orange', price: 1.99, qty:0, total: 0,},\r\n\r\n        dasani: {name: 'Dasani Water', price: 1.69, qty: 0, total: 0,},\r\n        \r\n        // coke_zero: {name: 'Coke Zero', price: 1.99, qty: 0, total: 0,},\r\n\r\n        \r\n        \r\n        gallon_water: {name: 'Gallon of Water', price: 5.00, qty: 0, total: 0, description: ''} \r\n    },\r\n    total : 0\r\n};\r\n\r\nconst roundTo = require('roundto');\r\n\r\nexport default function(state = initialState, action) {\r\n    switch (action.type) {\r\n        case UPDATE_BEVERAGE_QTY: {\r\n            const {name, qty} = action.payload;\r\n\r\n            const total = state.list[name].total;\r\n            state.list[name].qty = qty;\r\n            state.list[name].total = roundTo(state.list[name].price * qty, 2);\r\n            const diff = roundTo(state.list[name].total - total, 2);\r\n\r\n            state.total = roundTo(state.total + diff, 2);\r\n\r\n            return {...state};\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// function updateTotal(state, name) {\r\n//     const total = roundTo(\r\n//                             state.list.neighborhood_blend.qty*state.list.neighborhood_blend.price +\r\n//                             state.list.neighborhood_decaf.qty*state.list.neighborhood_decaf.price +\r\n//                             state.list.vanilla_hazelnut.qty*state.list.vanilla_hazelnut.price +\r\n//                             state.list.seasonal_roast.qty*state.list.seasonal_roast.price +\r\n//                             state.list.orange_juice.qty*state.list.orange_juice.price +\r\n//                             state.list.tea_lemonade.qty*state.list.tea_lemonade.price +\r\n//                             state.list.hot_tea.qty*state.list.hot_tea.price +\r\n//                             state.list.coke.qty*state.list.coke.price + \r\n//                             state.list.diet_coke.qty*state.list.diet_coke.price +\r\n//                             state.list.dr_pepper.qty*state.list.dr_pepper.price +\r\n//                             state.list.diet_dr_pepper.qty*state.list.diet_dr_pepper.price +\r\n//                             state.list.sprite.qty*state.list.sprite.price +\r\n//                             state.list.dasani.qty*state.list.dasani.price +\r\n//                             state.list.cherry_coke.qty*state.list.cherry_coke.price +\r\n//                             state.list.coke_zero.qty*state.list.coke_zero.price, \r\n//                         2);\r\n//     return total;\r\n// }","import { \r\n    UPDATE_FRESHSALADS_QTY,\r\n    OPEN_FRESHSALADS_BOX,\r\n    OPEN_EDIT_FRESHSALADS_BOX,\r\n    CLOSE_FRESHSALADS_BOX,\r\n    ADD_FRESHSALADS_BOX,\r\n    UPDATE_FRESHSALADS_BOX,\r\n    REMOVE_FRESHSALADS_BOX,\r\n    REMOVE_FRESHSALADS_CHOICE\r\n} from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    box: null,\r\n    mode: null,\r\n    id: null,\r\n    items: {\r\n        bagel: {\r\n            plain: {name: 'Plain'},\r\n            sesame: {name: 'Sesame'},\r\n            asiago: {name: 'Asiago'}\r\n        },\r\n        chips: {\r\n            bakedlays: {name: 'Baked Lays'},\r\n            kettleseasalt: {name: 'Kettle Plain Sea Salt'},\r\n            kettlebbq: {name: 'Kettle BBQ'}\r\n        }\r\n    },\r\n    chicken: {\r\n        price: 8.99,\r\n        qty: 0,\r\n        selected: {},\r\n        list: [],\r\n        total: 0\r\n    },\r\n    chicken_group: {name: '', price: 38.99, qty: 0, total: 0}, \r\n    almond: {\r\n        price: 8.99,\r\n        qty: 0,\r\n        selected: {},\r\n        list: [],\r\n        total: 0\r\n    },\r\n    almond_group: {name: '', price: 36.99, qty: 0, total: 0}, \r\n    total: 0\r\n}\r\n\r\nconst roundTo = require('roundto');\r\n\r\nexport default function(state = initialState, action) {\r\n    switch (action.type) {\r\n        case UPDATE_FRESHSALADS_QTY : {\r\n            const {name, qty} = action.payload;\r\n\r\n            // Get total\r\n            const subtotal = state[name].total;\r\n            \r\n            state[name].total = roundTo(state[name].price * qty, 2);\r\n            state[name].qty = qty;\r\n\r\n            const diff = state[name].total - subtotal;\r\n\r\n            state.total = roundTo(state.total + diff, 2);            \r\n\r\n            return {...state};\r\n        }\r\n        case OPEN_FRESHSALADS_BOX : {\r\n            const {box, mode} = action.payload;\r\n\r\n            state.box = box;\r\n            state.mode = mode;\r\n\r\n            return {...state};\r\n        }\r\n        case OPEN_EDIT_FRESHSALADS_BOX : {\r\n            const {box, id} = action.payload;\r\n\r\n            state.box = box;\r\n            state.id = id;\r\n            state.mode = 'edit';\r\n\r\n            return {...state}\r\n        }\r\n        case ADD_FRESHSALADS_BOX : {\r\n            const {item} = action.payload;\r\n\r\n            state[state.box].list.push(item);                                   \r\n            state[state.box].qty = state[state.box].qty + 1;\r\n            \r\n            // Add Choice\r\n            if (item in state[state.box].selected) {\r\n                state[state.box].selected[item] = state[state.box].selected[item] + 1;\r\n            }\r\n            else {\r\n                state[state.box].selected[item] = 1;\r\n            }\r\n\r\n            // Get Subtotal\r\n            const box_total = state[state.box].total;\r\n            state[state.box].total = roundTo(state[state.box].qty * state[state.box].price, 2);\r\n            const diff = state[state.box].total - box_total;\r\n\r\n            // Get Total\r\n            state.total = roundTo(state.total + diff, 2);\r\n\r\n            // Reset box, type, mode\r\n            state.box = null;\r\n            state.mode = null;\r\n\r\n            return {...state}\r\n        }\r\n        case UPDATE_FRESHSALADS_BOX : {\r\n            const {item} = action.payload;\r\n\r\n            // Decrement previous item\r\n\r\n\r\n            state[state.box].list[state.id] = item;\r\n\r\n            // Reset box, type, mode\r\n            state.box = null;\r\n            state.mode = null;\r\n\r\n            return {...state}\r\n        }\r\n        case REMOVE_FRESHSALADS_BOX: {\r\n            const {box, id} = action.payload;\r\n\r\n            state[box].list[id] = null;\r\n            state[box].qty = state[box].qty - 1;\r\n\r\n            // Subtotal\r\n            const box_total = state[box].total;\r\n            state[box].total = roundTo(state[box].qty * state[box].price, 2);\r\n            const diff = state[box].total - box_total;\r\n\r\n            // Get Total\r\n            state.total = roundTo(state.total + diff, 2);\r\n\r\n            return {...state}\r\n        }\r\n        case REMOVE_FRESHSALADS_CHOICE: {\r\n            const {type, key} = action.payload;\r\n\r\n            state[type].selected[key] = state[type].selected[key] - 1;\r\n            // if (state[type].selected[key] === 0) {\r\n            //     delete state[type].selected[key]\r\n            // }\r\n\r\n            // Subtotal\r\n            const box_total = state[type].total;\r\n            state[type].qty = state[type].qty - 1;\r\n            state[type].total = roundTo(state[type].qty * state[type].price, 2);\r\n            const diff = state[type].total - box_total;\r\n\r\n            // Get Total\r\n            state.total = roundTo(state.total + diff, 2);\r\n\r\n            return {...state}\r\n        }\r\n        case CLOSE_FRESHSALADS_BOX: {\r\n            state.box = null;\r\n            state.mode = null;\r\n\r\n            return {...state};\r\n        }\r\n        default :\r\n            return state;\r\n    }\r\n}","import { \r\n    UPDATE_COOKIE_QTY,\r\n    OPEN_COOKIE_BOX,\r\n    OPEN_EDIT_COOKIE_BOX,\r\n    CLOSE_COOKIE_BOX,\r\n    ADD_COOKIE_BOX,\r\n    UPDATE_COOKIE_BOX,\r\n    REMOVE_COOKIE_BOX\r\n} from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    items: {\r\n        choco: {name: \"Chocolate Chip\"},\r\n        sugar: {name: \"Sugar Cookie\"}\r\n    },\r\n    box: null,\r\n    type: null,\r\n    mode: null,\r\n    id: null,\r\n    variety: {\r\n        name: \"Cookie Variety Box\",\r\n        description: \"Assorted full-size gourmet cookies, fresh-baked daily\",\r\n        half: {\r\n            price: 9.99,\r\n            qty: 0,\r\n            total: 0,\r\n            list: []\r\n        },\r\n        dozen: {\r\n            price: 17.99,\r\n            qty: 0,\r\n            total: 0,\r\n            list: []\r\n        },\r\n        total: 0\r\n    },\r\n    sweet: {\r\n        name: \"Sweets & Coffee Break\",\r\n        description: \"\",\r\n        small: {\r\n            price: 33.99,\r\n            qty: 0,\r\n            total: 0,\r\n            list: []\r\n        },\r\n        large: {\r\n            price: 55.99,\r\n            qty: 0,\r\n            total: 0,\r\n            list: []\r\n        },\r\n        total: 0\r\n    },\r\n    kettle: {\r\n        name: \"Kettle Potato Chips\",\r\n        description: \"\",\r\n        small: {\r\n            name: '5 bags',\r\n            price: 4.99,\r\n            qty: 0,\r\n            total: 0,\r\n            list: []\r\n        },\r\n        large: {\r\n            name: '10 bags',\r\n            price: 9.99,\r\n            qty: 0,\r\n            total: 0,\r\n            list: []\r\n        },\r\n        items: {\r\n            sea: {name: 'Sea Salt'},\r\n            bbq: {name: 'BBQ'},\r\n            layBake: {name: 'Lays Baked'}\r\n        },\r\n        total: 0\r\n    },\r\n    // kettle_small: {name: \"5 bags\", price: 4.99, qty: 0, total: 0},\r\n    // kettle_large: {name: \"10 bags\", price: 9.99, qty: 0, total: 0},\r\n    total: 0\r\n}\r\n\r\nconst roundTo = require('roundto');\r\n\r\nexport default function(state = initialState, action) {\r\n    switch (action.type) {\r\n        case UPDATE_COOKIE_QTY : {\r\n            const {name, qty} = action.payload;\r\n            const ex_total = state[name].total;\r\n            state[name].total = roundTo(state[name].price * qty, 2);\r\n            state[name].qty = qty;\r\n            \r\n            const diff = roundTo(state[name].total - ex_total, 2);\r\n            state.total = roundTo(state.total + diff, 2);\r\n\r\n            return {...state};\r\n        }\r\n        case OPEN_COOKIE_BOX : {\r\n            const {name, mode} = action.payload;\r\n            const [box, type] = name.split('_');\r\n\r\n            state.box = box;\r\n            state.type = type;\r\n            state.mode = mode;\r\n\r\n            return {...state};\r\n        }\r\n        case OPEN_EDIT_COOKIE_BOX : {\r\n            const {box, type, id} = action.payload;\r\n\r\n            state.box = box;\r\n            state.type = type;\r\n            state.id = id;\r\n            state.mode = 'edit';\r\n\r\n            return {...state}\r\n        }\r\n        case ADD_COOKIE_BOX : {\r\n            const {list} = action.payload;\r\n\r\n            state[state.box][state.type].list.push(list);                                   \r\n            state[state.box][state.type].qty = state[state.box][state.type].qty + 1;\r\n\r\n            // Get Subtotal\r\n            const box_total = state[state.box][state.type].total;\r\n            state[state.box][state.type].total = roundTo(state[state.box][state.type].qty * state[state.box][state.type].price, 2);\r\n            const diff = state[state.box][state.type].total - box_total;\r\n\r\n            // Get Total\r\n            state.total = roundTo(state.total + diff, 2);\r\n\r\n            // Reset box, type, mode\r\n            state.box = null;\r\n            state.type = null;\r\n            state.mode = null;\r\n\r\n            return {...state}\r\n        }\r\n        case UPDATE_COOKIE_BOX : {\r\n            const {list} = action.payload;\r\n\r\n            state[state.box][state.type].list[state.id] = list;\r\n\r\n            // Reset box, type, mode\r\n            state.box = null;\r\n            state.type = null;\r\n            state.mode = null;\r\n\r\n            return {...state}\r\n        }\r\n        case REMOVE_COOKIE_BOX: {\r\n            const {box, type, id} = action.payload;\r\n\r\n            state[box][type].list[id] = null;\r\n            state[box][type].qty = state[box][type].qty - 1;\r\n            \r\n            let new_list = [];\r\n            for (const id in state[box][type].list){\r\n                if (state[box][type].list[id] !== null){\r\n                    new_list.push(state[box][type].list[id])\r\n                }\r\n            }\r\n\r\n            state[box][type].list = new_list;\r\n\r\n            // Subtotal\r\n            const box_total = state[box][type].total;\r\n            state[box][type].total = roundTo(state[box][type].qty * state[box][type].price, 2);\r\n            const diff = state[box][type].total - box_total;\r\n\r\n            // Get Total\r\n            state.total = state.total + diff;\r\n\r\n            return {...state}\r\n        }\r\n        case CLOSE_COOKIE_BOX: {\r\n            state.box = null;\r\n            state.type = null;\r\n            state.mode = null;\r\n\r\n            return {...state};\r\n        }\r\n        default :\r\n            return state;\r\n    }\r\n}","import { \r\n    UPDATE_LUNCHSANDWICH_QTY,\r\n    OPEN_LUNCHSANDWICH_BOX,\r\n    OPEN_EDIT_LUNCHSANDWICH_BOX,\r\n    CLOSE_LUNCHSANDWICH_BOX,\r\n    ADD_LUNCHSANDWICH_BOX,\r\n    UPDATE_LUNCHSANDWICH_BOX,\r\n    REMOVE_LUNCHSANDWICH_BOX,\r\n    REMOVE_LUNCHSANDWICH_CHOICE,\r\n    ADD_LUNCHSANDWICH_LUNCHBOX,\r\n    UPDATE_LUNCHSANDWICH_LUNCHBOX,\r\n    REMOVE_LUNCHSANDWICH_LUNCHBOX\r\n} from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n\r\n    box: null,\r\n    type: null,\r\n    mode: null,\r\n    id: null,\r\n    signature: {\r\n        name: 'Signature Lunch Nosh Box',\r\n        items: {\r\n            harvest: {name: 'Harvest Chicken Salad'},\r\n            turkey: {name: 'Tasty Turkey on Asiago Bagel'},\r\n            green_chile: {name: 'Green Chile Club on Green Chile Bagel'},\r\n            hummus: {name: 'Hummus Veg Out on Wheat'},\r\n            albacore: {name: 'Albacore Tuna Salad on Wheat'},\r\n            // thintastic: {name: 'Thintastic Chicken Pesto on Plain Thintastic Bagel'}\r\n        },\r\n        full: {\r\n            price: 70.99,\r\n            qty: 0,\r\n            total: 0,\r\n            list: []\r\n        },\r\n        half: {\r\n            price: 35.99,\r\n            qty: 0,\r\n            total: 0,\r\n            list: []\r\n        }\r\n    },\r\n    classic: {\r\n        name: 'Classic Lunch Nosh Box',\r\n        items: {\r\n            turkey_cheddar: {name: 'Turkey & Cheddar on Plain'},\r\n            ham_swiss: {name: 'Ham & Swiss on Wheat'},\r\n            albacore: {name: 'Albacore Tuna Salad on Wheat'},\r\n            hummus: {name: 'Hummus Veg Out on Wheat'}\r\n        },\r\n        full: {\r\n            price: 69.99,\r\n            qty: 0,\r\n            total: 0,\r\n            list: []\r\n        },\r\n        half: {\r\n            price: 34.99,\r\n            qty: 0,\r\n            total: 0,\r\n            list: []\r\n        }\r\n    },\r\n    forGroup: {\r\n        price: 175.99,\r\n        qty: 0,\r\n        total: 0,\r\n        list: [],\r\n        items: {\r\n            sandwich: {\r\n                turkey_cheddar: {name: 'Turkey & Cheddar on Plain Bagel'},\r\n                ham_swiss: {name: 'Ham & Swiss on Plain Bagel'},\r\n                albacore: {name: 'Albacore Tuna Salad on Wheat Bagel'},\r\n                hummus: {name: 'Hummus Veg Out on Wheat Bagel'}\r\n            },\r\n            cookie: {\r\n                choco: {name: 'Chocolate Chip'},\r\n                sugar: {name: 'Sugar Cookie'}\r\n            },\r\n            chip: {\r\n                bakedlays: {name: 'Baked Lays'},\r\n                kettleplain: {name: 'Kettle Plain Sea Salt'},\r\n                kettlebbq: {name: 'Kettle BBQ'}\r\n            },\r\n            drink: {\r\n                coke: {name: 'Coke', price: 1.99, qty: 0, total: 0,},\r\n                diet_coke: {name: 'Diet Coke', price: 1.99, qty: 0, total: 0,},\r\n                dr_pepper: {name: 'Dr.Pepper', price: 1.99, qty: 0, total: 0,},\r\n                diet_dr_pepper: {name: 'Diet Dr.Pepper', price: 1.99, qty: 0, total: 0,},\r\n                sprite: {name: 'Sprite', price: 1.99, qty:0, total: 0,},\r\n                dasani: {name: 'Dasani Water', price: 1.69, qty: 0, total: 0,},\r\n                cherry_coke: {name: 'Cherry Coke', price: 1.99, qty: 0, total: 0,},\r\n                coke_zero: {name: 'Coke Zero', price: 1.99, qty: 0, total: 0,},\r\n            }\r\n        }\r\n    },\r\n    lunchBox: {\r\n        price: 8.99,\r\n        qty: 0,\r\n        total: 0,\r\n        turkey: {name: 'Turkey & Cheddar', description: 'Roasted Turkey, Lettuce, Tomato, Red Onion, Cheddar Cheese with Mayo & Deli Mustard on a Fresh-Baked Plain Bagel', qty: 0, total: 0, list: []},\r\n        harvest: {name: 'Harvest Chicken Salad', description: 'Grilled Chicken Breast, Celery, Lettuce, Tomato, Red Onion, Craisins Dried Cranberries, Toasted Almonds with Mayo on a Fresh-Baked Wheat Bagel', qty: 0, total: 0, list: []},\r\n        ham: {name: 'Ham & Swiss', description: 'Smoked Ham, Lettuce, Tomato, Red Onion, Swiss Cheese with Mayo & Deli Mustard on a Fresh-Baked Plain Bagel', qty: 0, total: 0, list: []},\r\n        albacore: {name: 'Albacore Tuna Salad', description: 'Albacore Tuna, Celery, Lettuce, Tomato, Red Onion, with Mayo on a Fresh-Baked Wheat Bagel', qty: 0, total: 0, list: []},\r\n        tasty: {name: 'Tasty Turkey', description: 'Roasted Turkey, Spinach, Cucumber, Lettuce, Tomato with Onion & Chive Shmear on an Asiago Bagel', qty: 0, total: 0, list: []},\r\n        hummus: {name: 'Hummus Veg Out', description: 'Hummus, Tomato, Red Onion, Spinach, Arugula, Roasted Red Peppers, Cucumber with Garden Veggie Shmear on a Fresh-Baked Wheat Bagel', qty: 0, total: 0, list: []},\r\n        green: {name: 'Green Chile Club', description: 'Roasted Turkey, Applewood Bacon, Lettuce, Tomato, Red Onion, Pepper Jack Cheese with Mayo, on Green Chile Gourmet Bagel', qty: 0, total: 0, list: []},\r\n        chips: {\r\n            sea: {name: 'Sea Salt'},\r\n            bbq: {name: 'BBQ'},\r\n            layBake: {name: 'Lays Baked'}\r\n        },\r\n        cookie: {\r\n            choco: {name: 'Chocolate Chip'},\r\n            sugar: {name: 'Sugar Cookie'}\r\n        }\r\n    },\r\n    nova_lox: {name: 'Nova Lox', description: 'Nova Lox, Red Onion, Capers, Tomato with Plain Shmear on a Plain Bagel', price: 9.49, total: 0, qty: 0},\r\n    total: 0\r\n}\r\n\r\nconst roundTo = require('roundto');\r\n\r\nexport default function(state = initialState, action) {\r\n    switch (action.type) {\r\n        case UPDATE_LUNCHSANDWICH_QTY : {\r\n            const {name, qty} = action.payload;\r\n\r\n            // Get total\r\n            const subtotal = state[name].total;\r\n            \r\n            state[name].total = roundTo(state[name].price * qty, 2);\r\n            state[name].qty = qty;\r\n\r\n            const diff = state[name].total - subtotal;\r\n\r\n            state.total = roundTo(state.total + diff, 2);            \r\n\r\n            return {...state};\r\n        }\r\n        case OPEN_LUNCHSANDWICH_BOX : {\r\n            const {name, mode} = action.payload;\r\n            const [box, type] = name.split('_');\r\n\r\n            state.box = box;\r\n            state.type = (type === 'null' ? null : type);\r\n            state.mode = mode;\r\n\r\n            return {...state};\r\n        }\r\n        case OPEN_EDIT_LUNCHSANDWICH_BOX : {\r\n            const {box, type, id} = action.payload;\r\n\r\n            state.box = box;\r\n            state.type = type;\r\n            state.id = id;\r\n            state.mode = 'edit';\r\n\r\n            return {...state}\r\n        }\r\n        case ADD_LUNCHSANDWICH_BOX : {\r\n            const {item} = action.payload;\r\n            let box_total = 0;\r\n            let diff = 0;\r\n\r\n            if (state.box === 'forGroup'){\r\n                state.forGroup.list.push(item);\r\n                state.forGroup.qty = state.forGroup.qty + 1;\r\n\r\n                // Get Subtotal\r\n                box_total = state.forGroup.total;\r\n                state.forGroup.total = roundTo(state.forGroup.qty * state.forGroup.price, 2);\r\n                diff = state.forGroup.total - box_total;\r\n            }\r\n            else if (state.box === 'lunchBox'){\r\n                if (item in state.lunchBox[state.type].list) {\r\n                    state.lunchBox[state.type].list[item] = state.lunchBox[state.type].list[item] + 1;\r\n                }\r\n                else {\r\n                    state.lunchBox[state.type].list[item] = 1;\r\n                }\r\n                state.lunchBox[state.type].qty = state.lunchBox[state.type].qty + 1;\r\n                state.lunchBox[state.type].total = roundTo(state.lunchBox.price*state.lunchBox[state.type].qty, 2);\r\n                state.lunchBox.qty = state.lunchBox.qty + 1;\r\n                \r\n                state.lunchBox.total = roundTo(state.lunchBox.total + state.lunchBox.price, 2);\r\n                diff = state.lunchBox.price;\r\n            }\r\n            else {\r\n                state[state.box][state.type].list.push(item);                                   \r\n                state[state.box][state.type].qty = state[state.box][state.type].qty + 1;\r\n\r\n                // Get Subtotal\r\n                box_total = state[state.box][state.type].total;\r\n                state[state.box][state.type].total = roundTo(state[state.box][state.type].qty * state[state.box][state.type].price, 2);\r\n                diff = state[state.box][state.type].total - box_total;\r\n            }\r\n\r\n            // Get Total\r\n            state.total = roundTo(state.total + diff, 2);\r\n\r\n            // Reset box, type, mode\r\n            state.box = null;\r\n            state.type = null;\r\n            state.mode = null;\r\n\r\n            return {...state}\r\n        }\r\n        case UPDATE_LUNCHSANDWICH_BOX : {\r\n            const {item} = action.payload;\r\n\r\n            // Decrement previous item\r\n\r\n\r\n            state[state.box].list[state.id] = item;\r\n\r\n            // Reset box, type, mode\r\n            state.box = null;\r\n            state.type = null;\r\n            state.mode = null;\r\n\r\n            return {...state}\r\n        }\r\n        case REMOVE_LUNCHSANDWICH_BOX: {\r\n            const {box, type, id} = action.payload;\r\n\r\n            let box_total = 0;\r\n            let diff = 0;\r\n\r\n            if (box === 'forGroup'){\r\n\r\n                state.forGroup.list[id] = null;\r\n                state.forGroup.list = state.forGroup.list.filter(function (box) {\r\n                    return box != null\r\n                })\r\n                state.forGroup.qty = state.forGroup.qty - 1;\r\n\r\n                // Subtotal\r\n                box_total = state.forGroup.total;\r\n                state.forGroup.total = roundTo(state.forGroup.qty * state.forGroup.price, 2);\r\n                diff = state.forGroup.total - box_total;\r\n\r\n            }\r\n            else {\r\n\r\n                state[box][type].list[id] = null;\r\n                state[box][type].list = state[box][type].list.filter(function (box) {\r\n                    return box != null\r\n                })\r\n                state[box][type].qty = state[box][type].qty - 1;\r\n\r\n                // Subtotal\r\n                box_total = state[box][type].total;\r\n                state[box][type].total = roundTo(state[box][type].qty * state[box][type].price, 2);\r\n                diff = state[box][type].total - box_total;\r\n\r\n            }\r\n\r\n            // Get Total\r\n            state.total = roundTo(state.total + diff, 2);\r\n\r\n            return {...state}\r\n        }\r\n        case REMOVE_LUNCHSANDWICH_CHOICE: {\r\n            const {sandwich, cookie} = action.payload;\r\n\r\n            state.lunchBox[sandwich].list[cookie] = state.lunchBox[sandwich].list[cookie] - 1;\r\n            if (state.lunchBox[sandwich].list[cookie] === 0) {\r\n                // delete state.lunchBox[sandwich].list[cookie]\r\n                let new_list = {}\r\n                for (let key in state.lunchBox[sandwich].list){\r\n                    if (state.lunchBox[sandwich].list[key] !== 0){\r\n                        new_list[key] = state.lunchBox[sandwich].list[key]\r\n                    }\r\n                }\r\n                state.lunchBox[sandwich].list = new_list;\r\n            }\r\n\r\n            // Subtotal\r\n            state.lunchBox[sandwich].qty = state.lunchBox[sandwich].qty - 1;\r\n            state.lunchBox.qty = state.lunchBox.qty - 1;\r\n            state.lunchBox.total = roundTo(state.lunchBox.total - state.lunchBox.price, 2)\r\n            state.total = roundTo(state.total - state.lunchBox.price, 2)\r\n\r\n            return {...state}\r\n        }\r\n        case CLOSE_LUNCHSANDWICH_BOX: {\r\n            state.box = null;\r\n            state.type = null;\r\n            state.mode = null;\r\n\r\n            return {...state};\r\n        }\r\n        case ADD_LUNCHSANDWICH_LUNCHBOX: {\r\n            const {item} = action.payload;\r\n            let box_total = 0;\r\n            let diff = 0;\r\n\r\n            state.lunchBox[state.type].list.push(item);\r\n            state.lunchBox[state.type].qty = state.lunchBox[state.type].qty + 1;\r\n            state.lunchBox[state.type].total = state.lunchBox[state.type].qty * state.lunchBox.price;\r\n\r\n            // Get Subtotal\r\n            box_total = state.lunchBox.total;\r\n            state.lunchBox.qty = state.lunchBox.qty + 1;\r\n            state.lunchBox.total = roundTo(state.lunchBox.qty * state.lunchBox.price, 2);\r\n            diff = state.lunchBox.total - box_total;\r\n            \r\n            // Get Total\r\n            state.total = roundTo(state.total + diff, 2);\r\n\r\n            // Reset box, type, mode\r\n            state.box = null;\r\n            state.type = null;\r\n            state.mode = null;\r\n\r\n            return {...state}\r\n        }\r\n        case UPDATE_LUNCHSANDWICH_LUNCHBOX: {\r\n            const {item} = action.payload;\r\n\r\n            state.lunchBox[state.type].list[state.id] = item;\r\n\r\n            // Reset box, type, mode\r\n            state.box = null;\r\n            state.type = null;\r\n            state.mode = null;\r\n\r\n            return {...state}\r\n        }\r\n        case REMOVE_LUNCHSANDWICH_LUNCHBOX: {\r\n            const {sandwich, id} = action.payload;\r\n\r\n            let new_list = [];\r\n            state.lunchBox[sandwich].list[id] = null;\r\n            for (const list_id in state.lunchBox[sandwich].list){\r\n                if (state.lunchBox[sandwich].list[list_id] !== null){\r\n                    new_list.push(state.lunchBox[sandwich].list[list_id])\r\n                }\r\n            }\r\n            state.lunchBox[sandwich].list = new_list;\r\n\r\n            state.lunchBox[sandwich].qty = state.lunchBox[sandwich].qty - 1;\r\n            state.lunchBox[sandwich].total = state.lunchBox[sandwich].qty * state.lunchBox.price;\r\n\r\n            let box_total = 0;\r\n            let diff = 0;\r\n            // Get Subtotal\r\n            box_total = state.lunchBox.total;\r\n            state.lunchBox.qty = state.lunchBox.qty - 1;\r\n            state.lunchBox.total = roundTo(state.lunchBox.qty * state.lunchBox.price, 2);\r\n            diff = state.lunchBox.total - box_total;\r\n\r\n            // Get Total\r\n            state.total = roundTo(state.total + diff, 2);\r\n\r\n            return {...state}\r\n        }\r\n        default :\r\n            return state;\r\n    }\r\n}","import { \r\n    CUSTOMER_INFO_UPDATE\r\n} from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n    firstname: '',\r\n    lastname: '',\r\n    phone: '',\r\n    email: '',\r\n    location: '',\r\n    payment: {\r\n        type: '',\r\n        detail: ''\r\n    },\r\n    validation_check: false\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n    switch (action.type) {\r\n        case CUSTOMER_INFO_UPDATE: {\r\n            const {name, value} = action.payload;\r\n\r\n            state[name] = value;\r\n\r\n            // Validate\r\n            if (state.firstname !== '' && state.lastname !== '' && state.email !== '' && state.location !== ''){\r\n                state.validation_check = true;\r\n            }\r\n\r\n            return {...state};\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};","import { combineReducers } from \"redux\";\r\nimport main from \"./main\";\r\nimport menu from \"./menu_reducer\";\r\n\r\n\r\n\r\n\r\n\r\nimport bagelandsheamr from \"./bagelandsheamr_reducer\";\r\nimport egg_sandwich from \"./egg_sandwiches_reducer\";\r\nimport bk_fav_reducer from \"./bk_fav_reducer\";\r\nimport sweet_snack from \"./sweet_snack_reducer\";\r\nimport beverage from \"./beverage\";\r\nimport fresh_salads from \"./fresh_salads_reducer\";\r\nimport cookie from \"./cookie_reducer\";\r\nimport lunchsandwich from \"./lunchsandwich_reducer\";\r\n\r\n\r\nimport customer from \"./customer_reducer\";\r\n\r\nexport default combineReducers({ main, menu, bagelandsheamr, egg_sandwich, bk_fav_reducer, sweet_snack, beverage, fresh_salads, cookie, lunchsandwich, customer });","export const UPDATE_CURRENT_NAV = \"UPDATE_CURRENT_NAV\";\r\nexport const CALCULATE_SUBTOTAL = \"CALCULATE_SUBTOTAL\";\r\nexport const SUBMIT_ORDER = \"SUBMIT_ORDER\";\r\nexport const SUBMIT_SUCCESS = \"SUBMIT_SUCCESS\";\r\nexport const SUBMIT_FAILURE = \"SUBMIT_FAILURE\";\r\nexport const GET_DELIVERY_METHOD = \"GET_DELIVERY_METHOD\";\r\nexport const GET_DELIVERY_METHOD_FAILURE = \"GET_DELIVERY_METHOD_FAILURE\";\r\nexport const ADDITIONAL_NOTE = \"ADDITIONAL_NOTE\";\r\n\r\n// Box\r\nexport const ADD_BOX = \"ADD_BOX\";\r\nexport const REMOVE_BOX = \"REMOVE_BOX\";\r\n\r\n// Customer Info\r\nexport const CUSTOMER_INFO_UPDATE = \"CUSTOMER_INFO_UPDATE\";\r\n\r\n// Bagel & Sheamr\r\nexport const UPDATE_BAGEL_SHEAMR_QTY = \"UPDATE_BAGEL_SHEAMR_QTY\";\r\nexport const OPEN_BAGEL_SHEAMR_CHOICE = \"OPEN_BAGEL_SHEAMR_CHOICE\";\r\nexport const OPEN_EDIT_BAGEL_SHEAMR_CHOICE = \"OPEN_EDIT_BAGEL_SHEAMR_CHOICE\";\r\nexport const CLOSE_BAGEL_SHEAMR_CHOICE = \"CLOSE_BAGEL_SHEAMR_CHOICE\";\r\nexport const ADD_BAGEL_SHEAMR_CHOICE = \"ADD_BAGEL_SHEAMR_CHOICE\";\r\nexport const UPDATE_BAGEL_SHEAMR_CHOICE = \"UPDATE_BAGEL_SHEAMR_CHOICE\";\r\nexport const REMOVE_BAGEL_SHEAMR_CHOICE = \"REMOVE_BAGEL_SHEAMR_CHOICE\";\r\n\r\n// Egg Sandwiches\r\nexport const OPEN_EGG_SANDWICH_BOX = \"OPEN_EGG_SANDWICH_BOX\";\r\nexport const OPEN_EDIT_EGG_SANDWICH_BOX = \"OPEN_EDIT_EGG_SANDWICH_BOX\";\r\nexport const CLOSE_EGG_SANDWICH_BOX = \"CLOSE_EGG_SANDWICH_BOX\";\r\nexport const ADD_EGG_SANDWICH_BOX = \"ADD_EGG_SANDWICH_BOX\";\r\nexport const UPDATE_EGG_SANDWICH_BOX = \"UPDATE_EGG_SANDWICH_BOX\";\r\nexport const REMOVE_EGG_SANDWICH_BOX = \"REMOVE_EGG_SANDWICH_BOX\";\r\n\r\n// Breakfast Favorites\r\nexport const UPDATE_BK_QTY = \"UPDATE_BK_QTY\";\r\nexport const OPEN_BK_BOX = \"OPEN_BK_BOX\";\r\nexport const OPEN_EDIT_BK_BOX = \"OPEN_EDIT_BK_BOX\";\r\nexport const CLOSE_BK_BOX = \"CLOSE_BK_BOX\";\r\nexport const ADD_BK_BOX = \"ADD_BK_BOX\";\r\nexport const UPDATE_BK_BOX = \"UPDATE_BK_BOX\";\r\nexport const REMOVE_BK_BOX = \"REMOVE_BK_BOX\";\r\nexport const ADD_BK_PASTRY = \"ADD_LUNCHSANDWICH_PASTRY\";\r\nexport const UPDATE_BK_PASTRY = \"UPDATE_BK_PASTRY\";\r\nexport const CLOSE_BK_PASTRY = \"CLOSE_BK_PASTRY\";\r\nexport const REMOVE_BK_PASTRY = \"REMOVE_BK_PASTRY\";\r\n\r\n\r\n// Sweets & Snacks\r\nexport const UPDATE_SWEETSNACK_QTY = \"UPDATE_SWEETSNACK_QTY\";\r\nexport const OPEN_SWEETSNACK_BOX = \"OPEN_SWEETSNACK_BOX\";\r\nexport const OPEN_EDIT_SWEETSNACK_BOX = \"OPEN_EDIT_SWEETSNACK_BOX\";\r\nexport const CLOSE_SWEETSNACK_BOX = \"CLOSE_SWEETSNACK_BOX\";\r\nexport const ADD_SWEETSNACK_BOX = \"ADD_SWEETSNACK_BOX\";\r\nexport const UPDATE_SWEETSNACK_BOX = \"UPDATE_SWEETSNACK_BOX\";\r\nexport const REMOVE_SWEETSNACK_BOX = \"REMOVE_SWEETSNACK_BOX\";\r\n\r\n// Beverage\r\nexport const UPDATE_BEVERAGE_QTY = \"UPDATE_BEVERAGE_QTY\";\r\n\r\n// Fresh Salads\r\nexport const UPDATE_FRESHSALADS_QTY = \"UPDATE_FRESHSALADS_QTY\";\r\nexport const OPEN_FRESHSALADS_BOX = \"OPEN_FRESHSALADS_BOX\";\r\nexport const OPEN_EDIT_FRESHSALADS_BOX = \"OPEN_EDIT_FRESHSALADS_BOX\";\r\nexport const CLOSE_FRESHSALADS_BOX = \"CLOSE_FRESHSALADS_BOX\";\r\nexport const ADD_FRESHSALADS_BOX = \"ADD_FRESHSALADS_BOX\";\r\nexport const UPDATE_FRESHSALADS_BOX = \"UPDATE_FRESHSALADS_BOX\";\r\nexport const REMOVE_FRESHSALADS_BOX = \"REMOVE_FRESHSALADS_BOX\";\r\nexport const REMOVE_FRESHSALADS_CHOICE = \"REMOVE_FRESHSALADS_CHOICE\";\r\n\r\n// Cookies\r\nexport const UPDATE_COOKIE_QTY = \"UPDATE_COOKIE_QTY\";\r\nexport const OPEN_COOKIE_BOX = \"OPEN_COOKIE_BOX\";\r\nexport const OPEN_EDIT_COOKIE_BOX = \"OPEN_EDIT_COOKIE_BOX\";\r\nexport const CLOSE_COOKIE_BOX = \"CLOSE_COOKIE_BOX\";\r\nexport const ADD_COOKIE_BOX = \"ADD_COOKIE_BOX\";\r\nexport const UPDATE_COOKIE_BOX = \"UPDATE_COOKIE_BOX\";\r\nexport const REMOVE_COOKIE_BOX = \"REMOVE_COOKIE_BOX\";\r\nexport const REMOVE_COOKIE_CHOICE = \"REMOVE_COOKIE_CHOICE\";\r\nexport const ADD_KETTLE_CHIP = \"ADD_KETTLE_CHIP\";\r\nexport const UPDATE_KETTLE_CHIP = \"UPDATE_KETTLE_CHIP\";\r\nexport const CLOSE_KETTLE_CHIP = \"CLOSE_KETTLE_CHIP\";\r\nexport const REMOVE_KETTLE_CHIP = \"REMOVE_KETTLE_CHIP\";\r\n\r\n// Lunch Sandwich\r\nexport const UPDATE_LUNCHSANDWICH_QTY = \"UPDATE_LUNCHSANDWICH_QTY\";\r\nexport const OPEN_LUNCHSANDWICH_BOX = \"OPEN_LUNCHSANDWICH_BOX\";\r\nexport const OPEN_EDIT_LUNCHSANDWICH_BOX = \"OPEN_EDIT_LUNCHSANDWICH_BOX\";\r\nexport const CLOSE_LUNCHSANDWICH_BOX = \"CLOSE_LUNCHSANDWICH_BOX\";\r\nexport const ADD_LUNCHSANDWICH_BOX = \"ADD_LUNCHSANDWICH_BOX\";\r\nexport const UPDATE_LUNCHSANDWICH_BOX = \"UPDATE_LUNCHSANDWICH_BOX\";\r\nexport const REMOVE_LUNCHSANDWICH_BOX = \"REMOVE_LUNCHSANDWICH_BOX\";\r\nexport const REMOVE_LUNCHSANDWICH_CHOICE = \"REMOVE_LUNCHSANDWICH_CHOICE\";\r\nexport const ADD_LUNCHSANDWICH_LUNCHBOX = \"ADD_LUNCHSANDWICH_LUNCHBOX\";\r\nexport const UPDATE_LUNCHSANDWICH_LUNCHBOX = \"UPDATE_LUNCHSANDWICH_LUNCHBOX\";\r\nexport const REMOVE_LUNCHSANDWICH_LUNCHBOX = \"REMOVE_LUNCHSANDWICH_LUNCHBOX\";\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport thunkMiddleware  from 'redux-thunk';\r\nimport rootReducer from \"./reducers\";\r\n\r\nexport default createStore( rootReducer, applyMiddleware( thunkMiddleware ));","import React from 'react';\r\n\r\nimport {\r\n    Link\r\n} from 'react-router-dom';\r\nimport { Card, ListGroup } from 'react-bootstrap';\r\n\r\nclass Nav extends React.Component {\r\n    render() {\r\n        return (\r\n            <Card className=\"col-md-12 p-0 wrap-menu\">\r\n\r\n                <Card.Header>\r\n                    Catalyst Cafe \r\n                </Card.Header>\r\n\r\n                <ListGroup variant=\"flush\">\r\n\r\n                    <ListGroup.Item className=\"menu-list\">\r\n                        <Link\r\n                        to=\"/breakfast\"\r\n                        >\r\n                            Bagels & <br />\r\n                            Shmear\r\n                        </Link>\r\n                    </ListGroup.Item>\r\n\r\n                    <ListGroup.Item className=\"menu-list\">\r\n                        <Link\r\n                        to=\"/eggsandwich\"\r\n                        >\r\n                            Build Your Own Breakfast\r\n                        </Link>\r\n                    </ListGroup.Item>\r\n\r\n                    <ListGroup.Item className=\"menu-list\">\r\n                        <Link\r\n                        to=\"/lunch\"\r\n                        >\r\n                            Lunch\r\n                        </Link>\r\n                    </ListGroup.Item>\r\n\r\n                    <ListGroup.Item className=\"menu-list\">\r\n                        <Link\r\n                        to=\"/beverage\"\r\n                        >\r\n                            Beverage\r\n                        </Link>\r\n                    </ListGroup.Item>\r\n\r\n                    <ListGroup.Item className=\"menu-list\">\r\n                        <Link\r\n                        to=\"/officeparty\"\r\n                        >\r\n                            Office Party\r\n                        </Link>\r\n                    </ListGroup.Item>\r\n\r\n                </ListGroup>\r\n\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Nav;","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n    Link\r\n} from 'react-router-dom';\r\n\r\nimport { Row } from 'react-bootstrap';\r\n\r\nimport { AiOutlineShoppingCart } from \"react-icons/ai\";\r\n\r\n// import ArrowLeft from '../../img/arrow_left.png';\r\n\r\nclass TopNav extends React.Component {\r\n\r\n    render() {\r\n        return(\r\n            <React.Fragment>\r\n                <Row className=\"m-0\">\r\n                    <Link\r\n                    to=\"/bagelandshmear\"\r\n                    className={'topnav col ' + (this.props.global.main.nav === 0 ? 'active' : '')}\r\n                    >\r\n                        <p><u>Bagels &<br /> Shmear</u></p>\r\n                    </Link>\r\n                    <Link\r\n                    to=\"/eggsandwich\"\r\n                    className={'topnav col ' + (this.props.global.main.nav === 1 ? 'active' : '')}\r\n                    >\r\n                        <p><u>Egg<br />Sandwiches</u></p>\r\n                    </Link>\r\n                    <Link\r\n                    to=\"/breakfastfavorites\"\r\n                    className={'topnav col ' + (this.props.global.main.nav === 2 ? 'active' : '')}\r\n                    >\r\n                        <p><u>Breakfast<br />Favorites</u></p>\r\n                    </Link>\r\n                    <Link\r\n                    to=\"/sweetsnack\"\r\n                    className={'topnav col ' + (this.props.global.main.nav === 3 ? 'active' : '')}\r\n                    >\r\n                        <p><u>Sweets &<br />Snacks</u></p>\r\n                    </Link>\r\n                    <Link\r\n                    to=\"/beverage\"\r\n                    className={'topnav col ' + (this.props.global.main.nav === 4 ? 'active' : '')}\r\n                    >\r\n                        <p><u>Beverages</u></p>\r\n                    </Link>\r\n                    <Link\r\n                    to=\"/freshsalads\"\r\n                    className={'topnav col ' + (this.props.global.main.nav === 5 ? 'active' : '')}\r\n                    >\r\n                        <p><u>Fresh<br />Salads</u></p>\r\n                    </Link>\r\n                    <Link\r\n                    to=\"/cookies\"\r\n                    className={'topnav col ' + (this.props.global.main.nav === 6 ? 'active' : '')}\r\n                    >\r\n                        <p><u>Cookies</u></p>\r\n                    </Link>\r\n                    <Link\r\n                    to=\"/lunchsandwich\"\r\n                    className={'topnav col ' + (this.props.global.main.nav === 7 ? 'active' : '')}\r\n                    >\r\n                        <p><u>Lunch<br />Sandwiches</u></p>\r\n                    </Link>\r\n                    <Link\r\n                    to=\"/summary\"\r\n                    className={'topnav col ' + (this.props.global.main.nav === 8 ? 'active' : '')}\r\n                    >\r\n                        <p><u><AiOutlineShoppingCart style={{fontSize: '25px', marginTop: '13px'}} /></u></p>\r\n                    </Link>\r\n                </Row>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    global: state\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps\r\n)(TopNav)","import { \r\n    UPDATE_CURRENT_NAV, \r\n    SUBMIT_ORDER, \r\n    CALCULATE_SUBTOTAL,\r\n    SUBMIT_SUCCESS,\r\n    SUBMIT_FAILURE,\r\n    GET_DELIVERY_METHOD,\r\n    GET_DELIVERY_METHOD_FAILURE,\r\n    ADDITIONAL_NOTE\r\n} from './actionTypes.js'\r\n\r\nexport const updateCurrentNav = (index) => ({\r\n    type: UPDATE_CURRENT_NAV,\r\n    payload: {\r\n        index\r\n    }\r\n})\r\n\r\nexport const calculateSubtotal = (subtotal, tax, total) => ({\r\n    type: CALCULATE_SUBTOTAL,\r\n    payload: {\r\n        subtotal, tax, total\r\n    }\r\n})\r\n\r\nexport const initSubmitOrder = () => ({\r\n    type: SUBMIT_ORDER\r\n})\r\n\r\nexport const formValidationFailure = () => ({\r\n\r\n})\r\n\r\nexport const formSubmitSuccess = (id, email) => ({\r\n    type: SUBMIT_SUCCESS,\r\n    payload: {\r\n        id, email\r\n    }\r\n})\r\n\r\nexport const formSubmitFailure = (code) => ({\r\n    type: SUBMIT_FAILURE,\r\n    payload: {\r\n        code\r\n    }\r\n})\r\n\r\nexport function submitOrder(data) {\r\n    return (dispatch) => {\r\n        dispatch(initSubmitOrder());\r\n\r\n        // Validate Form\r\n\r\n        let error = false;\r\n\r\n        if (error){\r\n            dispatch(formValidationFailure());\r\n        }\r\n        else {\r\n            // console.log(data);\r\n            const fetch_option = {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(data)\r\n            }\r\n\r\n            // const url = 'http://192.168.99.100/api/catering/retail/catalyst/submit';\r\n            const url = '/api/catering/retail/box/submit';\r\n\r\n            fetch(url, fetch_option)\r\n            .then((res) => {\r\n                // console.log(res);\r\n                if(res.ok) {\r\n                    return res.json();\r\n                } else {\r\n                    // console.log(res);\r\n                    throw new Error('An error occurred.');\r\n                }\r\n            })\r\n            .then(res => {\r\n                // console.log('return', res.return);\r\n                if (res.success){\r\n                    dispatch(formSubmitSuccess(res.return.order_id, res.return.email));\r\n                }\r\n                else {\r\n                    dispatch(formSubmitFailure(res.return.code));\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n                // dispatch(formSubmitFailure(err));\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport function getDeliveryMethod() {\r\n    return (dispatch) => {\r\n        const fetch_option = {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json'\r\n            }\r\n        }\r\n\r\n        // const url = 'http://192.168.99.100/catering/retail/customer_info/getDeliveryMethod';\r\n        const url = '/api/catering/retail/customer_info/getDeliveryMethod';\r\n\r\n        fetch(url, fetch_option)\r\n        .then((res) => {\r\n            if(res.ok) {\r\n                return res.json();\r\n            } else {\r\n                // console.log(res);\r\n                throw new Error('An error occurred.');\r\n            }\r\n        })\r\n        .then(res => {\r\n            // console.log('return', res.return);\r\n            dispatch(getDeliveryMethodSuccess(res.return.delivery_method));\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n            dispatch(getDeliveryMethodFailure(err));\r\n        })\r\n    }\r\n}\r\n\r\nexport const getDeliveryMethodSuccess = (delivery_method) => ({\r\n    type: GET_DELIVERY_METHOD,\r\n    payload: {\r\n        delivery_method\r\n    }\r\n})\r\n\r\nexport const getDeliveryMethodFailure = (err) => ({\r\n    type: GET_DELIVERY_METHOD_FAILURE,\r\n    payload: {\r\n        err\r\n    }\r\n})\r\n\r\nexport const handleTextarea = (text) => ({\r\n    type: ADDITIONAL_NOTE,\r\n    payload: text\r\n})","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from 'react-router-dom';\r\nimport { Row, Col, ButtonToolbar } from 'react-bootstrap';\r\n\r\nimport { updateCurrentNav } from '../redux/actions/main';\r\n\r\nconst roundTo = require('roundto');\r\n\r\nclass Bottom extends React.Component {\r\n\r\n    getTotal = () => {\r\n        return roundTo(\r\n                this.props.global.bagelandsheamr.total +\r\n                this.props.global.egg_sandwich.total +\r\n                this.props.global.bk_fav_reducer.total +\r\n                this.props.global.sweet_snack.total + \r\n                this.props.global.beverage.total + \r\n                this.props.global.fresh_salads.total + \r\n                this.props.global.cookie.total +\r\n                this.props.global.lunchsandwich.total\r\n                , 2\r\n            );\r\n    }\r\n\r\n    render() {\r\n\r\n        const navIndex = this.props.global.main.nav;\r\n        const routes = this.props.global.main.routes;\r\n\r\n        return(\r\n            <React.Fragment>\r\n                <Row>\r\n                    <Col>\r\n                        <p style={{fontSize: '22px', fontWeight: '600', textAlign: 'right', padding: '20px 15px'}}>Subtotal ${this.getTotal()}</p>\r\n                    </Col>\r\n                </Row>\r\n                <ButtonToolbar>\r\n\r\n                    {\r\n                        (navIndex !== 0 && navIndex !== 8) ?\r\n                        <Link\r\n                        className={\"btn add-btn\"}\r\n                        style={{marginRight: '10px', width: '200px'}}\r\n                        to={routes[navIndex-1]}\r\n                        >Prev</Link>\r\n                        :\r\n                        null\r\n                    }\r\n\r\n                    {\r\n                        navIndex !== 8 ? \r\n                        <Link\r\n                        className={\"btn add-btn\"}\r\n                        style={{marginLeft: 'auto', width:'200px'}}\r\n                        to={routes[navIndex+1]}\r\n                        >Next</Link>\r\n                        :\r\n                        <Link\r\n                        className={\"btn add-btn\"}\r\n                        style={{marginLeft: 'auto', width:'150px'}}\r\n                        to={routes[0]}\r\n                        >Add More Food</Link>\r\n                    }\r\n\r\n                </ButtonToolbar>\r\n\r\n                {/* <ButtonToolbar style={{marginTop: '15px'}}>\r\n                    {\r\n                        navIndex !== 5 ?\r\n                        <Link\r\n                        className={\"btn add-btn\"}\r\n                        style={{width:'100%'}}\r\n                        to={routes[5]}\r\n                        >Review Order</Link>\r\n                        :\r\n                        null\r\n                    }\r\n                </ButtonToolbar> */}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    global: state\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => (\r\n    {\r\n        updateCurrentNav: (index) => dispatch(updateCurrentNav(index))\r\n    }\r\n)\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Bottom)","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { Row, Col, Card, ListGroup, ButtonToolbar, Button, Form } from 'react-bootstrap';\r\nimport TopNav from '../common/TopNav.js';\r\n\r\nimport { updateCurrentNav } from '../../redux/actions/main';\r\nimport { addBox } from '../../redux/actions/menu_action';\r\n\r\nimport Bottom from '../bottom';\r\n\r\nimport { AiOutlineShoppingCart } from \"react-icons/ai\";\r\n\r\n// import styles from '../common/style.js';\r\n\r\nclass Menu extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n        const dayNames = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\r\n        let pickup_date = [];\r\n        for (let i = 0; i < 4; i++){\r\n            const date = new Date(new Date().getTime() + i * 24 * 60 * 60 * 1000)\r\n            pickup_date.push({\r\n                year: date.getFullYear(),\r\n                month: date.getMonth() + 1,\r\n                month_name: monthNames[date.getMonth()],\r\n                date: date.getDate(),\r\n                day: dayNames[date.getDay()],\r\n                daynumber: date.getDay(),\r\n                date_id: i\r\n            });\r\n        }\r\n        \r\n        \r\n        this.state = {\r\n            date: null,\r\n            meal: null,\r\n            // menu: null,\r\n            item: null,\r\n            name: '',\r\n            pickup_date: pickup_date,\r\n            available_meal: {\r\n                breakfast: false,\r\n                lunch: false,\r\n                dinner: false\r\n            },\r\n            display_menu: null,\r\n            menus: null\r\n        };\r\n\r\n        this.props.updateCurrentNav(0);\r\n    }\r\n\r\n    pickupDateHandler = (event) => {\r\n        const value = parseInt(event.target.value);\r\n        if (value === -1){\r\n            this.setState({\r\n                date: null,\r\n                meal: null,\r\n                item: null,\r\n                name: ''\r\n            })\r\n            return null;\r\n        }\r\n\r\n        this.setState({\r\n            // date: this.state.pickup_date[value].year + ' ' + this.state.pickup_date[value].month + ' ' + this.state.pickup_date[value].date,\r\n            date: value,\r\n            meal: null,\r\n            item: null,\r\n            name: ''\r\n        })\r\n\r\n        // Get Menu from DB\r\n        const url = '/api/dining/box/menu?day='+value;\r\n\r\n        const fetch_option = {\r\n            method: 'GET',\r\n            headers: {\r\n                'Accept': 'application/json'\r\n            }\r\n        }\r\n\r\n        fetch(url, fetch_option)\r\n        .then((res) => {\r\n            // console.log(res);\r\n            if(res.ok) {\r\n                return res.json();\r\n            } else {\r\n                // console.log(res);\r\n                throw new Error('An error occurred.');\r\n            }\r\n        })\r\n        .then(res => {\r\n            // console.log('return', res.return);\r\n            // console.log(res.return);\r\n            if (res.success){\r\n            \r\n                if (res.return.menu === null){\r\n                    this.setState({\r\n                        menus: null,\r\n                        available_meal: {\r\n                            breakfast: false,\r\n                            lunch: false,\r\n                            dinner: false\r\n                        }\r\n                    });\r\n                }\r\n                else {\r\n                    let breakfast, lunch, dinner;\r\n                    breakfast = lunch = dinner = false;\r\n\r\n                    // Display available meals\r\n                    const current_time = new Date();\r\n                    if (value === current_time.getDay()){\r\n                        // Dinner only availbe before 10am\r\n                        const current_time = new Date();\r\n                        const hour = current_time.getHours();\r\n\r\n                        if (hour < 10){dinner = true;}\r\n\r\n                        this.setState({\r\n                            available_meal: {\r\n                                breakfast: breakfast,\r\n                                lunch: lunch,\r\n                                dinner: dinner\r\n                            }\r\n                        })\r\n\r\n                    }\r\n                    else {\r\n                        let menu = {\r\n                            breakfast: {\r\n                                list: [],\r\n                                beverage: {list: []}\r\n                            },\r\n                            lunch: {\r\n                                list: [],\r\n                                beverage: {\r\n                                    list: []\r\n                                }\r\n                            },\r\n                            dinner: {\r\n                                list: [],\r\n                                beverage: {\r\n                                    list: []\r\n                                }\r\n                            }\r\n                        };\r\n                        const tmp_menu = res.return.menu;\r\n                        if (tmp_menu.breakfast_1 !== null){\r\n                            breakfast = true;\r\n                            menu.breakfast.list.push({title: 'BOX 1 $10 OR ONE SWIPE:', list: [tmp_menu.breakfast_1, tmp_menu.breakfast_bag]});\r\n                            menu.breakfast.beverage = {list: [tmp_menu.breakfast_beverage]};\r\n                        }\r\n\r\n                        if (tmp_menu.lunch_1 !== null){\r\n                            lunch = true;\r\n                            menu.lunch.list.push({title: 'BOX 1 $10 OR ONE SWIPE:', list: [tmp_menu.lunch_1, tmp_menu.lunch_bag]});\r\n                            if (tmp_menu.lunch_2 !== null){menu.lunch.list.push({title: 'BOX 2 $10 OR ONE SWIPE:', list: [tmp_menu.lunch_2, tmp_menu.lunch_bag]});}\r\n                            if (tmp_menu.lunch_3 !== null){menu.lunch.list.push({title: 'BOX 3 $10 OR ONE SWIPE:', list: [tmp_menu.lunch_3, tmp_menu.lunch_bag]});}\r\n                            menu.lunch.beverage = {list: [tmp_menu.lunch_beverage]};\r\n                        }\r\n\r\n                        if (tmp_menu.dinner_1 !== null){\r\n                            dinner = true;\r\n                            menu.dinner.list.push({title: 'BOX 1 $10 OR ONE SWIPE:', list: [tmp_menu.dinner_1, tmp_menu.dinner_bag]});\r\n                            if (tmp_menu.dinner_2 !== null){menu.dinner.list.push({title: 'BOX 2 $10 OR ONE SWIPE:', list: [tmp_menu.dinner_2, tmp_menu.dinner_bag]});}\r\n                            if (tmp_menu.dinner_3 !== null){menu.dinner.list.push({title: 'BOX 3 $10 OR ONE SWIPE:', list: [tmp_menu.dinner_3, tmp_menu.dinner_bag]});}\r\n                            menu.dinner.beverage = {list: [tmp_menu.dinner_beverage]};\r\n                        }\r\n\r\n                        this.setState({\r\n                            available_meal: {\r\n                                breakfast: breakfast,\r\n                                lunch: lunch,\r\n                                dinner: dinner\r\n                            },\r\n                            menus: menu\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                \r\n            }\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n            // dispatch(formSubmitFailure(err));\r\n        })\r\n    }\r\n\r\n    selectMealHandler = (meal, event) => {\r\n        if (this.state.available_meal[meal]){\r\n            this.setState({meal: meal, item: null, name: ''});\r\n        }\r\n    }\r\n\r\n    selectItemHandler = (index, event) => {\r\n        this.setState({item: index});\r\n    }\r\n\r\n    changeNameHandler = (event) => {\r\n        this.setState({name: event.target.value});\r\n    }\r\n\r\n    addBox = () => {\r\n        let picked_date = null;\r\n        for(let i = 1; i < this.state.pickup_date.length; i++){\r\n            if (this.state.pickup_date[i].daynumber == this.state.date){\r\n                picked_date = this.state.pickup_date[i];\r\n            }\r\n        }\r\n\r\n        this.props.addBox(\r\n                            picked_date, \r\n                            this.state.meal, \r\n                            this.state.item, \r\n                            this.state.menus[this.state.meal].list[this.state.item], \r\n                            this.state.name\r\n                            );\r\n        this.props.history.push('/summary');\r\n    }\r\n\r\n    render() {\r\n\r\n        return(\r\n            <React.Fragment>\r\n                <Card className=\"col-md-12 p-0 menu-card\">\r\n\r\n                    <Card.Body className=\"\">\r\n                        <Card.Title style={{}}>\r\n                            ORDER BOXES\r\n                            {\r\n                                this.props.global.menu.qty !== 0 ?\r\n                                <Link\r\n                                    className={\"btn\"}\r\n                                    to=\"/summary\"\r\n                                    style={{float: 'right', boxShadow: 'unset'}}\r\n                                ><AiOutlineShoppingCart style={{fontSize: '25px', width: '49px', color: '#ac051f'}} /></Link>\r\n                                : null\r\n                            }\r\n                        </Card.Title>\r\n\r\n                        {/* <AiOutlineShoppingCart style={{float: 'right', fontSize: '25px', float: 'right'}} /> */}\r\n                        {/* <p className=\"item-description\" style={{marginTop: '0px', marginBottom: '0px'}}>Served with utensils, plates & napkins</p> */}\r\n                    </Card.Body>\r\n\r\n                    <Card.Body className=\"content\">\r\n\r\n                        <Form>\r\n\r\n                            <Form.Row className=\"mt-4\">\r\n                                <Form.Group as={Col} controlId=\"\">\r\n                                    <Form.Label>Pickup Date</Form.Label>\r\n                                    <Form.Control as=\"select\" onChange={this.pickupDateHandler.bind(this)} defaultValue=\"-1\">\r\n                                        <option value=\"-1\">When do you want to pickup?</option>\r\n                                        {\r\n                                            this.state.pickup_date.map((row, index) => {\r\n                                                return (\r\n                                                    <option key={'pickup_date'+index} value={row.daynumber}>\r\n                                                        {row.day}, {row.month_name} {row.date}, {row.year}\r\n                                                    </option>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n\r\n                            {\r\n                                this.state.date === null ?\r\n                                null :\r\n                                <React.Fragment>\r\n                                    <Form.Label className=\"mt-4\">Choose Your Meal</Form.Label>\r\n                                \r\n                                    <ListGroup className=\"listgroup-btn\">\r\n                                        <ListGroup.Item className={this.state.meal==='breakfast' ? 'active' : null} onClick={this.selectMealHandler.bind(this, 'breakfast')}>\r\n                                            Breakfast <br/>\r\n                                            <span style={{color: '#ac051f', fontWeight: '600'}}>{this.state.available_meal.breakfast === true ? 'Available For Order' : 'Order Not Available'}</span>\r\n                                        </ListGroup.Item>\r\n                                        <ListGroup.Item className={this.state.meal==='lunch' ? 'active' : null} onClick={this.selectMealHandler.bind(this, 'lunch')}>\r\n                                            Lunch <br/>\r\n                                            <span style={{color: '#ac051f', fontWeight: '600'}}>{this.state.available_meal.lunch === true ? 'Available For Order' : 'Order Not Available'}</span>\r\n                                        </ListGroup.Item>\r\n                                        <ListGroup.Item className={this.state.meal==='dinner' ? 'active' : null} onClick={this.selectMealHandler.bind(this, 'dinner')}>\r\n                                            Dinner <br/>\r\n                                            <span style={{color: '#ac051f', fontWeight: '600'}}>{this.state.available_meal.dinner === true ? 'Available For Order' : 'Order Not Available'}</span>\r\n                                        </ListGroup.Item>\r\n                                    </ListGroup>\r\n                                </React.Fragment>\r\n                            }\r\n\r\n                            {\r\n                                this.state.meal === null ?\r\n                                null :\r\n                                <React.Fragment>\r\n                                    <Form.Label className=\"mt-4\" style={{textTransform: 'capitalize'}}>{this.state.meal} Boxes</Form.Label>\r\n\r\n                                    <Row style={{marginLeft: '0px', marginRight: '0px'}}>\r\n                                    {\r\n                                        this.state.menus[this.state.meal].list.map((row, index) => {\r\n                                            return (\r\n                                                <ListGroup className=\"col listgroup-btn menu-list\" style={{paddingLeft: '0px', paddingRight: '0px'}}>\r\n                                                    <ListGroup.Item key={'list'+this.state.meal+index} className={(this.state.item===index ? 'active' : null)} onClick={this.selectItemHandler.bind(this, index)} style={{ height: '100%'}}>\r\n                                                        <h3>{row.title}</h3>\r\n                                                        <ul style={{paddingLeft: '20px', listStyle: 'none', fontSize: '13px'}}>\r\n                                                            {\r\n                                                                row.list.map((list_row, lr_index) => {\r\n                                                                    return (\r\n                                                                        <li key={'child_list_'+this.state.meal+lr_index}>{list_row}</li>\r\n                                                                    )\r\n                                                                })\r\n                                                            }\r\n                                                        </ul>\r\n                                                    </ListGroup.Item>\r\n                                                </ListGroup>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                    </Row>\r\n\r\n                                </React.Fragment>\r\n                            }\r\n\r\n                            {\r\n                                this.state.item !== null ?\r\n                                <React.Fragment>\r\n                                    <Form.Label className=\"mt-4\">If you want, you can assign a name for the box.</Form.Label>\r\n                                    <Form.Control type=\"text\" placeholder=\"Name\" value={this.state.name} onChange={this.changeNameHandler.bind(this)} />\r\n                                </React.Fragment>\r\n                                :\r\n                                null\r\n                            }\r\n\r\n                        </Form>\r\n\r\n                        {\r\n                            this.state.item === null ?\r\n                            null :\r\n                            <Row style={{margin: '0px', marginTop: '3rem'}}>\r\n                            {/* <ButtonToolbar style={{marginTop: '20px'}}> */}\r\n\r\n                                {/* <Link\r\n                                    className={\"col btn union-outline-btn\"}\r\n                                    to=\"/summary\"\r\n                                    style={{marginRight: '15px'}}\r\n                                >Review Order</Link> */}\r\n\r\n                                <Button \r\n                                    className={\"col btn union-btn\"}\r\n                                    onClick={() => {this.addBox()}}\r\n                                >Add To Order</Button>\r\n\r\n                            {/* </ButtonToolbar> */}\r\n                            </Row>\r\n                        }\r\n\r\n                    </Card.Body>\r\n\r\n                    <Card.Body className=\"pl-0\">\r\n                        \r\n                    </Card.Body>\r\n\r\n                </Card>\r\n                \r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    global: state,\r\n    customer: state.customer\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => (\r\n    {\r\n        addBox: (date, meal, item_id, item, name) => dispatch(addBox(date, meal, item_id, item, name)),\r\n        updateCurrentNav: (index) => dispatch(updateCurrentNav(index))\r\n    }\r\n)\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Menu)","import {\r\n    ADD_BOX,\r\n    REMOVE_BOX\r\n} from './actionTypes.js'\r\n\r\nexport const addBox = (date, meal, item_id, item, name) => ({\r\n    type: ADD_BOX,\r\n    payload: {\r\n        date, meal, item_id, item, name\r\n    }\r\n})\r\n\r\nexport const removeBox = (date_id, meal, meal_id) => ({\r\n    type: REMOVE_BOX,\r\n    payload: {\r\n        date_id, meal, meal_id\r\n    }\r\n})","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { Row, Col, Card, ListGroup, ButtonToolbar, Button, Form } from 'react-bootstrap';\r\nimport TopNav from '../common/TopNav.js';\r\n\r\nimport { submitOrder } from '../../redux/actions/main';\r\nimport { infoUpdate } from '../../redux/actions/customer_action';\r\n\r\nimport Bottom from '../bottom';\r\n\r\nimport { IoIosArrowBack } from \"react-icons/io\";\r\n\r\n// import styles from '../common/style.js';\r\n\r\nclass Customer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    textChangeHandler = (name, event) => {\r\n        const value = event.target.value;\r\n        this.props.infoUpdate(name, value);\r\n    }\r\n\r\n    locationChangeHandler = (event) => {\r\n        const value = event.target.value;\r\n        if (value === '-1'){\r\n            value = '';\r\n        }\r\n        this.props.infoUpdate('location', value);\r\n    }\r\n\r\n    paymentChangeHandler = (event) => {\r\n        const value = event.target.value;\r\n        if (value === '-1'){\r\n            value = '';\r\n        }\r\n        // else if (value === ''){\r\n\r\n        // }\r\n\r\n        this.props.infoUpdate('payment', {type: value, detail: ''});\r\n    }\r\n\r\n    submitOrder = () => {\r\n        const data = {\r\n            customer: {\r\n                firstname: this.props.global.customer.firstname,\r\n                lastname: this.props.global.customer.lastname,\r\n                email: this.props.global.customer.email,\r\n                phone: this.props.global.customer.phone,\r\n                location: this.props.global.customer.location,\r\n                payment: this.props.global.customer.payment\r\n            },\r\n            items: this.props.menu.items,\r\n            qty: this.props.menu.qty,\r\n            total: this.props.menu.qty*10\r\n        };\r\n        this.props.submitOrder(data);\r\n        this.props.history.push('/Confirmation');\r\n    }\r\n\r\n    render() {\r\n        if (this.props.global.menu.qty === 0){\r\n            return (\r\n                <Card className=\"col-md-9\">\r\n\r\n                    <Card.Body className=\"pl-0\">\r\n                        <Card.Title>My Order</Card.Title>\r\n                    </Card.Body>\r\n\r\n                    <Card.Body className=\"text-center\" style={{marginBottom: '20px'}}>\r\n                        <Card.Text md={12} style={{paddingTop: '15px', paddingBottom: '15px'}}>\r\n                            <strong>There is no item in your shopping cart.</strong>\r\n                        </Card.Text>\r\n                    </Card.Body>\r\n\r\n                    <Row style={{margin: '0px', marginTop: '3rem'}}>\r\n\r\n                        <Link\r\n                            className={\"col btn union-btn\"}\r\n                            to=\"/menu\"\r\n                            style={{marginRight: '15px'}}\r\n                        >Add Food</Link>\r\n\r\n                    </Row>\r\n\r\n                </Card>\r\n            )\r\n        }\r\n\r\n\r\n        return(\r\n            <React.Fragment>\r\n                <Card className=\"col-md-9 p-0 menu-card\">\r\n\r\n                    <Card.Body className=\"\">\r\n                        <Link\r\n                            className={\"\"}\r\n                            to=\"/summary\"\r\n                            style={{marginRight: '15px', color: '#333', fontWeight: '600'}}\r\n                        ><IoIosArrowBack style={{fontSize: '20px', verticalAlign: 'text-bottom'}} /> <span>Return to Cart</span></Link>\r\n\r\n                        <Card.Title className=\"mt-1\">My Information</Card.Title>\r\n                        {/* <p className=\"item-description\" style={{marginTop: '0px', marginBottom: '0px'}}>Served with utensils, plates & napkins</p> */}\r\n                    </Card.Body>\r\n\r\n                    <Card.Body className=\"content\">\r\n                        <Form>\r\n                            <Form.Row>\r\n                                <Form.Group as={Col} controlId=\"\">\r\n                                    <Form.Label className=\"required-input\">First Name</Form.Label>\r\n                                    <Form.Control type=\"text\" placeholder=\"Name\" value={this.props.customer.firstname} onChange={this.textChangeHandler.bind(this, 'firstname')} />\r\n                                </Form.Group>\r\n\r\n                                <Form.Group as={Col} controlId=\"\">\r\n                                    <Form.Label className=\"required-input\">Last Name</Form.Label>\r\n                                    <Form.Control type=\"text\" placeholder=\"Name\" value={this.props.customer.lastname} onChange={this.textChangeHandler.bind(this, 'lastname')} />\r\n                                </Form.Group>\r\n\r\n                            </Form.Row>\r\n\r\n                            <Form.Row>\r\n                                <Form.Group as={Col} controlId=\"\">\r\n                                    <Form.Label className=\"required-input\">Email</Form.Label>\r\n                                    <Form.Control type=\"text\" placeholder=\"Email\" value={this.props.customer.email} onChange={this.textChangeHandler.bind(this, 'email')} />\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n\r\n                            <Form.Row>\r\n                                <Form.Group as={Col} controlId=\"\">\r\n                                    <Form.Label>Phone</Form.Label>\r\n                                    <Form.Control type=\"text\" placeholder=\"Phone\" value={this.props.customer.phone} onChange={this.textChangeHandler.bind(this, 'phone')} />\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n\r\n                            <Form.Row>\r\n                                <Form.Group as={Col} controlId=\"\">\r\n                                    <Form.Label className=\"required-input\">Pickup Location</Form.Label>\r\n                                    <Form.Control as=\"select\" onChange={this.locationChangeHandler.bind(this)} defaultValue={this.props.customer.location}>\r\n                                        <option value=\"-1\">-------------------------------------------------</option>\r\n                                        <option value=\"Coronado\">Coronado</option>\r\n                                        <option value=\"85 North\">85 North</option>\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n\r\n                            <Form.Row>\r\n                                <Form.Group as={Col} controlId=\"\">\r\n                                    <Form.Label>Select Payment</Form.Label>\r\n                                    <Form.Control as=\"select\" onChange={this.paymentChangeHandler.bind(this)} defaultValue={this.props.customer.payment.type}>\r\n                                        <option value=\"-1\">-------------------------------------------------</option>\r\n                                        <option value=\"Credit Card\">Credit Card</option>\r\n                                        <option value=\"Swipe Healthy\">Swipe Healthy</option>\r\n                                        <option value=\"Meal Plan\">Meal Plan</option>\r\n                                        <option value=\"Catcash\">Catcash</option>\r\n                                        {/* <option>UA IDB Account Number</option> */}\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n\r\n                        </Form>\r\n\r\n                        {/* <Row style={{marginTop: '10px', marginLeft: '0px', marginRight: '0px'}}>\r\n\r\n                            <Link\r\n                                className={\"col btn union-outline-btn\"}\r\n                                style={{}}\r\n                                to=\"/summary\"\r\n                            >Review Order</Link>\r\n\r\n                            <Button \r\n                                className={\"col btn union-btn\"}\r\n                                style={{}} \r\n                            >Submit Order</Button>\r\n\r\n                        </Row> */}\r\n                    </Card.Body>\r\n\r\n                    <Card.Body className=\"pl-0\">\r\n                        \r\n                    </Card.Body>\r\n\r\n                </Card>\r\n\r\n                <Card className=\"col-md-3 menu-card\">\r\n                    \r\n                    <Card.Body className=\"pt-0 pl-0 pr-0\">\r\n                        <ListGroup className=\"left-overview\">\r\n                            <ListGroup.Item>\r\n                                <div>\r\n                                    <p style={{float: 'left', fontWeight: '600'}}>Total</p>\r\n                                    <span style={{float: 'right', fontWeight: '600'}}>\r\n                                        ${10*this.props.global.menu.qty} or {this.props.global.menu.qty} \r\n                                        {\r\n                                            this.props.global.menu.qty === 1 ? ' swipe' : ' swipes'\r\n                                        }\r\n                                    </span>\r\n                                </div>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                {\r\n                                    this.props.customer.validation_check === true ?\r\n                                    <div\r\n                                        className={\"col btn union-btn\"}\r\n                                        style={{marginRight: '15px'}}\r\n                                        onClick={() => {this.submitOrder()}}\r\n                                    >Submit Order</div>\r\n                                    :\r\n                                    <div\r\n                                        className={\"col btn union-disable-btn\"}\r\n                                        style={{marginRight: '15px'}}\r\n                                    >Submit Order</div>\r\n                                }\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Card.Body>\r\n                    \r\n                </Card>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    global: state,\r\n    menu: state.menu,\r\n    customer: state.customer\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => (\r\n    {\r\n        infoUpdate: (name, value) => dispatch(infoUpdate(name, value)),\r\n        submitOrder: (data) => dispatch(submitOrder(data))\r\n    }\r\n)\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Customer)","import {\r\n    CUSTOMER_INFO_UPDATE\r\n} from './actionTypes.js'\r\n\r\nexport const infoUpdate = (name, value) => ({\r\n    type: CUSTOMER_INFO_UPDATE,\r\n    payload: {\r\n        name, value\r\n    }\r\n})","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from 'react-router-dom';\r\nimport { updateCurrentNav, calculateSubtotal, submitOrder, getDeliveryMethod, handleTextarea } from '../../redux/actions/main';\r\nimport { removeBox } from '../../redux/actions/menu_action';\r\nimport { Row, Col, Card, ListGroup, ButtonToolbar, Button, Spinner } from 'react-bootstrap';\r\n\r\nimport TopNav from '../common/TopNav.js';\r\n// import Bottom from '../bottom';\r\n\r\nimport { IoIosArrowBack } from \"react-icons/io\";\r\n\r\nimport './style.css';\r\n\r\nconst roundTo = require('roundto');\r\n\r\nclass Summary extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        // this.props.updateCurrentNav(8);\r\n        \r\n        // const subtotal = roundTo(\r\n        //     this.props.globalState.bagelandsheamr.total +\r\n        //     this.props.globalState.egg_sandwich.total + \r\n        //     this.props.globalState.bk_fav_reducer.total +\r\n        //     this.props.globalState.sweet_snack.total + \r\n        //     this.props.globalState.beverage.total + \r\n        //     this.props.globalState.fresh_salads.total + \r\n        //     this.props.globalState.cookie.total +\r\n        //     this.props.globalState.lunchsandwich.total\r\n        //     , 2);\r\n        // const tax = roundTo(subtotal*0.061, 2);\r\n        // const total = roundTo(subtotal + tax, 2);\r\n\r\n        // this.props.calculateSubtotal(subtotal, tax, total);\r\n\r\n        // this.state = {\r\n        //     subtotal: subtotal,\r\n        //     tax: tax,\r\n        //     total: total,\r\n        //     additional_comment: ''\r\n        // }\r\n        // console.log(this.props.globalState.byo_breakfast);\r\n    }\r\n\r\n    componentDidMount() {\r\n        // this.props.getDeliveryMethod();\r\n    }\r\n\r\n    handleTextarea = (event) => {\r\n        // this.setState({\r\n        //     additional_comment: event.target.value\r\n        // });\r\n        // // this.props.handleTextarea(event.target.value);\r\n    }\r\n    \r\n    submitOrder = () => {\r\n        // const data = {\r\n        //     subtotal: this.state.subtotal,\r\n        //     tax: this.state.tax,\r\n        //     total: this.state.total,\r\n        //     additional_comment: this.state.additional_comment\r\n        // };\r\n        // this.props.submitOrder(data);\r\n        // this.props.history.push('/Confirmation');\r\n    }\r\n\r\n    printList = () => {\r\n        let print = [];\r\n\r\n        const items = this.props.global.menu.items;\r\n        for(let item_index in items){\r\n            const item = items[item_index];\r\n\r\n            const meal_key = ['breakfast', 'lunch', 'dinner'];\r\n            for(let key in meal_key){\r\n                if (meal_key[key] in item){\r\n                    print.push(this.printListItem(item[meal_key[key]]));\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        return print;\r\n    }\r\n\r\n    printListItem = (list) => {\r\n        let print = [];\r\n        if (list.length > 0){\r\n            for (const index in list){\r\n                const item = list[index];\r\n                print.push(\r\n                    <ListGroup.Item key={'order'+index} style={{borderLeftWidth: '0px', borderRightWidth: '0px'}}>\r\n                        <div style={{float: 'left'}}>\r\n                            <i>{item.date.day}, {item.date.month_name} {item.date.date}, {item.date.year}</i><br/>\r\n                            <b><span style={{textTransform: 'capitalize'}}>{item.meal}</span> - Box {item.item_id+1} : {item.name}</b><br/>\r\n                            <ul style={{paddingLeft: '10px', listStyle: 'none', fontSize: '11px'}}>\r\n                                {\r\n                                    item.item.list.map((menu, menu_index) => {\r\n                                        return (\r\n                                            <li key={'child_list_'+menu_index}>{menu}</li>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </ul>\r\n                        </div>\r\n                        <div style={{float: 'right'}}>\r\n                            <div>\r\n                                {/* <span className=\"btn-edit\" style={{marginRight: '10px'}} onClick={() => {this.editBox(item.date.date_id, item.meal, index)}}>Edit</span> */}\r\n                                <span className=\"btn-edit\" onClick={() => {this.removeBox(item.date.date_id, item.meal, index)}}>Remove</span>\r\n                            </div>\r\n                            {/* <div style={{textAlign: 'right'}}>Qty: 1</div> */}\r\n                        </div>\r\n                    </ListGroup.Item>\r\n                )\r\n            }\r\n        }\r\n\r\n        return print;\r\n    }\r\n\r\n    editBox = () => {\r\n\r\n    }\r\n\r\n    removeBox = (date_id, meal, meal_id) => {\r\n        this.props.removeBox(date_id, meal, meal_id);\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <React.Fragment>\r\n            {\r\n                this.props.menu.qty === 0 ?\r\n                <Card className=\"col-md-9\">\r\n                    \r\n                    <Card.Body className=\"pl-0\">\r\n                        <Card.Title>My Order</Card.Title>\r\n                    </Card.Body>\r\n\r\n                    <Card.Body className=\"text-center\" style={{marginBottom: '20px'}}>\r\n                        <Card.Text md={12} style={{paddingTop: '15px', paddingBottom: '15px'}}>\r\n                            <strong>There is no item in your shopping cart.</strong>\r\n                        </Card.Text>\r\n                    </Card.Body>\r\n\r\n                    <Row style={{margin: '0px', marginTop: '3rem'}}>\r\n\r\n                        <Link\r\n                            className={\"col btn union-btn\"}\r\n                            to=\"/menu\"\r\n                            style={{marginRight: '15px'}}\r\n                        >Add Food</Link>\r\n\r\n                    </Row>\r\n\r\n                </Card> : \r\n                <React.Fragment>\r\n                    <Card className=\"col-md-9 menu-card\">\r\n\r\n                        <Card.Body className=\"pl-0\">\r\n                            <Link\r\n                                className={\"\"}\r\n                                to=\"/menu\"\r\n                                style={{marginRight: '15px', color: '#333', fontWeight: '600'}}\r\n                            ><IoIosArrowBack style={{fontSize: '20px', verticalAlign: 'text-bottom'}} /> <span>ADD MORE FOOD</span></Link>\r\n                            <Card.Title className=\"mt-1\">My Order</Card.Title>\r\n                        </Card.Body>\r\n\r\n                        <Card.Body className=\"content pl-0 pr-0\" >\r\n                            <ListGroup className=\"\">\r\n                                {\r\n                                    this.props.menu.qty === 0 ?\r\n                                    null :\r\n                                    this.printList()\r\n                                }\r\n                            </ListGroup>\r\n\r\n                            {/* <Row style={{margin: '0px', marginTop: '3rem'}}> */}\r\n\r\n                                {/* <Link\r\n                                    className={\"col btn union-outline-btn\"}\r\n                                    to=\"/menu\"\r\n                                    style={{marginRight: '15px'}}\r\n                                >ADD MORE FOOD</Link> */}\r\n\r\n                                {/* <Link\r\n                                    className={\"col btn union-btn\"}\r\n                                    to=\"/detail\"\r\n                                    style={{marginRight: '15px'}}\r\n                                >Check Out</Link> */}\r\n\r\n                            {/* </Row> */}\r\n                        </Card.Body>\r\n\r\n                    </Card>\r\n\r\n                    <Card className=\"col-md-3 menu-card\">\r\n\r\n                        <Card.Body className=\"pt-0 pl-0 pr-0\">\r\n                            <ListGroup className=\"left-overview\">\r\n                                <ListGroup.Item>\r\n                                    <div>\r\n                                        <p style={{float: 'left', fontWeight: '600'}}>Total</p>\r\n                                        <span style={{float: 'right', fontWeight: '600'}}>\r\n                                            ${10*this.props.global.menu.qty} or {this.props.global.menu.qty} \r\n                                            {\r\n                                                this.props.global.menu.qty === 1 ? ' swipe' : ' swipes'\r\n                                            }\r\n                                        </span>\r\n                                    </div>\r\n                                </ListGroup.Item>\r\n                                <ListGroup.Item>\r\n                                    <Link\r\n                                        className={\"col btn union-btn\"}\r\n                                        to=\"/detail\"\r\n                                        style={{marginRight: '15px'}}\r\n                                    >Check Out</Link>\r\n                                </ListGroup.Item>\r\n                            </ListGroup>\r\n                        </Card.Body>\r\n                        \r\n                    </Card>\r\n\r\n                </React.Fragment>\r\n            }\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    global: state,\r\n    menu: state.menu\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => (\r\n    {\r\n        updateCurrentNav: (index) => dispatch(updateCurrentNav(index)),\r\n        removeBox: (date_id, meal, meal_id) => dispatch(removeBox(date_id, meal, meal_id))\r\n    }\r\n)\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Summary)","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\n// import { Link } from 'react-router-dom';\r\n// import { updateCurrentNav, calculateSubtotal, submitOrder } from '../redux/actions/main';\r\nimport { Card, Spinner } from 'react-bootstrap';\r\n\r\n// import TopNav from './common/TopNav.js';\r\n\r\nclass Confirmation extends React.Component {\r\n\r\n    // constructor(props) {\r\n    //     super(props);\r\n    // }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n            {\r\n                this.props.state.main.confirmation.loading ?\r\n                <div className=\"col-md-12\" style={{textAlign: 'center', padding: '100px 0px'}}>\r\n                    <Spinner animation=\"grow\" style={{backgroundColor: '#f58220'}} />\r\n                </div>\r\n                :\r\n                <Card className=\"col-md-12\">\r\n\r\n                    {\r\n                        this.props.state.main.confirmation.orderID === null ?\r\n                        <React.Fragment>\r\n                            <Card.Body>\r\n                                <Card.Text>\r\n                                    We're sorry. An error occurred while processing your order. Please try again later.\r\n                                </Card.Text>\r\n                            </Card.Body>\r\n\r\n                            <div className=\"card-body\">\r\n                                        \r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-4\">\r\n                                        <a href=\"/catering/online/agreement.php?r=einsteins\" className=\"btn add-btn btn-lg btn-block\" style={{width: '100%'}}>Try Again</a>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </React.Fragment>\r\n                        :\r\n                        <React.Fragment>\r\n                            <Card.Body>\r\n                                <Card.Text>\r\n                                    <span style={{fontWeight: '500', lineHeight: '2.2', fontSize: '1.7rem'}}>Thank You</span><br style={{lineHeight: '2.2'}} />\r\n                                    Your order is confirmed. For your convenience, an email has been sent to {this.props.state.main.confirmation.email}. <br />\r\n                                    Your Order ID is {this.props.state.main.confirmation.orderID}.\r\n                                </Card.Text>\r\n                            </Card.Body>\r\n\r\n                            {/* <div className=\"card-body\">\r\n                                        \r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-4\">\r\n                                        <a href=\"/catering/online/agreement.php?r=einsteins\" className=\"btn add-btn btn-lg btn-block\" style={{width: '100%'}}>Order Again</a>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-md-4\">\r\n                                        <a href=\"/dining/sumc/einsteins\" className=\"btn add-btn btn-lg btn-block\" style={{width: '100%'}}>Go to Einsteins Cafe</a>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-md-4\">\r\n                                        <a href=\"/\" className=\"btn add-btn btn-lg btn-block\" style={{width: '100%'}}>Go to Union</a>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div> */}\r\n                        </React.Fragment>\r\n                    }\r\n\r\n                </Card>\r\n            }\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    state: state\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => (\r\n    {\r\n    }\r\n)\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Confirmation)","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import 'react-app-polyfill/ie9';\r\nimport 'react-app-polyfill/ie11';   \r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport './index.css';\r\n\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./redux/store\";\r\n\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>, \r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import React from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route\r\n} from 'react-router-dom'\r\nimport './App.css';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport Banner from './img/Catalyst_Cafe_Catering_Banner.jpg';\r\nimport Nav from './components/Nav';\r\nimport Menu from './components/Menu';\r\nimport Customer from './components/Customer';\r\nimport Summary from './components/Summary';\r\nimport Confirmation from './components/Confirmation';\r\n// import Bottom from './components/bottom';\r\n\r\nexport default function App() {\r\n  return (\r\n    <Container className=\"su-catering-container\" style={{marginTop: '1rem', marginBottom: '2rem'}}>\r\n\r\n      {/* <Row>\r\n        <img src={Banner} style={{width: '100%'}} alt=\"Banner\" />\r\n      </Row> */}\r\n\r\n      <Row className=\"wrap-main\" style={{backgroundColor: '#fff'}}>\r\n        {/* <Col md={12} className=\"wrap-main\"> */}\r\n          <Router basename={'/dining/boxorder'}>\r\n            <Route exact path=\"/\" component={Menu} />\r\n            <Route exact path=\"/menu\" component={Menu} />\r\n            <Route exact path=\"/summary\" component={Summary} />\r\n            <Route exact path=\"/detail\" component={Customer} />\r\n            <Route exact path=\"/confirmation\" component={Confirmation} />\r\n          </Router>\r\n        {/* </Col> */}\r\n      </Row>\r\n\r\n    </Container>\r\n  );\r\n}\r\n"],"sourceRoot":""}